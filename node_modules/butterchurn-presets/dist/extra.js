(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("extra", [], factory);
	else if(typeof exports === 'object')
		exports["extra"] = factory();
	else
		root["extra"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./extra.js":
/*!******************!*\
  !*** ./extra.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => __WEBPACK_DEFAULT_EXPORT__
/* harmony export */ });
/* eslint-disable max-len */
var presets = {};
presets["_Eo.S. - glowsticks v2 02 - Geiss HPF"] = __webpack_require__(/*! ./presets/converted/_Eo.S. - glowsticks v2 02 - Geiss HPF.json */ "./presets/converted/_Eo.S. - glowsticks v2 02 - Geiss HPF.json");
presets["_Flexi, martin + geiss - painterly rogue wave strike (color emboss mix)"] = __webpack_require__(/*! ./presets/converted/_Flexi, martin + geiss - painterly rogue wave strike (color emboss mix).json */ "./presets/converted/_Flexi, martin + geiss - painterly rogue wave strike (color emboss mix).json");
presets["_Geiss - Artifact 03"] = __webpack_require__(/*! ./presets/converted/_Geiss - Artifact 03.json */ "./presets/converted/_Geiss - Artifact 03.json");
presets["_geiss_experimental__wavefronts"] = __webpack_require__(/*! ./presets/converted/_geiss_experimental__wavefronts.json */ "./presets/converted/_geiss_experimental__wavefronts.json");
presets["_Krash + Eo.S. - Photographic Sentinel"] = __webpack_require__(/*! ./presets/converted/_Krash + Eo.S. - Photographic Sentinel.json */ "./presets/converted/_Krash + Eo.S. - Photographic Sentinel.json");
presets["_Mig_004_version2"] = __webpack_require__(/*! ./presets/converted/_Mig_004_version2.json */ "./presets/converted/_Mig_004_version2.json");
presets["_Mig_028"] = __webpack_require__(/*! ./presets/converted/_Mig_028.json */ "./presets/converted/_Mig_028.json");
presets["_Mig_079"] = __webpack_require__(/*! ./presets/converted/_Mig_079.json */ "./presets/converted/_Mig_079.json");
presets["_Mig_COLORFUL9"] = __webpack_require__(/*! ./presets/converted/_Mig_COLORFUL9.json */ "./presets/converted/_Mig_COLORFUL9.json");
presets["_Mig_Oscilloscope008"] = __webpack_require__(/*! ./presets/converted/_Mig_Oscilloscope008.json */ "./presets/converted/_Mig_Oscilloscope008.json");
presets["$$$ Royal - Mashup (177)"] = __webpack_require__(/*! ./presets/converted/$$$ Royal - Mashup (177).json */ "./presets/converted/$$$ Royal - Mashup (177).json");
presets["$$$ Royal - Mashup (273)"] = __webpack_require__(/*! ./presets/converted/$$$ Royal - Mashup (273).json */ "./presets/converted/$$$ Royal - Mashup (273).json");
presets["$$$ Royal - Mashup (307)"] = __webpack_require__(/*! ./presets/converted/$$$ Royal - Mashup (307).json */ "./presets/converted/$$$ Royal - Mashup (307).json");
presets["$$$ Royal - Mashup (326)"] = __webpack_require__(/*! ./presets/converted/$$$ Royal - Mashup (326).json */ "./presets/converted/$$$ Royal - Mashup (326).json");
presets["$$$ Royal - Mashup (417)"] = __webpack_require__(/*! ./presets/converted/$$$ Royal - Mashup (417).json */ "./presets/converted/$$$ Royal - Mashup (417).json");
presets["$$$ Royal - Mashup (441)"] = __webpack_require__(/*! ./presets/converted/$$$ Royal - Mashup (441).json */ "./presets/converted/$$$ Royal - Mashup (441).json");
presets["$$$ Royal - Mashup (489)"] = __webpack_require__(/*! ./presets/converted/$$$ Royal - Mashup (489).json */ "./presets/converted/$$$ Royal - Mashup (489).json");
presets["269"] = __webpack_require__(/*! ./presets/converted/269.json */ "./presets/converted/269.json");
presets["27"] = __webpack_require__(/*! ./presets/converted/27.json */ "./presets/converted/27.json");
presets["286"] = __webpack_require__(/*! ./presets/converted/286.json */ "./presets/converted/286.json");
presets["AdamFX Mashup 2 Martin - reflections on black tile + Raron N Flexi "] = __webpack_require__(/*! ./presets/converted/AdamFX Mashup 2 Martin - reflections on black tile + Raron N Flexi .json */ "./presets/converted/AdamFX Mashup 2 Martin - reflections on black tile + Raron N Flexi .json");
presets["Aderrasi - Airhandler (Last Breath - Calm)"] = __webpack_require__(/*! ./presets/converted/Aderrasi - Airhandler (Last Breath - Calm).json */ "./presets/converted/Aderrasi - Airhandler (Last Breath - Calm).json");
presets["Aderrasi - Mother Of Pearl - mash0000 - how to piss off your eyes"] = __webpack_require__(/*! ./presets/converted/Aderrasi - Mother Of Pearl - mash0000 - how to piss off your eyes.json */ "./presets/converted/Aderrasi - Mother Of Pearl - mash0000 - how to piss off your eyes.json");
presets["Aderrasi - Songflower (Moss Posy)"] = __webpack_require__(/*! ./presets/converted/Aderrasi - Songflower (Moss Posy).json */ "./presets/converted/Aderrasi - Songflower (Moss Posy).json");
presets["Aderrasi - Veil of Steel (Steel Storm) - mash0000 - bob ross finally loses it"] = __webpack_require__(/*! ./presets/converted/Aderrasi - Veil of Steel (Steel Storm) - mash0000 - bob ross finally loses it.json */ "./presets/converted/Aderrasi - Veil of Steel (Steel Storm) - mash0000 - bob ross finally loses it.json");
presets["Aderrasi + Geiss - Airhandler (Kali Mix) - Painterly Tendrils Colorfast"] = __webpack_require__(/*! ./presets/converted/Aderrasi + Geiss - Airhandler (Kali Mix) - Painterly Tendrils Colorfast.json */ "./presets/converted/Aderrasi + Geiss - Airhandler (Kali Mix) - Painterly Tendrils Colorfast.json");
presets["bdrv - ultramix2 #43"] = __webpack_require__(/*! ./presets/converted/bdrv - ultramix2 #43.json */ "./presets/converted/bdrv - ultramix2 \u0000#43.json");
presets["beta106i - Burning Form (Seething Mass) - mash0000 - fire paint easter egg internals"] = __webpack_require__(/*! ./presets/converted/beta106i - Burning Form (Seething Mass) - mash0000 - fire paint easter egg internals.json */ "./presets/converted/beta106i - Burning Form (Seething Mass) - mash0000 - fire paint easter egg internals.json");
presets["Cope - Passage (mandala mix)"] = __webpack_require__(/*! ./presets/converted/Cope - Passage (mandala mix).json */ "./presets/converted/Cope - Passage (mandala mix).json");
presets["cope - strange attractor [flexis let it grow mix] (Jelly 5.56 [volume noise zoom-in])"] = __webpack_require__(/*! ./presets/converted/cope - strange attractor [flexis let it grow mix] (Jelly 5.56 [volume noise zoom-in]).json */ "./presets/converted/cope - strange attractor [flexis let it grow mix] (Jelly 5.56 [volume noise zoom-in]).json");
presets["cope - the drain to heaven"] = __webpack_require__(/*! ./presets/converted/cope - the drain to heaven.json */ "./presets/converted/cope - the drain to heaven.json");
presets["cope + geiss + stahlregen - cartune (bending gelatine mix)"] = __webpack_require__(/*! ./presets/converted/cope + geiss + stahlregen - cartune (bending gelatine mix).json */ "./presets/converted/cope + geiss + stahlregen - cartune (bending gelatine mix).json");
presets["cope, martin + flexi - the slickery of alternative varnish"] = __webpack_require__(/*! ./presets/converted/cope, martin + flexi - the slickery of alternative varnish.json */ "./presets/converted/cope, martin + flexi - the slickery of alternative varnish.json");
presets["DemonLD_-_Toxic_water_diffusion threx angela vs debi brown (nice)"] = __webpack_require__(/*! ./presets/converted/DemonLD_-_Toxic_water_diffusion threx angela vs debi brown (nice).json */ "./presets/converted/DemonLD_-_Toxic_water_diffusion threx angela vs debi brown (nice).json");
presets["Eo.S. - glowsticks v2 03 music"] = __webpack_require__(/*! ./presets/converted/Eo.S. - glowsticks v2 03 music.json */ "./presets/converted/Eo.S. - glowsticks v2 03 music.json");
presets["Eo.S. + flexi - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b + illumination (Stahl′s Mix)"] = __webpack_require__(/*! ./presets/converted/Eo.S. + flexi - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b + illumination (Stahl′s Mix).json */ "./presets/converted/Eo.S. + flexi - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b + illumination (Stahl′s Mix).json");
presets["EoS - particle storm B - couldn't not"] = __webpack_require__(/*! ./presets/converted/EoS - particle storm B - couldn't not.json */ "./presets/converted/EoS - particle storm B - couldn't not.json");
presets["EoS_Phat Dark_heart_nobal_cause cpe ap4+"] = __webpack_require__(/*! ./presets/converted/EoS_Phat Dark_heart_nobal_cause cpe ap4+.json */ "./presets/converted/EoS_Phat Dark_heart_nobal_cause cpe ap4+.json");
presets["EVET - RGB Singularity"] = __webpack_require__(/*! ./presets/converted/EVET - RGB Singularity.json */ "./presets/converted/EVET - RGB Singularity.json");
presets["EVET + Flexi - Rainbox Splash Poolz"] = __webpack_require__(/*! ./presets/converted/EVET + Flexi - Rainbox Splash Poolz.json */ "./presets/converted/EVET + Flexi - Rainbox Splash Poolz.json");
presets["fed + flexi - tech test 2-1 - humpgorge"] = __webpack_require__(/*! ./presets/converted/fed + flexi - tech test 2-1 - humpgorge.json */ "./presets/converted/fed + flexi - tech test 2-1 - humpgorge.json");
presets["fed + flexi + geiss - tokamak repellor tech twist mix [stabilized]"] = __webpack_require__(/*! ./presets/converted/fed + flexi + geiss - tokamak repellor tech twist mix [stabilized].json */ "./presets/converted/fed + flexi + geiss - tokamak repellor tech twist mix [stabilized].json");
presets["fiShbRaiN - toffee cream and icing sugar"] = __webpack_require__(/*! ./presets/converted/fiShbRaiN - toffee cream and icing sugar.json */ "./presets/converted/fiShbRaiN - toffee cream and icing sugar.json");
presets["fishbrain + flexi - stitchcraft"] = __webpack_require__(/*! ./presets/converted/fishbrain + flexi - stitchcraft.json */ "./presets/converted/fishbrain + flexi - stitchcraft.json");
presets["fiShbRaiN + geiss - witchcraft (Grow Mix 3)"] = __webpack_require__(/*! ./presets/converted/fiShbRaiN + geiss - witchcraft (Grow Mix 3).json */ "./presets/converted/fiShbRaiN + geiss - witchcraft (Grow Mix 3).json");
presets["fiShbRaiN, flexi + martin - grafitti tagging witchcraft must be overrated - demonlord shaders - lampshade hubrys2"] = __webpack_require__(/*! ./presets/converted/fiShbRaiN, flexi + martin - grafitti tagging witchcraft must be overrated - demonlord shaders - lampshade hubrys2.json */ "./presets/converted/fiShbRaiN, flexi + martin - grafitti tagging witchcraft must be overrated - demonlord shaders - lampshade hubrys2.json");
presets["flexi - alien canvas [learning]"] = __webpack_require__(/*! ./presets/converted/flexi - alien canvas [learning].json */ "./presets/converted/flexi - alien canvas [learning].json");
presets["Flexi - alien fader"] = __webpack_require__(/*! ./presets/converted/Flexi - alien fader.json */ "./presets/converted/Flexi - alien fader.json");
presets["Flexi - alien web bouncer [26]"] = __webpack_require__(/*! ./presets/converted/Flexi - alien web bouncer [26].json */ "./presets/converted/Flexi - alien web bouncer [26].json");
presets["flexi - bouncing balls [double mindblob gastrointestinal mix]"] = __webpack_require__(/*! ./presets/converted/flexi - bouncing balls [double mindblob gastrointestinal mix].json */ "./presets/converted/flexi - bouncing balls [double mindblob gastrointestinal mix].json");
presets["Flexi - crush ice 72"] = __webpack_require__(/*! ./presets/converted/Flexi - crush ice 72.json */ "./presets/converted/Flexi - crush ice 72.json");
presets["Flexi - dimensions, projection and abstraction"] = __webpack_require__(/*! ./presets/converted/Flexi - dimensions, projection and abstraction.json */ "./presets/converted/Flexi - dimensions, projection and abstraction.json");
presets["flexi - hyperspaceflight (bn cn Jelly 4)"] = __webpack_require__(/*! ./presets/converted/flexi - hyperspaceflight (bn cn Jelly 4).json */ "./presets/converted/flexi - hyperspaceflight (bn cn Jelly 4).json");
presets["flexi - infused with the spiral (jelly 4.x cn)"] = __webpack_require__(/*! ./presets/converted/flexi - infused with the spiral (jelly 4.x cn).json */ "./presets/converted/flexi - infused with the spiral (jelly 4.x cn).json");
presets["flexi - inter state"] = __webpack_require__(/*! ./presets/converted/flexi - inter state.json */ "./presets/converted/flexi - inter state.json");
presets["flexi - jelly fish mandala"] = __webpack_require__(/*! ./presets/converted/flexi - jelly fish mandala.json */ "./presets/converted/flexi - jelly fish mandala.json");
presets["flexi - Mindblob"] = __webpack_require__(/*! ./presets/converted/flexi - Mindblob.json */ "./presets/converted/flexi - Mindblob.json");
presets["Flexi - piercing"] = __webpack_require__(/*! ./presets/converted/Flexi - piercing.json */ "./presets/converted/Flexi - piercing.json");
presets["Flexi - predator-prey-spirals [stahlregens gelatine finish]"] = __webpack_require__(/*! ./presets/converted/Flexi - predator-prey-spirals [stahlregens gelatine finish].json */ "./presets/converted/Flexi - predator-prey-spirals [stahlregens gelatine finish].json");
presets["Flexi - psychenapping"] = __webpack_require__(/*! ./presets/converted/Flexi - psychenapping.json */ "./presets/converted/Flexi - psychenapping.json");
presets["Flexi - smashing fractals 2.0"] = __webpack_require__(/*! ./presets/converted/Flexi - smashing fractals 2.0.json */ "./presets/converted/Flexi - smashing fractals 2.0.json");
presets["flexi + amandio c - organic"] = __webpack_require__(/*! ./presets/converted/flexi + amandio c - organic.json */ "./presets/converted/flexi + amandio c - organic.json");
presets["flexi + bdrv - acid etching (jelly v5.5)"] = __webpack_require__(/*! ./presets/converted/flexi + bdrv - acid etching (jelly v5.5).json */ "./presets/converted/flexi + bdrv - acid etching (jelly v5.5).json");
presets["Flexi + fiShbRaiN - operation fatcap II"] = __webpack_require__(/*! ./presets/converted/Flexi + fiShbRaiN - operation fatcap II.json */ "./presets/converted/Flexi + fiShbRaiN - operation fatcap II.json");
presets["flexi + fishbrain - witchcraft [complex terraforming - fiddling twists in the fabric of space]"] = __webpack_require__(/*! ./presets/converted/flexi + fishbrain - witchcraft [complex terraforming - fiddling twists in the fabric of space].json */ "./presets/converted/flexi + fishbrain - witchcraft [complex terraforming - fiddling twists in the fabric of space].json");
presets["Flexi + Geiss - pogo-cubes on tokamak matter (Jelly 5.55)"] = __webpack_require__(/*! ./presets/converted/Flexi + Geiss - pogo-cubes on tokamak matter (Jelly 5.55).json */ "./presets/converted/Flexi + Geiss - pogo-cubes on tokamak matter (Jelly 5.55).json");
presets["Flexi + Geiss - Tokamak mindblob 2.0"] = __webpack_require__(/*! ./presets/converted/Flexi + Geiss - Tokamak mindblob 2.0.json */ "./presets/converted/Flexi + Geiss - Tokamak mindblob 2.0.json");
presets["Flexi, fishbrain + Martin - witchery"] = __webpack_require__(/*! ./presets/converted/Flexi, fishbrain + Martin - witchery.json */ "./presets/converted/Flexi, fishbrain + Martin - witchery.json");
presets["Flexi, Geiss and Rovastar - chaos layered tokamak"] = __webpack_require__(/*! ./presets/converted/Flexi, Geiss and Rovastar - chaos layered tokamak.json */ "./presets/converted/Flexi, Geiss and Rovastar - chaos layered tokamak.json");
presets["Flexi, martin + geiss - painterly rogue wave strike"] = __webpack_require__(/*! ./presets/converted/Flexi, martin + geiss - painterly rogue wave strike.json */ "./presets/converted/Flexi, martin + geiss - painterly rogue wave strike.json");
presets["flexi, stahlregen, geiss + tobias wolfboi - space gelatine burst - mash0000 - chromatidal pool mirror blasphemy"] = __webpack_require__(/*! ./presets/converted/flexi, stahlregen, geiss + tobias wolfboi - space gelatine burst - mash0000 - chromatidal pool mirror blasphemy.json */ "./presets/converted/flexi, stahlregen, geiss + tobias wolfboi - space gelatine burst - mash0000 - chromatidal pool mirror blasphemy.json");
presets["Fumbling_Foo & Flexi, Martin, Orb, Unchained - Star Nova v7b"] = __webpack_require__(/*! ./presets/converted/Fumbling_Foo & Flexi, Martin, Orb, Unchained - Star Nova v7b.json */ "./presets/converted/Fumbling_Foo & Flexi, Martin, Orb, Unchained - Star Nova v7b.json");
presets["Geiss - 3 layers (Tunnel Mix)"] = __webpack_require__(/*! ./presets/converted/Geiss - 3 layers (Tunnel Mix).json */ "./presets/converted/Geiss - 3 layers (Tunnel Mix).json");
presets["Geiss - Bipolar 2 Enhanced"] = __webpack_require__(/*! ./presets/converted/Geiss - Bipolar 2 Enhanced.json */ "./presets/converted/Geiss - Bipolar 2 Enhanced.json");
presets["Geiss - Brain Zoom 4"] = __webpack_require__(/*! ./presets/converted/Geiss - Brain Zoom 4.json */ "./presets/converted/Geiss - Brain Zoom 4.json");
presets["Geiss - Cauldron - painterly (saturation remix)"] = __webpack_require__(/*! ./presets/converted/Geiss - Cauldron - painterly (saturation remix).json */ "./presets/converted/Geiss - Cauldron - painterly (saturation remix).json");
presets["Geiss - Color Pox (Acid Impression Mix) (color saturation remix)"] = __webpack_require__(/*! ./presets/converted/Geiss - Color Pox (Acid Impression Mix) (color saturation remix).json */ "./presets/converted/Geiss - Color Pox (Acid Impression Mix) (color saturation remix).json");
presets["Geiss - Desert Rose 4"] = __webpack_require__(/*! ./presets/converted/Geiss - Desert Rose 4.json */ "./presets/converted/Geiss - Desert Rose 4.json");
presets["Geiss - Explosion Mod 2bd (wave)"] = __webpack_require__(/*! ./presets/converted/Geiss - Explosion Mod 2bd (wave).json */ "./presets/converted/Geiss - Explosion Mod 2bd (wave).json");
presets["Geiss - Game of Life 3"] = __webpack_require__(/*! ./presets/converted/Geiss - Game of Life 3.json */ "./presets/converted/Geiss - Game of Life 3.json");
presets["Geiss - Myriad Mosaics"] = __webpack_require__(/*! ./presets/converted/Geiss - Myriad Mosaics.json */ "./presets/converted/Geiss - Myriad Mosaics.json");
presets["Geiss - Planet 1"] = __webpack_require__(/*! ./presets/converted/Geiss - Planet 1.json */ "./presets/converted/Geiss - Planet 1.json");
presets["Geiss - Reaction Diffusion (Puddle Mix)s a aa aa"] = __webpack_require__(/*! ./presets/converted/Geiss - Reaction Diffusion (Puddle Mix)s a aa aa.json */ "./presets/converted/Geiss - Reaction Diffusion (Puddle Mix)s a aa aa.json");
presets["Geiss - Reaction Diffusion 3 (Lichen Mix)"] = __webpack_require__(/*! ./presets/converted/Geiss - Reaction Diffusion 3 (Lichen Mix).json */ "./presets/converted/Geiss - Reaction Diffusion 3 (Lichen Mix).json");
presets["Geiss - Reaction Diffusion 3"] = __webpack_require__(/*! ./presets/converted/Geiss - Reaction Diffusion 3.json */ "./presets/converted/Geiss - Reaction Diffusion 3.json");
presets["Geiss - Skin Dots Multi-layer 3"] = __webpack_require__(/*! ./presets/converted/Geiss - Skin Dots Multi-layer 3.json */ "./presets/converted/Geiss - Skin Dots Multi-layer 3.json");
presets["Geiss - Tokamak Plus 2"] = __webpack_require__(/*! ./presets/converted/Geiss - Tokamak Plus 2.json */ "./presets/converted/Geiss - Tokamak Plus 2.json");
presets["Geiss - Two-Pointed Pulsagon - mash0000 - bubonic super-fluid centrifuge"] = __webpack_require__(/*! ./presets/converted/Geiss - Two-Pointed Pulsagon - mash0000 - bubonic super-fluid centrifuge.json */ "./presets/converted/Geiss - Two-Pointed Pulsagon - mash0000 - bubonic super-fluid centrifuge.json");
presets["Goody - Ego Decontructor"] = __webpack_require__(/*! ./presets/converted/Goody - Ego Decontructor.json */ "./presets/converted/Goody - Ego Decontructor.json");
presets["Goody + flexi - Data Crusher"] = __webpack_require__(/*! ./presets/converted/Goody + flexi - Data Crusher.json */ "./presets/converted/Goody + flexi - Data Crusher.json");
presets["goody + martin - crystal palace - schizotoxin - the wild iris bloom - 16 iterations"] = __webpack_require__(/*! ./presets/converted/goody + martin - crystal palace - schizotoxin - the wild iris bloom - 16 iterations.json */ "./presets/converted/goody + martin - crystal palace - schizotoxin - the wild iris bloom - 16 iterations.json");
presets["GreatWho - Lasershow"] = __webpack_require__(/*! ./presets/converted/GreatWho - Lasershow.json */ "./presets/converted/GreatWho - Lasershow.json");
presets["Idiot - Star Of Annon"] = __webpack_require__(/*! ./presets/converted/Idiot - Star Of Annon.json */ "./presets/converted/Idiot - Star Of Annon.json");
presets["Illusion & Rovastar - Dotty Mad Space (Jelly)"] = __webpack_require__(/*! ./presets/converted/Illusion & Rovastar - Dotty Mad Space (Jelly).json */ "./presets/converted/Illusion & Rovastar - Dotty Mad Space (Jelly).json");
presets["Isosceles mashup07"] = __webpack_require__(/*! ./presets/converted/Isosceles mashup07.json */ "./presets/converted/Isosceles mashup07.json");
presets["it is the night of the demon weed bowel"] = __webpack_require__(/*! ./presets/converted/it is the night of the demon weed bowel.json */ "./presets/converted/it is the night of the demon weed bowel.json");
presets["Krash + Illusion - Spiral Movement"] = __webpack_require__(/*! ./presets/converted/Krash + Illusion - Spiral Movement.json */ "./presets/converted/Krash + Illusion - Spiral Movement.json");
presets["martin - baby one more time"] = __webpack_require__(/*! ./presets/converted/martin - baby one more time.json */ "./presets/converted/martin - baby one more time.json");
presets["martin - bombyx mori [flexi′s logarithmic edit]"] = __webpack_require__(/*! ./presets/converted/martin - bombyx mori [flexi′s logarithmic edit].json */ "./presets/converted/martin - bombyx mori [flexi′s logarithmic edit].json");
presets["Martin - bombyx mori mix2"] = __webpack_require__(/*! ./presets/converted/Martin - bombyx mori mix2.json */ "./presets/converted/Martin - bombyx mori mix2.json");
presets["martin - bring up the big guns"] = __webpack_require__(/*! ./presets/converted/martin - bring up the big guns.json */ "./presets/converted/martin - bring up the big guns.json");
presets["martin - cherry brain wall mod"] = __webpack_require__(/*! ./presets/converted/martin - cherry brain wall mod.json */ "./presets/converted/martin - cherry brain wall mod.json");
presets["martin - city of shadows"] = __webpack_require__(/*! ./presets/converted/martin - city of shadows.json */ "./presets/converted/martin - city of shadows.json");
presets["martin - cope - laser dome"] = __webpack_require__(/*! ./presets/converted/martin - cope - laser dome.json */ "./presets/converted/martin - cope - laser dome.json");
presets["martin - crystal palace"] = __webpack_require__(/*! ./presets/converted/martin - crystal palace.json */ "./presets/converted/martin - crystal palace.json");
presets["Martin - Diabolo"] = __webpack_require__(/*! ./presets/converted/Martin - Diabolo.json */ "./presets/converted/Martin - Diabolo.json");
presets["Martin - disco mix 3 -fast"] = __webpack_require__(/*! ./presets/converted/Martin - disco mix 3 -fast.json */ "./presets/converted/Martin - disco mix 3 -fast.json");
presets["Martin - disco mix 6"] = __webpack_require__(/*! ./presets/converted/Martin - disco mix 6.json */ "./presets/converted/Martin - disco mix 6.json");
presets["martin - elusive impressions mix2 - flacc mess proph nz+2"] = __webpack_require__(/*! ./presets/converted/martin - elusive impressions mix2 - flacc mess proph nz+2.json */ "./presets/converted/martin - elusive impressions mix2 - flacc mess proph nz+2.json");
presets["martin - Flexis swarm in Martins pond [not yet a boid implementation] "] = __webpack_require__(/*! ./presets/converted/martin - Flexis swarm in Martins pond [not yet a boid implementation] .json */ "./presets/converted/martin - Flexis swarm in Martins pond [not yet a boid implementation] .json");
presets["martin - gate to moria"] = __webpack_require__(/*! ./presets/converted/martin - gate to moria.json */ "./presets/converted/martin - gate to moria.json");
presets["martin - ghost city"] = __webpack_require__(/*! ./presets/converted/martin - ghost city.json */ "./presets/converted/martin - ghost city.json");
presets["martin - glassball dance"] = __webpack_require__(/*! ./presets/converted/martin - glassball dance.json */ "./presets/converted/martin - glassball dance.json");
presets["martin - ice flames"] = __webpack_require__(/*! ./presets/converted/martin - ice flames.json */ "./presets/converted/martin - ice flames.json");
presets["martin - infinity (2010 update)"] = __webpack_require__(/*! ./presets/converted/martin - infinity (2010 update).json */ "./presets/converted/martin - infinity (2010 update).json");
presets["martin - into the fireworks"] = __webpack_require__(/*! ./presets/converted/martin - into the fireworks.json */ "./presets/converted/martin - into the fireworks.json");
presets["Martin - journey into space"] = __webpack_require__(/*! ./presets/converted/Martin - journey into space.json */ "./presets/converted/Martin - journey into space.json");
presets["martin - ludicrous speed"] = __webpack_require__(/*! ./presets/converted/martin - ludicrous speed.json */ "./presets/converted/martin - ludicrous speed.json");
presets["martin - move this body"] = __webpack_require__(/*! ./presets/converted/martin - move this body.json */ "./presets/converted/martin - move this body.json");
presets["martin - neon space ps2 (ati fix) - yaqui graph - flx food"] = __webpack_require__(/*! ./presets/converted/martin - neon space ps2 (ati fix) - yaqui graph - flx food.json */ "./presets/converted/martin - neon space ps2 (ati fix) - yaqui graph - flx food.json");
presets["Martin - QBikal - Surface Turbulence IIb"] = __webpack_require__(/*! ./presets/converted/Martin - QBikal - Surface Turbulence IIb.json */ "./presets/converted/Martin - QBikal - Surface Turbulence IIb.json");
presets["martin - resonant twister - steel spring"] = __webpack_require__(/*! ./presets/converted/martin - resonant twister - steel spring.json */ "./presets/converted/martin - resonant twister - steel spring.json");
presets["martin - rogue wave -ps3"] = __webpack_require__(/*! ./presets/converted/martin - rogue wave -ps3.json */ "./presets/converted/martin - rogue wave -ps3.json");
presets["martin - satellite view"] = __webpack_require__(/*! ./presets/converted/martin - satellite view.json */ "./presets/converted/martin - satellite view.json");
presets["martin - the bridge of khazad-dum [flexi's growth raised to the power of transcendence mix]"] = __webpack_require__(/*! ./presets/converted/martin - the bridge of khazad-dum [flexi's growth raised to the power of transcendence mix].json */ "./presets/converted/martin - the bridge of khazad-dum [flexi's growth raised to the power of transcendence mix].json");
presets["martin - tunnel race"] = __webpack_require__(/*! ./presets/converted/martin - tunnel race.json */ "./presets/converted/martin - tunnel race.json");
presets["martin + stahlregen - martin in da mash 12"] = __webpack_require__(/*! ./presets/converted/martin + stahlregen - martin in da mash 12.json */ "./presets/converted/martin + stahlregen - martin in da mash 12.json");
presets["martin + stahlregen - martin in da mash 12a"] = __webpack_require__(/*! ./presets/converted/martin + stahlregen - martin in da mash 12a.json */ "./presets/converted/martin + stahlregen - martin in da mash 12a.json");
presets["martin + stahlregen - martin in da mash 14"] = __webpack_require__(/*! ./presets/converted/martin + stahlregen - martin in da mash 14.json */ "./presets/converted/martin + stahlregen - martin in da mash 14.json");
presets["martin + stahlregen - martin in da mash 3"] = __webpack_require__(/*! ./presets/converted/martin + stahlregen - martin in da mash 3.json */ "./presets/converted/martin + stahlregen - martin in da mash 3.json");
presets["martin, fishbrain + flexi - mandelbox explorer v1 Eo.S. optimize [bipolar witchcraft mix]"] = __webpack_require__(/*! ./presets/converted/martin, fishbrain + flexi - mandelbox explorer v1 Eo.S. optimize [bipolar witchcraft mix].json */ "./presets/converted/martin, fishbrain + flexi - mandelbox explorer v1 Eo.S. optimize [bipolar witchcraft mix].json");
presets["MilkDrop2077.R012"] = __webpack_require__(/*! ./presets/converted/MilkDrop2077.R012.json */ "./presets/converted/MilkDrop2077.R012.json");
presets["one-sided infinite-dimensional shape - helenisch"] = __webpack_require__(/*! ./presets/converted/one-sided infinite-dimensional shape - helenisch.json */ "./presets/converted/one-sided infinite-dimensional shape - helenisch.json");
presets["ORB - Magma Pool"] = __webpack_require__(/*! ./presets/converted/ORB - Magma Pool.json */ "./presets/converted/ORB - Magma Pool.json");
presets["ORB - Pastel Primer"] = __webpack_require__(/*! ./presets/converted/ORB - Pastel Primer.json */ "./presets/converted/ORB - Pastel Primer.json");
presets["orb - toxic goo"] = __webpack_require__(/*! ./presets/converted/orb - toxic goo.json */ "./presets/converted/orb - toxic goo.json");
presets["PieturP - triptrap_(ultimate-trip-mix)"] = __webpack_require__(/*! ./presets/converted/PieturP - triptrap_(ultimate-trip-mix).json */ "./presets/converted/PieturP - triptrap_(ultimate-trip-mix).json");
presets["raron - a grayish blob - mash0000 - pungent gastric automata cloud fumes"] = __webpack_require__(/*! ./presets/converted/raron - a grayish blob - mash0000 - pungent gastric automata cloud fumes.json */ "./presets/converted/raron - a grayish blob - mash0000 - pungent gastric automata cloud fumes.json");
presets["rce-ordinary + flexi - far away distance (custom beat detection + bipolar colour ghost mix)"] = __webpack_require__(/*! ./presets/converted/rce-ordinary + flexi - far away distance (custom beat detection + bipolar colour ghost mix).json */ "./presets/converted/rce-ordinary + flexi - far away distance (custom beat detection + bipolar colour ghost mix).json");
presets["Redi Jedi - i dont think those were portabello mushrooms"] = __webpack_require__(/*! ./presets/converted/Redi Jedi - i dont think those were portabello mushrooms.json */ "./presets/converted/Redi Jedi - i dont think those were portabello mushrooms.json");
presets["Rocke - Answer.42 (New Mix 1) - mash0000 - slash and char p. jungle"] = __webpack_require__(/*! ./presets/converted/Rocke - Answer.42 (New Mix 1) - mash0000 - slash and char p. jungle.json */ "./presets/converted/Rocke - Answer.42 (New Mix 1) - mash0000 - slash and char p. jungle.json");
presets["Rovastar - Explosive Minds"] = __webpack_require__(/*! ./presets/converted/Rovastar - Explosive Minds.json */ "./presets/converted/Rovastar - Explosive Minds.json");
presets["Rovastar - Trippy Sperm (Jelly)"] = __webpack_require__(/*! ./presets/converted/Rovastar - Trippy Sperm (Jelly).json */ "./presets/converted/Rovastar - Trippy Sperm (Jelly).json");
presets["Rovastar + Che - Asylum Animations"] = __webpack_require__(/*! ./presets/converted/Rovastar + Che - Asylum Animations.json */ "./presets/converted/Rovastar + Che - Asylum Animations.json");
presets["Rovastar + Flexi - Hurricane Nightmare (Moebius Mix)"] = __webpack_require__(/*! ./presets/converted/Rovastar + Flexi - Hurricane Nightmare (Moebius Mix).json */ "./presets/converted/Rovastar + Flexi - Hurricane Nightmare (Moebius Mix).json");
presets["Rovastar + Geiss - Hurricane Nightmare (Relief Mix)"] = __webpack_require__(/*! ./presets/converted/Rovastar + Geiss - Hurricane Nightmare (Relief Mix).json */ "./presets/converted/Rovastar + Geiss - Hurricane Nightmare (Relief Mix).json");
presets["Rovastar + Geiss - Hurricane Nightmare"] = __webpack_require__(/*! ./presets/converted/Rovastar + Geiss - Hurricane Nightmare.json */ "./presets/converted/Rovastar + Geiss - Hurricane Nightmare.json");
presets["Rovastar + Geiss - Hyperkaleidoscope Glow 2 motion blur (Jelly)"] = __webpack_require__(/*! ./presets/converted/Rovastar + Geiss - Hyperkaleidoscope Glow 2 motion blur (Jelly).json */ "./presets/converted/Rovastar + Geiss - Hyperkaleidoscope Glow 2 motion blur (Jelly).json");
presets["Rovastar + Geiss - Snapshot Of Space (LSB mix)"] = __webpack_require__(/*! ./presets/converted/Rovastar + Geiss - Snapshot Of Space (LSB mix).json */ "./presets/converted/Rovastar + Geiss - Snapshot Of Space (LSB mix).json");
presets["Rovastar + Loadus + Geiss - Tone-mapped FractalDrop 7c"] = __webpack_require__(/*! ./presets/converted/Rovastar + Loadus + Geiss - Tone-mapped FractalDrop 7c.json */ "./presets/converted/Rovastar + Loadus + Geiss - Tone-mapped FractalDrop 7c.json");
presets["Rovastar + Telek - Altars of Madness (Rolling Oceans Mix)"] = __webpack_require__(/*! ./presets/converted/Rovastar + Telek - Altars of Madness (Rolling Oceans Mix).json */ "./presets/converted/Rovastar + Telek - Altars of Madness (Rolling Oceans Mix).json");
presets["Rovastar-altarsofmadness(forgottenrea"] = __webpack_require__(/*! ./presets/converted/Rovastar-altarsofmadness(forgottenrea.json */ "./presets/converted/Rovastar-altarsofmadness(forgottenrea.json");
presets["sawtooth grin nz+ m10 w4"] = __webpack_require__(/*! ./presets/converted/sawtooth grin nz+ m10 w4.json */ "./presets/converted/sawtooth grin nz+ m10 w4.json");
presets["shifter - dark tides bdrv mix"] = __webpack_require__(/*! ./presets/converted/shifter - dark tides bdrv mix.json */ "./presets/converted/shifter - dark tides bdrv mix.json");
presets["shifter - escape the worm - Eo.S. + Phat - Before_It_Eats_Your_Brain_Mix_v2"] = __webpack_require__(/*! ./presets/converted/shifter - escape the worm - Eo.S. + Phat - Before_It_Eats_Your_Brain_Mix_v2.json */ "./presets/converted/shifter - escape the worm - Eo.S. + Phat - Before_It_Eats_Your_Brain_Mix_v2.json");
presets["shifter - feathers (angel wings)_phat_remix relief 2"] = __webpack_require__(/*! ./presets/converted/shifter - feathers (angel wings)_phat_remix relief 2.json */ "./presets/converted/shifter - feathers (angel wings)_phat_remix relief 2.json");
presets["shifter - fire and brimstone"] = __webpack_require__(/*! ./presets/converted/shifter - fire and brimstone.json */ "./presets/converted/shifter - fire and brimstone.json");
presets["shifter + flexi - american oblivion pie"] = __webpack_require__(/*! ./presets/converted/shifter + flexi - american oblivion pie.json */ "./presets/converted/shifter + flexi - american oblivion pie.json");
presets["shut down all survival paradigms"] = __webpack_require__(/*! ./presets/converted/shut down all survival paradigms.json */ "./presets/converted/shut down all survival paradigms.json");
presets["stahlregen - dots (layered) - suksma world humanvirus replication killphreqs mix"] = __webpack_require__(/*! ./presets/converted/stahlregen - dots (layered) - suksma world humanvirus replication killphreqs mix.json */ "./presets/converted/stahlregen - dots (layered) - suksma world humanvirus replication killphreqs mix.json");
presets["Stahlregen & Boz - Machine Code (Reaction Diffusion)_1 - Isosceles Tweak 08"] = __webpack_require__(/*! ./presets/converted/Stahlregen & Boz - Machine Code (Reaction Diffusion)_1 - Isosceles Tweak 08.json */ "./presets/converted/Stahlregen & Boz - Machine Code (Reaction Diffusion)_1 - Isosceles Tweak 08.json");
presets["Stahlregen & Boz + Eo.S + Geiss + Phat + Rovastar + Zylot - Machine Code [Jelly]"] = __webpack_require__(/*! ./presets/converted/Stahlregen & Boz + Eo.S + Geiss + Phat + Rovastar + Zylot - Machine Code [Jelly].json */ "./presets/converted/Stahlregen & Boz + Eo.S + Geiss + Phat + Rovastar + Zylot - Machine Code [Jelly].json");
presets["stahlregen & geiss + rovastar - fields of flowers (mashup 9 - space flower rmx) - mash0001 - pack em in, we got a long haul + flashlight"] = __webpack_require__(/*! ./presets/converted/stahlregen & geiss + rovastar - fields of flowers (mashup 9 - space flower rmx) - mash0001 - pack em in, we got a long haul + flashlight.json */ "./presets/converted/stahlregen & geiss + rovastar - fields of flowers (mashup 9 - space flower rmx) - mash0001 - pack em in, we got a long haul + flashlight.json");
presets["Stahlregen + martin + others - Psychedelic Metal Flower"] = __webpack_require__(/*! ./presets/converted/Stahlregen + martin + others - Psychedelic Metal Flower.json */ "./presets/converted/Stahlregen + martin + others - Psychedelic Metal Flower.json");
presets["suksma - ed geining hateops - flx i want you, i'm sick with you"] = __webpack_require__(/*! ./presets/converted/suksma - ed geining hateops - flx i want you, i'm sick with you.json */ "./presets/converted/suksma - ed geining hateops - flx i want you, i'm sick with you.json");
presets["suksma - feign shoulder concern when i should be executed - everything is eternally shrinking"] = __webpack_require__(/*! ./presets/converted/suksma - feign shoulder concern when i should be executed - everything is eternally shrinking.json */ "./presets/converted/suksma - feign shoulder concern when i should be executed - everything is eternally shrinking.json");
presets["suksma - gaeomaentaec - log smell 2 - steaming wienies2"] = __webpack_require__(/*! ./presets/converted/suksma - gaeomaentaec - log smell 2 - steaming wienies2.json */ "./presets/converted/suksma - gaeomaentaec - log smell 2 - steaming wienies2.json");
presets["suksma - grainery clock mortis"] = __webpack_require__(/*! ./presets/converted/suksma - grainery clock mortis.json */ "./presets/converted/suksma - grainery clock mortis.json");
presets["suksma - nip tuck"] = __webpack_require__(/*! ./presets/converted/suksma - nip tuck.json */ "./presets/converted/suksma - nip tuck.json");
presets["suksma - pus on my cat - j4+ - cubby"] = __webpack_require__(/*! ./presets/converted/suksma - pus on my cat - j4+ - cubby.json */ "./presets/converted/suksma - pus on my cat - j4+ - cubby.json");
presets["suksma - water cooled red uranium vs dotes - freeenergynow.net"] = __webpack_require__(/*! ./presets/converted/suksma - water cooled red uranium vs dotes - freeenergynow.net.json */ "./presets/converted/suksma - water cooled red uranium vs dotes - freeenergynow.net.json");
presets["The NG + Flexi + BDRV - Ultramix, Aderrasi + Flexi - Predator Prey Spirals, Flexi - Jellyfish Jam"] = __webpack_require__(/*! ./presets/converted/The NG + Flexi + BDRV - Ultramix, Aderrasi + Flexi - Predator Prey Spirals, Flexi - Jellyfish Jam.json */ "./presets/converted/The NG + Flexi + BDRV - Ultramix, Aderrasi + Flexi - Predator Prey Spirals, Flexi - Jellyfish Jam.json");
presets["TonyMilkdrop - Magellan's Nebula [Flexi - fancy + $this shall not retain]"] = __webpack_require__(/*! ./presets/converted/TonyMilkdrop - Magellan's Nebula [Flexi - fancy + $this shall not retain].json */ "./presets/converted/TonyMilkdrop - Magellan's Nebula [Flexi - fancy + $this shall not retain].json");
presets["Unchained - Making a Science of It 4"] = __webpack_require__(/*! ./presets/converted/Unchained - Making a Science of It 4.json */ "./presets/converted/Unchained - Making a Science of It 4.json");
presets["Unchained & Rovastar - Wormhole Pillars (Hall of Shadows mix)"] = __webpack_require__(/*! ./presets/converted/Unchained & Rovastar - Wormhole Pillars (Hall of Shadows mix).json */ "./presets/converted/Unchained & Rovastar - Wormhole Pillars (Hall of Shadows mix).json");
presets["undulate harque - shit broo"] = __webpack_require__(/*! ./presets/converted/undulate harque - shit broo.json */ "./presets/converted/undulate harque - shit broo.json");
presets["va ultramix - 154 [chaos]"] = __webpack_require__(/*! ./presets/converted/va ultramix - 154 [chaos].json */ "./presets/converted/va ultramix - 154 [chaos].json");
presets["Waltra - Cosmic Wind"] = __webpack_require__(/*! ./presets/converted/Waltra - Cosmic Wind.json */ "./presets/converted/Waltra - Cosmic Wind.json");
presets["Waltra - Ice Plasma"] = __webpack_require__(/*! ./presets/converted/Waltra - Ice Plasma.json */ "./presets/converted/Waltra - Ice Plasma.json");
presets["Waltra - Square Orgy"] = __webpack_require__(/*! ./presets/converted/Waltra - Square Orgy.json */ "./presets/converted/Waltra - Square Orgy.json");
presets["yin - 190 - Temporal fluctuations"] = __webpack_require__(/*! ./presets/converted/yin - 190 - Temporal fluctuations.json */ "./presets/converted/yin - 190 - Temporal fluctuations.json");
presets["yin - 250 - Artificial poles of the continuum_Phat′s_Orbit_mix"] = __webpack_require__(/*! ./presets/converted/yin - 250 - Artificial poles of the continuum_Phat′s_Orbit_mix.json */ "./presets/converted/yin - 250 - Artificial poles of the continuum_Phat′s_Orbit_mix.json");
presets["yin - 253 - Artificial poles of the continuum (remix #3)"] = __webpack_require__(/*! ./presets/converted/yin - 253 - Artificial poles of the continuum (remix #3).json */ "./presets/converted/yin - 253 - Artificial poles of the continuum (remix \u0000#3).json");
presets["yin - 315 - Ocean of Light (yo im peakin yo Eo.S.-Phat)"] = __webpack_require__(/*! ./presets/converted/yin - 315 - Ocean of Light (yo im peakin yo Eo.S.-Phat).json */ "./presets/converted/yin - 315 - Ocean of Light (yo im peakin yo Eo.S.-Phat).json");
presets["yin - 352 - Chromatron (warped)"] = __webpack_require__(/*! ./presets/converted/yin - 352 - Chromatron (warped).json */ "./presets/converted/yin - 352 - Chromatron (warped).json");
presets["Zylot - In death there is life (Geiss Layered Mix)"] = __webpack_require__(/*! ./presets/converted/Zylot - In death there is life (Geiss Layered Mix).json */ "./presets/converted/Zylot - In death there is life (Geiss Layered Mix).json");
/* eslint-enable max-len */

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (presets);

/***/ }),

/***/ "./presets/converted/$$$ Royal - Mashup (177).json":
/*!*********************************************************!*\
  !*** ./presets/converted/$$$ Royal - Mashup (177).json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"solarize\":1,\"wave_a\":0.001,\"warpanimspeed\":0.037,\"warpscale\":0.015,\"zoomexp\":1.22019,\"warp\":0.033,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0.09,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_r\":0.8,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"x\":0.75,\"y\":0.75,\"rad\":0.7417,\"tex_zoom\":0.22746,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":0.1,\"border_r\":0,\"border_g\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"tex_saw = 0.4;\",\"frame_eqs_eel\":\"ang = q1*0.2;\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.6;\"},{\"baseVals\":{\"enabled\":1,\"textured\":1,\"x\":0.25,\"y\":0.75,\"rad\":4.44708,\"tex_zoom\":0.22746,\"r\":0,\"a\":0.1,\"g2\":0,\"a2\":0.2,\"border_r\":0,\"border_g\":0,\"border_a\":0},\"init_eqs_eel\":\"tex_saw = 0.4;\",\"frame_eqs_eel\":\"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.6;\"},{\"baseVals\":{\"textured\":1,\"rad\":6.621,\"tex_zoom\":0.22746,\"g\":1,\"b\":1,\"a\":0.2,\"r2\":1,\"b2\":1,\"border_r\":0,\"border_g\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"tex_saw = 0.4;\",\"frame_eqs_eel\":\"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.12)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\n\\nr = 0.5 + 0.5*sin(time*1.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.307 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.959 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\nx = x*0.6 + 0.2;\\ny = y*0.6 + 0.2;\\n\\nr = 0.5 + 0.5*sin(time*1.322) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.5407 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.759 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v*10));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*0.2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.14)*cos(time*0.1 + xs);\\n\\nx = x*0.8 + 0.1;\\ny = y*0.8 + 0.1;\\nx = x*0.25 + 0.375;\\ny = y*0.25 + 0.375;\\n\\nr = 0.5 + 0.5*sin(time*1.622) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.2407 + 2*y);\\nb = 0.4 + 0.4*sin(time*1.359 + x*2);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y*0.9 + 0.05 + bass*0.08;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.478);\\nb = 0.4 + 0.4*sin(time*1.125);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0\",\"frame_eqs_eel\":\"decay=1;\\nzoom=0.95+.075*max(treb_att,bass_att);\\n\\nwarp = 0;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1;\\n\\nq1=mtime*0.4-.05*time;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (vec2(1.0, 0.0) * texsize.z);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(0.0, 1.0) * texsize.z);\\n  ret_1 = (((\\n    (texture (sampler_main, (uv + tmpvar_2)).xyz + texture (sampler_main, (uv + tmpvar_2)).xyz)\\n   * 0.5) + (\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + tmpvar_3)).xyz)\\n   * 0.5)) - texture (sampler_main, ((\\n    (uv - 0.5)\\n   * 0.9) + 0.5)).xyz);\\n  ret_1 = (ret_1 - 0.4);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.z;\\n  tmpvar_6.y = tmpvar_4.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (tmpvar_5 * 0.1)) + (tmpvar_6 * 0.06));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_8.y), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_7).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec3 tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_10 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11 * texture (sampler_main, clamp ((uv - (tmpvar_9 * 2.0)), 0.0, 1.0)).y)\\n   * 1.2)), (tmpvar_11.zxy * 1.8), tmpvar_8.zzz);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_10;\\n  ret = tmpvar_12.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/$$$ Royal - Mashup (273).json":
/*!*********************************************************!*\
  !*** ./presets/converted/$$$ Royal - Mashup (273).json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1,\"decay\":0.94,\"echo_zoom\":1.868,\"echo_alpha\":0.45,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"brighten\":1,\"darken\":1,\"solarize\":1,\"wave_a\":4.1,\"wave_scale\":100,\"wave_smoothing\":0,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.681,\"warpscale\":2.953,\"zoomexp\":0.01,\"zoom\":0.9901,\"warp\":1.24699,\"wave_r\":0,\"wave_g\":0,\"wave_x\":0.489,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0,\"ib_r\":1,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q1 = aspectX;\\nq2 = aspectY;\\nw1 = asin(1)*0.7;\\nw2 = asin(1)*1.3;\\nq5 = sin(w1);\\nq6 = cos(w1);\\nq7 = sin(w2);\\nq8 = cos(w2);\\nw1 = asin(1)*0.7;\\nw2 = asin(1)*1.3;\\nq9 = sin(w1);\\nq10 = cos(w1);\\nq11 = sin(w2);\\nq12 = cos(w2);\\nzoom = 1;//0.999;\\n//warp = 0;\\n//wave_a = 0;\\nq13 = oldq13 + 0.1*(bass*bass*bass_att*bass_att);\\noldq13 = q13;\",\"pixel_eqs_eel\":\"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.6));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\"vec2 xlat_mutablers;\\n shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\\n  xlat_mutablers.x = ((ang / 3.14) + q28);\\n  xlat_mutablers.y = ((0.1 / (0.05 + \\n    sqrt(dot (tmpvar_2, tmpvar_2))\\n  )) + (time * 0.5));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(xlat_mutablers);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  tmpvar_4.x = texsize.z;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = 0.0;\\n  tmpvar_5.y = texsize.w;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (texture (sampler_main, (tmpvar_3 - tmpvar_4)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_4)).xyz).x;\\n  tmpvar_6.y = (texture (sampler_main, (tmpvar_3 - tmpvar_5)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_5)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (fract(xlat_mutablers) * 16.0)\\n  )) - (4.0 * tmpvar_6));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((1.0 + bass_att) * ((3.2 * vec3(\\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (0.6 - \\n    (texture (sampler_main, tmpvar_3).xyz + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1))\\n  )));\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/$$$ Royal - Mashup (307).json":
/*!*********************************************************!*\
  !*** ./presets/converted/$$$ Royal - Mashup (307).json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"wave_mode\":2,\"wave_a\":0.027,\"wave_scale\":1.015,\"wave_smoothing\":0.522,\"modwavealphastart\":0.83,\"modwavealphaend\":1.31,\"warpanimspeed\":30.965,\"warpscale\":2.572,\"zoom\":1.00901,\"warp\":0.00054,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 3.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - 0.005));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/$$$ Royal - Mashup (326).json":
/*!*********************************************************!*\
  !*** ./presets/converted/$$$ Royal - Mashup (326).json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1,\"decay\":0.997,\"echo_zoom\":0.997,\"echo_orient\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.01,\"wave_smoothing\":0.27,\"wave_mystery\":-0.38,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":0.99951,\"warp\":0.01,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"ib_r\":1,\"ib_g\":1,\"ib_b\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":3,\"rad\":0.34,\"ang\":0.53,\"r\":0.56,\"g\":0.36,\"r2\":0.9,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang = ang + time;\"},{\"baseVals\":{\"sides\":3,\"rad\":0.41,\"r\":0,\"g\":0.8,\"b\":0.7,\"g2\":0.4,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang = ang - time*.333;\"},{\"baseVals\":{\"sides\":3,\"rad\":0.21,\"r\":0.84,\"r2\":1,\"g2\":0.58,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang = ang + time*4;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\\nr = 1 + .5*sin(sample*.10+(time*10*bass));\\ng = 1 + .5*sin(sample*2+(time*50*treb));\\nb = 1 + .5*sin(sample*5+(time*20*mid));\\na = r;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"tst = 10;\",\"frame_eqs_eel\":\"warp = 0;\\nbassspin = if(above(bass*.09,bassspin),bassspin+.002,bassspin-.002);\\nbassspin = bassspin*above(bassspin,0);\\nbassc = bassc+bassspin;\\nq1 = bassc;\\nq2 = frame%int(36+12*sin(time*.1));\\ntst = if(equal(q2,1),10+int(rand(45)),tst);\\nq3 = tst;\\ndecay = .92;\",\"pixel_eqs_eel\":\"zoom = zoom + (.03*(bass_att*bass_att))*rad;\\nrot = rot + rad*(-2.5&(cos(time)*5))*.01;\\nzoom = zoom+((treb_att*.01));\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fw_main, uv).xyz - 0.04);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \\n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (tmpvar_5, ((\\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\\n   + \\n    (0.1 * ((texture (sampler_blur1, (\\n      (tmpvar_4 * 1.25)\\n     - 0.125)).xyz * scale1) + bias1))\\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\\n  vec3 x_7;\\n  x_7 = (tmpvar_6 - 0.5);\\n  ret_1 = (tmpvar_6 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\\n  ret_1 = (ret_1 * (ret_1 * 0.45));\\n  ret_1 = (ret_1 * mix ((0.9 * ret_1), (\\n    (1.2 * ret_1)\\n   * \\n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\\n  ), pow (hue_shader.zxy, ret_1)));\\n  ret_1 = (ret_1 + 0.02);\\n  ret_1 = (ret_1 * ret_1);\\n  ret_1 = (ret_1 * hue_shader.zxy);\\n  ret_1 = (ret_1 * (2.0 + max (treb_att, mid_att)));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/$$$ Royal - Mashup (417).json":
/*!*********************************************************!*\
  !*** ./presets/converted/$$$ Royal - Mashup (417).json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":0.16,\"decay\":0.96,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"darken_center\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.012,\"wave_smoothing\":0.9,\"warpanimspeed\":0.01,\"warpscale\":1.47,\"zoomexp\":4.77802,\"zoom\":0.99816,\"warp\":0.01,\"sx\":1.00183,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_size\":0.005,\"ob_a\":0.5,\"ib_size\":0.5,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":3,\"mv_y\":2,\"mv_dx\":0.02,\"mv_dy\":-0.02,\"mv_l\":0.15,\"mv_r\":0.49,\"mv_g\":0.48,\"mv_b\":0.3,\"mv_a\":0,\"b1ed\":0.3},\"shapes\":[{\"baseVals\":{\"sides\":100,\"textured\":1,\"rad\":1.86832,\"tex_zoom\":1.14605,\"g\":1,\"b\":1,\"a\":0.1,\"r2\":1,\"b2\":1,\"a2\":0.1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang = .25*time;\"},{\"baseVals\":{\"enabled\":1,\"sides\":5,\"additive\":1,\"textured\":1,\"rad\":1.75612,\"ang\":0.75398,\"tex_zoom\":0.7418,\"g\":1,\"b\":1,\"a\":0.02,\"r2\":1,\"b2\":1,\"a2\":0.02,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = .025;\\na2 = .025;\\n\\nang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5\"},{\"baseVals\":{\"enabled\":1,\"sides\":5,\"textured\":1,\"rad\":1.06779,\"ang\":0.75398,\"tex_zoom\":0.77977,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5\"},{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":1.0677,\"ang\":0.75398,\"tex_zoom\":0.77977,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0,\"g\":0.5,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=bass_att*sin(time)*0.5+0.5;\\nt2=bass_att*sin(time+2.1)*0.5+0.5;\\nt3=treb_att*sin(time+4.2)*0.5+0.5;\\n\\nt4=treb_att*sin(-time+1.1)*0.5+0.5;\\nt5=mid_att*sin(-time+3.1)*0.5+0.5;\\nt6=mid_att*sin(-time+5.2)*0.5+0.5;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=(flip+1)*below(flip,1);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\ndx = if(flip,x,dx-x);\\ndy = if(flip,y,dy-y);\\ndz = pow(dx*dx+dy*dy,.5);\\nang = abs(asin(dx/dz));\\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\\nr = .5 + .5*sin(cang);\\ng = .5 + .5*sin(cang + 1.047197);\\nb = .5 + .5*sin(cang + 2.094395);\\n\\na=(1-sample)*above(sample,0);\\n\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0.2,\"b\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=mid_att*sin(time)*0.5+0.5;\\nt2=treb_att*sin(time+2.1)*0.5+0.5;\\nt3=mid_att*sin(time+4.2)*0.5+0.5;\\n\\nt4=bass_att*sin(-time+1.1)*0.5+0.5;\\nt5=bass_att*sin(-time+3.1)*0.5+0.5;\\nt6=treb_att*sin(-time+5.2)*0.5+0.5;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\ndx = if(flip,x,dx-x);\\ndy = if(flip,y,dy-y);\\ndz = pow(dx*dx+dy*dy,.5);\\nang = abs(asin(dx/dz));\\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\\nr = .5 + .5*sin(cang);\\ng = .5 + .5*sin(cang + 1.047197);\\nb = .5 + .5*sin(cang + 2.094395);\\n\\na=(1-sample)*above(sample,0);\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"g\":0.6,\"b\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"g\":0.3,\"b\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"decay=.999;\\nwrap=sin(time*10);\\nmv_dx=bass;\\nib_a=.005;\\n\\n\\nvol=(bass+mid+treb)*0.55;\\nvol=vol*vol;\\n\\nmtime=mtime+vol*0.01*(48/fps);\\n\\nq1=mtime*0.5;\\n\\n\\ndt=1/FPS;\\nmytime=mytime+dt;\\ncontvol=min( max(.5, (1-.5*dt)*contvol+.5*dt*(bass+mid+treb)*.133 ) ,2 ) ;\\nq2=contvol;\\nq3=mytime;\\necho_zoom=1+(vol*0.01);\\nsx=-.019-sin(time)*0.1+0.5;\",\"pixel_eqs_eel\":\"zoom=1.005-(rad/100);\\nrot=rad/100;\\n//sy=-1.02;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (vec2(1.0, 0.0) * texsize.z);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(0.0, 1.0) * texsize.z);\\n  ret_1 = (((\\n    (texture (sampler_main, (uv + tmpvar_2)).xyz + texture (sampler_main, (uv + tmpvar_2)).xyz)\\n   * 0.5) + (\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + tmpvar_3)).xyz)\\n   * 0.5)) - texture (sampler_main, ((\\n    (uv - 0.5)\\n   * 0.9) + 0.5)).xyz);\\n  ret_1 = (ret_1 - 0.4);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = (tmpvar_5 * 2.5);\\n  uv2_3.y = (tmpvar_6.y + (0.25 * time));\\n  uv2_3.x = (tmpvar_7 + (time / 32.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 2.5);\\n  uv3_2.x = tmpvar_8.x;\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.5 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/$$$ Royal - Mashup (441).json":
/*!*********************************************************!*\
  !*** ./presets/converted/$$$ Royal - Mashup (441).json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"decay\":0.99,\"wave_dots\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":100,\"wave_scale\":28.599,\"wave_smoothing\":0.5,\"wave_mystery\":-1,\"modwavealphastart\":0.4,\"modwavealphaend\":1,\"warpanimspeed\":100,\"warpscale\":4.142,\"zoomexp\":0.85437,\"zoom\":0.99951,\"warp\":0.01,\"sx\":1.01,\"sy\":1.01,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_l\":1.5,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"rad\":0.40031,\"r\":0.5,\"g\":0.5,\"r2\":0.5,\"g2\":0,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"sounds=(bass+treb+mid)*.3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.5)*2;\\ny=y+0.207*sin(time*bass*0.5)*2;\\n\\nr = bass_att;\\ng = mid;\\nb = treb;\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"rad\":0.13465,\"r2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);\\n\\nr = treb;\\ng = mid;\\nb = bass_att;\"},{\"baseVals\":{\"sides\":100,\"rad\":0.20047,\"g\":1,\"b\":1,\"r2\":0.5,\"g2\":0.5,\"b2\":1,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.217*cos(time*2.3)+sounds*0.1;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"sep\":256,\"scaling\":20.35074,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"sep\":256,\"usedots\":1,\"scaling\":100,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp=bass*.2;\\nwarp=warp+(above(bass,1)*bass*.2);\\n\\necho_alpha=(above(bass,1.25)*.9);\\n\\n//mv_a=(above(bass,1)*bass*.5);\\n\\n// Awesome beat code by martin!\\ndec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\n\\nFR = if(is_beat,if(above(FR,0),-1,1),FR);\\n\\nq2=q2+(above(bass,1.3)*sin(time)*.02);\\n\\nrot=(rot+q2)*FR;\\n\\nzoom=zoom+(above(bass,1.3)*bass*.03);\\n\\nsy=sy+(above(treb_att,1.2)*treb_att*.002*sin(time));\\nsx=sx+(above(treb_att,1.2)*treb_att*.002*sin(time));\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.02 * aspect.zw);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.02));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_9 - floor(tmpvar_9))).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - tmpvar_6.y)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_5.z;\\n  tmpvar_11.y = -(tmpvar_4.z);\\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.02));\\n  ret_2.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (ret_2.x - tmpvar_6.x)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.y;\\n  tmpvar_13.y = -(tmpvar_4.y);\\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.02));\\n  ret_2.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((\\n    (ret_2.z - tmpvar_6.z)\\n   * 0.02) + 0.005));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_2;\\n  ret = tmpvar_14.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/$$$ Royal - Mashup (489).json":
/*!*********************************************************!*\
  !*** ./presets/converted/$$$ Royal - Mashup (489).json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"additivewave\":1,\"wave_dots\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.527,\"wave_smoothing\":0,\"wave_mystery\":0.6,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_g\":0.49,\"ob_a\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b2x\":0.6,\"b3x\":0.4,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":8,\"additive\":1,\"num_inst\":256,\"rad\":0.03632,\"tex_ang\":1.00531,\"tex_zoom\":1.53117,\"g\":1,\"b\":1,\"a\":0,\"g2\":0,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":5,\"additive\":1,\"num_inst\":256,\"x\":0.26,\"y\":0.2,\"rad\":0.39317,\"tex_zoom\":0.9355,\"g2\":0,\"a2\":0.2,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"n = (instance);\\nFLen = reg00;\\nSLen = reg00/2;\\n\\nz0 = 10;\\ny0 = gmegabuf(2000+n+FLen)/z0;\\nx0 = gmegabuf(2000+n)/z0;\\n\\na0 = (gmegabuf(n+10000));\\n\\nk1 = instance/num_inst-.5;\\nx = .5 + x0 + sin(k1*8*sin(q12*.07)) * sin(q11*.13)*q3*.7; \\ny = .5 + q32*(y0 + sin(k1*8*sin(q14*.1)) * sin(q13*.2)*q3*.7); \\n\\narg = q2/8;\\nhigh = exp(-500*pow(arg+.5-instance/num_inst,2));\\nhigh += exp(-500*pow(-arg+.5-instance/num_inst,2));\\n\\nexc = sqrt((pow(x-.5,2)+pow(y-.5,2)));\\nrad0 = above(z0,0)*min (.1, a0/60)+.005;\\nrad0 = rad0 * (1+2*exc) * (1+high);\\n\\np1 = .5 + sin(q12)/2;\\np2 = .5 + sin(q13*1.4)/2;\\n//p1 = rand(1)-.5;\\n//p2 = rand(1)-.5;\\nexc = ((pow(x-p1,2)+pow(y-p2,2)));\\nrad = min(rad0 * (1 + .004*q3/abs(exc)),1) ;\\n\\na = min(a0*8+.4,1);\\n\\nk1 = instance/num_inst*5 + high;\\nw = 1-exp(-treb_att/2-.5);\\ng = w + (1-w)*sin(k1);\\nr = w + (1-w)*sin(k1-6.28/3);\\nb = w + (1-w)*sin(k1-6.28*2/3);\\n\\na2 = a/4;\\ng2 = g*0; b2 = b*0; r2 = r*0;\"},{\"baseVals\":{\"sides\":13,\"additive\":1,\"num_inst\":5,\"x\":0.65,\"y\":0.38,\"rad\":0.57049,\"tex_zoom\":0.73678,\"a\":0.7,\"g2\":0,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"k1 = instance/num_inst;\\nx = .5 + .3*sin(instance*k1*413);\\ny = .5 + .3 * sin(instance*k1*113);\\n\\nrad = .1 + .4*sin(k1*333);\\n\\nr =  .5*sin(k1*234);\\nb =  .5*sin(k1*534);\\ng =  .5*sin(k1*34);\"},{\"baseVals\":{\"sides\":14,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.6,\"y\":0.55,\"rad\":0.97237,\"ang\":1.25664,\"tex_zoom\":0.34933,\"g\":0.6,\"g2\":0,\"b2\":1,\"border_r\":0.2,\"border_g\":0.7,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"sep\":120,\"spectrum\":1,\"additive\":1,\"scaling\":7.52386,\"smoothing\":0,\"r\":0,\"a\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"FLen = reg00;\\n\\nn = int(sample*FLen);\\nvol = (value1+value2) * (1+ .1 / (sample+.03));\\n\\nchg = min(max(vol- gmegabuf(n),-1),1);\\ndec = if (chg>0, 1-chg*0.3, 1+chg*0.2);\\n\\nchg = q1 -q2;\\ndec = .94 - abs(chg) * if (chg> 0, .2,.1);\\n\\ndec = min(max(dec,0),1);\\ngmegabuf(n) = gmegabuf(n)*dec + vol*(1-dec);\\n\\ndec = q2/4;\\n//dec = .90;\\ndec = max(min(dec,1),.1);\\n\\ngmegabuf(n) = gmegabuf(n)*dec + gmegabuf(n+(q2<.8))*(1-dec);\\ngmegabuf(n+10000) = gmegabuf(n+10000)*.2 + .8* vol/3;\\na = .0;\\nx = sample;\\ny = .2 + gmegabuf(n+0)*.23;\"},{\"baseVals\":{\"samples\":256,\"usedots\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.9,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"samples\":32,\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"n = 0;\\nloop (50000,\\ngmegabuf(n) = 0;\\nmegabuf(n) = 0;\\nn = n+1;\\n);\\n\\nsw1 = rand(8);\\nsw2 = rand(8);\\nsw3 = rand(8);\\nsw4 = rand(8);\",\"frame_eqs_eel\":\"flen = 512; //Wave Punkte\\nreg00 = FLen;\\nSLen = FLen/2;\\ndec_m = pow(.94, 30/fps);\\n\\n//Volume\\nn = 0; vol = 0;\\nloop (SLen,\\n  vol = vol + pow(gmegabuf(n),2)/FLen;  \\n  n = n+1;\\n);\\nvol = sqrt(vol)/2;\\nvol_ = vol_*dec_m + (1-dec_m)* (vol);\\n\\n//switches\\nlev1 = lev1 * dec_m + (1-dec_m) * gmegabuf(1);\\nlev2 = lev2 * dec_m + (1-dec_m) * gmegabuf(20);\\nlev3 = lev3 * dec_m + (1-dec_m) * gmegabuf(50);\\nlev4 = lev4 * dec_m + (1-dec_m) * gmegabuf(100);\\nsw1 = sw1 + (lev1-gmegabuf(1)>0)/fps;\\nsw2 = sw2 + (lev2-gmegabuf(20)>0)/fps;\\nsw3 = sw3 + (lev3-gmegabuf(50)>0)/fps;\\nsw4 = sw4 + (lev4-gmegabuf(100)>0)/fps;\\n\\ndif = (1+sin(sw3/4))*16+2;\\nofs = sin(sw2/3)*8;\\nn = 0; k1 = frame*0; \\nloop (SLen,\\n      m1 = (n)%SLen;\\n      m2 = (n+ofs)%SLen;\\n\\n      k = (m1+dif)%SLen;\\n      i = (SLen+m2-dif)%SLen;\\n\\n      in1 = (gmegabuf(m1)-gmegabuf(k))/pow(vol_+.03,.8)*1.2;\\n      in2 = (gmegabuf(m2)-gmegabuf(i))/pow(vol_+.03,.8)*1.2;\\n\\n      dec = if (pow(gmegabuf(2000+n),2) + pow(gmegabuf(2000+FLen+n),2)> in1*in1+in2*in2,.8,.94) ;\\n      dec = pow (dec, 30/fps); \\n\\n      gmegabuf(2000+n) =       gmegabuf(2000+n)*dec      +(1-dec)* in1;\\n      gmegabuf(2000+FLen+n) =  gmegabuf(2000+FLen+n)*dec +(1-dec)* in2;\\n      n=n+1;\\n);\\n\\nq1 = (bass+treb+mid)/3;\\nq2 = (bass_att+treb_att+mid_att)/3;\\nq3 = vol_;\\nq11 = sw1;\\nq12 = sw2;\\nq13 = sw3;\\nq14 = sw4;\\n\\nrot = 0; zoom = .98; warp = .3; rot = 0;\\n\\nq32 = aspecty;\\nmonitor = dif;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * clamp (\\n    (q1 - 0.8)\\n  , 0.0, 1.0)) * 0.92);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.xy = uv;\\n  tmpvar_2.z = q2;\\n  vec2 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = ((tmpvar_4 * vec2(-1.0, 1.0)) + 0.5);\\n  ret_1 = (((\\n    (mix (texture (sampler_main, ((tmpvar_4 * 0.98) + 0.5)).xyz, texture (sampler_main, ((\\n      (tmpvar_3 - 0.5)\\n     * 0.98) + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) + ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   + \\n    ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3)\\n  ) + (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)) + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 * texture (sampler_noisevol_hq, (tmpvar_2 - (roam_sin.zyx * roam_cos.ywx))).xyz);\\n  ret_1 = (ret_1 * 2.0);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/269.json":
/*!************************************!*\
  !*** ./presets/converted/269.json ***!
  \************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":0.16,\"decay\":0.96,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":0.037,\"warpscale\":0.015,\"warp\":0.033,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0,\"ob_r\":0.11,\"ob_b\":0.1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0,\"b1ed\":0.3},\"shapes\":[{\"baseVals\":{\"textured\":1,\"rad\":1.79142,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"a\":0,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0\",\"frame_eqs_eel\":\"//krash's beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\nmonitor=flip;\\nq8=flip;\\nq7=0;\\n\\ndecay=0.88;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*flip;\\n\\nq1=mtime*0.4;\\n\\nwarp=0.3\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = normalize((uv_orig - 0.5));\\n  float tmpvar_3;\\n  tmpvar_3 = (time * 7.0);\\n  uv_1 = (mix (uv_orig, uv, vec2((\\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\\n   * 0.3))) + ((\\n    (tmpvar_2 * texsize.zw)\\n   * \\n    cos(((rad * 170.0) - tmpvar_3))\\n  ) * 2.0));\\n  uv_1 = (uv_1 + ((\\n    (vec2(5.0, -5.0) * texsize.zw)\\n   * \\n    cos(((ang * 30.0) - tmpvar_3))\\n  ) * tmpvar_2.yx));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ((texture (sampler_main, uv_1).xyz - 0.004) * 0.83);\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\\n  vec2 tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_blur1, uv);\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (tmpvar_3 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_3.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 + clamp ((\\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_6.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 0.0;\\n  tmpvar_8.xyz = mix ((vec3((\\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  .x)) + (\\n    ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3)\\n  .x)), tmpvar_7, tmpvar_7);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = uv.x;\\n  tmpvar_9.y = (1.0 - uv.y);\\n  ret_1 = (pow (tmpvar_8, (0.5 + \\n    (4.0 * roam_cos)\\n  )).xyz + pow ((texture (sampler_main, tmpvar_9).yyy + texture (sampler_main, \\n    (1.0 - uv)\\n  ).yyy), vec3(0.6, 0.95, 5.0)));\\n  ret_1 = (1.0 - exp((-2.0 * ret_1)));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_1;\\n  ret = tmpvar_10.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/27.json":
/*!***********************************!*\
  !*** ./presets/converted/27.json ***!
  \***********************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":0.16,\"decay\":0.96,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"darken_center\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.012,\"wave_smoothing\":0.9,\"warpanimspeed\":0.01,\"warpscale\":1.47,\"zoomexp\":4.77802,\"zoom\":0.99816,\"warp\":0.01,\"sx\":1.00183,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_size\":0.005,\"ob_a\":0.5,\"ib_size\":0.5,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":3,\"mv_y\":2,\"mv_dx\":0.02,\"mv_dy\":-0.02,\"mv_l\":0.15,\"mv_r\":0.49,\"mv_g\":0.48,\"mv_b\":0.3,\"mv_a\":0,\"b1ed\":0.3},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"r\":0.1,\"b\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"r\":0.2,\"b\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=-yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"g\":0.72,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*1.9)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm*0.9)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"g\":0.7,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*1.9)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=-yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm*0.9)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"decay=.999;\\nwrap=sin(time*10);\\nmv_dx=bass;\\nib_a=.005;\\n\\n\\nvol=(bass+mid+treb)*0.55;\\nvol=vol*vol;\\n\\nmtime=mtime+vol*0.01*(48/fps);\\n\\nq1=mtime*0.5;\\n\\n\\ndt=1/FPS;\\nmytime=mytime+dt;\\ncontvol=min( max(.5, (1-.5*dt)*contvol+.5*dt*(bass+mid+treb)*.133 ) ,2 ) ;\\nq2=contvol;\\nq3=mytime;\\necho_zoom=1+(vol*0.01);\\nsx=-.019-sin(time)*0.1+0.5;\",\"pixel_eqs_eel\":\"zoom=1.005-(rad/100);\\nrot=rad/100;\\n//sy=-1.02;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.85);\\n  ret_1 = (ret_1 - 0.002);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = (tmpvar_5 * 2.5);\\n  uv2_3.y = (tmpvar_6.y + (0.25 * time));\\n  uv2_3.x = (tmpvar_7 + (time / 32.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 2.5);\\n  uv3_2.x = tmpvar_8.x;\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.5 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/286.json":
/*!************************************!*\
  !*** ./presets/converted/286.json ***!
  \************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":0.16,\"decay\":0.96,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.012,\"wave_smoothing\":0.9,\"warpanimspeed\":0.037,\"warpscale\":0.015,\"warp\":0.033,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_size\":0,\"ob_r\":0.11,\"ob_b\":0.1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":3,\"mv_y\":2,\"mv_dx\":0.02,\"mv_dy\":-0.02,\"mv_l\":0.15,\"mv_r\":0.49,\"mv_g\":0.48,\"mv_b\":0.3,\"mv_a\":0,\"b1ed\":0.3},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"r\":0.1,\"b\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"r\":0.2,\"b\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.05*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=-yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"g\":0.72,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*1.9)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm*0.9)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"g\":0.7,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1*sample + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*1.9)*0.5 +0.5;\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\nyq=-yp;\\nzq=zp;\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2.3 - 0.5)*1.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm*0.9)*0.5 - 0.5;\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=-xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0\",\"frame_eqs_eel\":\"decay=0.98;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*(75/fps);\\n\\nq1=mtime*0.4;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = normalize((uv_orig - 0.5));\\n  float tmpvar_3;\\n  tmpvar_3 = (time * 7.0);\\n  uv_1 = (mix (uv_orig, uv, vec2((\\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\\n   * 0.3))) + ((\\n    (tmpvar_2 * texsize.zw)\\n   * \\n    cos(((rad * 170.0) - tmpvar_3))\\n  ) * 2.0));\\n  uv_1 = (uv_1 + ((\\n    (vec2(5.0, -5.0) * texsize.zw)\\n   * \\n    cos(((ang * 30.0) - tmpvar_3))\\n  ) * tmpvar_2.yx));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ((texture (sampler_main, uv_1).xyz - 0.004) * 0.83);\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 3.0));\\n  ret_1 = (ret_1 + ((texture (sampler_blur2, \\n    (((uv - 0.5) * 0.333) + 0.5)\\n  ).xyz * scale2) + bias2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/AdamFX Mashup 2 Martin - reflections on black tile + Raron N Flexi .json":
/*!****************************************************************************************************!*\
  !*** ./presets/converted/AdamFX Mashup 2 Martin - reflections on black tile + Raron N Flexi .json ***!
  \****************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.741,\"wave_smoothing\":0.81,\"modwavealphastart\":0.37,\"modwavealphaend\":1.32,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.8,\"wave_g\":0.59,\"wave_b\":0.5,\"ob_size\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":94,\"rad\":0.26574,\"ang\":2.32478,\"tex_ang\":1.00531,\"tex_zoom\":1.53117,\"r\":0.5,\"g\":1,\"b\":0.9,\"a\":0.03,\"r2\":0.83,\"g2\":0.93,\"b2\":0.8,\"a2\":0.06,\"border_b\":0,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"rad\":1.26458,\"tex_ang\":1.4451,\"tex_zoom\":1.49331,\"r\":0.7,\"g\":0.4,\"a\":0.01,\"r2\":0.7,\"g2\":0.4,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"x\":0.503,\"rad\":0.15648,\"tex_zoom\":0.60986,\"g\":1,\"b\":1,\"a\":0.3,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.54822,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"k1 = (sample*100)%2;\\n\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + 5*xi;\\ny = .5 + 5*yi;\\n\\na = bass_att + mid_att + treb_att;\"},{\"baseVals\":{\"enabled\":1,\"sep\":20,\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":5.90461,\"smoothing\":0,\"a\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\\nx = sample ;\\n\\nval = value1;\\ny = val * (.25-(sample-.5)*(sample-.5)) + .5;\\n\\nr = .6; g = 1; b = 1;\\na=1;\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":0.09987,\"smoothing\":0.4,\"r\":0,\"b\":0,\"a\":0.32,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\\nx = sample;\\nr = .0; b = .0; g = 1; a = .6;\\ny = .5 + value1;\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = int(rand(10001))*.0001;\\nrb = rb + int(rand(10001))*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"}],\"init_eqs_eel\":\"fade = .5;\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265358/2;\\nq27 = index + 1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0;\\nrot = -0.00 * index;\\n\\nfade = fade*dec_med + pow(0.996, 30/fps) * (1-dec_med);\\nq32 = fade;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 zz_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  zz_1 = (((\\n    (uv - vec2(0.5, 0.5))\\n   * texsize.xy) * (0.015 * q27)) * tmpvar_2);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((q32 * texture (sampler_main, \\n    (uv + ((clamp (\\n      (sin(zz_1) / cos(zz_1))\\n    , vec2(-20.0, -20.0), vec2(20.0, 20.0)) * texsize.zw) * 8.0))\\n  ).xyz) + (\\n    (0.03 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy)))\\n  .xyz * \\n    (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  )) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((tmpvar_1.xyz + clamp (\\n    (3.0 * (((texture (sampler_blur1, \\n      (uv - (0.01 * tmpvar_1.xyz).xy)\\n    ).xyz * scale1) + bias1) - vec3(0.1, 0.1, 0.2)))\\n  , 0.0, 1.0)) * 1.3);\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Aderrasi + Geiss - Airhandler (Kali Mix) - Painterly Tendrils Colorfast.json":
/*!********************************************************************************************************!*\
  !*** ./presets/converted/Aderrasi + Geiss - Airhandler (Kali Mix) - Painterly Tendrils Colorfast.json ***!
  \********************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":2.001,\"decay\":0.95,\"echo_zoom\":0.9996,\"wave_mode\":1,\"wrap\":0,\"wave_a\":3.072644,\"wave_scale\":1.285746,\"wave_smoothing\":0,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":0.999513,\"warp\":0.0101,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"ob_a\":0.8,\"ib_size\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\",\"pixel_eqs_eel\":\"zoom = zoom + 0.05*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.5*sin(0.5-rad)*cos(0.02*(0.5-rad)+time);\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.05*(1-rad)*below(rad,0.5);\",\"warp\":\" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = max (texture (sampler_fc_main, uv).xyz, (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.33, 0.33))).xyz * 0.95));\\n  vec2 x_2;\\n  x_2 = (uv - uv_orig);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    mix (tmpvar_1, (floor((\\n      (tmpvar_1 * vec3(7.0, 6.0, 8.0))\\n     + 0.25)) / vec3(7.0, 6.0, 8.0)), vec3(0.1, 0.1, 0.1))\\n   * 0.99) - 0.0025) - ((1.0 - \\n    clamp ((sqrt(dot (x_2, x_2)) * 40.0), 0.0, 1.0)\\n  ) * 0.003));\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = cos((13.5 * uv.y));\\n  tmpvar_1.y = sin((19.5 * uv.x));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_main, (uv + (0.06 * tmpvar_1))).xyz);\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Aderrasi - Airhandler (Last Breath - Calm).json":
/*!***************************************************************************!*\
  !*** ./presets/converted/Aderrasi - Airhandler (Last Breath - Calm).json ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":1.399,\"decay\":1,\"echo_zoom\":1.488267,\"echo_alpha\":0.3,\"wave_mode\":5,\"wrap\":0,\"darken\":1,\"wave_a\":0.690724,\"wave_scale\":4.778029,\"wave_smoothing\":0,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"fshader\":1,\"zoom\":0.999513,\"warp\":0.0101,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"ob_a\":0.1,\"ib_size\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\n\\nwave_x = wave_x + 0.2*sin(0.32*time);\\nwave_y = wave_y + 0.2*cos(0.32*time);\\n\\nob_r = wave_r;\\nob_g = wave_g;\\nob_b = wave_b;\",\"pixel_eqs_eel\":\"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.0095*(sin(10*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Aderrasi - Mother Of Pearl - mash0000 - how to piss off your eyes.json":
/*!**************************************************************************************************!*\
  !*** ./presets/converted/Aderrasi - Mother Of Pearl - mash0000 - how to piss off your eyes.json ***!
  \**************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":0.97,\"echo_zoom\":1.05,\"echo_alpha\":0.2,\"wave_mode\":1,\"wave_brighten\":0,\"wave_a\":100,\"wave_scale\":0.8,\"wave_smoothing\":0,\"wave_mystery\":-0.4,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpscale\":100,\"zoomexp\":0.0228,\"dx\":0.00001,\"dy\":0.00001,\"warp\":0.01,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0.25,\"mv_x\":0,\"mv_y\":0,\"mv_l\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_b = wave_b + 0.7*sin(bass);\\nwave_r = wave_r - 0.8*sin(treb);\\nwave_g = wave_g +0.8*sin(mid);\\nzoom = zoom + 0.008;\\nob_size = ob_size + 0.00*sin(8900*time);\\nzoomexp = zoomexp + if (above(bass,1), 0.025, 0.099);\\nrot = rot + if (above(bass,1), +0.01, -0.01);\\nwarp = warp + if(above(treb,1), +0.5, -0.5);\\ndy = dy + if(above(mid,1.5), +0.01, -0.0025);\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_2.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_1.y = texture (sampler_fw_main, (uv + (tmpvar_2 * 0.005))).y;\\n  ret_1 = (ret_1 + ((\\n    (ret_1 - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   * 0.3) - 0.05));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Aderrasi - Songflower (Moss Posy).json":
/*!******************************************************************!*\
  !*** ./presets/converted/Aderrasi - Songflower (Moss Posy).json ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":1,\"echo_orient\":1,\"wave_mode\":5,\"wave_brighten\":0,\"wave_a\":0.001,\"wave_scale\":1.447722,\"wave_smoothing\":0.5,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"fshader\":1,\"dx\":0.00001,\"dy\":0.00001,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.015,\"ob_a\":1,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"leafset = 3;\",\"frame_eqs_eel\":\"wave_r = 0.5 + 0.5*sin(1.6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\npfthresh = above(bass_att,pfthresh)*3+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\\npfdx_r = equal(pfthresh,3)*0.015*sin(5*time)+(1-equal(pfthresh,3))*pfdx_r;\\npfdy_r = equal(pfthresh,3)*0.015*sin(6*time)+(1-equal(pfthresh,3))*pfdy_r;\\nq1 = wave_r;\\nq2 = wave_g;\\nq3 = wave_b;\\n\\nob_r = 1-abs(q1)*0.75;\\nob_g = 1-abs(q2)*0.75;\\nob_b = 1-abs(q3)*0.75;\\necho_zoom = echo_zoom + min(max(0.75,50*pfdx_r),1);\\n\\necho_orient = echo_orient + 16*pfdy_r;\\n\\ndx = dx + 15.1*pfdx_r;\\ndy = dy + 15.1*pfdy_r;\\nob_size = ob_size + 0.005*bass_att;\\nib_a = ib_a - min(0.5,0.5-abs(dx+dy));\",\"pixel_eqs_eel\":\"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nladder = abs(sin(1*time));\\nleaf = 5*below(ladder,0.2) + 8*above(ladder,0.2)*below(ladder,0.4) +\\n12*above(ladder,0.4)*below(ladder,0.6) + 18*above(ladder,0.6)*below(ladder,0.8) +\\n24*above(ladder,0.8);\\nleafset = if(equal(thresh,2), leaf, leafset);\\n\\nzoom = zoom + 0.05*(0.75-cos(leafset*rad))*(1-rad);\\nzoom = zoom - abs(0.05*(0.75-cos(4*rad)));\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Aderrasi - Veil of Steel (Steel Storm) - mash0000 - bob ross finally loses it.json":
/*!**************************************************************************************************************!*\
  !*** ./presets/converted/Aderrasi - Veil of Steel (Steel Storm) - mash0000 - bob ross finally loses it.json ***!
  \**************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.95,\"echo_zoom\":1,\"echo_alpha\":0.5,\"wave_mode\":5,\"wave_brighten\":0,\"wave_a\":100,\"wave_scale\":5.83,\"wave_smoothing\":0.5,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"dx\":0.00001,\"dy\":0.00001,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0.005,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\nob_r = 1-abs(wave_r);\\nob_g = 1-abs(wave_g);\\nob_b = 1-abs(wave_b);\\nib_g = 1-abs(wava_r);\\nib_b = 1-abs(wave_g);\\nib_r = 1-abs(wave_b);\",\"pixel_eqs_eel\":\"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\ndx = dx + 12*dx_r*abs(0.1*tan((1.03*time)-rad))*(1-rad);\\ndy = dy + 12*dy_r*abs(0.1*tan((1.03*time)-rad))*(1-rad);\\n\\nzoom = zoom - 12*dx_r*abs(0.1*tan((1.12*time)-rad));\\nrot = rot +  12*dy_r*(0.1*tan((1.4*time)-rad));\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Cope - Passage (mandala mix).json":
/*!*************************************************************!*\
  !*** ./presets/converted/Cope - Passage (mandala mix).json ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.49,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken_center\":1,\"brighten\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.319,\"wave_smoothing\":0.9,\"wave_mystery\":-0.2,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":2.669,\"zoomexp\":0.9995,\"zoom\":0.9998,\"rot\":-0.0001,\"warp\":0.01,\"sy\":1.0002,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.05,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":54,\"num_inst\":25,\"rad\":0.01,\"tex_zoom\":7.0985,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.1,\"border_g\":0.1,\"border_b\":0.1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\nrad=q1*0.02;\\nx = x+(0.13*q3)*sin((instance*1.4));\\ny = y+(0.13*q4)*cos((instance*1.4));\\n\\nr=1-q6;\\ng=1-q7;\\nb=1-q8;\\nr2=r;\\ng2=g;\\nb2=b;\"},{\"baseVals\":{\"sides\":54,\"rad\":0.01917,\"tex_zoom\":7.0985,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.1,\"border_g\":0.1,\"border_b\":0.1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"rad=0;\\nrad=q1*0.02;\\nx = x-(0.11*q3)*sin(-time);\\ny = y+(0.11*q4)*cos(time);\\nr=1-q6;\\ng=1-q7;\\nb=1-q8;\\nr2=r;\\ng2=g;\\nb2=b;\\n\"},{\"baseVals\":{\"enabled\":1,\"sides\":54,\"textured\":1,\"rad\":0.46287,\"tex_ang\":1.88494,\"tex_zoom\":1.28197,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.1,\"border_g\":0.1,\"border_b\":0.1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//rad=0;\\n//rad=q1*0.02;\\n//x = x-(0.11*q3)*sin(-time);\\n//y = y-(0.11*q4)*cos(-time);\\n\\n//tex_ang = tex_ang + 6.28*sin(q2*0.1);\"},{\"baseVals\":{\"sides\":54,\"rad\":0.43866,\"tex_ang\":2.5132,\"tex_zoom\":1.5957,\"r\":0,\"a\":0.15,\"g2\":0,\"a2\":0.1,\"border_r\":0.1,\"border_g\":0.1,\"border_b\":0.1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\n//rad=rad+q1*0.02;\\n//x = x-(0.11*q3)*sin(-time);\\n//y = y+(0.11*q4)*cos(-time);\\n\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"additive\":1,\"r\":0.2,\"g\":0.7,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.6*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = wave_b + 0.6*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = wave_g + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\\nq1=vol;\\nmtime=mtime+vol*0.01;\\nq2=mtime*0.25;\\n\\nsy=sy+vol*0.02;\\nsx=sy;\\n\\nrot = rot + 0.01*sin(time*0.05);\\nmonitor=rot;\\nq3=aspectx;\\nq4=aspecty;\\nwarp=0;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + clamp ((\\n    (tmpvar_2.yzx - tmpvar_2.zxy)\\n   - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 0.1)\\n  ), 0.0, 1.0));\\n  ret_1 = (ret_1 * 0.99);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = -(uv.x);\\n  tmpvar_2.y = uv.y;\\n  ret_1 = (texture (sampler_main, uv).xyz + texture (sampler_main, tmpvar_2).xyz);\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = q8;\\n  tmpvar_3.y = q7;\\n  tmpvar_3.z = q6;\\n  ret_1 = (1.0 - mix (ret_1, (ret_1 * tmpvar_3), vec3(rad)));\\n  ret_1 = (ret_1 * 1.49);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/DemonLD_-_Toxic_water_diffusion threx angela vs debi brown (nice).json":
/*!**************************************************************************************************!*\
  !*** ./presets/converted/DemonLD_-_Toxic_water_diffusion threx angela vs debi brown (nice).json ***!
  \**************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.994,\"decay\":0.97,\"wrap\":0,\"wave_a\":100,\"wave_scale\":0.312,\"wave_smoothing\":0.45,\"wave_mystery\":-0.5,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":2.853,\"zoom\":1.064,\"warp\":0,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"mv_x\":12.8,\"mv_l\":5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"additive\":1,\"thickoutline\":1,\"num_inst\":33,\"r\":0,\"g\":0.5,\"g2\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"num_inst\":7,\"rad\":0.03333,\"r\":0,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = int(rand(100))*.01+instance-instance;\\ny = int(rand(100))*.01+instance-instance;\\n\\na =1;\\nvol=bass+mid+treb;\\nrad = int(rand(int(vol)))/7+instance-instance;\"},{\"baseVals\":{\"enabled\":1,\"sides\":3,\"thickoutline\":1,\"textured\":1,\"num_inst\":311,\"rad\":0.01,\"tex_ang\":0.62832,\"r\":0,\"g2\":0,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\nwave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\nq30=bass+treb+mid;\",\"pixel_eqs_eel\":\"zoom = zoom + (x*2-1)*(0.08+0.15*sin(time*0.321)) + (y*2-1)*(0.08+0.15*cos(time*0.321));\\nsx=sx-(zoom-1)*0.1;\\nsy=sy-(zoom-1)*0.1;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_3.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_3.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_3.z * 0.5));\\n  };\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 956.0) * 112.0));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 uv2_2;\\n  float crisp_3;\\n  vec3 ret_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  ret_4 = tmpvar_5.xyz;\\n  uv2_2 = (((uv - 0.5) * 0.4) + 0.5);\\n  uv_1 = (uv * 1.3);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_2.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_5.x > (q26 * q13)) && (tmpvar_5.x <= (q23 * q11)))) {\\n    ret_4.z = (tmpvar_5.z - (tmpvar_6.x * 0.5));\\n  };\\n  if (((tmpvar_5.y > (q25 * q11)) && (tmpvar_5.y <= (q22 * q12)))) {\\n    ret_4.x = (tmpvar_5.x - (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_4.z > (q24 * q12)) && (ret_4.z <= (q21 * q13)))) {\\n    ret_4.y = (tmpvar_5.y - (tmpvar_6.z * 0.5));\\n  };\\n  crisp_3 = texture (sampler_main, uv2_2).y;\\n  ret_4 = (ret_4 * (1.0 - (\\n    ((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1)\\n  .y * 1.15)));\\n  uv2_2 = uv_1;\\n  ret_4 = (0.7 - max (ret_4, vec3(crisp_3)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_4;\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/EVET + Flexi - Rainbox Splash Poolz.json":
/*!********************************************************************!*\
  !*** ./presets/converted/EVET + Flexi - Rainbox Splash Poolz.json ***!
  \********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"wave_thick\":1,\"wave_brighten\":0,\"wave_a\":0.004,\"wave_scale\":0.01,\"wave_smoothing\":0,\"wave_mystery\":-0.44,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpanimspeed\":0.01,\"warpscale\":100,\"zoomexp\":0.24298,\"zoom\":0.9901,\"warp\":0.01,\"wave_y\":0.04,\"ob_size\":0,\"ob_g\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"thickoutline\":1,\"rad\":0.01,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"r\":0.05,\"a\":0.1,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"textured\":1,\"rad\":0.80013,\"ang\":4.64954,\"tex_zoom\":1.24471,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":0.77,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"thickoutline\":1,\"x\":1,\"rad\":3.0054,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"r\":0,\"g\":1,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"thickoutline\":1,\"x\":1,\"rad\":0.39872,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"scaling\":2.44415,\"smoothing\":0,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;\",\"point_eqs_eel\":\"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0.;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0.;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;\"},{\"baseVals\":{\"scaling\":2.44415,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\",\"point_eqs_eel\":\"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"scaling\":100,\"smoothing\":0.6,\"r\":0,\"g\":0.4,\"a\":0.3,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;\"},{\"baseVals\":{\"usedots\":1,\"scaling\":2.44415,\"smoothing\":0,\"r\":0,\"g\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\",\"point_eqs_eel\":\"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;\"}],\"init_eqs_eel\":\"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;\",\"frame_eqs_eel\":\"zoom =1;// 0.999;\\nwarp = 0;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.02 * aspect.zw);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.01));\\n  ret_2.y = texture (sampler_pc_main, (tmpvar_9 - floor(tmpvar_9))).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - tmpvar_6.y)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_5.z;\\n  tmpvar_11.y = -(tmpvar_4.z);\\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.01));\\n  ret_2.x = texture (sampler_pc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (ret_2.x - tmpvar_6.x)\\n   * 0.02) + 0.005));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.y;\\n  tmpvar_13.y = -(tmpvar_4.y);\\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.01));\\n  ret_2.z = texture (sampler_pc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((\\n    (ret_2.z - tmpvar_6.z)\\n   * 0.02) + 0.005));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_2;\\n  ret = tmpvar_14.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((tmpvar_1.xyz * tmpvar_1.xyz) * tmpvar_1.xyz);\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/EVET - RGB Singularity.json":
/*!*******************************************************!*\
  !*** ./presets/converted/EVET - RGB Singularity.json ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_orient\":1,\"wave_brighten\":0,\"brighten\":1,\"wave_a\":0.001,\"wave_scale\":5.715,\"wave_smoothing\":0.9,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpanimspeed\":2.289,\"warpscale\":5.472,\"zoomexp\":0.01,\"zoom\":0.9901,\"warp\":1.8566,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0,\"ib_r\":1,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"textured\":1,\"x\":0.72,\"y\":0.7,\"ang\":3.58141,\"tex_zoom\":8.751,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"enabled\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"scaling\":2.44415,\"smoothing\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\",\"frame_eqs_eel\":\"t1 = 0;\\nv = 0.01;\\nj = j + (bass_att)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.95 + 5*(treb_att+mid_att+bass_att)/fps;\\nt5 = -k;\\n\",\"point_eqs_eel\":\"sample=sample+0.5;\\ns8 = sample*512;\\ndir = s8*0.125*3.1415*0.5;\\nv = 0.0005;\\nt1 = 0;//t1*0.97 + value1*v;\\nd = 1;\\nxx = sin(dir+10*time)*(sample*d+t1);\\nyy = cos(dir+10*time)*(sample*d+t1);\\nzz = t1*(1-sample);\\nv = 0.001;\\n\\nw = (sample*sin(time*0.3)*0.02-1);\\ns1 = sin(sin(t2*w));\\ns2 = sin(sin(t3*w));\\ns3 = sin(sin(t4*w));\\nc1 = cos(sin(t2*w));\\nc2 = cos(sin(t3*w));\\nc3 = cos(sin(t4*w));\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 1.35;\\nzoom = 0.35*(1/(z+a));\\nx = 0.5 + zoom*x1 + sin(value1*10000000)*0.001;\\ny = 0.5 + zoom*y1 + cos(value2*10000000)*0.001;\\n\\npi3 = 3.1415*2*0.3333;\\nt = t5+sample*10;\\nc = 2/(z+1);\\nr = sin(t)*c;\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\n\\ng = sin(t+pi3)*c;\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\n\\nb = sin(t-pi3)*c;\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\"},{\"baseVals\":{\"enabled\":1,\"scaling\":2.44415,\"smoothing\":0,\"a\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\",\"frame_eqs_eel\":\"t1 = 0;\\nv = 0.01;\\nj = j + (bass_att)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.95 + 5*(treb_att+mid_att+bass_att)/fps;\\nt5 = -k;\\n\",\"point_eqs_eel\":\"s8 = sample*512;\\ndir = s8*0.125*3.1415*0.5;\\nv = 0.0005;\\nt1 = 0;//t1*0.97 + value1*v;\\nd = 1;\\nxx = sin(dir+10*time)*(sample*d+t1);\\nyy = cos(dir+10*time)*(sample*d+t1);\\nzz = t1*(1-sample);\\nv = 0.001;\\n\\nw = (sample*sin(time*0.3)*0.02-1);\\ns1 = sin(sin(t2*w));\\ns2 = sin(sin(t3*w));\\ns3 = sin(sin(t4*w));\\nc1 = cos(sin(t2*w));\\nc2 = cos(sin(t3*w));\\nc3 = cos(sin(t4*w));\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 1.35;\\nzoom = 0.35*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\na=0.2;\\npi3 = 3.1415*2*0.3333;\\nt = t5+sample*10;\\nc = 2/(z+1);\\nr = sin(t)*c;\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\n\\ng = sin(t+pi3)*c;\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\n\\nb = sin(t-pi3)*c;\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_a = 0;\\nq1 =aspectx;\\nq2 = aspecty;\\n\\n\\nb = b + bass*bass*0.85;\\nm = m + mid*mid*0.85;\\nt = t + treb*treb*0.85;\\n\\nq3 = b*0.012;\\nq4 = m*0.012;\\nq5 = t*0.012;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.y;\\n  tmpvar_6.y = tmpvar_5.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 6.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - ((tmpvar_8 * texsize.zw) * 2.0));\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_main, uv_orig);\\n  ret_1.y = (((\\n    (texture (sampler_main, tmpvar_7).y - (((\\n      (tmpvar_10.xyz * scale1)\\n     + bias1).y - texture (sampler_main, tmpvar_7).y) * 0.024))\\n   - 0.01) + (\\n    (1.0 - tmpvar_11.x)\\n   * 0.014)) + (tmpvar_2 * 0.01)).x;\\n  ret_1.z = (((texture (sampler_main, tmpvar_9).z - \\n    ((((tmpvar_10.xyz * scale1) + bias1).z - texture (sampler_main, tmpvar_9).z) * 0.024)\\n  ) - 0.01) + (tmpvar_11.x * 0.014));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.4) + (tmpvar_2 * 0.004)).x);\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Eo.S. + flexi - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b + illumination (Stahl′s Mix).json":
/*!****************************************************************************************************************************************************!*\
  !*** ./presets/converted/Eo.S. + flexi - glowsticks v2 05 and proton lights (+Krash′s beat code) _Phat_remix02b + illumination (Stahl′s Mix).json ***!
  \****************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.21,\"decay\":0.96,\"echo_zoom\":0.997,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"brighten\":1,\"invert\":1,\"wave_a\":0.001,\"wave_scale\":0.012,\"wave_smoothing\":0.9,\"warpanimspeed\":0.037,\"warpscale\":0.015,\"zoomexp\":1.64463,\"warp\":0.033,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_size\":0.035,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":0,\"mv_y\":43.2,\"mv_l\":1,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":1.06779,\"ang\":0.75398,\"tex_zoom\":0.77977,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":5,\"additive\":1,\"rad\":0.03809,\"g\":1,\"b\":1,\"g2\":0.6,\"b2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"r\":0.1,\"b\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);\"},{\"baseVals\":{\"enabled\":1,\"r\":0.2,\"b\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"g\":0.6,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\n\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"g\":0.3,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0\",\"frame_eqs_eel\":\"//krash's beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\n//monitor=flip;\\nq8=flip;\\n\\n\\ndecay=1;\\nzoom=1.005;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1;\\nmtime2= mtime2+vol*0.1*flip*(55/fps);\\n\\nq1=mtime2*0.4;\\nq2=mtime*.4;\\n\\n\\nwarp=0.0;\\n//volume = 0.3*(bass+mid+att);\\n\\nq31 = .5 + .5*sin(0.05*mtime);\\nq32 = .5 + .5*cos(0.05*mtime);\\nq30 = .8+.4*sin(0.033245*mtime);\\nq29 = .8+.4*sin(0.0227*mtime);\\nq28 = .8+.4*sin(0.0435*mtime);\\n\\nob_r = .33*q30;\\nob_g = .33*q29;\\nob_b = .33*q28;\",\"pixel_eqs_eel\":\"//tm=time+(sin(time)*rad);\\nvar=tan(q2)*treb_att*treb_att;\\n//monitor = var;\\nzoom=1+(rad/40)+(var/40);\\nrot=((rad/100)*var)*sin(q2);\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (max (texture (sampler_main, uv).xyz, texture (sampler_main, (vec2(1.0, 1.0) - uv)).xyz) * 0.98);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 plastic_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q31;\\n  tmpvar_5.y = q32;\\n  vec3 tmpvar_6;\\n  tmpvar_6.x = (4.0 * q30);\\n  tmpvar_6.y = (4.0 * q29);\\n  tmpvar_6.z = (4.0 * q28);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.x;\\n  tmpvar_7.y = tmpvar_4.x;\\n  vec2 x_8;\\n  x_8 = ((uv - (tmpvar_7 * 4.0)) - tmpvar_5);\\n  plastic_1.x = (tmpvar_6.x / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_8, x_8)), 0.5)\\n  )));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec2 x_10;\\n  x_10 = ((uv - (tmpvar_9 * 4.0)) - tmpvar_5);\\n  plastic_1.y = (tmpvar_6.y / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_10, x_10)), 0.5)\\n  )));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.z;\\n  tmpvar_11.y = tmpvar_4.z;\\n  vec2 x_12;\\n  x_12 = ((uv - (tmpvar_11 * 4.0)) - tmpvar_5);\\n  plastic_1.z = (tmpvar_6.z / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_12, x_12)), 0.5)\\n  )));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (plastic_1 * texture (sampler_main, uv).xyz);\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Eo.S. - glowsticks v2 03 music.json":
/*!***************************************************************!*\
  !*** ./presets/converted/Eo.S. - glowsticks v2 03 music.json ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.96,\"echo_zoom\":1.006596,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.011726,\"wave_smoothing\":0.9,\"warpanimspeed\":0.037492,\"warpscale\":0.014889,\"warp\":0.033004,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_size\":0,\"ob_r\":0.11,\"ob_b\":0.1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":3,\"mv_y\":2,\"mv_dx\":0.02,\"mv_dy\":-0.02,\"mv_l\":0.15,\"mv_r\":0.49,\"mv_g\":0.48,\"mv_b\":0.300001,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":5,\"textured\":1,\"rad\":1.06779,\"ang\":0.753982,\"tex_zoom\":0.779769,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0.1,\"b\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(-time+1.1)*0.5+0.5;\\nt5=sin(-time+3.1)*0.5+0.5;\\nt6=sin(-time+5.2)*0.5+0.5;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0.2,\"b\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(-time+1.1)*0.5+0.5;\\nt5=sin(-time+3.1)*0.5+0.5;\\nt6=sin(-time+5.2)*0.5+0.5;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"g\":0.6,\"b\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"g\":0.3,\"b\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0\",\"frame_eqs_eel\":\"decay=0.98;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*(75/fps);\\n\\nq1=mtime*0.4;\",\"pixel_eqs_eel\":\"\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/EoS - particle storm B - couldn't not.json":
/*!**********************************************************************!*\
  !*** ./presets/converted/EoS - particle storm B - couldn't not.json ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"decay\":0.96,\"echo_zoom\":1.007,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.012,\"wave_smoothing\":0.9,\"warpanimspeed\":0.01,\"warpscale\":0.01,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_size\":0,\"ob_r\":0.11,\"ob_b\":0.1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":31.2,\"mv_y\":2.28,\"mv_l\":2.5,\"mv_b\":0.8,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":1.08925,\"tex_zoom\":0.93272,\"g\":1,\"b\":1,\"a\":0.8,\"r2\":1,\"b2\":0.85,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang=sin(time*0.3)*0.01\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=0.5;\\nt2=0.5;\\nscalar=sin(time*0.3)*5;\\nt3=scalar\",\"point_eqs_eel\":\"x=t1;\\ny=t2;\\nn=sample*6.283;\\ntimeA=time*0.3+t3;\\ntimeB=time*0.1+t3;\\n\\nxm=sin(n*3)*sin(n*5.7+timeB)*sin(n*11.5+timeB)*sin(n*31);\\nym=sin(n*3.5)*sin(n*1.1)*sin(n*23+timeB)*sin(n*13.3+timeB);\\n\\nx=x+ xm*0.1;\\ny=y+ ym*0.1;\\nt1=x;\\nt2=y;\\n\\nr=tan(n)*0.5+0.5;\\nr=min(r,1)*above(r,0);\\ng=tan(n+2.1)*0.5+0.5;\\ng=min(g,1)*above(g,0);\\nb=tan(n+4.2)*0.5+0.5;\\nb=min(b,1)*above(b,0);\\n\\na=q8\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=0.5;\\nt2=0.5;\\ndelay=1- abs(sin(time*0.3)) ;\\nscalar=sin(time*0.3)*5+ 0.10*delay;\\nt3=scalar\",\"point_eqs_eel\":\"x=t1;\\ny=t2;\\nn=sample*6.283;\\ntimeA=time*0.3+t3 ;\\ntimeB=time*0.1+t3 ;\\n\\nxm=sin(n*3)*sin(n*5.7+timeB)*sin(n*11.5+timeB)*sin(n*31);\\nym=sin(n*3.5)*sin(n*1.1)*sin(n*23+timeB)*sin(n*13.3+timeB);\\n\\nx=x+ xm*0.1;\\ny=y+ ym*0.1;\\nt1=x;\\nt2=y;\\n\\nr=tan(n)*0.5+0.5;\\nr=min(r,1)*above(r,0);\\ng=tan(n+2.1)*0.5+0.5;\\ng=min(g,1)*above(g,0);\\nb=tan(n+4.2)*0.5+0.5;\\nb=min(b,1)*above(b,0);\\na=q8\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=0.5;\\nt2=0.5;\\ndelay=1- abs(sin(time*0.3)) ;\\nscalar=sin(time*0.3)*5+ 0.20*delay;\\nt3=scalar\",\"point_eqs_eel\":\"x=t1;\\ny=t2;\\nn=sample*6.283;\\ntimeA=time*0.3+t3 ;\\ntimeB=time*0.1+t3 ;\\n\\nxm=sin(n*3)*sin(n*5.7+timeB)*sin(n*11.5+timeB)*sin(n*31);\\nym=sin(n*3.5)*sin(n*1.1)*sin(n*23+timeB)*sin(n*13.3+timeB);\\n\\nx=x+ xm*0.1;\\ny=y+ ym*0.1;\\nt1=x;\\nt2=y;\\n\\nr=tan(n)*0.5+0.5;\\nr=min(r,1)*above(r,0);\\ng=tan(n+2.1)*0.5+0.5;\\ng=min(g,1)*above(g,0);\\nb=tan(n+4.2)*0.5+0.5;\\nb=min(b,1)*above(b,0);\\na=q8\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=0.5;\\nt2=0.5;\\ndelay=1- abs(sin(time*0.3)) ;\\nscalar=sin(time*0.3)*5+ 0.30*delay;\\nt3=scalar\",\"point_eqs_eel\":\"x=t1;\\ny=t2;\\nn=sample*6.283;\\ntimeA=time*0.3+t3 ;\\ntimeB=time*0.1+t3 ;\\n\\nxm=sin(n*3)*sin(n*5.7+timeB)*sin(n*11.5+timeB)*sin(n*31);\\nym=sin(n*3.5)*sin(n*1.1)*sin(n*23+timeB)*sin(n*13.3+timeB);\\n\\nx=x+ xm*0.1;\\ny=y+ ym*0.1;\\nt1=x;\\nt2=y;\\n\\nr=tan(n)*0.5+0.5;\\nr=min(r,1)*above(r,0);\\ng=tan(n+2.1)*0.5+0.5;\\ng=min(g,1)*above(g,0);\\nb=tan(n+4.2)*0.5+0.5;\\nb=min(b,1)*above(b,0);\\na=q8\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0\",\"frame_eqs_eel\":\"decay=0.98;\\nzoom=1.001;\\nwarp=0.03;\\nvol=(bass+mid+treb)*0.3;\\nvol=vol*vol*0.6;\\nq8=vol\",\"pixel_eqs_eel\":\"ring=sin(rad*3.14+0.3)*2 -1;\\nring=max(ring,0);\\nring=ring*ring;\\nzoom=1 + rad*4*0.001;\\n//sx=1+ring*0.3;\\n//sy=1-ring*0.3\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.3, 0.3));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 3.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 9.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\\n  ret_2 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = pow (ret_2, vec3(0.5, 0.5, 0.5));\\n  ret_2 = tmpvar_9;\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = tmpvar_9;\\n  ret = tmpvar_10.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/EoS_Phat Dark_heart_nobal_cause cpe ap4+.json":
/*!*************************************************************************!*\
  !*** ./presets/converted/EoS_Phat Dark_heart_nobal_cause cpe ap4+.json ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"wave_a\":0.001,\"wave_scale\":0.012,\"wave_smoothing\":0.9,\"warpanimspeed\":0.01,\"warpscale\":0.12,\"warp\":0.08081,\"sx\":1.07213,\"sy\":1.07213,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_size\":0.015,\"ob_b\":0.2,\"ob_a\":1,\"ib_size\":0.005,\"ib_r\":1,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":24.16,\"mv_y\":48,\"mv_l\":0.05,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q8=1.5\",\"point_eqs_eel\":\"masterspeed=30;\\n\\ntm=time*masterspeed*0.1;\\nperspective=0.7;\\n\\n\\n//plot x,y shape at z=0\\nsmp=sample*6.283;\\n\\npinch=sin(smp*6 + 1.5)*0.3 + 0.7;\\n\\nxp=sin(smp )*0.65;\\nxp=xp*pinch;\\nyp=cos(smp )*0.65;\\nyp=yp*pinch;\\nzp=0;\\n\\n\\n//rotate on y axis;\\nangy=q1*10 + sample*0;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(time*0.9) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(time*0.45)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=xs+0.5;\\ny=ys+0.5;\\n\\ndark=1 - (cos(smp*6 + 1.5)*0.5 + 0.5);\\nr=1.00*dark;\\ng=0.32*dark;\\nb=0.26*dark;\\n\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"masterspeed=30;\\n\\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\\nperspective=0.7;\\n\\n//plot x,y,z to point on sphere\\nsmp=sample*6.283;\\n\\npinch=cos(smp*6 + 0)*0.3 + 0.7;\\n\\nxp=sin(smp )*0.65;\\nxp=xp*pinch;\\nyp=cos(smp )*0.65;\\nyp=yp*pinch;\\nzp=0;\\n\\n\\n\\n//rotate on y axis;\\nangy=time*33;\\nangy=q1*10 + sample*0;\\nangy=angy+1.5;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(time*0.9) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(time*0.45)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=xs+0.5;\\ny=ys+0.5;\\n\\ndark=1 - (cos(smp*6 + q8)*0.5 + 0.5);\\nr=1.00*dark;\\ng=0.22*dark;\\nb=(0.16+(bass*0.1))*dark;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q8=1.5\",\"point_eqs_eel\":\"masterspeed=30;\\n\\ntm=time*masterspeed*0.1;\\nperspective=0.7;\\n\\n\\n//plot x,y shape at z=0\\nsmp=sample*6.283;\\n\\npinch=sin(smp*6 + 1.5)*0.3 + 0.7;\\n\\nxp=sin(smp )*0.65;\\nxp=xp*pinch;\\nyp=cos(smp )*0.65;\\nyp=yp*pinch;\\nzp=0;\\n\\n\\n//rotate on y axis;\\nangy=q1*10 + sample*0;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(time*0.9) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(time*0.45)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=(-1*xs)+0.5;\\ny=ys+0.5;\\n\\ndark=1 - (cos(smp*6 + 1.5)*0.5 + 0.5);\\nr=1.00*dark;\\ng=0.32*dark;\\nb=0.36*dark;\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"masterspeed=30;\\n\\ntm=time*masterspeed*0.1;// + t1*0.002*masterspeed;\\nperspective=0.7;\\n\\n//plot x,y,z to point on sphere\\nsmp=sample*6.283;\\n\\npinch=cos(smp*6 + 0)*0.3 + 0.7;\\n\\nxp=sin(smp )*0.65;\\nxp=xp*pinch;\\nyp=cos(smp )*0.65;\\nyp=yp*pinch;\\nzp=0;\\n\\n\\n\\n//rotate on y axis;\\nangy=time*33;\\nangy=q1*10 + sample*0;\\nangy=angy+1.5;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(time*0.9) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(time*0.45)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=-xs+0.5;\\ny=ys+0.5;\\n\\ndark=1 - (cos(smp*6 + q8)*0.5 + 0.5);\\nr=0.82*dark;\\ng=0.02*dark;\\nb=0.26*dark;\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0\",\"frame_eqs_eel\":\"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq1=.4+sin(atime*.006        )*.4;\\nq2=.4+cos(atime*.00613828348)*.4;\\nq3=.4+sin(atime*.00598593455)*.4;\\nmonitor=q3;\\n\\ndecay=.997;\\n//zoom=1.008;\\nms=sin(time*0.6)*0.15;\\nmss=mss+ms*0.001;\\nq1=ms;\\n\\n\\n//rot=sin(time)*0.01;\\n\\n//echo_zoom=1 + ( sin(time*0.6)*0.5+0.5 )*3;\\ndx=0;dy=0\",\"pixel_eqs_eel\":\"it = 0.3*bass_att;\\nradm = rad*500;\\nrot = 0.02*atan((radm+it)*30)/((rad+0.1)*(bass_att*500));\\nvar=4+(bass_att*4);\\nmod = cos(ang*var)+(bass_att*2);\\nmod = mod*rad;\\nzoom = .95 - abs(0.02*mod)+(bass_att*0.01);\",\"warp\":\" shader_body { \\n  vec3 noise3_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (0.5 + ((\\n    (uv - vec2(0.0, 1.0))\\n   - 0.5) * (1.0 + \\n    (tmpvar_3.y * 0.03)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (tmpvar_4.x + pow (tmpvar_3.x, 0.0));\\n  tmpvar_5.y = (tmpvar_4.y + pow (tmpvar_3.x, 0.005));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = fract(tmpvar_5);\\n  noise3_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\\n    (q3 * 0.5)\\n  ))));\\n  noise3_1 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, tmpvar_6);\\n  vec3 tmpvar_9;\\n  tmpvar_9.x = q10;\\n  tmpvar_9.y = q11;\\n  tmpvar_9.z = q12;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (tmpvar_7, tmpvar_9, tmpvar_8.xxx);\\n  ret_2 = (tmpvar_8.xyz + clamp ((\\n    (tmpvar_8.yzx * tmpvar_10.zxy)\\n   - \\n    (tmpvar_8.zxy * tmpvar_10.yzx)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_6.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q3)) && (ret_2.x <= (q24 * q1)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_11.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q1)) && (ret_2.y <= (q25 * q2)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_11.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q2)) && (ret_2.z <= (q26 * q3)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_11.z * 0.5));\\n  };\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }\",\"comp\":\" shader_body { \\n  float diff_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(uv);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\\n  vec2 x_5;\\n  x_5 = (tmpvar_4.xy - ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).xy);\\n  vec2 x_6;\\n  x_6 = (tmpvar_4.xy - ((texture (sampler_blur2, tmpvar_3).xyz * scale2) + bias2).xy);\\n  diff_1 = ((1.0 - (\\n    sqrt(dot (x_5, x_5))\\n   * 3.5)) * (1.0 - sqrt(\\n    dot (x_6, x_6)\\n  )));\\n  ret_2.xy = (tmpvar_4.xy * diff_1);\\n  ret_2.z = pow (diff_1, (1.0/((1.0 - uv.y))));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q3)) && (ret_2.x <= (q23 * q1)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_7.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q1)) && (ret_2.y <= (q22 * q2)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_7.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q2)) && (ret_2.z <= (q21 * q3)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_7.z * 0.5));\\n  };\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi + Geiss - Tokamak mindblob 2.0.json":
/*!*********************************************************************!*\
  !*** ./presets/converted/Flexi + Geiss - Tokamak mindblob 2.0.json ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_orient\":2,\"wave_mode\":1,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.004,\"wave_scale\":0.01,\"wave_smoothing\":0,\"wave_mystery\":-0.44,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpscale\":1.331,\"zoom\":1.004,\"warp\":0.19788,\"sx\":0.99967,\"sy\":0.9999,\"wave_y\":0.04,\"ob_size\":0,\"ob_r\":1,\"ob_a\":0.7,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":1,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"thickoutline\":1,\"rad\":0.04043,\"tex_zoom\":0.73458,\"r\":0,\"a\":0.1,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.7,\"y\":0.3,\"rad\":0.6623,\"ang\":2.45044,\"tex_zoom\":0.74934,\"g\":0.1,\"b\":0.1,\"r2\":1,\"g2\":0.1,\"b2\":0.1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"xx = 0.5;\\nyy = 0.4;\",\"frame_eqs_eel\":\"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.43,\"y\":0.6,\"rad\":1.16781,\"ang\":5.96903,\"tex_zoom\":0.67165,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"xx = 0.5;\\nyy = 0.4;\",\"frame_eqs_eel\":\"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"y\":0.75,\"rad\":0.07059,\"tex_zoom\":0.73458,\"g\":0.5,\"b\":0.5,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"x = q1;\\ny = q5;\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"scaling\":2.44415,\"smoothing\":0,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;\",\"point_eqs_eel\":\"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;\"},{\"baseVals\":{\"scaling\":7.7518,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;\",\"point_eqs_eel\":\"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":5.92556,\"smoothing\":0,\"g\":0,\"b\":0,\"a\":0.66,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\"},{\"baseVals\":{\"thick\":1,\"scaling\":5.92556,\"smoothing\":0,\"r\":0.65,\"g\":0.45,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );\",\"pixel_eqs_eel\":\"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = -0.2*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5)*aspectx;\\ndy = mult*cos(ang2*2-1.5)*aspecty;\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - q4);\\n  tmpvar_2.y = q8;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 + ((uv - tmpvar_2) * 0.992));\\n  ret_1 = (mix (mix (vec3(0.0, 0.0, 0.2), vec3(0.3, 0.0, 1.0), texture (sampler_fw_main, tmpvar_3).yyy), vec3(1.0, 1.0, 0.0), vec3(max (\\n    (((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).z * 1.5)\\n  , texture (sampler_main, \\n    (tmpvar_2 + ((uv - tmpvar_2) * 0.996))\\n  ).z))) * (1.0 - (\\n    ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1)\\n  .x * 2.0)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (ret_1, vec3(1.0, 0.1, 0.4), texture (sampler_fw_main, uv).xxx);\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi + Geiss - pogo-cubes on tokamak matter (Jelly 5.55).json":
/*!******************************************************************************************!*\
  !*** ./presets/converted/Flexi + Geiss - pogo-cubes on tokamak matter (Jelly 5.55).json ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1,\"decay\":0.995,\"echo_zoom\":1.007,\"echo_orient\":3,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":1.413,\"wave_scale\":0.418,\"wave_smoothing\":0,\"wave_mystery\":-0.66,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpanimspeed\":0.626,\"warpscale\":1.331,\"zoomexp\":1.00001,\"zoom\":0.99951,\"warp\":0.08925,\"wave_r\":0,\"wave_g\":0,\"wave_x\":0.24,\"wave_y\":0.44,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"additive\":1,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"r2\":1,\"g2\":0,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3*sqrt(2);\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"},{\"baseVals\":{\"enabled\":1,\"additive\":1,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"r2\":1,\"g2\":0,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"},{\"baseVals\":{\"enabled\":1,\"additive\":1,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"r2\":1,\"g2\":0,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"},{\"baseVals\":{\"sides\":48,\"additive\":1,\"num_inst\":4,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":2.0231,\"smoothing\":0,\"r\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;\",\"point_eqs_eel\":\"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;\"},{\"baseVals\":{\"spectrum\":1,\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"chance = 0;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"// the velocity vector\\n\\nx = q3 + sample*sin(q14)*q13*40;\\ny = q4 + sample*cos(q14)*q13*40;\\n\\n// tangential velocity of rotation\\n//x = q3 + sample*q16*40;\\n//y = q4 - q5/2;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;\"},{\"baseVals\":{\"spectrum\":1,\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"chance = 0;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"// tangential property of velocity vector\\n\\nx = q3 + sample*sin(q10)*cos(q14-q10)*q13*40;\\ny = q4 + sample*cos(q10)*cos(q14-q10)*q13*40;\\n\\n// vx\\n//x = q3 + sample*q11*40;\\n//y = q4;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;\"},{\"baseVals\":{\"spectrum\":1,\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"chance = 0;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"// orthogonal property of velocity vector\\n\\nx = q3 + sample*sin(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\ny = q4 + sample*cos(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\n\\n// vy\\n//x = q3;\\n//y = q4 + sample*q12*40;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;\"}],\"init_eqs_eel\":\"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;\",\"frame_eqs_eel\":\"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\nr = 0.03+ (bass_att+treb_att)*0.004;\\nmonitor = aspecty;\\nvr = sin(vr1)*r;\\nbounce = below(y1,r-(aspectx-1)*0.5);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.96 + (r-y1-(aspectx-1)*0.5)*0.1, vy1-0.0003*60/fps);\\nvx1 = if(bounce, vx1 + (vr-vx1)*0.15, vx1);vr = if(bounce, vr + (vx1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = above(x1,1-r+(aspecty-1)*0.5);vx1 = if(bounce, - abs(vx1)*0.96 + (1-r-x1+(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (vr-vy1)*0.15, vy1);vr = if(bounce, vr + (vy1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = below(x1,r-(aspecty-1)*0.5);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.96 + (r-x1-(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (-vr-vy1)*0.15, vy1);vr = if(bounce, vr - (vy1+vr)*0.85 , vr);vr1 = asin(vr/r);\\n\\nvr = sin(vr2)*r;\\nbounce = below(y2,r-(aspectx-1)*0.5);y2 = y2+vy2;vy2 = if(bounce, abs(vy2)*0.96 + (r-y2-(aspectx-1)*0.5)*0.1, vy2-0.0003*60/fps);\\nvx2 = if(bounce, vx2 + (vr-vx2)*0.15, vx2);vr = if(bounce, vr + (vx2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = above(x2,1-r+(aspecty-1)*0.5);vx2 = if(bounce, - abs(vx2)*0.96 + (1-r-x2+(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (vr-vy2)*0.15, vy2);vr = if(bounce, vr + (vy2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = below(x2,r-(aspecty-1)*0.5);x2 = x2+vx2;vx2 = if(bounce, abs(vx2)*0.96 + (r-x2-(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (-vr-vy2)*0.15, vy2);vr = if(bounce, vr - (vy2+vr)*0.85 , vr);vr2 = asin(vr/r);\\n\\nvr = sin(vr3)*r;\\nbounce = below(y3,r-(aspectx-1)*0.5);y3 = y3+vy3;vy3 = if(bounce, abs(vy3)*0.96 + (r-y3-(aspectx-1)*0.5)*0.1, vy3-0.0003*60/fps);\\nvx3 = if(bounce, vx3 + (vr-vx3)*0.15, vx3);vr = if(bounce, vr + (vx3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = above(x3,1-r+(aspecty-1)*0.5);vx3 = if(bounce, - abs(vx3)*0.96 + (1-r-x3+(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (vr-vy3)*0.15, vy3);vr = if(bounce, vr + (vy3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = below(x3,r-(aspecty-1)*0.5);x3 = x3+vx3;vx3 = if(bounce, abs(vx3)*0.96 + (r-x3-(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (-vr-vy3)*0.15, vy3);vr = if(bounce, vr - (vy3+vr)*0.85 , vr);vr3 = asin(vr/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2)));\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; v2r=sin(vr2)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)),sqrt( sqr(x1-x3) + sqr(y1-y3)));\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvr = sin(vr1)*r; v2r=sin(vr3)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr3 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x3+vx3-x2-vx2) + sqr(y3+vy3-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)),sqrt( sqr(x2-x3) + sqr(y2-y3)));\\nref_ang = atan2(x2-x3,y2-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx3,vy3);w2 = atan2(vx2,vy2);\\nvr = sin(vr3)*r; v2r=sin(vr2)*r;\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr3 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\n\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\n\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;\",\"pixel_eqs_eel\":\"du = (x*2-1) - (q4+q7+q10-1.5)*2/3;\\ndv = (y*2-1) + (q5+q8+q11-1.5)*2/3;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = sin(dist*0.05)*0.4*q14;\\ndx = mult*sin(ang2*2+q13)*aspectx;\\ndy = mult*cos(ang2*2+q13)*aspecty;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  ret_1.xz = vec2(0.0, 0.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(uv);\\n  ret_1.y = texture (sampler_fc_main, tmpvar_3).y;\\n  ret_1.y = (ret_1.y + ((\\n    ((ret_1.y - ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3).y) - 0.03)\\n   * 0.6) - 0.06));\\n  ret_1.y = (ret_1.y + ((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x * 0.3));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  ret_1.z = (texture (sampler_fc_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    (tmpvar_4 * texsize.zw)\\n   * 8.0))).z - 0.03);\\n  ret_1.z = (ret_1.z + ((\\n    clamp ((0.2 - ((texture (sampler_blur2, uv).xyz * scale2) + bias2).y), 0.0, 1.0)\\n   * 0.1) + (\\n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\\n  .x * 0.2)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 0.9);\\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) - (0.15 * dot (texture (sampler_noise_hq, \\n    (uv + (0.01 * time))\\n  ), vec4(0.32, 0.49, 0.29, 0.0))));\\n  ret_1 = (mix (ret_1, (\\n    (0.75 * ret_1)\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, ret_1)) * 0.8);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_9;\\n  tmpvar_9 = sqrt(ret_1);\\n  ret_1 = tmpvar_9;\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = tmpvar_9;\\n  ret = tmpvar_10.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi + fiShbRaiN - operation fatcap II.json":
/*!************************************************************************!*\
  !*** ./presets/converted/Flexi + fiShbRaiN - operation fatcap II.json ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.955,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":0.01,\"warpscale\":100,\"zoomexp\":0.92178,\"fshader\":1,\"zoom\":0.9901,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"ob_g\":1,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":14,\"additive\":1,\"num_inst\":48,\"rad\":0.05237,\"tex_ang\":0.62832,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"enabled\":1,\"sides\":14,\"additive\":1,\"num_inst\":48,\"rad\":0.05186,\"tex_ang\":0.62832,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"enabled\":1,\"sides\":12,\"additive\":1,\"num_inst\":512,\"y\":0.55,\"rad\":0.09105,\"tex_zoom\":0.7874,\"r\":0,\"g\":0.06,\"b\":1,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"started = 0;\\nt1 = 0.412; //seeds for pseudo random generator\\nt2 = 0.4563;\\nt3 = 0.6452;\\nt4 = 0.2565;\",\"frame_eqs_eel\":\"bb = bb + bass*bass*0.85*equal(instance,0);\\nmm = mm + mid*mid*0.85*equal(instance,0);\\ntt = tt + treb*treb*0.85*equal(instance,0);\\n\\nq3 = bb*0.012;\\nq4 = mm*0.012;\\nq5 = tt*0.012;\\n\\nrnd1 = if(equal(instance,0),t1,rnd1);\\nrnd2 = if(equal(instance,0),t2,rnd2);\\nrnd3 = if(equal(instance,0),t3,rnd3);\\nrnd4 = if(equal(instance,0),t4,rnd4);\\nrnd1 = 4*rnd1*(1-rnd1);\\nrnd2 = 4*rnd2*(1-rnd2);\\nrnd3 = 4*rnd3*(1-rnd3);\\nrnd4 = 4*rnd4*(1-rnd4);\\nt = .6;\\nt =  (rnd1+time*t) - int(rnd1+time*t);\\nt = t + rnd2*0.1;\\nwh = rnd4*asin(1)*4;\\nwv = 0.25 + rnd3*0.1;\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 1;\\nl = 1;\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = t *(cos(wh)*sin(wv)*l);\\nmy_y = (-0.5 +(t-0.75)*(t-0.75))*cos(wv)*l;\\nmy_z = t*(sin(wh)*sin(wv)*l);\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\np = tan(asin(1) + atan2(d+z3,sqrt(x3*x3 + y3*y3)));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(atan2(x3,y3))*p;\\nmy_y = zoom*cos(atan2(x3,y3))*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\"},{\"baseVals\":{\"enabled\":1,\"sides\":14,\"additive\":1,\"num_inst\":222,\"rad\":0.05186,\"tex_ang\":0.62832,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;\",\"frame_eqs_eel\":\"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0008*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq10 = x1;\\nq11 = y1;\\nzoom = 1;\\nwarp = 0;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;\",\"pixel_eqs_eel\":\"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.11;\\nv = 20;\\nv2 = q5;\\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)) + cos(dir)*v2)*(1.00-sigmoid(d-r,100));\\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)) -sin(dir)*v2)*(1.00-sigmoid(d-r,100));\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 4.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_4).x - \\n    ((texture (sampler_main, tmpvar_4).x - ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1)).x;\\n  ret_1.y = (texture (sampler_fc_main, uv).y - (ret_1.x * 0.04));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.86));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (-(texsize.zw) * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q4;\\n  tmpvar_6.y = q8;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((tmpvar_6 * vec2(1.0, -1.0)) + vec2(0.0, 1.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 x_9;\\n  x_9 = ((uv_1 + (tmpvar_8 * 4.0)) - tmpvar_7);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 x_11;\\n  x_11 = ((uv_1 + (tmpvar_10 * 4.0)) - tmpvar_7);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 x_13;\\n  x_13 = ((uv_1 + (tmpvar_12 * 4.0)) - tmpvar_7);\\n  vec3 tmpvar_14;\\n  float tmpvar_15;\\n  tmpvar_15 = sqrt(dot (x_11, x_11));\\n  tmpvar_14.x = (tmpvar_15 * tmpvar_15);\\n  float tmpvar_16;\\n  tmpvar_16 = sqrt(dot (x_9, x_9));\\n  tmpvar_14.y = (tmpvar_16 * tmpvar_16);\\n  float tmpvar_17;\\n  tmpvar_17 = sqrt(dot (x_13, x_13));\\n  tmpvar_14.z = (tmpvar_17 * tmpvar_17);\\n  vec3 tmpvar_18;\\n  tmpvar_18 = (1.1 - pow ((tmpvar_14 * 2.0), vec3(0.3, 0.3, 0.3)));\\n  ret_2 = ((1.0 - (tmpvar_18 * tmpvar_18)) * texture (sampler_main, uv_1).xyz);\\n  ret_2 = ret_2.zyx;\\n  ret_2.yz = (ret_2.yz - (ret_2.xx * 0.5));\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = ret_2;\\n  ret = tmpvar_19.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi - alien fader.json":
/*!****************************************************!*\
  !*** ./presets/converted/Flexi - alien fader.json ***!
  \****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"wave_thick\":1,\"wave_brighten\":0,\"wave_a\":0.004,\"wave_scale\":0.267,\"wave_smoothing\":0,\"wave_mystery\":-0.44,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpscale\":5.921,\"zoomexp\":11.56276,\"zoom\":1.05971,\"warp\":0.17692,\"wave_y\":0.04,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"thickoutline\":1,\"rad\":0.01,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"g\":0.99,\"b\":1,\"a\":0.1,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"textured\":1,\"rad\":0.80013,\"ang\":4.64954,\"tex_zoom\":1.24471,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":0.77,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"thickoutline\":1,\"x\":1,\"rad\":3.0054,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"r\":0,\"g\":1,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"thickoutline\":1,\"x\":1,\"rad\":0.39872,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"scaling\":2.0231,\"smoothing\":0,\"r\":0,\"g\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;\"},{\"baseVals\":{\"scaling\":2.0231,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"scaling\":100,\"smoothing\":0.6,\"r\":0,\"g\":0.4,\"a\":0.3,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;\"},{\"baseVals\":{\"usedots\":1,\"scaling\":2.44415,\"smoothing\":0,\"r\":0,\"g\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\",\"point_eqs_eel\":\"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;\"}],\"init_eqs_eel\":\"q11 = 0.5/asin(1);\",\"frame_eqs_eel\":\"wave_a = 0;\\nzoom = 1;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.07/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm*2;\\nq3 = sin(w);\\nq4 = cos(w);\\n\\n\\nq10 = bm;\\nq11 = mt;\\nq12 = bt;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec2 d_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 3.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = ((2.0 * (\\n    (texture (sampler_blur1, fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))).xyz * scale1)\\n   + bias1)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((2.0 * (\\n    (texture (sampler_blur1, fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))).xyz * scale1)\\n   + bias1)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  d_2 = -(tmpvar_4);\\n  float tmpvar_8;\\n  tmpvar_8 = (d_2 * 1.5).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.y;\\n  tmpvar_9.y = tmpvar_6.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_5.x;\\n  tmpvar_10.y = tmpvar_6.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = ((uv - (\\n    (tmpvar_9 * d_2)\\n   * 0.5)) - (tmpvar_10 * tmpvar_8));\\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3.y - tmpvar_7.y)\\n   * 0.042) + -0.008));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_5.x;\\n  tmpvar_12.y = tmpvar_6.x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.z;\\n  tmpvar_13.y = tmpvar_6.z;\\n  my_uv_1 = ((uv - (\\n    (tmpvar_12 * d_2)\\n   * 0.5)) - (tmpvar_13 * tmpvar_8));\\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  ret_3.x = (ret_3.x + ((\\n    (ret_3.x - tmpvar_7.x)\\n   * 0.042) + -0.008));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = tmpvar_5.z;\\n  tmpvar_14.y = tmpvar_6.z;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = tmpvar_5.y;\\n  tmpvar_15.y = tmpvar_6.y;\\n  my_uv_1 = ((uv - (\\n    (tmpvar_14 * d_2)\\n   * 0.5)) - (tmpvar_15 * tmpvar_8));\\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_3.z = (ret_3.z + ((\\n    (ret_3.z - tmpvar_7.z)\\n   * 0.042) + -0.008));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_3;\\n  ret = tmpvar_16.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec2 dz_2;\\n  vec3 dy_3;\\n  vec3 dx_4;\\n  vec2 d_5;\\n  vec3 ret_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = ((q4 * tmpvar_7.x) - (q3 * tmpvar_7.y));\\n  tmpvar_8.y = ((q3 * tmpvar_7.x) + (q4 * tmpvar_7.y));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (0.5 + (tmpvar_8 * 2.0));\\n  vec2 numerator_10;\\n  numerator_10 = (tmpvar_9 - vec2(0.0, 0.5));\\n  vec2 denominator_11;\\n  denominator_11 = (tmpvar_9 - vec2(1.0, 0.5));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = ((numerator_10.x * denominator_11.x) + (numerator_10.y * denominator_11.y));\\n  tmpvar_12.y = ((numerator_10.y * denominator_11.x) - (numerator_10.x * denominator_11.y));\\n  vec2 tmpvar_13;\\n  tmpvar_13 = (((tmpvar_12 / \\n    ((denominator_11.x * denominator_11.x) + (denominator_11.y * denominator_11.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_14;\\n  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));\\n  float tmpvar_15;\\n  float tmpvar_16;\\n  tmpvar_16 = (min (abs(\\n    (tmpvar_13.x / tmpvar_13.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_13.x / tmpvar_13.y)\\n  ), 1.0));\\n  float tmpvar_17;\\n  tmpvar_17 = (tmpvar_16 * tmpvar_16);\\n  tmpvar_17 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_17) + 0.05368138) * tmpvar_17) - 0.1173503)\\n     * tmpvar_17) + 0.1938925) * tmpvar_17) - 0.3326756)\\n   * tmpvar_17) + 0.9999793) * tmpvar_16);\\n  tmpvar_17 = (tmpvar_17 + (float(\\n    (abs((tmpvar_13.x / tmpvar_13.y)) > 1.0)\\n  ) * (\\n    (tmpvar_17 * -2.0)\\n   + 1.570796)));\\n  tmpvar_15 = (tmpvar_17 * sign((tmpvar_13.x / tmpvar_13.y)));\\n  if ((abs(tmpvar_13.y) > (1e-08 * abs(tmpvar_13.x)))) {\\n    if ((tmpvar_13.y < 0.0)) {\\n      if ((tmpvar_13.x >= 0.0)) {\\n        tmpvar_15 += 3.141593;\\n      } else {\\n        tmpvar_15 = (tmpvar_15 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_15 = (sign(tmpvar_13.x) * 1.570796);\\n  };\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = (tmpvar_15 * 0.1591549);\\n  tmpvar_18.y = tmpvar_14;\\n  vec2 tmpvar_19;\\n  tmpvar_19.x = ((tmpvar_18.x * 2.0) + q11);\\n  tmpvar_19.y = ((0.2 * log(tmpvar_14)) + q12);\\n  uv_1 = (0.5 + ((0.5 - \\n    abs(((fract(\\n      (tmpvar_19 * 0.5)\\n    ) * 2.0) - 1.0))\\n  ).yx * 1.06));\\n  vec2 tmpvar_20;\\n  vec2 tmpvar_21;\\n  tmpvar_21 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_20.x = (texture (sampler_main, (uv_1 + tmpvar_21)).xyz - texture (sampler_main, (uv_1 - tmpvar_21)).xyz).y;\\n  vec2 tmpvar_22;\\n  tmpvar_22 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_20.y = (texture (sampler_main, (uv_1 + tmpvar_22)).xyz - texture (sampler_main, (uv_1 - tmpvar_22)).xyz).y;\\n  d_5 = (texsize.zw * 1.2);\\n  dx_4 = ((2.0 * (\\n    (texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * d_5))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * d_5))).xyz * scale1)\\n   + bias1)));\\n  dy_3 = ((2.0 * (\\n    (texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * d_5))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * d_5))).xyz * scale1)\\n   + bias1)));\\n  vec2 tmpvar_23;\\n  tmpvar_23.x = dx_4.y;\\n  tmpvar_23.y = dy_3.y;\\n  dz_2 = ((tmpvar_20 * 3.0) + tmpvar_23);\\n  ret_6 = (vec3(((\\n    pow ((sqrt(dot (dz_2, dz_2)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = dx_4.x;\\n  tmpvar_24.y = dy_3.x;\\n  vec3 tmpvar_25;\\n  tmpvar_25 = mix (mix (ret_6, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv_1 + ((tmpvar_24 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_1).zzz);\\n  ret_6 = tmpvar_25;\\n  vec4 tmpvar_26;\\n  tmpvar_26.w = 1.0;\\n  tmpvar_26.xyz = tmpvar_25;\\n  ret = tmpvar_26.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi - alien web bouncer [26].json":
/*!***************************************************************!*\
  !*** ./presets/converted/Flexi - alien web bouncer [26].json ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1,\"decay\":0.995,\"echo_zoom\":1.007,\"echo_orient\":3,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":1.413,\"wave_scale\":0.418,\"wave_smoothing\":0,\"wave_mystery\":-0.66,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpanimspeed\":0.568,\"warpscale\":1.867,\"zoomexp\":1.00001,\"zoom\":0.99951,\"warp\":0.1089,\"wave_r\":0,\"wave_g\":0,\"wave_x\":0.24,\"wave_y\":0.44,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_b\":1,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"a\":0,\"r2\":1,\"g2\":0,\"border_r\":0.05,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"a\":0,\"r2\":1,\"g2\":0,\"border_r\":0.05,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"a\":0,\"r2\":1,\"g2\":0,\"border_r\":0.05,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"},{\"baseVals\":{\"sides\":48,\"additive\":1,\"num_inst\":4,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":2.0231,\"smoothing\":0,\"r\":0.18},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;\",\"point_eqs_eel\":\"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;\"},{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"scaling\":0.36971,\"smoothing\":0,\"r\":0.01},\"init_eqs_eel\":\"chance = 0;\",\"frame_eqs_eel\":\"t1 = asin(1);\\n\\nrot = rot + q6;\\nt2 = rot;\\n\\nq4 = 0.5 + (q4-0.5)*q15;\\nq5 = 0.5 + (q5-0.5)*q15;\",\"point_eqs_eel\":\"w = 4*t1*sample + t2;\\nd = q3*0.5*q15 + value1;\\n\\nx = q4 + sin(w)*d;\\ny = q5 + cos(w)*d;\"},{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"scaling\":0.36971,\"smoothing\":0,\"r\":0.01},\"init_eqs_eel\":\"chance = 0;\",\"frame_eqs_eel\":\"t1 = asin(1);\\n\\nrot = rot + q9;\\nt2 = rot;\\n\\nq7 = 0.5 + (q7-0.5)*q15;\\nq8 = 0.5 + (q8-0.5)*q15;\",\"point_eqs_eel\":\"w = 4*t1*sample + t2;\\nd = q3*0.5*q15 + value1;\\n\\nx = q7 + sin(w)*d;\\ny = q8 + cos(w)*d;\"},{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"scaling\":0.36971,\"smoothing\":0,\"r\":0.01},\"init_eqs_eel\":\"chance = 0;\",\"frame_eqs_eel\":\"t1 = asin(1);\\n\\nrot = rot + q12;\\nt2 = rot;\\n\\nq10 = 0.5 + (q10-0.5)*q15;\\nq11= 0.5 + (q11-0.5)*q15;\",\"point_eqs_eel\":\"w = 4*t1*sample + t2;\\nd = q3*0.5*q15 + value1;\\n\\nx = q10 + sin(w)*d;\\ny = q11 + cos(w)*d;\"}],\"init_eqs_eel\":\"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;\",\"frame_eqs_eel\":\"zoom = 1;\\nwave_a = 0;\\n\\n// impuls transmission with an angular momentum factor, 3 bodies\\n// code by Flexi\\n// good luck with tuning these values to a fine dynamic behavior ;-)\\n\\n   r = 0.11+ (bass_att+treb_att)*0.005; // the object's radius\\n\\n   gravity = 0.01;\\n\\n   bouncedampening = 0.94;  // This is where kinetic energy is taken from the system.\\n                            // Be careful with values close to 1.0\\n\\n   bounceimpact = 0.17;     // When an object hits one border, it slightly penetrates it.\\n                            // The impact value determines how strong this depth is taken as resulting impuls.\\n                            // This is where kinetic energy possibly is added to the system depent on the increase in size.\\n\\n// don't change below\\n\\n// bouncing off borders (the first rotating object)\\n\\n   y1  = y1+vy1; // adding velocity vector to position\\n   x1  = x1+vx1;\\n\\n   vr  = sin(vr1)*r; // tangential velocity\\nbounce = below(y1,r-(aspectx-1)*0.5); // hit floor?\\n   vy1 = if(bounce, abs(vy1)*bouncedampening + (r-y1-(aspectx-1)*0.5)*bounceimpact, vy1-gravity/fps);\\n   vx1 = if(bounce, vx1 + (vr-vx1)*bounceimpact, vx1);\\n   vr  = if(bounce, vr + (vx1-vr)*0.85 , vr);\\nbounce = above(x1,1-r+(aspecty-1)*0.5); // hit right border?\\n   vx1 = if(bounce, - abs(vx1)*bouncedampening + (1-r-x1+(aspecty-1)*0.5)*bounceimpact, vx1);\\n   vy1 = if(bounce, vy1 + (vr-vy1)*bounceimpact, vy1);\\n   vr  = if(bounce, vr + (vy1-vr)*0.85 , vr);\\nbounce = below(x1,r-(aspecty-1)*0.5); // hit left border?\\n   vx1 = if(bounce, abs(vx1)*bouncedampening + (r-x1-(aspecty-1)*0.5)*bounceimpact, vx1);\\n   vy1 = if(bounce, vy1 + (-vr-vy1)*bounceimpact, vy1);\\n   vr  = if(bounce, vr - (vy1+vr)*0.85 , vr);\\n   vr1 = asin(vr/r); // angular velocity of the surface\\n\\n// bouncing off borders (the second rotating object)\\nvr=sin(vr2)*r;bounce=below(y2,r-(aspectx-1)*0.5);y2=y2+vy2;vy2=if(bounce,abs(vy2)*bouncedampening+(r-y2-(aspectx-1)*0.5)\\n*bounceimpact,vy2-gravity/fps);vx2=if(bounce,vx2+(vr-vx2)*bounceimpact,vx2);vr=if(bounce,vr+(vx2-vr)*0.85,vr);\\nbounce=above(x2,1-r+(aspecty-1)*0.5);vx2=if(bounce,-abs(vx2)*bouncedampening+(1-r-x2+(aspecty-1)*0.5)*bounceimpact,vx2);\\nvy2=if(bounce,vy2+(vr-vy2)*bounceimpact,vy2);vr=if(bounce,vr+(vy2-vr)*0.85,vr);bounce=below(x2,r-(aspecty-1)*0.5);x2=x2+vx2;\\nvx2=if(bounce,abs(vx2)*bouncedampening+(r-x2-(aspecty-1)*0.5)*bounceimpact,vx2);vy2=if(bounce,vy2+(-vr-vy2)*bounceimpact,vy2);\\nvr=if(bounce,vr-(vy2+vr)*0.85,vr);vr2=asin(vr/r);\\n\\n// bouncing off borders (the third rotating object)\\nvr=sin(vr3)*r;bounce=below(y3,r-(aspectx-1)*0.5);y3=y3+vy3;vy3=if(bounce,abs(vy3)*bouncedampening+(r-y3-(aspectx-1)*0.5)\\n*bounceimpact,vy3-gravity/fps);vx3=if(bounce,vx3+(vr-vx3)*bounceimpact,vx3);vr=if(bounce,vr+(vx3-vr)*0.85,vr);\\nbounce=above(x3,1-r+(aspecty-1)*0.5);vx3=if(bounce,-abs(vx3)*bouncedampening+(1-r-x3+(aspecty-1)*0.5)*bounceimpact,vx3);\\nvy3=if(bounce,vy3+(vr-vy3)*bounceimpact,vy3);vr=if(bounce,vr+(vy3-vr)*0.85,vr);bounce=below(x3,r-(aspecty-1)*0.5);x3=x3+vx3;\\nvx3=if(bounce,abs(vx3)*bouncedampening+(r-x3-(aspecty-1)*0.5)*bounceimpact,vx3);vy3=if(bounce,vy3+(-vr-vy3)*bounceimpact,vy3);\\nvr=if(bounce,vr-(vy3+vr)*0.85,vr);vr3=asin(vr/r);\\n\\n// bouncing of object1 with object2\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r); // is distance < diameter ?\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2))); // detect only if objects\\n                                                                                                      // move towards each other\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // angle of the common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1); // absolute velocity\\nv2 = sqrt(vx2*vx2+vy2*vy2);\\nw1 = atan2(vx1,vy1); // absolute motion angle\\nw2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; // angular velocity of the surface\\nv2r= sin(vr2)*r;\\n// in case of a bounce, the velocity is split into the horizontal and vertical part relative to the common tangent,\\n// then the vertical aspects get swapped.\\n// a bounce goes 90% into impuls transmission and 10% angular momentum transmission.\\n// these values make quite a plausible impression, but in fact this has pretty little to do with physical correctness ;)\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);\\nvr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);\\nvr2 = asin(v2r/r);\\n\\n// bouncing of object1 with object3\\n\\n\\nbounce=below(sqrt(sqr(x1+vx1-x3-vx3)+sqr(y1+vy1-y3-vy3)),2*r);bounce=bounce*below(sqrt(sqr(x1+vx1-x3-\\nvx3)+sqr(y1+vy1-y3-vy3)),sqrt(sqr(x1-x3)+sqr(y1-y3)));ref_ang=atan2(x3-x1,y3-y1)+asin(1);v1=sqrt(vx1*vx1\\n+vy1*vy1);v2=sqrt(vx3*vx3+vy3*vy3);w1=atan2(vx1,vy1);w2=atan2(vx3,vy3);vr=sin(vr1)*r;v2r=sin(vr3)*r;vx1\\n=if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang)+((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1+sin(ref_ang+\\nasin(1))*v2*cos(w2-ref_ang-asin(1)),vx1);vy1=if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang)+((vr-v2r)-cos\\n(ref_ang)*v1*cos(w1-ref_ang))*0.1+cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)),vy1);vx3=if(bounce,sin\\n(ref_ang)*v2*cos(w2-ref_ang)+((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1+sin(ref_ang+asin(1))*v1*cos\\n(w1-ref_ang-asin(1)),vx3);vy3=if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang)+((v2r-vr)-cos(ref_ang)*v2*cos(w2\\n-ref_ang))*0.1+cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)),vy3);vr=if(bounce,vr+(cos(w1-ref_ang)*(v1\\n-v2)-vr)*0.9,vr);vr1=asin(vr/r);v2r=if(bounce,v2r+(cos(w2-ref_ang)*(v2-v1)-v2r)*0.9,v2r);vr3=asin(v2r/r);\\n\\n// bouncing of object3 with object2\\nbounce=below(sqrt(sqr(x3+vx3-x2-vx2)+sqr(y3+vy3-y2-vy2)),2*r);bounce=bounce*below(sqrt(sqr(x2+vx2-x3-\\nvx3)+sqr(y2+vy2-y3-vy3)),sqrt(sqr(x2-x3)+sqr(y2-y3)));ref_ang=atan2(x2-x3,y2-y3)+asin(1);v1=sqrt(vx3*vx3\\n+vy3*vy3);v2=sqrt(vx2*vx2+vy2*vy2);w1=atan2(vx3,vy3);w2=atan2(vx2,vy2);vr=sin(vr3)*r;v2r=sin(vr2)*r;vx3\\n=if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang)+((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1+sin(ref_ang+\\nasin(1))*v2*cos(w2-ref_ang-asin(1)),vx3);vy3=if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang)+((vr-v2r)-cos\\n(ref_ang)*v1*cos(w1-ref_ang))*0.1+cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)),vy3);vx2=if(bounce,sin\\n(ref_ang)*v2*cos(w2-ref_ang)+((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1+sin(ref_ang+asin(1))*v1*cos\\n(w1-ref_ang-asin(1)),vx2);vy2=if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang)+((v2r-vr)-cos(ref_ang)*v2*cos(w2\\n-ref_ang))*0.1+cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)),vy2);vr=if(bounce,vr+(cos(w1-ref_ang)*(v1\\n-v2)-vr)*0.9,vr);vr3=asin(vr/r);v2r=if(bounce,v2r+(cos(w2-ref_ang)*(v2-v1)-v2r)*0.9,v2r);vr2=asin(v2r/r);\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;\\nq15 = 1/max(aspectx,aspecty);\",\"pixel_eqs_eel\":\"c = 42; // impacts the \\\"sharpness\\\" of the sigmoid filter function\\ns = 0.5; // strength of the rotation\\nd = q3*0.6; // radius of the sigmoid filter function\\n\\n//\\ncx1 = 0.5 + (q4-0.5)*q15;\\ncy1 = 0.5 - (q5-0.5)*q15;\\nd1 = sqrt( sqr(x-cx1) + sqr(y-cy1));\\ns1 = sigmoid(d-d1,c)*s;\\nrx1 = -q6*sin(y-cy1)*s1;\\nry1 = q6*sin(x-cx1)*s1;\\n\\ncx2 = 0.5 + (q7-0.5)*q15;\\ncy2 = 0.5 - (q8-0.5)*q15;\\nd2 = sqrt( sqr(x-cx2) + sqr(y-cy2));\\ns2 = sigmoid(d-d2,c)*s;\\nrx2 = -q9*sin(y-cy2)*s2;\\nry2 = q9*sin(x-cx2)*s2;\\n\\ncx3 = 0.5 + (q10-0.5)*q15;\\ncy3 = 0.5 - (q11-0.5)*q15;\\nd3 = sqrt( sqr(x-cx3) + sqr(y-cy3));\\ns3 = sigmoid(0.12-d3,c)*s;\\nrx3 = -q12*sin(y-cy3)*s3;\\nry3 = q12*sin(x-cx3)*s3;\\n\\n\\n\\ndx = rx1 + rx2 + rx3;\\ndy = ry1 + ry2 + ry3;\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((640.0 * texsize.z) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  )));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((512.0 * texsize.w) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.x;\\n  tmpvar_6.y = tmpvar_4.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = -(tmpvar_3.y);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - ((\\n    ((tmpvar_5 * 0.3) + (tmpvar_6 * 0.1))\\n   + \\n    (tmpvar_7 * 0.01)\\n  ) * 0.01));\\n  ret_2.x = texture (sampler_fw_main, (tmpvar_8 - floor(tmpvar_8))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (2.0 * ret_2.x)\\n   - \\n    (2.0 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x)\\n  ) * 0.25));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = -(tmpvar_3.y);\\n  my_uv_1 = ((uv - (tmpvar_9 * 0.01)) + (tmpvar_10 * 0.001));\\n  ret_2.y = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((2.0 * ret_2.y) - (2.0 * ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y))\\n   * 0.025) + 0.01));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }\",\"comp\":\"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 1.5);\\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  vec2 x_3;\\n  x_3 = (tmpvar_2 * 8.0);\\n  ret_1 = (((texture (sampler_main, uv).x * \\n    (1.0 - sqrt(dot (x_3, x_3)))\\n  ) * pow (hue_shader, vec3(6.0, 6.0, 6.0))) * 1.4);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_5, x_5))));\\n  ret_1 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = tmpvar_6;\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi - crush ice 72.json":
/*!*****************************************************!*\
  !*** ./presets/converted/Flexi - crush ice 72.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"wave_mode\":2,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_a\":0.009,\"wave_scale\":2.713,\"wave_smoothing\":0,\"modwavealphastart\":1.2,\"modwavealphaend\":1.2,\"warpscale\":1.331,\"zoom\":0.99951,\"warp\":0.00909,\"wave_r\":0.44,\"wave_g\":0.4,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":12,\"additive\":1,\"num_inst\":2,\"x\":0.49,\"rad\":0.09902,\"tex_zoom\":4.36077,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;\"},{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":0.986,\"tex_ang\":3.14159,\"tex_zoom\":0.99979,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"x\":0.9,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = sin(time) * .4 + .5;\\n\\n\\npow( (bass*.15),2);\"},{\"baseVals\":{\"enabled\":1,\"sides\":36,\"additive\":1,\"rad\":0.81623,\"r\":0,\"g\":0.04,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"additive\":1,\"r\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q1 = below(rand(100),4 + 10*(treb+mid+bass));\",\"point_eqs_eel\":\"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":5.92556,\"smoothing\":0,\"r\":0,\"g\":0,\"b\":0.4,\"a\":0.34},\"init_eqs_eel\":\"t2 = 0\",\"frame_eqs_eel\":\"t1 = q13;\\nt2 = q14;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*120)*d*0.1;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n\\nx = if(beat,rand(60)*0.01 + 0.2,x);\\ny = if(beat,rand(60)*0.01 + 0.2,y);\\nq1 = x;\\nq2 = y;\\n\\nwave_x = q1;\\nwave_y = 1-q2;\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.001*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq13 = x1; q14 = x2; q3 = x3; q4 = x4;\\nq5 = y1; q6 = y2; q7 = y3; q8 = y4;\\nq9 =1/ aspectX;\\nq10 = 1/aspectY;\\n\\nq12 = atan2(vx4,vy4);\\nq11 = sqrt(vx4*vx4 + vy4*vy4);\",\"pixel_eqs_eel\":\"cx = q1;\\ncy = q2;\\n\\nd = pow(sqrt(sqr(x-cx)+sqr(y-cy)),0.8);\\nr = 0.2;\\nv = 0.2;\\n\\ndx = (x - cx)*v*(d-r);\\ndy = (y - cy)*v*(d-r);\\n\\ndir = -q12*1 + asin(1)*1;\\n\\nb1 = 0.05; // distance\\nm1 = q11*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*1000));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*1000));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx += (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*12;\\ndy += (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*12;\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((640.0 * texsize.z) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  )));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((512.0 * texsize.w) * ((2.0 * \\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ) - (2.0 * \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.x;\\n  tmpvar_6.y = tmpvar_4.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = -(tmpvar_3.y);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - ((\\n    ((tmpvar_5 * 0.3) + (tmpvar_6 * 0.1))\\n   + \\n    (tmpvar_7 * 0.01)\\n  ) * 0.01));\\n  ret_2.x = texture (sampler_fw_main, (tmpvar_8 - floor(tmpvar_8))).x;\\n  ret_2.x = (ret_2.x + ((\\n    (2.0 * ret_2.x)\\n   - \\n    (2.0 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x)\\n  ) * 0.25));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.y;\\n  tmpvar_9.y = tmpvar_4.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = -(tmpvar_3.y);\\n  my_uv_1 = ((uv - (tmpvar_9 * 0.01)) + (tmpvar_10 * 0.001));\\n  ret_2.y = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((2.0 * ret_2.y) - (2.0 * ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y))\\n   * 0.025) + 0.01));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q19;\\n  tmpvar_3.y = q20;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q19;\\n  tmpvar_4.y = q20;\\n  vec3 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (((2.0 * \\n    ((texture (sampler_blur1, (clamp (\\n      ((0.5 + tmpvar_6) + (tmpvar_3 * vec2(-1.0, 1.0)))\\n    , 0.0, 1.0) + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (clamp (\\n      ((0.5 + tmpvar_6) + (tmpvar_4 * vec2(-1.0, 1.0)))\\n    , 0.0, 1.0) - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q19;\\n  tmpvar_7.y = q20;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q19;\\n  tmpvar_8.y = q20;\\n  vec3 tmpvar_9;\\n  tmpvar_9 = (((2.0 * \\n    ((texture (sampler_blur1, (clamp (\\n      ((0.5 + tmpvar_6) + (tmpvar_7 * vec2(-1.0, 1.0)))\\n    , 0.0, 1.0) + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (clamp (\\n      ((0.5 + tmpvar_6) + (tmpvar_8 * vec2(-1.0, 1.0)))\\n    , 0.0, 1.0) - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q19;\\n  tmpvar_10.y = q20;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q19;\\n  tmpvar_11.y = q20;\\n  ret_1 = (1.0 - sqrt(vec3(mix (\\n    ((texture (sampler_blur2, clamp ((\\n      (0.5 + tmpvar_6)\\n     + \\n      (tmpvar_10 * vec2(-1.0, 1.0))\\n    ), 0.0, 1.0)).xyz * scale2) + bias2)\\n  .x, \\n    ((texture (sampler_blur3, clamp ((\\n      (0.5 + tmpvar_6)\\n     + \\n      (tmpvar_11 * vec2(-1.0, 1.0))\\n    ), 0.0, 1.0)).xyz * scale3) + bias3)\\n  .x, 0.6))));\\n  ret_1 = (ret_1 * mix (vec3(2.0, 1.0, 0.0), vec3(0.5, 1.0, 2.0), vec3((\\n    (uv.x + uv.y)\\n   * 0.5))));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_5.y;\\n  tmpvar_12.y = tmpvar_9.y;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.x;\\n  tmpvar_13.y = tmpvar_9.x;\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = q19;\\n  tmpvar_14.y = q20;\\n  vec3 tmpvar_15;\\n  vec4 tmpvar_16;\\n  tmpvar_16 = texture (sampler_main, uv);\\n  tmpvar_15 = mix (mix (mix (ret_1, vec3(2.0, 1.0, 0.0), vec3(\\n    (((texture (sampler_blur2, (uv + \\n      (tmpvar_12 * 0.1)\\n    )).xyz * scale2) + bias2).y * 2.0)\\n  )), vec3((\\n    sqrt(dot (tmpvar_13, tmpvar_13))\\n   + texture (sampler_main, \\n    clamp (((0.5 + tmpvar_6) + (tmpvar_14 * vec2(-1.0, 1.0))), 0.0, 1.0)\\n  ).x)), vec3((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 1.2))), vec3(1.0, 1.0, 2.0), vec3((-(tmpvar_16.z) + (\\n    clamp (((tmpvar_16.y * 1.4) - 0.9), 0.0, 1.0)\\n   * 1.2))));\\n  ret_1 = tmpvar_15;\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = tmpvar_15;\\n  ret = tmpvar_17.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi - dimensions, projection and abstraction.json":
/*!*******************************************************************************!*\
  !*** ./presets/converted/Flexi - dimensions, projection and abstraction.json ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1,\"decay\":0.995,\"echo_zoom\":1.007,\"echo_orient\":3,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_a\":0.9,\"wave_scale\":2.997,\"wave_smoothing\":0,\"wave_mystery\":-0.5,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpanimspeed\":0.274,\"warpscale\":7.98,\"zoom\":0.99951,\"warp\":0.20929,\"wave_r\":0.02,\"wave_g\":0.02,\"wave_b\":0,\"ob_size\":0.05,\"ob_r\":1,\"ob_g\":0.05,\"ob_a\":1,\"ib_size\":0,\"ib_a\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":5,\"mv_a\":0,\"b1ed\":0.2},\"shapes\":[{\"baseVals\":{\"sides\":99,\"textured\":1,\"x\":1,\"y\":0.63,\"rad\":1.3,\"tex_zoom\":0.763,\"g\":1,\"b\":1,\"a\":0.97,\"r2\":1,\"b2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"y\":0.55,\"rad\":0.225,\"g\":1,\"b\":1,\"a\":0.97,\"r2\":1,\"b2\":1,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"x\":0.85,\"y\":0,\"rad\":1.3,\"tex_zoom\":2.068,\"g\":1,\"b\":1,\"a\":0.97,\"r2\":1,\"b2\":1,\"a2\":0.97,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":3,\"textured\":1,\"x\":0.02,\"rad\":0.733,\"ang\":1.319,\"tex_zoom\":100,\"g\":1,\"b\":1,\"a\":0.97,\"r2\":1,\"b2\":1,\"a2\":0.97,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":495,\"sep\":4,\"spectrum\":1,\"thick\":1,\"additive\":1,\"scaling\":100,\"smoothing\":1,\"r\":0,\"g\":0,\"b\":0,\"a\":0.99},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;\",\"point_eqs_eel\":\"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_z = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_y = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.55;\\n\\nw3 = -q8;\\nw2 = q9;\\nw1 = q10;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;\"},{\"baseVals\":{\"sep\":20,\"scaling\":0.07,\"smoothing\":0.65,\"r\":0,\"g\":0.3,\"b\":0.3,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"sep\":30,\"scaling\":0.07,\"r\":0.3,\"g\":0.3,\"b\":0.3,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"sep\":60,\"r\":0,\"g\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"q21 = 1/asin(1);\",\"frame_eqs_eel\":\"zoom = 1;\\nwave_a = 0;\\n\\nq1 = 0.25/asin(1);\\n\\n\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n//n = time*100;\\n//n1 = time*100;\\n//n2 = time*100;\\n\\nangle1 = n*0.01;\\nangle2 = n1*0.01;\\nangle3 = n2*0.01;\\n\\n\\nq2 = cos(angle1);\\nq3 = sin(angle1);\\n\\nq4 = cos(angle2);\\nq5 = sin(angle2);\\n\\nq6 = cos(angle3);\\nq7 = sin(angle3);\\n\\n\\nq8 = angle1;\\nq9 = angle2;\\nq10 = angle3;\",\"pixel_eqs_eel\":\"x = 0.5 + (x-0.51)*q1;\\ny = 0.5 - (y-0.5)*q2;\\ndx = (x*(1-x)-q5*x*y/(x+q6));\\ndy = -q7*y*(1-y/x);\\n\\ndx = -dx*0.02/q1;\\ndy = -dy*0.02/q2;\",\"warp\":\" shader_body { \\n  vec2 d_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_noise_lq, ((\\n    (uv * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).y - 0.5));\\n  float cosw_4;\\n  cosw_4 = -(q6);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((uv_orig - 0.5) * aspect.xy);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = ((cosw_4 * tmpvar_5.x) - (q7 * tmpvar_5.y));\\n  tmpvar_6.y = ((q7 * tmpvar_5.x) + (cosw_4 * tmpvar_5.y));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((0.5 - (tmpvar_6 * 2.0)) + ((tmpvar_3.xy * texsize.zw) * 4.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (q9 * 0.5);\\n  tmpvar_8.y = (q8 * 0.5);\\n  vec2 numerator_9;\\n  numerator_9 = (tmpvar_7 - vec2(0.0, 0.5));\\n  vec2 denominator_10;\\n  denominator_10 = (tmpvar_7 - vec2(1.0, 0.5));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((numerator_9.x * denominator_10.x) + (numerator_9.y * denominator_10.y));\\n  tmpvar_11.y = ((numerator_9.y * denominator_10.x) - (numerator_9.x * denominator_10.y));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = (((tmpvar_11 / \\n    ((denominator_10.x * denominator_10.x) + (denominator_10.y * denominator_10.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_13;\\n  tmpvar_13 = sqrt(dot (tmpvar_12, tmpvar_12));\\n  float tmpvar_14;\\n  float tmpvar_15;\\n  tmpvar_15 = (min (abs(\\n    (tmpvar_12.x / tmpvar_12.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_12.x / tmpvar_12.y)\\n  ), 1.0));\\n  float tmpvar_16;\\n  tmpvar_16 = (tmpvar_15 * tmpvar_15);\\n  tmpvar_16 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\\n     * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\\n   * tmpvar_16) + 0.9999793) * tmpvar_15);\\n  tmpvar_16 = (tmpvar_16 + (float(\\n    (abs((tmpvar_12.x / tmpvar_12.y)) > 1.0)\\n  ) * (\\n    (tmpvar_16 * -2.0)\\n   + 1.570796)));\\n  tmpvar_14 = (tmpvar_16 * sign((tmpvar_12.x / tmpvar_12.y)));\\n  if ((abs(tmpvar_12.y) > (1e-08 * abs(tmpvar_12.x)))) {\\n    if ((tmpvar_12.y < 0.0)) {\\n      if ((tmpvar_12.x >= 0.0)) {\\n        tmpvar_14 += 3.141593;\\n      } else {\\n        tmpvar_14 = (tmpvar_14 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_14 = (sign(tmpvar_12.x) * 1.570796);\\n  };\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = (tmpvar_14 * 0.1591549);\\n  tmpvar_17.y = tmpvar_13;\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = ((tmpvar_17.x * 2.0) + tmpvar_8.x);\\n  tmpvar_18.y = ((0.3 * log(tmpvar_13)) + tmpvar_8.y);\\n  vec2 tmpvar_19;\\n  tmpvar_19 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_18 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  ret_2.x = (((\\n    (texture (sampler_blur1, tmpvar_19).xyz * scale1)\\n   + bias1).x * 0.97) - 0.02);\\n  ret_2.z = ((texture (sampler_main, (\\n    (0.5 + ((uv_orig - 0.5) * 0.985))\\n   + \\n    ((tmpvar_3.xy * texsize.zw) * 0.5)\\n  )).z * 0.85) - 0.004);\\n  vec2 tmpvar_20;\\n  tmpvar_20 = (texsize.zw * 4.0);\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(-1.0, 0.0)))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_21.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (tmpvar_20 * vec2(0.0, -1.0)))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  d_1 = (tmpvar_21 * texsize.zw);\\n  vec2 domain_22;\\n  domain_22 = (uv_orig - (d_1 * 2.5));\\n  vec4 tmpvar_23;\\n  tmpvar_23.w = 0.0;\\n  tmpvar_23.xyz = max (vec4(0.0, 0.0, 0.0, 0.0), texture (sampler_fc_main, (domain_22 + (texsize.zw * vec2(-1.0, 0.0))))).xyz;\\n  vec4 tmpvar_24;\\n  tmpvar_24.w = 0.0;\\n  tmpvar_24.xyz = max (tmpvar_23, texture (sampler_fc_main, (domain_22 + (texsize.zw * vec2(0.0, -1.0))))).xyz;\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 0.0;\\n  tmpvar_25.xyz = max (tmpvar_24, texture (sampler_fc_main, domain_22)).xyz;\\n  vec4 tmpvar_26;\\n  tmpvar_26.w = 0.0;\\n  tmpvar_26.xyz = max (tmpvar_25, texture (sampler_fc_main, (domain_22 + (texsize.zw * vec2(0.0, 1.0))))).xyz;\\n  ret_2.y = ((max (tmpvar_26, texture (sampler_fc_main, \\n    (domain_22 + (texsize.zw * vec2(1.0, 0.0)))\\n  )).y + (\\n    (texture (sampler_main, (uv_orig + (d_1 * 4.0))).y - ((texture (sampler_blur1, (uv_orig + \\n      (d_1 * 4.0)\\n    )).xyz * scale1) + bias1).y)\\n   * 0.206)) - 0.09);\\n  ret_2.y = (ret_2.y + ((\\n    (texture (sampler_blur1, tmpvar_19).xyz * scale1)\\n   + bias1).z * 0.25));\\n  vec4 tmpvar_27;\\n  tmpvar_27.w = 1.0;\\n  tmpvar_27.xyz = ret_2;\\n  ret = tmpvar_27.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 p_5;\\n  vec3 ret_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (min (abs(\\n    (tmpvar_7.x / 0.08)\\n  ), 1.0) / max (abs(\\n    (tmpvar_7.x / 0.08)\\n  ), 1.0));\\n  float tmpvar_10;\\n  tmpvar_10 = (tmpvar_9 * tmpvar_9);\\n  tmpvar_10 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_10) + 0.05368138) * tmpvar_10) - 0.1173503)\\n     * tmpvar_10) + 0.1938925) * tmpvar_10) - 0.3326756)\\n   * tmpvar_10) + 0.9999793) * tmpvar_9);\\n  tmpvar_10 = (tmpvar_10 + (float(\\n    (abs((tmpvar_7.x / 0.08)) > 1.0)\\n  ) * (\\n    (tmpvar_10 * -2.0)\\n   + 1.570796)));\\n  tmpvar_8 = (tmpvar_10 * sign((tmpvar_7.x / 0.08)));\\n  if ((0.08 <= (1e-08 * abs(tmpvar_7.x)))) {\\n    tmpvar_8 = (sign(tmpvar_7.x) * 1.570796);\\n  };\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = (min (abs(\\n    (tmpvar_7.y / 0.08)\\n  ), 1.0) / max (abs(\\n    (tmpvar_7.y / 0.08)\\n  ), 1.0));\\n  float tmpvar_13;\\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\\n  tmpvar_13 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\\n  tmpvar_13 = (tmpvar_13 + (float(\\n    (abs((tmpvar_7.y / 0.08)) > 1.0)\\n  ) * (\\n    (tmpvar_13 * -2.0)\\n   + 1.570796)));\\n  tmpvar_11 = (tmpvar_13 * sign((tmpvar_7.y / 0.08)));\\n  if ((0.08 <= (1e-08 * abs(tmpvar_7.y)))) {\\n    tmpvar_11 = (sign(tmpvar_7.y) * 1.570796);\\n  };\\n  vec3 tmpvar_14;\\n  tmpvar_14.x = (sin(tmpvar_8) * cos(tmpvar_11));\\n  tmpvar_14.y = (sin(tmpvar_11) * cos(tmpvar_8));\\n  tmpvar_14.z = (cos(tmpvar_8) * cos(tmpvar_11));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = ((tmpvar_14.z * q2) - (tmpvar_14.y * q3));\\n  tmpvar_15.y = ((tmpvar_14.z * q3) + (tmpvar_14.y * q2));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = ((tmpvar_15.x * q4) - (tmpvar_14.x * q5));\\n  tmpvar_16.y = ((tmpvar_15.x * q5) + (tmpvar_14.x * q4));\\n  p_5.z = tmpvar_16.x;\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = ((tmpvar_15.y * q6) - (tmpvar_16.y * q7));\\n  tmpvar_17.y = ((tmpvar_15.y * q7) + (tmpvar_16.y * q6));\\n  p_5.xy = tmpvar_17.yx;\\n  float tmpvar_18;\\n  float tmpvar_19;\\n  tmpvar_19 = (min (abs(\\n    (tmpvar_17.y / tmpvar_16.x)\\n  ), 1.0) / max (abs(\\n    (tmpvar_17.y / tmpvar_16.x)\\n  ), 1.0));\\n  float tmpvar_20;\\n  tmpvar_20 = (tmpvar_19 * tmpvar_19);\\n  tmpvar_20 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)\\n     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)\\n   * tmpvar_20) + 0.9999793) * tmpvar_19);\\n  tmpvar_20 = (tmpvar_20 + (float(\\n    (abs((tmpvar_17.y / tmpvar_16.x)) > 1.0)\\n  ) * (\\n    (tmpvar_20 * -2.0)\\n   + 1.570796)));\\n  tmpvar_18 = (tmpvar_20 * sign((tmpvar_17.y / tmpvar_16.x)));\\n  if ((abs(tmpvar_16.x) > (1e-08 * abs(tmpvar_17.y)))) {\\n    if ((tmpvar_16.x < 0.0)) {\\n      if ((tmpvar_17.y >= 0.0)) {\\n        tmpvar_18 += 3.141593;\\n      } else {\\n        tmpvar_18 = (tmpvar_18 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_18 = (sign(tmpvar_17.y) * 1.570796);\\n  };\\n  float tmpvar_21;\\n  tmpvar_21 = sqrt(dot (p_5.xz, p_5.xz));\\n  float tmpvar_22;\\n  float tmpvar_23;\\n  tmpvar_23 = (min (abs(\\n    (tmpvar_17.x / tmpvar_21)\\n  ), 1.0) / max (abs(\\n    (tmpvar_17.x / tmpvar_21)\\n  ), 1.0));\\n  float tmpvar_24;\\n  tmpvar_24 = (tmpvar_23 * tmpvar_23);\\n  tmpvar_24 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_24) + 0.05368138) * tmpvar_24) - 0.1173503)\\n     * tmpvar_24) + 0.1938925) * tmpvar_24) - 0.3326756)\\n   * tmpvar_24) + 0.9999793) * tmpvar_23);\\n  tmpvar_24 = (tmpvar_24 + (float(\\n    (abs((tmpvar_17.x / tmpvar_21)) > 1.0)\\n  ) * (\\n    (tmpvar_24 * -2.0)\\n   + 1.570796)));\\n  tmpvar_22 = (tmpvar_24 * sign((tmpvar_17.x / tmpvar_21)));\\n  if ((abs(tmpvar_21) > (1e-08 * abs(tmpvar_17.x)))) {\\n    if ((tmpvar_21 < 0.0)) {\\n      if ((tmpvar_17.x >= 0.0)) {\\n        tmpvar_22 += 3.141593;\\n      } else {\\n        tmpvar_22 = (tmpvar_22 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_22 = (sign(tmpvar_17.x) * 1.570796);\\n  };\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = (tmpvar_18 * q1);\\n  tmpvar_25.y = (((tmpvar_22 * q1) * 2.0) + 0.5);\\n  float cosw_26;\\n  cosw_26 = -(q6);\\n  vec2 tmpvar_27;\\n  tmpvar_27 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = ((cosw_26 * tmpvar_27.x) - (q7 * tmpvar_27.y));\\n  tmpvar_28.y = ((q7 * tmpvar_27.x) + (cosw_26 * tmpvar_27.y));\\n  vec2 tmpvar_29;\\n  tmpvar_29 = (0.5 - (tmpvar_28 * 2.0));\\n  vec2 tmpvar_30;\\n  tmpvar_30.x = (q9 * 0.5);\\n  tmpvar_30.y = (q8 * 0.5);\\n  vec2 numerator_31;\\n  numerator_31 = (tmpvar_29 - vec2(0.0, 0.5));\\n  vec2 denominator_32;\\n  denominator_32 = (tmpvar_29 - vec2(1.0, 0.5));\\n  vec2 tmpvar_33;\\n  tmpvar_33.x = ((numerator_31.x * denominator_32.x) + (numerator_31.y * denominator_32.y));\\n  tmpvar_33.y = ((numerator_31.y * denominator_32.x) - (numerator_31.x * denominator_32.y));\\n  vec2 tmpvar_34;\\n  tmpvar_34 = (((tmpvar_33 / \\n    ((denominator_32.x * denominator_32.x) + (denominator_32.y * denominator_32.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_35;\\n  tmpvar_35 = sqrt(dot (tmpvar_34, tmpvar_34));\\n  float tmpvar_36;\\n  float tmpvar_37;\\n  tmpvar_37 = (min (abs(\\n    (tmpvar_34.x / tmpvar_34.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_34.x / tmpvar_34.y)\\n  ), 1.0));\\n  float tmpvar_38;\\n  tmpvar_38 = (tmpvar_37 * tmpvar_37);\\n  tmpvar_38 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_38) + 0.05368138) * tmpvar_38) - 0.1173503)\\n     * tmpvar_38) + 0.1938925) * tmpvar_38) - 0.3326756)\\n   * tmpvar_38) + 0.9999793) * tmpvar_37);\\n  tmpvar_38 = (tmpvar_38 + (float(\\n    (abs((tmpvar_34.x / tmpvar_34.y)) > 1.0)\\n  ) * (\\n    (tmpvar_38 * -2.0)\\n   + 1.570796)));\\n  tmpvar_36 = (tmpvar_38 * sign((tmpvar_34.x / tmpvar_34.y)));\\n  if ((abs(tmpvar_34.y) > (1e-08 * abs(tmpvar_34.x)))) {\\n    if ((tmpvar_34.y < 0.0)) {\\n      if ((tmpvar_34.x >= 0.0)) {\\n        tmpvar_36 += 3.141593;\\n      } else {\\n        tmpvar_36 = (tmpvar_36 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_36 = (sign(tmpvar_34.x) * 1.570796);\\n  };\\n  vec2 tmpvar_39;\\n  tmpvar_39.x = (tmpvar_36 * 0.1591549);\\n  tmpvar_39.y = tmpvar_35;\\n  vec2 tmpvar_40;\\n  tmpvar_40.x = ((tmpvar_39.x * 2.0) + tmpvar_30.x);\\n  tmpvar_40.y = ((0.3 * log(tmpvar_35)) + tmpvar_30.y);\\n  vec2 tmpvar_41;\\n  tmpvar_41 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_40 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  vec2 tmpvar_42;\\n  vec2 tmpvar_43;\\n  tmpvar_43 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_42.x = (texture (sampler_main, (uv + tmpvar_43)).xyz - texture (sampler_main, (uv - tmpvar_43)).xyz).y;\\n  vec2 tmpvar_44;\\n  tmpvar_44 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_42.y = (texture (sampler_main, (uv + tmpvar_44)).xyz - texture (sampler_main, (uv - tmpvar_44)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_45;\\n  tmpvar_45.x = dx_3.y;\\n  tmpvar_45.y = dy_2.y;\\n  dz_1 = ((tmpvar_42 * 3.0) + tmpvar_45);\\n  vec2 tmpvar_46;\\n  tmpvar_46.x = dx_3.x;\\n  tmpvar_46.y = dy_2.x;\\n  vec2 tmpvar_47;\\n  tmpvar_47.x = dx_3.y;\\n  tmpvar_47.y = dy_2.y;\\n  vec3 tmpvar_48;\\n  vec3 tmpvar_49;\\n  tmpvar_49 = pow (hue_shader, vec3(4.0, 4.0, 4.0));\\n  tmpvar_48 = (mix (mix (\\n    mix (mix (ret_6, (1.0 - tmpvar_49), vec3((texture (sampler_main, tmpvar_41).x * 1.5))), vec3(1.5, 1.5, 1.5), ((texture (sampler_blur1, (\\n      fract(tmpvar_25)\\n     - \\n      ((tmpvar_46 * texsize.zw) * 256.0)\\n    )).xyz * scale1) + bias1).zzz)\\n  , vec3(1.0, 1.0, 1.0), vec3(\\n    (sqrt(dot (dz_1, dz_1)) + (texture (sampler_main, (uv + (\\n      (tmpvar_47 * texsize.zw)\\n     * 18.0))).y * 0.25))\\n  )), (tmpvar_49 * 1.4), (\\n    (texture (sampler_blur1, tmpvar_41).xyz * scale1)\\n   + bias1).zzz) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, \\n    fract(tmpvar_25)\\n  ).z * 0.76))));\\n  ret_6 = tmpvar_48;\\n  vec4 tmpvar_50;\\n  tmpvar_50.w = 1.0;\\n  tmpvar_50.xyz = tmpvar_48;\\n  ret = tmpvar_50.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi - piercing.json":
/*!*************************************************!*\
  !*** ./presets/converted/Flexi - piercing.json ***!
  \*************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"echo_orient\":1,\"wave_mode\":5,\"additivewave\":1,\"wave_a\":0,\"wave_scale\":0.9,\"wave_smoothing\":0.63,\"wave_mystery\":1,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpscale\":2.853,\"rot\":0.006,\"warp\":0,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"mv_x\":0,\"mv_y\":48,\"mv_dx\":-0.941,\"mv_dy\":0.426,\"mv_l\":5,\"mv_r\":0.316,\"mv_g\":0.078,\"mv_b\":0.942,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"rad\":0.78903,\"ang\":0.62832,\"tex_zoom\":1.02009,\"r\":0,\"g\":1,\"b\":1,\"r2\":0.7,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"c_x = 0.5;\\nc_y = 0.5;\",\"frame_eqs_eel\":\"// sx/sy code by Amandio C\\nsx=1+.01*(8*bass%8)*equal(time%(int(24-2*bass)),0);\\nsy=1+.01*(8*mid%8) *equal(time%(12+int(24-2*bass)),0);\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nr = if(beat, 0.01*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\n\\n\\nq3 = c_x;\\nq4 = c_y;\",\"pixel_eqs_eel\":\"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),2)-0);\\nv = 0.03;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;\",\"warp\":\"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 6.0)\\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 6.0)\\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.15) + (tmpvar_2 * 0.0042)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi - predator-prey-spirals [stahlregens gelatine finish].json":
/*!********************************************************************************************!*\
  !*** ./presets/converted/Flexi - predator-prey-spirals [stahlregens gelatine finish].json ***!
  \********************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.28,\"decay\":0.8,\"echo_zoom\":1,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"brighten\":1,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":0.01,\"warpscale\":100,\"zoomexp\":0.92178,\"zoom\":0.9901,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"ob_g\":1,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":39,\"additive\":1,\"num_inst\":126,\"rad\":0.06989,\"tex_ang\":0.62832,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"sides\":41,\"additive\":1,\"num_inst\":239,\"rad\":0.06989,\"tex_ang\":0.62832,\"r\":0,\"g\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"sides\":43,\"additive\":1,\"num_inst\":32,\"rad\":0.06989,\"tex_ang\":0.62832,\"r\":0,\"b\":1,\"g2\":0,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"sides\":14,\"additive\":1,\"num_inst\":127,\"rad\":0.0556,\"tex_ang\":0.62832,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;\",\"frame_eqs_eel\":\"xx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0008*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq10 = x1;\\nq11 = y1;\\nzoom = 1;\\nwarp = 0;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;\",\"pixel_eqs_eel\":\"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.11;\\nv = 20;\\nv2 = q5;\\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)) + cos(dir)*v2)*(1.00-sigmoid(d-r,100));\\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)) -sin(dir)*v2)*(1.00-sigmoid(d-r,100));\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.24)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.04));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.04));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.0);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader, ret_2)));\\n  ret_2 = (ret_2 * hue_shader);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi - psychenapping.json":
/*!******************************************************!*\
  !*** ./presets/converted/Flexi - psychenapping.json ***!
  \******************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.56,\"decay\":1,\"echo_zoom\":0.362,\"echo_orient\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.599,\"wave_smoothing\":0,\"wave_mystery\":-0.5,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpscale\":0.107,\"zoomexp\":0.1584,\"fshader\":1,\"warp\":0.01,\"wave_r\":0.51,\"wave_g\":0.5,\"ob_size\":0,\"ob_a\":1,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.5,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"rad\":0.50126,\"tex_zoom\":0.99996,\"g\":1,\"b\":1,\"r2\":1,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\"},{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"rad\":0.50126,\"g\":1,\"b\":1,\"g2\":0,\"b2\":1,\"border_g\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n\"},{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"rad\":0.50126,\"tex_zoom\":0.9998,\"g\":1,\"b\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"scaling\":0.16188,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"scaling\":25.12601,\"smoothing\":1,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"q11 = 0.5/asin(1);\",\"frame_eqs_eel\":\"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\nwave_r = 1- ib_r;\\nwave_g = 1- ib_g;\\nwave_b = 1- ib_b;\\n//wave_mystery = -1+bass/2;\\nwave_x = 0.5+sin(time*3)*0.3;\\nwave_y = 0.5+cos(time*2.187)*0.3;\\nt = t + 2.5/fps;\\nt = if(above(t,2),t-2,t);\\nq12 = -t;\",\"pixel_eqs_eel\":\"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, fract(uv)).xyz;\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv - 0.5) * aspect.wz);\\n  float tmpvar_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (min (abs(\\n    (tmpvar_1.x / tmpvar_1.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_1.x / tmpvar_1.y)\\n  ), 1.0));\\n  float tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * tmpvar_3);\\n  tmpvar_4 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_4) + 0.05368138) * tmpvar_4) - 0.1173503)\\n     * tmpvar_4) + 0.1938925) * tmpvar_4) - 0.3326756)\\n   * tmpvar_4) + 0.9999793) * tmpvar_3);\\n  tmpvar_4 = (tmpvar_4 + (float(\\n    (abs((tmpvar_1.x / tmpvar_1.y)) > 1.0)\\n  ) * (\\n    (tmpvar_4 * -2.0)\\n   + 1.570796)));\\n  tmpvar_2 = (tmpvar_4 * sign((tmpvar_1.x / tmpvar_1.y)));\\n  if ((abs(tmpvar_1.y) > (1e-08 * abs(tmpvar_1.x)))) {\\n    if ((tmpvar_1.y < 0.0)) {\\n      if ((tmpvar_1.x >= 0.0)) {\\n        tmpvar_2 += 3.141593;\\n      } else {\\n        tmpvar_2 = (tmpvar_2 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_2 = (sign(tmpvar_1.x) * 1.570796);\\n  };\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((tmpvar_2 * q11) * 1.5);\\n  tmpvar_5.y = (((0.666 * \\n    log(sqrt(dot (tmpvar_1, tmpvar_1)))\\n  ) - (tmpvar_2 * q11)) + q12);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = texture (sampler_main, clamp ((0.5 + (\\n    (0.5 - abs(((\\n      fract((tmpvar_5 * 0.5))\\n     * 2.0) - 1.0)))\\n   * vec2(0.96, 1.02))), 0.0, 1.0)).xyz;\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi - smashing fractals 2.0.json":
/*!**************************************************************!*\
  !*** ./presets/converted/Flexi - smashing fractals 2.0.json ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":0.999797,\"echo_orient\":2,\"wave_mode\":1,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.004361,\"wave_scale\":0.01,\"wave_smoothing\":0,\"wave_mystery\":-0.44,\"modwavealphastart\":1,\"modwavealphaend\":1.000001,\"warpanimspeed\":0.01,\"warpscale\":100,\"zoomexp\":0.321044,\"warp\":0.01,\"wave_y\":0.04,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":1,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"thickoutline\":1,\"y\":0.75,\"rad\":0.074934,\"tex_zoom\":0.734576,\"g\":1,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"x = q4;\\ny = q8;\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.7,\"y\":0.3,\"rad\":0.6623,\"ang\":2.450441,\"tex_zoom\":0.749341,\"g\":0.1,\"b\":0.1,\"r2\":1,\"g2\":0.1,\"b2\":0.1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"xx = 0.5;\\nyy = 0.4;\",\"frame_eqs_eel\":\"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.43,\"y\":0.6,\"rad\":1.167812,\"ang\":5.969028,\"tex_zoom\":0.671652,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"xx = 0.5;\\nyy = 0.4;\",\"frame_eqs_eel\":\"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"y\":0.75,\"rad\":0.070592,\"tex_zoom\":0.734576,\"g\":0.5,\"b\":0.5,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"x = q1;\\ny = q5;\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"scaling\":2.44415,\"smoothing\":0,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;\",\"point_eqs_eel\":\"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;\"},{\"baseVals\":{\"scaling\":7.7518,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;\",\"point_eqs_eel\":\"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":5.925558,\"smoothing\":0,\"g\":0,\"b\":0,\"a\":0.66,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\"},{\"baseVals\":{\"thick\":1,\"scaling\":5.925558,\"smoothing\":0,\"r\":0.65,\"g\":0.45,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\"}],\"init_eqs_eel\":\"x1 = 0;\\ny1 = 0;\",\"frame_eqs_eel\":\"decay = 0.25;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1));\\ny1 = max(0,min(1,y1));\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 50;\\ngrav = 2;\\nresist = 5;\\nbounce = 0.75;\\ndt = 0.0005;\\n\\nspx2 = (x1+x3-2*x2)*spring;\\nspy2 = (y1+y3-2*y2)*spring;\\nspx3 = (x2+x4-2*x3)*spring;\\nspy3 = (y2+y4-2*y3)*spring;\\nspx4 = (x3-x4)*spring;\\nspy4 = (y3-y4)*spring;\\n\\nvx2 = vx2*(1-resist*dt) + dt*(spx2);\\nvy2 = vy2*(1-resist*dt) + dt*(spy2-grav);\\nvx3 = vx3*(1-resist*dt) + dt*(spx3);\\nvy3 = vy3*(1-resist*dt) + dt*(spy3-grav);\\nvx4 = vx4*(1-resist*dt) + dt*(spx4);\\nvy4 = vy4*(1-resist*dt) + dt*(spy4-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0.1),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,0.9),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0.1),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,0.9),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0.1),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,0.9),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nmonitor = ry4;\\n\\nzoom = 1;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur2, \\n    (uv + vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3;\\n  tmpvar_5.y = tmpvar_4;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (tmpvar_5 * 0.01));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_6 - floor(tmpvar_6))).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, (tmpvar_6 - floor(tmpvar_6))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor(uv);\\n  ret_2.y = (ret_2.y + (0.006 - (\\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x * 5.0)));\\n  ret_2.y = ret_2.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = -(tmpvar_4);\\n  tmpvar_8.y = tmpvar_3;\\n  my_uv_1 = (tmpvar_8 * 0.05);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_9.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2)).z;\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_9 * 0.005)));\\n  ret_2.z = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((ret_2.z - \\n    ((texture (sampler_blur3, (my_uv_1 - floor(my_uv_1))).xyz * scale3) + bias3)\\n  .z) * 0.13));\\n  ret_2.z = (ret_2.z * 0.95);\\n  ret_2.z = (ret_2.z + ((0.03 - \\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x) - (texture (sampler_main, \\n    (my_uv_1 - floor(my_uv_1))\\n  ).y * 0.05)));\\n  ret_2.x = (texture (sampler_main, uv_orig).x - 0.3);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix ((mix (\\n    mix (mix ((mix (vec3(1.0, 1.0, 0.5), vec3(0.15, 0.0, 0.2), vec3(\\n      (1.0 - ((texture (sampler_blur3, (vec2(0.51, 0.5) + tmpvar_2)).xyz * scale3) + bias3).x)\\n    )) * (vec3(1.0, 1.0, 1.0) - \\n      ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n    .xxx)), vec3(-0.2, 0.0, 0.5), ((texture (sampler_blur1, \\n      (vec2(0.5, 0.5) + (tmpvar_2 * 0.96))\\n    ).xyz * scale1) + bias1).xxx), vec3(0.9, 0.7, 0.0), tmpvar_1.xxx)\\n  , vec3(0.5, 0.5, 0.0), tmpvar_1.yyy) * (vec3(1.0, 1.0, 1.0) - vec3(\\n    ((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 2.0) - tmpvar_1.y)\\n  ))), vec3(0.5, 0.0, 0.1), tmpvar_1.zzz);\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi, Geiss and Rovastar - chaos layered tokamak.json":
/*!**********************************************************************************!*\
  !*** ./presets/converted/Flexi, Geiss and Rovastar - chaos layered tokamak.json ***!
  \**********************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_orient\":2,\"wave_mode\":1,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.004,\"wave_scale\":0.01,\"wave_smoothing\":0,\"wave_mystery\":-0.44,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpscale\":1.331,\"zoom\":1.004,\"warp\":0.19788,\"sx\":0.99967,\"sy\":0.9999,\"wave_y\":0.04,\"ob_size\":0,\"ob_r\":1,\"ob_a\":0.7,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":1,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"thickoutline\":1,\"rad\":0.04466,\"tex_zoom\":0.73458,\"g\":1,\"b\":1,\"a\":0.03,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.7,\"y\":0.3,\"rad\":0.6623,\"ang\":2.45044,\"tex_zoom\":0.74934,\"g\":0.1,\"b\":0.1,\"r2\":1,\"g2\":0.1,\"b2\":0.1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"xx = 0.5;\\nyy = 0.4;\",\"frame_eqs_eel\":\"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);\\nyy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);\\naang = if(below(d,0.12),int(rand(1000))/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.43,\"y\":0.6,\"rad\":1.16781,\"ang\":5.96903,\"tex_zoom\":0.67165,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"xx = 0.5;\\nyy = 0.4;\",\"frame_eqs_eel\":\"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);\\nyy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);\\naang = if(below(d,0.12),int(rand(1000))/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"y\":0.75,\"rad\":0.07059,\"tex_zoom\":0.73458,\"g\":0.5,\"b\":0.5,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"x = q1;\\ny = q5;\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"scaling\":2.44415,\"smoothing\":0,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;\",\"point_eqs_eel\":\"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;\"},{\"baseVals\":{\"scaling\":7.7518,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;\",\"point_eqs_eel\":\"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":5.92556,\"smoothing\":0,\"g\":0,\"b\":0,\"a\":0.66,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\"},{\"baseVals\":{\"thick\":1,\"scaling\":5.92556,\"smoothing\":0,\"r\":0.65,\"g\":0.45,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );\",\"pixel_eqs_eel\":\"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.2*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5)*aspectx;\\ndy = mult*cos(ang2*2-1.5)*aspecty;\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur2, \\n    (uv + vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.005, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.005))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3;\\n  tmpvar_5.y = tmpvar_4;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (tmpvar_5 * 0.01));\\n  ret_2.y = texture (sampler_fc_main, (tmpvar_6 - floor(tmpvar_6))).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, (tmpvar_6 - floor(tmpvar_6))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor(uv);\\n  ret_2.y = (ret_2.y + (0.006 - (\\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x * 5.0)));\\n  ret_2.y = ret_2.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = -(tmpvar_4);\\n  tmpvar_8.y = tmpvar_3;\\n  my_uv_1 = (tmpvar_8 * 0.05);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_9.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2)).z;\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_9 * 0.005)));\\n  ret_2.z = texture (sampler_fw_main, (my_uv_1 - floor(my_uv_1))).z;\\n  ret_2.z = (ret_2.z + ((ret_2.z - \\n    ((texture (sampler_blur3, (my_uv_1 - floor(my_uv_1))).xyz * scale3) + bias3)\\n  .z) * 0.13));\\n  ret_2.z = (ret_2.z * 0.95);\\n  ret_2.z = (ret_2.z + ((0.03 - \\n    ((texture (sampler_blur3, (uv - tmpvar_7)).xyz * scale3) + bias3)\\n  .x) - (texture (sampler_main, \\n    (my_uv_1 - floor(my_uv_1))\\n  ).y * 0.05)));\\n  ret_2.x = (texture (sampler_main, uv).x - 0.3);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_2;\\n  ret = tmpvar_10.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv).xyz - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret_1 = ((vec3(0.9, 0.5, 0.0) * ret_1.z) + (vec3(0.4, 0.0, 0.8) * ret_1.y));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi, fishbrain + Martin - witchery.json":
/*!*********************************************************************!*\
  !*** ./presets/converted/Flexi, fishbrain + Martin - witchery.json ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.56,\"decay\":1,\"echo_zoom\":0.362,\"echo_orient\":1,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":2.853,\"fshader\":1,\"rot\":0.006,\"warp\":0,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":5,\"additive\":1,\"num_inst\":2,\"x\":0.49,\"rad\":0.11589,\"tex_zoom\":4.36077,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0,\"g\":0.3,\"b\":0.75},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0,\"b\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"g\":0.5,\"b\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0.4,\"g\":0,\"b\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"c_x = 0.5;\\nc_y = 0.5;\",\"frame_eqs_eel\":\"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\nvol = bass*8 + mid*5 + treb*3;\\nm = m*0.96 + vol*0.06;\\nmonitor = vol-m;\\nbeat = above(vol,res)*above(vol,m)*above(vol,10);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.15) + (1-beat)*(res -  (0.15+diff*0.03)*60/fps);\\nres = max(0,res);\\n\\nr = if(beat, 0.02*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\nv = if(beat,0.035 + 0.025*(rand(200)-100)*0.01, v);\\n\\n\\nq3 = c_x;\\nq4 = c_y;\\nq5 = v;\\nq6 = beat;\",\"pixel_eqs_eel\":\"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),0.5)-0);\\nv = q5;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 64.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Flexi, martin + geiss - painterly rogue wave strike.json":
/*!************************************************************************************!*\
  !*** ./presets/converted/Flexi, martin + geiss - painterly rogue wave strike.json ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.56,\"decay\":1,\"echo_zoom\":0.362,\"echo_orient\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.599,\"wave_smoothing\":0,\"wave_mystery\":-0.5,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpscale\":0.107,\"zoomexp\":0.1584,\"fshader\":1,\"warp\":0.01,\"wave_r\":0.51,\"wave_g\":0.5,\"ob_size\":0,\"ob_a\":1,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.5,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"rad\":0.50126,\"tex_zoom\":0.99996,\"g\":1,\"b\":1,\"r2\":1,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\"},{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"rad\":0.50126,\"g\":1,\"b\":1,\"g2\":0,\"b2\":1,\"border_g\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n\"},{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"rad\":0.50126,\"tex_zoom\":0.9998,\"g\":1,\"b\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"scaling\":0.16188,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"scaling\":25.12601,\"smoothing\":1,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\nwave_r = 1- ib_r;\\nwave_g = 1- ib_g;\\nwave_b = 1- ib_b;\\n//wave_mystery = -1+bass/2;\\nwave_x = 0.5+sin(time*3)*0.3;\\nwave_y = 0.5+cos(time*2.187)*0.3;\",\"pixel_eqs_eel\":\"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = bass;\\n  tmpvar_1.y = treb;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * \\n    (0.005 + (0.045 * clamp ((tmpvar_1 - 1.0), 0.0, 1.0)))\\n  ))).xyz - 0.001);\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\"vec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1.x = uv.x;\\n  float z_2;\\n  uv_1.y = (uv.y - 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  z_2 = (1.0/(tmpvar_3.y));\\n  xlat_mutablers0.x = (tmpvar_3.x * z_2);\\n  xlat_mutablers0.y = z_2;\\n  xlat_mutablers.x = (xlat_mutablers0.x + (time / 2.0));\\n  xlat_mutablers.y = (z_2 + time);\\n  float tmpvar_4;\\n  tmpvar_4 = clamp ((12.0 * tmpvar_3.y), 0.0, 1.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = fract(((tmpvar_3 + 0.5) - (\\n    ((vec3(dot (texture (sampler_noise_hq, (xlat_mutablers / 2.0)), vec4(0.32, 0.49, 0.29, 0.0))) - 0.55) * 0.1)\\n   * tmpvar_4).xy));\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  tmpvar_6.x = texsize.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.0;\\n  tmpvar_7.y = texsize.w;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_6)).xyz), vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_7)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_7)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutableuv3 = (tmpvar_5 + (tmpvar_8 * (1.0 - tmpvar_4)));\\n  vec2 x_9;\\n  x_9 = ((tmpvar_3 + 0.45) + (tmpvar_8 * 24.0));\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_main, fract(xlat_mutableuv3));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ((tmpvar_10.xyz + (\\n    (vec3((0.02 / sqrt(dot (x_9, x_9)))) * (1.0 - tmpvar_4))\\n   * 2.0)) + clamp ((\\n    (q22 * clamp (((\\n      (0.01 * abs((xlat_mutableuv3.x - 0.5)))\\n     / \\n      abs((xlat_mutableuv3.y - 0.55))\\n    ) - (tmpvar_8 * 4.0)), 0.0, 1.0).x)\\n   * \\n    clamp ((1.0 - dot ((tmpvar_10.xyz * 4.0), vec3(0.32, 0.49, 0.29))), 0.0, 1.0)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_11.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Fumbling_Foo & Flexi, Martin, Orb, Unchained - Star Nova v7b.json":
/*!*********************************************************************************************!*\
  !*** ./presets/converted/Fumbling_Foo & Flexi, Martin, Orb, Unchained - Star Nova v7b.json ***!
  \*********************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"invert\":1,\"wave_a\":0.001,\"warpanimspeed\":100,\"warpscale\":0.01,\"zoomexp\":1.14947,\"warp\":0,\"sx\":0.9901,\"sy\":0.9901,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_r\":1,\"ib_g\":1,\"ib_b\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":30,\"textured\":1,\"x\":0.89,\"y\":0.86,\"rad\":0.92324,\"tex_ang\":1.19381,\"tex_zoom\":0.2274,\"g\":1,\"b\":1,\"a\":0.5,\"r2\":1,\"b2\":1,\"border_r\":0,\"border_g\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"tex_saw = 0.4;\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":30,\"textured\":1,\"x\":0.16,\"y\":0.73,\"rad\":0.9998,\"tex_zoom\":0.21006,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0,\"border_g\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"tex_saw = 0.4;\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"rad\":0.22167,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = above(q4,1000 - 9000/fps) && above(q3, 1.5);\\na2 = above(q4,1000) && above(q3, 1.5);\\n\\nxx = if(above(q4,1000 - 3/fps), rand(100)*0.01, rand(100)*0.01);\\nyy = if(above(q4,1000 - 3/fps), rand(100)*0.01, rand(70)*0.01 + .15);\\nradi = if(above(q4, 1000 - 3/fps), sqrt(q3)*.333 + .15, sqrt(q3)*.4);\\n\\nrad = radi;\\n\\nx = xx;\\ny = yy;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\\ng = 0.45 + 0.45*sin(q1*1.307);\\nb = 0.45 + 0.45*sin(q1*1.959);\\n\\n\\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\\ng2 = 0.45 + 0.45*sin(q1*1.507);\\nb2 = 0.45 + 0.45*sin(q1*1.6559);\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"thick\":1,\"a\":0.42},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//init\\nzs = if(below(zs,-9.42478),0,zs);\\n\\nzs = if(above(zs, 9.42478),0, zs);\\n\\nspeed = .0025*floor(tan(pow(q3, .667)))*(1.5708*atan(bass) + 1.5708*atan(mid) + 1.5708*atan(treb)); //pattern source?\\n\\n//sum\\nzs += speed; //resonant beat detection\\n\\n//project position and radius and pattern speed & beat detection\\nx = 0.5 + (0.18 + pow(q3, 1.25)*.005)*cos(zs*asin(1)*100);\\ny = 0.5 + (0.18 + pow(q3, 1.25)*.005)*sin(zs*asin(1)*100);\\n\\n\\n// color waveform to bass / mid / treble\\nif(above(mid + treb, bass*2), r = .3 - abs(.33*sin(1 - q29*bass*bass)), r = .7 + abs(.33*sin(1 - q29*bass*bass)));\\nif(above(bass + treb, mid*2), g = .3 - abs(.33*sin(1 - q30*mid*mid)), g = .7 + abs(.33*sin(1 - q30*mid*mid)));\\nif(below(mid + bass, treb*2), b = .3 - abs(.33*sin(1 - q3*treb*treb)), b = .7 + abs(.33*sin(1 - q3*treb*treb)));\\n\\n//match opacity to nearness of central beat\\na = .175 + q4*.0007;\"},{\"baseVals\":{\"samples\":64,\"spectrum\":1,\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"thick\":1,\"a\":0.42,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"index = 0;\\nloop (200000,\\n  megabuf(index) = 0;\\n  gmegabuf(index) = 0;\\n  index = index + 1;\\n);\\n\\ntstart = time;\\n\\nbd_recsz   = 8;\\nbd_oct     = 4; //Oktaven\\nbd_spo     = 30;//Res. pro Oktave\\nbd_finc    = pow(2.0,1/bd_spo); //Freq. Incr. \\nbd_nres    = bd_oct * bd_spo;\\nbd_minbpm  = 20;\\nbd_maxbpm  = pow(2,bd_oct)*bd_minbpm;\\n\\n//mem spaces\\nbd_dat0    = 100000;\\nbd_tab0     = bd_dat0 + bd_nres * bd_recsz * 3;\\n\\n\\n//Fill BPM Tab\\n//n = bd_dat0;\\n//BPM = bd_minbpm;\\n//loop (bd_nres,gmegabuf (n) = BPM; BPM *=  bd_finc; n += bd_recsz;);\\n\\n\\n//##### nur fuer Darstellung\\nreg00 = bd_minbpm;\\nreg01 = bd_maxbpm;\\nreg02 = bd_recsz;\\nreg03 = bd_nres;\\nreg05 = bd_finc;\\n\\nreg06 = bd_dat0;\\nreg07 = bd_mp0;\\n\\ntime_st = 0;\\ntimediff = 1;\",\"frame_eqs_eel\":\"//############## THIS IS A CONSTRUCTION SITE #########\\n\\ndt = min (1/fps,0.1) ; //Stability !\\ndec_m = 1-dt*4; dec_s = 1 - dt; dec_xs = 1-dt/6;\\nt0 = time - tstart;\\n\\nbd_b =  bass; bd_bass_ = bd_bass_*dec_m + (1-dec_m)*bd_b; bd_bass = bd_b-bd_bass_;\\nbd_m =  mid ; bd_mid_  = bd_mid_ *dec_m + (1-dec_m)*bd_m; bd_mid =  bd_m -bd_mid_;\\nbd_t =  treb; bd_treb_ = bd_treb_*dec_m + (1-dec_m)*bd_t; bd_treb = bd_t-bd_treb_;\\n\\nn = 0; BPM = bd_minbpm; \\nloop (bd_nres, \\n  gmegabuf(50000+n*bd_recsz) = 0; \\n  bd_arg = BPM/60*t0*6.283; \\n  gmegabuf (bd_tab0+n*bd_recsz) = BPM; \\n  BPM *= bd_finc;\\nn+=1);\\n\\nbd_src=0;\\nloop (3, bd_exc = bd_bass*(bd_src==0) + bd_mid*(bd_src==1) + bd_treb*(bd_src==2);\\n  oct = 0;\\n  loop (bd_oct,\\n    bd_slot = 0;\\n    bd_pk = 0; bd_mean = 0.0;\\n    loop (bd_spo,\\n      bd_tabptr = bd_tab0 +                 (oct*bd_spo+ bd_slot)*bd_recsz;\\n      n        =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ bd_slot)*bd_recsz;\\n      BPM = gmegabuf(bd_tabptr); bd_omega = BPM/60*6.283;\\n      Feder = sqr(bd_omega); //Res.f = sqrt (Feder)/2pi (Hz)\\n      gmegabuf (n+4) = gmegabuf(n+2); //alte pos\\n      gmegabuf (n+1) *= 1-.5*dt * sqrt (BPM/300); //damping\\n\\n      EC_Steps = int (1 + BPM/50)*2;\\n      loop (EC_Steps, // Euler-Cauchy steps\\n        Kraft = bd_exc - Feder*gmegabuf(n + 2) ;\\n        gmegabuf (n+1) += Kraft         * dt/EC_Steps;\\n        gmegabuf (n+2) += gmegabuf(n+1) * dt/EC_Steps;  \\n      );\\n      beatcos = gmegabuf(n+1);  beatsin = gmegabuf(n+2)*bd_omega;\\n      quad = sqrt (pow(beatsin,2) + pow(beatcos,2));\\n      gmegabuf (n) = gmegabuf(n)*0.8 + 0.2*quad;\\n      bd_ampl = gmegabuf(n);\\n      bd_mean += bd_ampl;\\n      if (bd_ampl > bd_pk, bd_pk=bd_ampl, 0);\\n    bd_slot +=1;);\\n // Komb. bass,mid,treb\\n    bd_slot = 0;    \\n    bd_qual = pow(bd_pk/bd_mean*bd_spo-1,1);\\n    gmegabuf((bd_src*bd_oct+oct)*2) = bd_qual;\\n    loop (bd_spo,\\n      m =  50000 + (bd_slot + 0*oct*bd_spo)*bd_recsz;\\n      n =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ bd_slot)*bd_recsz; //#2x berechnet\\n      gmegabuf(m) += (bd_qual)*gmegabuf (n)/12;\\n    bd_slot +=1;);\\n  oct += 1;);\\nbd_src +=1;);\\n\\n\\n//Get maxind\\nbd_slot = 0; maxind = 0; bd_pk = 0; bd_mean = 0;\\nloop (bd_spo,\\n   m =  50000 + bd_slot*bd_recsz;\\n   gmegabuf(m) = pow(gmegabuf(m),1);\\n   bd_mean += gmegabuf(m);\\n   if (gmegabuf(m) > bd_pk, bd_pk = gmegabuf(m); maxind = bd_slot, 0);\\nbd_slot += 1);\\nquali = bd_pk/bd_mean*bd_spo-1;\\n\\nn = 0; loop (150, gmegabuf(50+n) *= 0; n+=1);\\n\\n//KREISE\\nbd_src = 0; tsin = 0; tcos = 0;\\nloop (3,\\n  oct = 0;  \\n  loop (bd_oct,\\n    n         =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ maxind)*bd_recsz;\\n    bd_tabptr = bd_tab0  +                 (oct*bd_spo+ maxind)*bd_recsz;\\n    BPM = gmegabuf(bd_tabptr); \\n\\n    im =  gmegabuf(n+1);\\n    re =  gmegabuf(n+2) * BPM/60*6.283;\\n    bd_cos =  cos (BPM/60*6.28*time);\\n    bd_sin = -sin (BPM/60*6.28*time);\\n\\n//Winkel zurueckdrehen. Das sind nun die Winkel relativ zu cos(oct*time).\\n    re0 =  re*bd_cos + im*bd_sin;\\n    im0 = -re*bd_sin + im*bd_cos;\\n    bd_qual = gmegabuf((bd_src*bd_oct+oct)*2);\\n    gmegabuf (50+oct*4)   +=  bd_qual * (im0)*1;\\n    gmegabuf (50+oct*4+1) +=  bd_qual * (re0)*1;\\n    gmegabuf (50+oct*4+2) +=  bd_qual;\\n\\n//Summe der besten Beitraege. Das ist der Referenzwinkel.\\n    gmegabuf (100+0)  +=  bd_qual * im0;\\n    gmegabuf (100+1)  +=  bd_qual * re0;\\n\\n//Nun sollten wir die Differenzwinkel zur Ref berechnen. Und was damit ? Dann kann ich die\\n//Einzelwinkel auf Ref bringen - bringt doch nichts !\\n//Ich kann alle auf Null drehen, daraus sinusse erzeuge und addieren ->besserer Takt ?\\n    re =  (bd_cos*re0 + bd_sin*im0);\\n    im =  (-bd_cos*im0 + bd_sin*re0);\\ntsin += im*5;\\n\\n  oct += 1);\\nbd_src +=1);\\nq30 = tsin;\\n\\nvol = bass_att + mid_att + treb_att;\\nvol_ = vol_*0.95 + 0.05*vol;\\nq29 = vol-vol_;\\n\\n//Welche Oktave ???\\nbd_src = 0; maxo = 0; maxs = 0; maxa = 0;\\nloop (3,\\n  oct = 1;  \\n  loop (bd_oct-1,\\n    n =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ maxind)*bd_recsz;\\n    bd_qual = gmegabuf((bd_src*bd_oct+oct)*2);\\n\\n    ampl = bd_qual / (1+oct*(maxind/bd_oct)*0);\\n    if (ampl>maxa, maxa = ampl; maxs = bd_src; maxo = oct;, 0);\\n  oct += 1);\\nbd_src +=1);\\n\\nq28 = pow(4*bd_qual,1.5);\\nq31 = q28;\\nif(above(q28,50),q28 = pow(5*sin(.5*bd_qual), 2), 0);\\n\\n//monitor = q31;\\n\\n\\n//Beat-Flash\\ntesti = bd_nres*maxs +bd_spo*maxo + maxind;\\nif (bor (beat && (prog==0), abs(testi-test0)<2),test0 = testi,0);\\nn =  bd_dat0 + (test0)*bd_recsz;\\ncreep = gmegabuf(n+1);\\nbeat =  (creep>0) * (creepo <0);\\nbeatct = if (change, 0, beatct+beat);\\nprog = (prog+beat)%8;\\ncreepo = creep;\\nshow = if (beat, 1, show*0.5);\\nq4 = (gmegabuf(n+1)/gmegabuf(n)*1000);\\nq2 = prog;\\n\\n\\nif(beat, timediff = time - time_st; time_st = time, timediff = timediff); \\nif(below(timediff, .0625), timediff = .0625, timediff = timediff);\\nq8 = timediff;\\n//avgtime = avgtime*.975 + timediff*.0225;\\n//q9 = avgtime;\\n\\nmonitor = q8;\\n\\n//Selbst bei Barbie Girl fehlt manchmal der Rhythmus in Band 2,\\n//obwohl das der gefuehlte Takt ist - >Problem mit Phasenkorrektur !\\n//stehen Phasen bei doppelter Frequenz in Relation ? NEIN.\\n\\n\\n\\n\\n\\n//Problem: Fats Domino (1992) hat 55BPM -> Problem mit 110\\n//Problem: 1991 London Beat I been thinking about you - geht nicht - solved\\n//Problem: U96 - Love religion (1995) beginnt mit BPM < 20\\n//Porblem: adiemus (1995)\\n//Konflikt-Beat siehe Michale jackson b&W (1991)\\n\\n\\nq24 = bd_maxbpm;\\n//q32 = aspecty;\\n\\n\\nold_bass_flop=bass_flop;\\nold_treb_flop=treb_flop;\\nold_mid_flop=mid_flop;\\nchaos=.9+.1*sin(pulse);\\nentropy=if(equal(pulse,-20),1+bass_flop+treb_flop+mid_flop+q4*.002,entropy);\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.6)*chaos+1.6);\\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.6)*chaos+1.6);\\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.6)*chaos+1.6);\\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\\nbass_residual = bass_changed*sin(pulse*1.5) + bnot(bass_changed)*bass_residual;\\ntreb_residual = treb_changed*sin(pulse*1.5) + bnot(treb_changed)*treb_residual;\\nmid_residual = mid_changed*sin(pulse*1.5) + bnot(mid_changed)*mid_residual;\\npulse=if(above(abs(pulse),20),-20,pulse+(bass_thresh+mid_thresh+treb_thresh)*.018);\\nq11=mid_residual;\\nq12=bass_residual;\\nq13=treb_residual;\\nq14=sin(pulse);\\nq15=cos(pulse*(.5+.1*entropy));\\nq16=sin(pulse*(.5+pow(.25,entropy)));\\nob_r=sin(time*1.0785+q16);\\nob_b=sin(time*0.8445+q15);\\nob_g=sin(time*.413+q14);\\nib_r=cos(time*0.6+q11*.1);\\nib_b=cos(time*1.4055+q12*.1);\\nib_g=cos(time*0.833+q13*.1);\\nib_size=.05+.03*q12;\\nob_size=.03+.02*sin(time*2.321+q12*.2);\\nob_a=.6+.4*q13;\\nib_a=.9+.1*sin(q12*.3+q14+q11*.5);\\nrot=0;\\n\\n//monitor = q13;\\n\\n\\nbasstime += q29*.1*30/fps;\\nq1 = basstime;\\n\\n//start in most active range\\nbasstime = if(below(basstime, -10000), 0, basstime);\\nbasstime = if(above(basstime, 10000), 0, basstime);\\n\\nbasstime += bass_att*0.025 * 30/fps;\\nvol2 = pow(bass+mid+treb,2);\\nbasssum = vol2;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol2*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol2*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n//pv_beat = pv_beat*0.2*sqrt(fps/30) + 0.1*(bass_att*bass + mid_att*mid + treb_att*treb)*sqrt(q3);\\npv_beat = pv_beat*0.2*sqrt(fps/30) + 0.1*(bass_att*bass_att + mid_att*mid_att + treb_att*treb_att)*(.001*q4)/sqrt(q8);\\nq32 = pv_beat;\\nmonitor = q32;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\nwarp = (bass*bass + mid*mid + treb*treb)*.005;\\n\\nfoo_r = sin(q1*0.34313);\\nfoo_g = sin(q1*0.3675);\\nfoo_b = sin(q1*0.55095);\\n\\nif(above(foo_r, foo_g) && above(foo_r, foo_b), q23 = 1, q23 = 0);\\nif(above(foo_g, foo_r) && above(foo_g, foo_b), q21 = 1, q21 = 0);\\nif(above(foo_b, foo_r) && above(foo_b, foo_g), q22 = 1, q22 = 0);\\nif(equal(q11+q12+q13,0), q22 = 1, 0);\\n\\nq5 = 30/fps;\\n\\nq19 = 50;\\nq20 = 1;\\n\\nif(above(q31, 14), q19 = 100, q19 = q19);\\n\\nif(above(q31, 50), q19 = 500, q19 = q19);\\n\\n//if(above(q31, 55), \\n//     if(above(q3, 3.5), foo = 1.0 + .333/(bass_att*bass_att*bass_att); q20 = 30000, foo = foo);\\n//     if(above(bass_att + mid_att + treb_att, 2.5), q19 = foo; q20 = 30000, q19 = q19),\\n//     q19 = q19);\\n\\n\\n\\n//if(below(bass_att + mid_att + treb_att, 1), q19 = 0, q19 = q19);\\n\\n\\nif(above(q3, 2), q19 = .5 + 10*q8, q19 = q19);\",\"pixel_eqs_eel\":\"if(q32>1.2*sqrt(bass_att), \\n    rot=if(above(q14,0),rad*.2*q15,tan(rad*(.001*q4)));\\n    zoom=if(above(q12,1.5),zoom+(1-zoom)*rot*cos(rad*3.14*q12),if(above(q13,2)*above(x,.5+.5*q15),zoom+(1-zoom)*sin(q11*rot*3.14),zoom+(1-zoom)*cos(rad*3*q16)));\\n    dx=above(q11,0)*sin(rad*.5*q12);\\n    dy=above(q13,0)*sin(rad*.5*q13),\\n\\n    zoom = q19;\\n    zoomexp = q20;\\n    rot = 0);\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_pw_main, uv_orig);\\n  ret_1 = ((texture (sampler_blur1, tmpvar_2.xy).xyz * scale1) + bias1);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((((1.0 - ret_1.x) * (1.0 - ret_1.y)) * (1.0 - ret_1.z)));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((texsize.zw * q5) * -3.0) * ((\\n    pow (tmpvar_3, vec3(0.333, 0.333, 0.333))\\n   + \\n    ((((0.5 * tmpvar_3) * (\\n      (texture (sampler_blur2, ret_1.xx).xyz * scale2)\\n     + bias2)) * ((texture (sampler_blur2, ret_1.yy).xyz * scale2) + bias2)) * ((texture (sampler_blur2, ret_1.zz).xyz * scale2) + bias2))\\n  ) + (\\n    ((0.25 * ((texture (sampler_blur3, ret_1.xx).xyz * scale3) + bias3)) * ((texture (sampler_blur3, ret_1.yy).xyz * scale3) + bias3))\\n   * \\n    ((texture (sampler_blur3, ret_1.xx).xyz * scale3) + bias3)\\n  )).xy);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_5.x;\\n  tmpvar_7.y = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.y;\\n  tmpvar_8.y = tmpvar_6.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_5.z;\\n  tmpvar_9.y = tmpvar_6.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv_orig + ((\\n    (((tmpvar_7 * q21) + (tmpvar_8 * q22)) + (tmpvar_9 * q23))\\n   * texsize.zw) * 6.0));\\n  ret_1 = ((texture (sampler_main, tmpvar_10).xyz + (\\n    (texture (sampler_main, uv).xyz - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n   * 0.1)) - ((0.00015 * q28) * (\\n    ((((\\n      (texture (sampler_main, tmpvar_10).x * texture (sampler_main, tmpvar_10).y)\\n     * texture (sampler_main, tmpvar_10).z) / (2.0 * q8)) + ((\\n      sqrt(treb)\\n     * texture (sampler_main, tmpvar_10).x) * texture (sampler_main, tmpvar_10).y)) + ((sqrt(mid) * texture (sampler_main, tmpvar_10).x) * texture (sampler_main, tmpvar_10).z))\\n   + \\n    ((sqrt(bass) * texture (sampler_main, tmpvar_10).y) * texture (sampler_main, tmpvar_10).z)\\n  )));\\n  ret_1.x = mix (ret_1.x, (1.01 * texture (sampler_pc_main, tmpvar_10).x), (bass_att * 0.05));\\n  ret_1.y = mix (ret_1.y, (1.01 * texture (sampler_pc_main, tmpvar_10).y), (mid_att * 0.05));\\n  ret_1.z = mix (ret_1.z, (1.01 * texture (sampler_pc_main, tmpvar_10).z), (treb_att * 0.05));\\n  ret_1 = (ret_1 + ((\\n    (pow (q3, 1.2) - 0.25)\\n   * 0.00667) * tmpvar_2).xyz);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 0.0;\\n  tmpvar_11.xyz = ret_1;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = mix (tmpvar_11, texture (sampler_pc_main, uv), vec4(float((\\n    (q32 * sqrt(((\\n      ((1.0 - ret_1.x) * (1.0 - ret_1.y))\\n     + \\n      ((1.0 - ret_1.x) * (1.0 - ret_1.z))\\n    ) + (\\n      (1.0 - ret_1.y)\\n     * \\n      (1.0 - ret_1.z)\\n    ))))\\n   > 1.333)))).xyz;\\n  ret_1 = tmpvar_12;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = tmpvar_12;\\n  ret = tmpvar_13.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = mix (texture (sampler_main, uv).xyz, texture (sampler_main, ((0.5 - uv) + 0.5)).xyz, vec3(0.5, 0.5, 0.5));\\n  ret_1 = (1.0 - ((ret_1 * \\n    (1.0 - ret_1)\\n  ) * 4.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - 3 layers (Tunnel Mix).json":
/*!**************************************************************!*\
  !*** ./presets/converted/Geiss - 3 layers (Tunnel Mix).json ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_a\":2.929,\"wave_scale\":0.53,\"wave_smoothing\":0,\"wave_mystery\":-0.26,\"modwavealphastart\":1.15,\"modwavealphaend\":1.33,\"warpscale\":3.138,\"zoomexp\":2.00676,\"zoom\":1.033,\"warp\":0.04298,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_y\":0.48,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 1;\\nwave_g = 0;\\nwave_b = 0;\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.0015*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.0015*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual*0.5;\\ndy = dy + dy_residual*0.5;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\n//wave_mystery = time*0.057;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 xfer_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = texture (sampler_main, (tmpvar_4 + 0.5));\\n  ret_2 = (tmpvar_3.xyz / ((tmpvar_3.x + tmpvar_3.y) + tmpvar_3.z));\\n  ret_2 = texture (sampler_main, ((tmpvar_4 * dot (ret_2, vec3(1.0, 0.975, 0.95))) + 0.5)).xyz;\\n  vec3 tmpvar_5;\\n  tmpvar_5 = clamp (((ret_2 - 0.05) * 99.0), 0.0, 1.0);\\n  xfer_1.x = tmpvar_5.x;\\n  xfer_1.yz = (tmpvar_5.yz * clamp ((\\n    (0.1 - ret_2.xy)\\n   * 99.0), 0.0, 1.0));\\n  ret_2 = (ret_2 + (vec3(-0.014, 0.014, 0.0) * tmpvar_5.xxx));\\n  ret_2 = (ret_2 + (vec3(0.0, -0.08, 0.08) * xfer_1.yyy));\\n  ret_2 = (ret_2 + (vec3(0.0, 0.0, -0.02) * xfer_1.zzz));\\n  ret_2 = (ret_2 + (vec3(5.0, 15.0, 40.0) * (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (tmpvar_1.xyz * (vec3(5.4, 1.53, 2.7) * dot (tmpvar_1.xyz, vec3(0.32, 0.49, 0.29))));\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Bipolar 2 Enhanced.json":
/*!***********************************************************!*\
  !*** ./presets/converted/Geiss - Bipolar 2 Enhanced.json ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.998,\"wave_mode\":1,\"wave_thick\":1,\"wave_a\":5.9,\"wave_scale\":0.559671,\"wave_smoothing\":0.9,\"warpscale\":2.853,\"rot\":-0.01,\"warp\":0.099892,\"wave_r\":0.9,\"wave_g\":0.45,\"wave_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.050*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\ndecay = decay - 0.01*equal(frame%50,0);\",\"pixel_eqs_eel\":\"zoom=0.9615+rad*0.1;\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.98);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz - ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 * 4.5);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Brain Zoom 4.json":
/*!*****************************************************!*\
  !*** ./presets/converted/Geiss - Brain Zoom 4.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.9,\"echo_zoom\":1.16936,\"wave_mode\":2,\"wave_a\":0.027265,\"wave_scale\":1.015009,\"wave_smoothing\":0.522,\"modwavealphastart\":0.83,\"modwavealphaend\":1.31,\"warpscale\":3.138,\"zoom\":1.033,\"warp\":0.148366,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 3.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - 0.005));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\"uniform sampler2D sampler_seaweed;\\n shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = tmpvar_2.xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = ret_1.x;\\n  tmpvar_3.y = (time * 0.003);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((texture (sampler_seaweed, (0.4 + tmpvar_3)) * tmpvar_2.z) * 3.0).xyz;\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Cauldron - painterly (saturation remix).json":
/*!********************************************************************************!*\
  !*** ./presets/converted/Geiss - Cauldron - painterly (saturation remix).json ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":2.7,\"wave_mode\":1,\"wave_a\":2.707,\"wave_scale\":1.025,\"wave_smoothing\":0.1,\"warpscale\":1.331,\"zoom\":1.014,\"rot\":-0.06,\"warp\":0.02944,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.350*( 0.60*sin(3.980*time) + 0.40*sin(11.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.01*( 0.60*sin(0.173*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = mix (vec3(dot (tmpvar_1.xyz, vec3(0.3333, 0.3333, 0.3333))), tmpvar_1.xyz, vec3(3.0, 3.0, 3.0));\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Color Pox (Acid Impression Mix) (color saturation remix).json":
/*!*************************************************************************************************!*\
  !*** ./presets/converted/Geiss - Color Pox (Acid Impression Mix) (color saturation remix).json ***!
  \*************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"decay\":1,\"wave_mode\":6,\"wave_dots\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wave_a\":2.965,\"wave_scale\":23.563,\"wave_smoothing\":0.9,\"modwavealphastart\":0.83,\"modwavealphaend\":1.15,\"warpscale\":1.772,\"zoomexp\":4.401,\"zoom\":1.011,\"rot\":0.003,\"warp\":0,\"wave_r\":0.49,\"wave_g\":0.49,\"wave_b\":0.49,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t = time*12.3;\\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time*5) + 0.30*sin(1.821*time*15) );\\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time*5) + 0.70*sin(2.522*time*15) );\\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\\nrot = rot + 0.030*( 0.60*sin(0.38*time) + 0.40*sin(0.54*time+4) );\\nzoom = zoom + 0.015*( 0.60*sin(0.29*time+1) + 0.40*sin(0.43*time+2) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, (uv + (\\n    ((texture (sampler_main, uv).xyz - ((\\n      (texture (sampler_blur1, uv).xyz * scale1)\\n     + bias1) * 5.0)).xy * texsize.zw)\\n   * 3.0))).xyz + ((\\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * texsize_noise_lq.zw)).xyz * 2.0)\\n   - 1.0) * 0.013));\\n  ret_1 = (ret_1 - 0.00014);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  vec3 tmpvar_3;\\n  tmpvar_3.z = 0.0;\\n  tmpvar_3.xy = texsize.zw;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * 1.25);\\n  ret_1 = (mix (vec3(dot (tmpvar_2.xyz, vec3(0.3333, 0.3333, 0.3333))), tmpvar_2.xyz, vec3(1.8, 1.8, 1.8)) * 0.5);\\n  ret_1 = (ret_1 + (vec3(5.4, 3.78, 1.62) * clamp (\\n    (dot (((texture (sampler_blur1, \\n      (uv + tmpvar_4.xz)\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur1, \\n      (uv - tmpvar_4.xz)\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n  , 0.0, 1.0)));\\n  ret_1 = (ret_1 + (vec3(1.08, 2.7, 3.78) * clamp (\\n    (dot (((texture (sampler_blur1, \\n      (uv + tmpvar_4.zy)\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)) - dot (((texture (sampler_blur1, \\n      (uv - tmpvar_4.zy)\\n    ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n  , 0.0, 1.0)));\\n  ret_1 = (ret_1 * 1.6);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Desert Rose 4.json":
/*!******************************************************!*\
  !*** ./presets/converted/Geiss - Desert Rose 4.json ***!
  \******************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"wave_mode\":7,\"additivewave\":1,\"wave_thick\":1,\"wave_a\":0.051,\"wave_scale\":2.827,\"wave_smoothing\":0.09,\"modwavealphastart\":0.63,\"modwavealphaend\":0.87,\"warpscale\":3.138,\"zoom\":1.007,\"warp\":0.01029,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_y\":0.72,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\nwarp = warp * (1 + 0.3*cos(time*0.284+4));\\nzoom = zoom + 0.007*cos(time*0.317+2);\",\"pixel_eqs_eel\":\"\",\"warp\":\"uniform sampler2D sampler_cells;\\n shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) / 256.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_cells, (uv_orig * aspect.xy));\\n  vec2 x_3;\\n  x_3 = (uv - uv_orig);\\n  ret_1 = (mix (ret_1, tmpvar_2.xyz, vec3((\\n    clamp ((1.0 - (abs(\\n      (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 0.8) + 0.1) - (0.5 + (roam_cos.y * 0.25)))\\n    ) * 43.0)), 0.0, 1.0)\\n   * 0.07))) * (0.97 + (0.03 * \\n    clamp ((sqrt(dot (x_3, x_3)) * 200.0), 0.0, 1.0)\\n  )));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  float tmpvar_2;\\n  tmpvar_2 = dot (tmpvar_1.xyz, vec3(0.3, 0.5, 0.2));\\n  vec3 x_3;\\n  x_3 = (tmpvar_1.xyz - vec3(tmpvar_2));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (mix (vec3(tmpvar_2), tmpvar_1.xyz, vec3((\\n    sqrt(dot (x_3, x_3))\\n   * 70.0))) * 1.15);\\n  ret = tmpvar_4.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Explosion Mod 2bd (wave).json":
/*!*****************************************************************!*\
  !*** ./presets/converted/Geiss - Explosion Mod 2bd (wave).json ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"wave_mode\":7,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wave_a\":0,\"wave_scale\":2.122,\"wave_smoothing\":0.783,\"modwavealphastart\":0.99,\"modwavealphaend\":1.49,\"warpanimspeed\":0.55,\"warpscale\":1.66,\"zoom\":1.013,\"warp\":0.06621,\"wave_r\":0.81,\"wave_g\":0.79,\"wave_b\":0.77,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":16,\"rad\":0.80814,\"ang\":1.25664,\"g\":1,\"b\":1,\"a\":0,\"r2\":0.42,\"g2\":0.6,\"b2\":0.5,\"a2\":0.01,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.008*(0.35*sin(0.844*time+2) + 0.55*sin(1.743*time+5));\\n//zoom = zoom + max(0,treb-1.2)*0.1;\\n\\nq1 = 0.03;// + 0.09*pow( 0.5 + 0.25*sin(0.437*time+1) + 0.15*sin(0.197*time+4), 8 );\",\"pixel_eqs_eel\":\"fcx = 0.5 + 0.4*cos(time * 0.67 + 1);\\nfcy = 0.5 + 0.4*sin(time * 0.53 + 2);\\n\\nfrad = sqrt((fcx - x)*(fcx-x) + (fcy-y)*(fcy-y));\\nfrad *= frad;\\nstr = 0.004 / (frad + 0.01);\\ndx = dx + (fcy - y) * str;\\ndy = dy - (fcx - x) * str;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, (uv + (\\n    ((cos((\\n      (((texture (sampler_blur1, uv).xyz * scale1) + bias1).xy * 7.0)\\n     + \\n      (time * 1.7)\\n    )) * texsize.zw) * 100.0)\\n   * q1))).xyz + ((0.6 - \\n    dot (((texture (sampler_blur3, uv).xyz * scale3) + bias3), vec3(0.3, 0.5, 0.2))\\n  ) * 0.01));\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 20.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = (((tmpvar_1.x * tmpvar_1.y) * 5.0) - 1.0);\\n  tmpvar_2.y = ((tmpvar_1.y * tmpvar_1.z) * 5.0);\\n  tmpvar_2.z = ((tmpvar_1.z * tmpvar_1.x) * 6.0);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (tmpvar_2.zyx * 0.37);\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Game of Life 3.json":
/*!*******************************************************!*\
  !*** ./presets/converted/Geiss - Game of Life 3.json ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"wave_mode\":6,\"wave_dots\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wave_a\":0.3,\"wave_scale\":1.128,\"wave_smoothing\":0.783,\"modwavealphastart\":1.41,\"modwavealphaend\":1.67,\"warpscale\":1.503,\"zoom\":1.013,\"warp\":0.06322,\"wave_r\":0.81,\"wave_g\":0.79,\"wave_b\":0.77,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 1;\\nwave_g = 1;\\nwave_b = 1;\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  float n_1;\\n  vec3 ret_2;\\n  ret_2 = texture (sampler_pw_main, uv).xyz;\\n  n_1 = (clamp ((texture (sampler_pw_main, \\n    (uv + texsize.zw)\\n  ).x * 999.0), 0.0, 1.0) + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv - texsize.zw)\\n  ).x * 999.0), 0.0, 1.0));\\n  if ((n_1 < 1.5)) {\\n    ret_2 = vec3(0.0, 0.0, 0.0);\\n  };\\n  if ((n_1 > 3.5)) {\\n    ret_2 = vec3(0.0, 0.0, 0.0);\\n  };\\n  bool tmpvar_3;\\n  if ((ret_2.x < 0.1)) {\\n    tmpvar_3 = (abs((n_1 - 3.0)) < 0.5);\\n  } else {\\n    tmpvar_3 = bool(0);\\n  };\\n  if (tmpvar_3) {\\n    ret_2 = vec3(1.0, 1.0, 1.0);\\n  };\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz + (clamp (\\n    ((((texture (sampler_blur2, uv).xyz * scale2) + bias2) * 2.8) - 0.13)\\n  , 0.0, 1.0) * vec3(1.4, 0.3, 1.3)));\\n  ret = tmpvar_1.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Myriad Mosaics.json":
/*!*******************************************************!*\
  !*** ./presets/converted/Geiss - Myriad Mosaics.json ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"wave_mode\":7,\"wave_thick\":1,\"wave_a\":0.433,\"wave_scale\":2.62,\"wave_smoothing\":0.27,\"wave_mystery\":-0.08,\"modwavealphastart\":1.03,\"modwavealphaend\":1.61,\"warpanimspeed\":1.729,\"warpscale\":2.108,\"zoomexp\":1.64463,\"zoom\":0.99901,\"warp\":0.45599,\"wave_r\":0.6,\"wave_g\":0.8,\"ob_g\":0.5,\"ob_b\":0.45,\"ob_a\":0.26,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":30,\"rad\":1.08925,\"r\":0.8,\"g\":0.4,\"b\":0.2,\"a\":0.05,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"rad = rad + 0.02*cos(time*3);\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"q10 = 0;\\nmy_rot = 0;\\nmy_zoom = 1;\\ns = 0.5;\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.05*sin(0.437*time+1);\\nwave_g = wave_g + 0.05*sin(0.544*time+2);\\nwave_b = wave_b + 0.05*sin(0.751*time+3);\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*37.03;\\n\\nnew_rot = rot + 0.013*( 0.60*sin(17.381*time) + 0.40*sin(11.579*time) );\\nnew_zoom = zoom + 0.01*( 0.60*sin(20.1934*time+3) + 0.40*sin(16.307*time+9) );\\nnew_warp = warp + 0.34*( 0.60*sin(13.5442*time) + 0.40*sin(22.543*time) );\\nnew_cx = cx + 0.310*( 0.60*sin(16.374*time) + 0.40*sin(26.294*time) );\\nnew_cy = cy + 0.310*( 0.60*sin(18.393*time) + 0.40*sin(37.223*time) );\\nnew_s = rand(100)*0.01;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\n\\n\\n// custom wave opacity modulation\\n//beat = (bass+mid+treb) / (bass_att+mid_att+treb_att);\\nbeat = max(bass/bass_att, mid/mid_att);\\nbeat = max(beat, treb/treb_att);\\n decay_rate = pow(0.9995, fps);\\n beat = max( beat, prev_beat*decay_rate );\\n  wave_a = (beat - prev_beat - 0.07)*24;\\n  is_beat = above(wave_a, 0.5);\\n  rot = (1-is_beat)*my_rot + (is_beat)*new_rot;\\n  zoom = (1-is_beat)*my_zoom + (is_beat)*new_zoom;\\n  warp = (1-is_beat)*my_warp + (is_beat)*new_warp;\\n  cx = (1-is_beat)*my_cx + (is_beat)*new_cx;\\n  cy = (1-is_beat)*my_cy + (is_beat)*new_cy;\\n  s = (1-is_beat)*my_s + (is_beat)*new_s;\\nprev_beat = beat;\\nmy_rot = rot;\\nmy_zoom = zoom;\\nmy_warp = warp;\\nmy_cx = cx;\\nmy_cy = cy;\\nmy_s = s;\\n\\nq11 = s;\",\"pixel_eqs_eel\":\"zoom = zoom + cos(ang*7)*0.02;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  float tmpvar_2;\\n  tmpvar_2 = (0.03 + (1.5 * (q11 * q11)));\\n  vec3 tmpvar_3;\\n  tmpvar_3.xy = (((\\n    (uv_orig * 4.0)\\n   * texsize.xy) / 850.0) * tmpvar_2);\\n  tmpvar_3.z = (time * 0.055);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv_orig * texsize.xy);\\n  ret_1 = texture (sampler_main, (uv + ((1.53 * \\n    (cos(((\\n      (0.6 * tmpvar_4)\\n     * tmpvar_2) + (texture (sampler_noisevol_hq, tmpvar_3).xy * 9.0))) * texsize.zw)\\n  ) / tmpvar_2))).xyz;\\n  ret_1 = (ret_1 * 0.99);\\n  ret_1 = (ret_1 + (19.52 * (\\n    (texture (sampler_noise_lq, ((tmpvar_4 * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0)));\\n  ret_1 = mix (ret_1, ret_1.zxy, vec3(0.05, 0.05, 0.05));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 1.5) - 0.1);\\n  ret = tmpvar_1.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Planet 1.json":
/*!*************************************************!*\
  !*** ./presets/converted/Geiss - Planet 1.json ***!
  \*************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":1.998,\"wave_mode\":2,\"wave_thick\":1,\"wrap\":0,\"wave_a\":0.244,\"wave_scale\":1.981,\"wave_smoothing\":0.6,\"warpscale\":2.853,\"zoom\":1.064,\"warp\":0,\"wave_r\":0.6,\"wave_g\":0.6,\"wave_b\":0.6,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\",\"pixel_eqs_eel\":\"zoom = zoom + (x*2-1)*(0.08+0.15*sin(time*0.321)) + (y*2-1)*(0.08+0.15*cos(time*0.321));\\nsx=sx-(zoom-1)*0.1;\\nsy=sy-(zoom-1)*0.1;\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Reaction Diffusion (Puddle Mix)s a aa aa.json":
/*!*********************************************************************************!*\
  !*** ./presets/converted/Geiss - Reaction Diffusion (Puddle Mix)s a aa aa.json ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"wave_thick\":1,\"wave_a\":0.433,\"wave_scale\":2.358,\"wave_smoothing\":0.54,\"wave_mystery\":0.2,\"modwavealphastart\":1.03,\"modwavealphaend\":1.61,\"warpscale\":1.331,\"zoom\":0.99951,\"warp\":0.00909,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.35)*0.96+1.3);\\nbass_factor = equal(bass_thresh,2)*sin(time*bass_thresh*.4) + (1-equal(bass_thresh,2))*bass_factor;\\nmid_thresh = above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.35)*0.96+1.3);\\nmid_factor = equal(mid_thresh,2)*sin(time*mid_thresh*.4) + (1-equal(mid_thresh,2))*mid_factor;\\ntreb_thresh = above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.35)*0.96+1.3);\\ntreb_factor = equal(treb_thresh,2)*sin(time*treb_thresh*.4) + (1-equal(treb_thresh,2))*treb_factor;\\nwave_r = 0.5+0.5*bass_factor;\\nwave_b = 0.5+0.5*mid_factor;\\nwave_g = 0.5+0.5*treb_factor;\\nwave_mystery = sin(time*.7)/10;\\nq1=bass_factor;\\nq2=mid_factor;\\nq3=treb_factor;\",\"pixel_eqs_eel\":\"pi=22/7+.2-.2*q1;\\nrpi=pi*rad;\\napi=(1-rad)*pi;\\nzoom = if(above(rad,abs(q2)),1.07+sin(rpi)*.04*q2, 0.97+(sin(rpi)/10-sin(api)/10)*.04*q2)+cos(rpi*3*q3)*.07;\\nrot = if(above(rad,abs(q2)),cos((rad*2*rpi)+sin(pi*pow(rad,5)))*.1*q1,(cos(api)/25+sin(rpi))*.1*q1)+cos(api*3*q3)*.1;\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = -(uv);\\n  tmpvar_2 = (texture (sampler_main, uv).xyz + texture (sampler_main, tmpvar_3).xyz);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  tmpvar_4.x = texsize.z;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = 0.0;\\n  tmpvar_5.y = texsize.w;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = ((texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x + (texture (sampler_main, (tmpvar_3 - tmpvar_4)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_4)).xyz).x);\\n  tmpvar_6.y = ((texture (sampler_main, (uv - tmpvar_5)).xyz - texture (sampler_main, (uv + tmpvar_5)).xyz).x + (texture (sampler_main, (tmpvar_3 - tmpvar_5)).xyz - texture (sampler_main, (tmpvar_3 + tmpvar_5)).xyz).x);\\n  uv1_1 = ((uv - 0.5) * aspect.xy);\\n  uv1_1 = ((0.4 * cos(\\n    (uv1_1 * q27)\\n  )) - (16.0 * tmpvar_6));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((\\n    (0.5 * q1)\\n   * tmpvar_2) + (q26 * \\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) + ((22.0 * vec3(\\n    clamp ((0.04 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.1 + tmpvar_2)));\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Reaction Diffusion 3 (Lichen Mix).json":
/*!**************************************************************************!*\
  !*** ./presets/converted/Geiss - Reaction Diffusion 3 (Lichen Mix).json ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"wave_mode\":7,\"modwavealphabyvolume\":1,\"wave_a\":0,\"wave_scale\":1.015,\"wave_smoothing\":0.522,\"modwavealphastart\":0.83,\"modwavealphaend\":1.31,\"warpanimspeed\":30.965,\"warpscale\":2.572,\"zoom\":1.00901,\"warp\":0.00054,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 z_1;\\n  vec3 tmpvar_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.1 * texsize.zw);\\n  tmpvar_2 = (0.25 * ((\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + (tmpvar_3 * vec2(-1.0, 1.0)))).xyz)\\n   + texture (sampler_main, \\n    (uv + (tmpvar_3 * vec2(1.0, -1.0)))\\n  ).xyz) + texture (sampler_main, (uv - tmpvar_3)).xyz));\\n  float tmpvar_4;\\n  tmpvar_4 = ((tmpvar_2.x * tmpvar_2.y) * tmpvar_2.y);\\n  z_1.x = (tmpvar_2.x + ((\\n    -(tmpvar_4)\\n   + \\n    (0.035 * (1.0 - tmpvar_2.x))\\n  ) * 4.0));\\n  z_1.y = (tmpvar_2.y + ((tmpvar_4 - \\n    (0.095 * tmpvar_2.y)\\n  ) * 4.0));\\n  z_1.z = tmpvar_2.z;\\n  z_1.x = (z_1.x + (0.4 * (\\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n   - texture (sampler_main, uv).xyz)).x);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (z_1 + (0.09 * (\\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\\n   - 1.0)));\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = ret_1.xzy;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Reaction Diffusion 3.json":
/*!*************************************************************!*\
  !*** ./presets/converted/Geiss - Reaction Diffusion 3.json ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.9,\"echo_zoom\":1.16936,\"wave_mode\":7,\"modwavealphabyvolume\":1,\"wave_a\":0,\"wave_scale\":1.015009,\"wave_smoothing\":0.522,\"modwavealphastart\":0.83,\"modwavealphaend\":1.31,\"warpanimspeed\":30.965099,\"warpscale\":2.571729,\"zoom\":1.009006,\"warp\":0.000536,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.4));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = pow (ret_1, vec3(0.5, 0.8, 1.7));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Skin Dots Multi-layer 3.json":
/*!****************************************************************!*\
  !*** ./presets/converted/Geiss - Skin Dots Multi-layer 3.json ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"modwavealphabyvolume\":1,\"wave_a\":0.207218,\"wave_scale\":0.397108,\"wave_smoothing\":0,\"wave_mystery\":0.24,\"modwavealphaend\":1.17,\"warpanimspeed\":0.451118,\"warpscale\":3.03984,\"zoomexp\":2.194764,\"zoom\":1.029709,\"warp\":0.098617,\"wave_g\":0.999999,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_r\":0.35,\"mv_g\":0.35,\"mv_b\":0.35,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);\\n//zoom = 1;\\n//warp = 0;\\nzoom = zoom + 0.7*(0.01*cos(time*0.317+1) + 0.01*cos(time*0.1132+4));\\nrot  = rot  + 0.5*(0.01*cos(time*0.214+3) + 0.01*cos(time*0.2732+2));\\nwave_mystery = time*0.05;\\n//zoom = zoom + (max(1, bass_att)-1)*0.01;\\n\\nrot = rot + min(0.3,pow(max(0,bass_att-1),2)*0.2);\",\"pixel_eqs_eel\":\"zoom = zoom + 0.005*cos(ang*5 + time*1.5);\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  float blur_2;\\n  float crisp_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  uv2_1 = ((tmpvar_5 * 0.8) + 0.5);\\n  crisp_3 = texture (sampler_main, uv2_1).y;\\n  blur_2 = ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).y;\\n  ret_4 = (texture (sampler_main, ((tmpvar_5 * 0.6) + 0.5)).zzz * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = max (ret_4, vec3(crisp_3));\\n  uv2_1 = uv;\\n  crisp_3 = texture (sampler_main, uv).x;\\n  blur_2 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1).x;\\n  ret_4 = (tmpvar_6 * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = max (ret_4, vec3(crisp_3));\\n  ret_4 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = tmpvar_7;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Tokamak Plus 2.json":
/*!*******************************************************!*\
  !*** ./presets/converted/Geiss - Tokamak Plus 2.json ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.993,\"wave_mode\":7,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wave_a\":1.199,\"wave_scale\":4.226,\"wave_smoothing\":0.7,\"warpscale\":1.331,\"zoom\":1.004,\"warp\":0.19788,\"sx\":0.99967,\"sy\":0.9999,\"wave_r\":0.8,\"wave_g\":0.8,\"wave_b\":0.8,\"wave_y\":0.68,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nrot = rot + 0.03*cos(time*0.571+3);\\ndx = dx + 0.1*cos(time*0.492+1);\\ndy = dy + 0.1*cos(time*0.439+2);\\n//zoom = zoom + 0.01*cos(time*0.671+5);\",\"pixel_eqs_eel\":\"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.65*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5);\\ndy = mult*cos(ang2*2-1.5);\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv * texsize.xy)\\n     * texsize_noise_lq.zw) + rand_frame.xy)) * 2.0) - 1.0)\\n  .xyz / 256.0) * 5.0));\\n  ret_1 = (ret_1 * 0.98);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 1.5);\\n  ret = tmpvar_1.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Geiss - Two-Pointed Pulsagon - mash0000 - bubonic super-fluid centrifuge.json":
/*!*********************************************************************************************************!*\
  !*** ./presets/converted/Geiss - Two-Pointed Pulsagon - mash0000 - bubonic super-fluid centrifuge.json ***!
  \*********************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.44,\"wave_mode\":2,\"wave_a\":0.199,\"wave_scale\":1.605,\"wave_smoothing\":0.7,\"warpscale\":2.853,\"zoom\":1.014,\"warp\":0,\"wave_g\":0.6,\"wave_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.023*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\",\"pixel_eqs_eel\":\"zoom=zoom+0.06-0.06*sin(ang*2+time*3);\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_2.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_1.y = texture (sampler_fw_main, (uv + (tmpvar_2 * 0.01))).y;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  ) * 0.35));\\n  ret_1 = (ret_1 * 0.96);\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.3));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Goody + flexi - Data Crusher.json":
/*!*************************************************************!*\
  !*** ./presets/converted/Goody + flexi - Data Crusher.json ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.56,\"decay\":1,\"echo_zoom\":0.362,\"echo_orient\":1,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.653,\"wave_smoothing\":0,\"wave_mystery\":-0.5,\"warpscale\":0.107,\"zoomexp\":0.34421,\"fshader\":1,\"zoom\":2.78167,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":25.6,\"mv_y\":9.6,\"mv_l\":5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"additive\":1,\"textured\":1,\"rad\":3.971,\"tex_zoom\":0.29171,\"r\":0,\"a\":0,\"g2\":0,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"additive\":1,\"textured\":1,\"rad\":1.52776,\"tex_zoom\":0.40839,\"g\":1,\"b\":1,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang = angc;\\nangc = angc-treb*.01;\\n\\nx=.5 + .2*sin(angc);\\ny=.5 + .2*sin(.98*angc);\"},{\"baseVals\":{\"additive\":1,\"textured\":1,\"rad\":6.662,\"tex_zoom\":0.14949,\"g\":1,\"b\":1,\"a\":0.1,\"g2\":0,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang = ang + angc;\\nangc = angc + bass*.01;\\nx = .5 + .045*sin(.234*time);\\ny = .5 + .054*sin(.223*time);\\n\\nr2 = (rand100)*.01\"},{\"baseVals\":{\"additive\":1,\"textured\":1,\"x\":0.18,\"y\":0.3,\"rad\":1.5584,\"tex_zoom\":0.19788,\"g\":1,\"b\":1,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = .5+.05*sin(.23*time + .2*treb_att);\\ny = .5+.05*cos(.2*time + .2*bass);\\n\\nr = .5+sin(time);\\nb = .5+sin(time*.556677);\\ng = .5+sin(time*.353);\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"bassc = 0;\\nbcount = 0;\",\"frame_eqs_eel\":\"r=bass*.5;\\ng=treb*.5;\\nb=mid*.5;\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r=bass*.5;\\ng=treb*.5;\\nb=mid*.5;\\na = 0 + (treb_att * .15);\",\"point_eqs_eel\":\"x = .5+.2*sin(time*.7454);\\nx = x+(.0005-int(rand(10))*.008);\\ny = .5+.2*cos(time*.455);\\ny = y+(.0005-int(rand(10))*.001);\\n\\n\\nbassc = if(above(bcount,0),1,0);\\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\\nx = x - bcount;\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r=bass*.5;\\ng=treb*.5;\\nb=mid*.5;\",\"point_eqs_eel\":\"x = .5+.2*sin(time*.7454);\\nx = x+(.0005+int(rand(10))*.008);\\ny = .5+.2*cos(time*.455);\\ny = y+(.0005-int(rand(10))*.001);\\n\\nbassc = if(above(bcount,0),1,0);\\nbcount = if(above(bcount,0),bcount - .00005,if(below(bassc,1),if(above(bass,1.5),.2,0),0));\\nx = x + bcount;\\nma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r=bass*.5;\\ng=treb*.5;\\nb=mid*.5;\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"}],\"init_eqs_eel\":\"q21 = 1/asin(1);\",\"frame_eqs_eel\":\"// coordinates spiral 1\\nq21 = .5; //sin(time); // X\\nq22 = 0 - sin(time * .5); //-0.5; // Y\\n\\n// coordinates spiral 2\\nq23 = 0;\\nq24 = 1; //sin(time); //0.5;\\n\\nq25 = 0.5/asin(1); // pi/4\\n\\nq26 = time*0.3; // rotation\\nq27 = -time*0.6; // growth\\n\\n\\nbassfix=.05+.01*bass;\\nmidfix=.05+.01*mid;\\ntrebfix=.05+.01*treb;\\nbassif=if(above(bass_att,1),bassif+bassfix,if(above(bassif,85),0,bassif*.96));\\nmidif=if(above(mid_att,1),midif+midfix,if(above(midif,.85),0,midif*.96));\\ntrebif=if(above(treb_att,1),trebif+trebfix,if(above(trebif,.85),0,trebif*.96));\\n\\nq12=bassif;\\nq13=midif;\\nq14=trebif;\\nq15=abs(cos(bassif-time));\\nq16=abs(cos(midif-time));\\nq17=abs(cos(trebif-time));\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 mret_1;\\n  vec3 ret_2;\\n  mret_1 = (texture (sampler_noise_hq, fract((uv_orig * texsize.zw))).xyz - texture (sampler_noise_lq, (uv + (uv_orig - texsize_noise_lq.zw))).xyz);\\n  mret_1 = (mret_1 + texture (sampler_noise_hq, fract(uv)).zyx);\\n  mret_1.x = (mret_1.x * ((0.5 + \\n    (0.2 * sin(((rad * 20.0) + (time * 16.0))))\\n  ) + (0.1 * q12)));\\n  mret_1.y = (mret_1.y * ((0.5 + \\n    (0.2 * sin(((rad * 40.0) + (time * 18.4))))\\n  ) + (0.1 * q13)));\\n  mret_1.z = (mret_1.z * ((0.5 + \\n    (0.2 * sin(((rad * 10.0) - (time * 14.3))))\\n  ) + (0.1 * q14)));\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = (0.95 + (0.2 * q17));\\n  tmpvar_3.y = (0.95 + (0.2 * q15));\\n  tmpvar_3.z = (0.95 + (0.2 * q16));\\n  ret_2 = (texture (sampler_noise_hq, uv).xxx * tmpvar_3);\\n  ret_2 = mix (ret_2, mret_1, vec3(0.2, 0.2, 0.2)).xzy;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\"vec2 xlat_mutabledenominator;\\nvec2 xlat_mutablenumerator;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec3 fret_2;\\n  vec2 xy1_3;\\n  vec2 uvm_4;\\n  vec2 spiral_5;\\n  vec2 c_6;\\n  vec3 ret_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((uv - 0.5) * aspect.wz);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q21;\\n  tmpvar_9.y = q22;\\n  xlat_mutablenumerator = ((tmpvar_8 + tmpvar_9) * 64.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q23;\\n  tmpvar_10.y = q24;\\n  xlat_mutabledenominator = (tmpvar_8 + tmpvar_10);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\\n  tmpvar_11.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\\n  c_6 = ((tmpvar_11 / (\\n    (xlat_mutabledenominator.x * xlat_mutabledenominator.x)\\n   + \\n    (xlat_mutabledenominator.y * xlat_mutabledenominator.y)\\n  )) - 0.5);\\n  float tmpvar_12;\\n  float tmpvar_13;\\n  tmpvar_13 = (min (abs(\\n    (c_6.x / c_6.y)\\n  ), 1.0) / max (abs(\\n    (c_6.x / c_6.y)\\n  ), 1.0));\\n  float tmpvar_14;\\n  tmpvar_14 = (tmpvar_13 * tmpvar_13);\\n  tmpvar_14 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_14) + 0.05368138) * tmpvar_14) - 0.1173503)\\n     * tmpvar_14) + 0.1938925) * tmpvar_14) - 0.3326756)\\n   * tmpvar_14) + 0.9999793) * tmpvar_13);\\n  tmpvar_14 = (tmpvar_14 + (float(\\n    (abs((c_6.x / c_6.y)) > 1.0)\\n  ) * (\\n    (tmpvar_14 * -2.0)\\n   + 1.570796)));\\n  tmpvar_12 = (tmpvar_14 * sign((c_6.x / c_6.y)));\\n  if ((abs(c_6.y) > (1e-08 * abs(c_6.x)))) {\\n    if ((c_6.y < 0.0)) {\\n      if ((c_6.x >= 0.0)) {\\n        tmpvar_12 += 3.141593;\\n      } else {\\n        tmpvar_12 = (tmpvar_12 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_12 = (sign(c_6.x) * 1.570796);\\n  };\\n  float tmpvar_15;\\n  tmpvar_15 = (3.0 * tmpvar_12);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = ((tmpvar_15 * q25) + q26);\\n  tmpvar_16.y = (((\\n    (2.0 * aspect.w)\\n   * \\n    log(sqrt(dot (c_6, c_6)))\\n  ) + (tmpvar_15 * q25)) + q27);\\n  spiral_5 = (0.5 + ((0.5 - \\n    abs(((fract(\\n      (tmpvar_16 * 0.5)\\n    ) * 2.0) - 1.0))\\n  ) * 1.1));\\n  float tmpvar_17;\\n  tmpvar_17 = (0.015 * time);\\n  uvm_4.x = (spiral_5.x - (0.07 * texture (sampler_noise_hq, vec2((\\n    (spiral_5.x * 1.5)\\n   + tmpvar_17))).x));\\n  uvm_4.y = (spiral_5.y - (0.07 * texture (sampler_noise_hq, vec2((\\n    (spiral_5.y * 1.5)\\n   + tmpvar_17))).x));\\n  uv_1 = uvm_4;\\n  uvm_4 = (uvm_4 - 0.5);\\n  float tmpvar_18;\\n  float tmpvar_19;\\n  tmpvar_19 = (min (abs(\\n    (uv_1.x / uv_1.y)\\n  ), 1.0) / max (abs(\\n    (uv_1.x / uv_1.y)\\n  ), 1.0));\\n  float tmpvar_20;\\n  tmpvar_20 = (tmpvar_19 * tmpvar_19);\\n  tmpvar_20 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)\\n     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)\\n   * tmpvar_20) + 0.9999793) * tmpvar_19);\\n  tmpvar_20 = (tmpvar_20 + (float(\\n    (abs((uv_1.x / uv_1.y)) > 1.0)\\n  ) * (\\n    (tmpvar_20 * -2.0)\\n   + 1.570796)));\\n  tmpvar_18 = (tmpvar_20 * sign((uv_1.x / uv_1.y)));\\n  if ((abs(uv_1.y) > (1e-08 * abs(uv_1.x)))) {\\n    if ((uv_1.y < 0.0)) {\\n      if ((uv_1.x >= 0.0)) {\\n        tmpvar_18 += 3.141593;\\n      } else {\\n        tmpvar_18 = (tmpvar_18 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_18 = (sign(uv_1.x) * 1.570796);\\n  };\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = tmpvar_18;\\n  tmpvar_21.y = inversesqrt(dot (uv_1, uv_1));\\n  uvm_4 = (uvm_4 + 0.5);\\n  vec2 tmpvar_22;\\n  tmpvar_22 = (uv_1 - vec2(0.5, 0.5));\\n  float tmpvar_23;\\n  tmpvar_23 = (time * 1.4);\\n  xy1_3.x = ((sin(tmpvar_23) * tmpvar_22.x) - (cos(tmpvar_23) * tmpvar_22.y));\\n  xy1_3.y = ((cos(tmpvar_23) * tmpvar_22.x) + (sin(tmpvar_23) * tmpvar_22.y));\\n  vec2 tmpvar_24;\\n  tmpvar_24 = (xy1_3 - 0.5);\\n  uv_1 = tmpvar_24;\\n  vec3 tmpvar_25;\\n  tmpvar_25 = ((texture (sampler_blur1, uvm_4).xyz * scale1) + bias1);\\n  vec4 tmpvar_26;\\n  tmpvar_26 = texture (sampler_main, fract(uvm_4));\\n  vec2 tmpvar_27;\\n  tmpvar_27.x = (tmpvar_26.x + cos((uvm_4.x - \\n    (roam_sin.y * 4.0)\\n  )));\\n  tmpvar_27.y = (tmpvar_26.x - sin((uvm_4.y + roam_cos.x)));\\n  vec3 tmpvar_28;\\n  tmpvar_28 = ((tmpvar_26.xyz - tmpvar_25) - (4.0 * tmpvar_27).xxx);\\n  fret_2.yz = tmpvar_28.yz;\\n  fret_2.x = (tmpvar_28.x / (tmpvar_26.y / tmpvar_25.y));\\n  vec3 tmpvar_29;\\n  tmpvar_29 = (1.0 - fret_2);\\n  ret_7 = ((texture (sampler_main, tmpvar_24).xyz * tmpvar_29) + (0.8 * fret_2));\\n  vec3 tmpvar_30;\\n  tmpvar_30 = mix (ret_7, tmpvar_29, vec3((1.5 * clamp (\\n    dot (fret_2, tmpvar_29)\\n  , 0.0, 1.0))));\\n  ret_7 = (mix (tmpvar_30, mix (texture (sampler_main, tmpvar_21).xyz, tmpvar_30, vec3(0.5, 0.5, 0.5)), vec3(0.5, 0.5, 0.5)) - texture (sampler_main, tmpvar_21).xyz);\\n  vec4 tmpvar_31;\\n  tmpvar_31.w = 1.0;\\n  tmpvar_31.xyz = ret_7;\\n  ret = tmpvar_31.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Goody - Ego Decontructor.json":
/*!*********************************************************!*\
  !*** ./presets/converted/Goody - Ego Decontructor.json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.42,\"decay\":1,\"echo_zoom\":1.007,\"echo_orient\":3,\"wave_mode\":3,\"wave_dots\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.998,\"wave_scale\":2.155,\"wave_smoothing\":0.9,\"wave_mystery\":-1,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":1.0095,\"warp\":0.01,\"ob_r\":0.01,\"ob_a\":0.5,\"ib_size\":0.015,\"ib_a\":0.5,\"mv_x\":64,\"mv_y\":1.248,\"mv_l\":5,\"mv_b\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":10,\"additive\":1,\"rad\":0.24483},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=x+.2*sin(time*.411);\\ny=y+.2*cos(time*.423);\"},{\"baseVals\":{\"enabled\":1,\"sides\":10,\"additive\":1,\"rad\":0.24483},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=x-.2*sin(time*.411);\\ny=y-.2*cos(time*.423);\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//Unchained's Beat Code\\n\\nold_bass_flop=bass_flop;\\nold_treb_flop=treb_flop;\\nold_mid_flop=mid_flop;\\nchaos=.9+.1*sin(pulse);\\nentropy=if(equal(pulse,-20),1+bass_flop+treb_flop+mid_flop+rand(2),entropy);\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\\nbass_residual = bass_changed*sin(pulse*.1*entropy) + bnot(bass_changed)*bass_residual;\\ntreb_residual = treb_changed*sin(pulse*.1*entropy) + bnot(treb_changed)*treb_residual;\\nmid_residual = mid_changed*sin(pulse*.1*entropy) + bnot(mid_changed)*mid_residual;\\npulse=if(above(abs(pulse),20),-20,pulse+(bass_thresh+mid_thresh+treb_thresh)*.032);\\nq1=mid_residual;\\nq2=bass_residual;\\nq3=treb_residual;\\nq4=sin(pulse);\\nq5=cos(pulse/2+q1);\\n\\nq6=sin(q3*q1+q7*q2);\\nq7=above(q1,0)+above(q2,0)+above(q3,0)+above(q3,0)*treb_flop+above(q2,0)*bass_flop+above(q1,0)*mid_flop;\\nq8=entropy;\\n\\nvol=(bass+mid+treb_att)*.3333;\\n\\nredsine=.5+.15*bass*sin(time*3);\\ngreensine=.5+.15*mid*sin(time*2);\\nbluesine=.5+.15*treb*sin(time);\\n\\nredif=if(above(bass,1.2),redsine,if(above(redif,.95),.0,redif*.95));\\ngreenif=if(above(mid,1.2),greensine,if(above(greenif,.95),.0,greenif*.95));\\nblueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),.0,blueif*.95));\\n\\nr=redif;\\ng=greenif;\\nb=blueif;\\n\\nq9=r;\\nq10=g;\\nq11=b;\\n\\nwave_r=wave_r*(sin(redif*cos(b+g)));\\nwave_g=wave_g*(sin(greenif*cos(r+b)));\\nwave_b=wave_b*(sin(blueif*cos(r+g)));\\n\\nib_r=r;\\nib_g=g;\\nib_b=b;\\n\\nob_r=wave_r*redif;\\nob_g=wave_g*greenif;\\nob_b=wave_b*blueif;\",\"pixel_eqs_eel\":\"//xy transform code\\nxv = sin(time*.333)*x -cos(time*.667)*x;\\nyv = cos(time*.233)*y +sin(time*.567)*y;\\nx = xv; y = yv;\\n//end x/y transform code\\n\\nsx=sx+.075*sin(x*3+q7*x);\\nsy=sy+.075*sin(y*3.1+q7*y);\\n\\ndx=dx+.005*cos(y*20+.1*cos(time*.11)+(q2*q6));\\ndy=dy+.005*sin(x*20+.1*sin(time*.09)+(q3*q6));\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uvv_1;\\n  vec2 uvm_2;\\n  uvm_2.x = ((0.5 * texture (sampler_noise_hq, uv.xx)) + (0.5 * texture (sampler_main, uv.xx))).x;\\n  uvm_2.y = ((0.5 * texture (sampler_main, uv.yy)) + (0.5 * texture (sampler_noise_hq, uv.yy))).x;\\n  uvv_1 = (uv * uvm_2);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - ((texture (sampler_blur3, texture (sampler_noise_hq, \\n    ((texture (sampler_blur3, uvv_1).xyz * scale3) + bias3)\\n  .xy).xy).xyz * scale3) + bias3));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = fract((tmpvar_3.xy + uvm_2));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((2.0 * tmpvar_3) * texture (sampler_main, (tmpvar_4 * (uvv_1 - tmpvar_4))).xyz);\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/GreatWho - Lasershow.json":
/*!*****************************************************!*\
  !*** ./presets/converted/GreatWho - Lasershow.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":1,\"wave_mode\":6,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_a\":4.619,\"wave_scale\":0.286,\"wave_smoothing\":0,\"modwavealphastart\":1.9,\"modwavealphaend\":1.9,\"warpanimspeed\":0.01,\"warpscale\":0.01,\"zoomexp\":2.11299,\"zoom\":1.01,\"warp\":0.01,\"wave_r\":0.48,\"wave_g\":0.61,\"wave_b\":0.79,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":3,\"additive\":1,\"thickoutline\":1,\"num_inst\":1024,\"rad\":0.01,\"r2\":1,\"g2\":0.86,\"a2\":0.7,\"border_a\":0},\"init_eqs_eel\":\"n=1024;\\ndir=1;\",\"frame_eqs_eel\":\"\\ndir*=if(above(bass,1.3),-1,1);\\nd=0.2*instance/n;//bass*0.4;\\nr=mid*time*3.1824*treb; \\nx=.5+dir*cos(r)*d*.005-dir*sin(-d+0.5*mid*time)*d*10;\\ny=.5+dir*sin(r)*d*.005+dir*cos(-d+0.5*mid*time)*d*10;\"},{\"baseVals\":{\"enabled\":1,\"sides\":36,\"thickoutline\":1,\"textured\":1,\"rad\":1.21524,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a=bass;\\nrad=(bass+mid+treb)/3;\\nx=if(below(bass,1.2),rand(10)*0.1*treb,0.5);\\ny=if(below(bass,1.2),rand(10)*0.1*mid,0.5);\\n\\nr=1-(0.7+0.5*abs(sin(0.05*time+0.5*bass)));\\ng=1-(0.5+0.5*abs(cos(0.05*time-0.4*mid)));\\nb=1-(0.5+0.5*abs(sin(0.05*time+0.6*treb)));\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"//init\\nct=0;\\nn=400;\\nr=0.5;\\nmx=0;\\nmy=0;\\nmz=0;\\ndst=2;\\nrx=0;\\nry=0;\\nrz=0;\\nrdx=1;\\nrdy=1;\\nrdz=1;\\np=3.14159265;\\np2=2.0*p;\\np3=180/p;\\n\\n\\ndir=1;\",\"frame_eqs_eel\":\"//dx-=0.0125*sin(0.02*time+treb);\\n//dy-=0.0125*cos(0.02*time+mid);\\n\\nrot-=0.0125*(bass)*sin(time+bass);\",\"pixel_eqs_eel\":\"//pixel\\nvt=sin(i*p2*4)*(v+1)/2;\\nx1=sin(i*p2*2);\\ny1=if(below(i,0.5),vt,0);\\nz1=if(above(i,0.5),vt,0);\\ny2=y1*xc-z1*xs;\\nz2=y1*xs+z1*xc;\\nx2=z2*ys+x1*yc;\\nz3=z2*yc-x1*ys;\\nx3=x2*zc-y2*zs;\\ny3=y2*zc+x2*zs;\\nx4=mx+x3;y4=my+y3;\\nz4=mz+z3;x=x4/(1+z4/dst);\\ny=y4/(1+z4/dst);\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Idiot - Star Of Annon.json":
/*!******************************************************!*\
  !*** ./presets/converted/Idiot - Star Of Annon.json ***!
  \******************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.999,\"echo_zoom\":1.006596,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":2,\"additivewave\":1,\"wave_dots\":1,\"wave_thick\":1,\"wave_a\":4.099998,\"wave_scale\":1.18647,\"wave_smoothing\":0.63,\"wave_mystery\":-0.2,\"modwavealphastart\":0.71,\"modwavealphaend\":1.28,\"warpscale\":1.331,\"zoom\":0.999514,\"warp\":0.01,\"wave_r\":0.3,\"wave_g\":0.6,\"ob_size\":0.005,\"ob_r\":0.4999,\"ob_b\":1,\"ob_a\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.2,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vol_att=(treb_att*.25)+(mid_att*.25)+(bass_att*.25+.5*sin(vol))/vol;\\nvol=bass+treb+mid;\\nnew_bass=(bass*.25+.5*sin(Bass_att*.25));\\nnew_treb=(treb*.25+.5*sin(treb_att*.25));\\nnew_mid=(mid*.25+.4*sin(mid_att*.25));\\nbass_c=q1-1*sin(bass_Att&time*.54);\\ntreb_c=q2-1*sin(treb_att&time*.44);\\nmid_c=q3-1*sin(mid_att&time*.24);\\nvol_c=q4-1*sin(vol_att&time*.64);\\nq1=sin(Bass-new_bass&timE*.63);\\nq2=sin(treb-new_treb&time*.43);\\nq3=sin(mid-new_mid&time*.23);\\nq4=sin(vol&time*.65);\\nq5=bass_c;\\nq6=treb_c;\\nq7=mid_c;\\nq8=vol_c;\\nwave_mystery=bass_Att-1;\\nwave_R=wave_r+.2*sin(time*.43);\\nwave_B=wave_B-.2*sin(time*.54);\\nwave_g=wave_g-.4*sin(time*.34);\\nob_a=0;\",\"pixel_eqs_eel\":\"rad_cycle=rad*rad*x*60*rad*sin(q6);\\n\\nrote=rot+.1*sin(rad_cycle*sin(rad*3.14))+.01*sin(q1)*tan(rad);\\nzoome=zoom+.1*sin(rad*3.14*sin(ang*3.14)*sin(q2)-rote);\\nzoom=zoome+.05*sin(rad*3.14*q2)*sin(q4);\\nrot=rote*rad+ang/2*sin(Q3)*Sin(Ang*3.14*sin(q3)*sin(Q4))/2+.1*sin(ang*3.14)*sin(Q1);\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Illusion & Rovastar - Dotty Mad Space (Jelly).json":
/*!******************************************************************************!*\
  !*** ./presets/converted/Illusion & Rovastar - Dotty Mad Space (Jelly).json ***!
  \******************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1,\"decay\":0.9,\"echo_zoom\":7.524,\"echo_alpha\":0.6,\"wave_mode\":6,\"additivewave\":1,\"wave_dots\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"brighten\":1,\"wave_a\":2.518,\"wave_scale\":3.166,\"wave_smoothing\":0.18,\"modwavealphastart\":0.55,\"modwavealphaend\":2,\"warpanimspeed\":1.53,\"warpscale\":1.731,\"zoomexp\":0.99817,\"zoom\":1.00022,\"warp\":0.1401,\"sx\":1.006,\"sy\":0.9999,\"wave_g\":0.5,\"wave_b\":0.5,\"mv_x\":64,\"mv_y\":48,\"mv_r\":0.5,\"mv_g\":0.6,\"mv_b\":0.6},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp=0;\\nbass_effect = max(max(bass,bass_effect)-1.3,0);\\nmv_a = bass_effect*10;\\nmv_r =if(above(mid,treb),0,1);\\nmv_x = sin(time*3)*4 + 60;\\nmv_y = sin(time*5)*5 + 43;\\nwave_r = sin(time*5)*0.5+0.5;\\nwave_b = cos(time*12)*0.5+0.5;\\nwave_g = cos(time*14)*0.5+0.5;\",\"pixel_eqs_eel\":\"sx = sx + rad*0.01;\\nsy = sy +if(above(3.14-ang,0),0.1,-0.1);\",\"warp\":\"\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.yzx, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Isosceles mashup07.json":
/*!***************************************************!*\
  !*** ./presets/converted/Isosceles mashup07.json ***!
  \***************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1,\"decay\":1,\"wave_mode\":7,\"wave_thick\":1,\"wave_brighten\":0,\"wave_a\":0.001,\"wave_scale\":0.01,\"wave_smoothing\":0.9,\"wave_mystery\":1,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpanimspeed\":0.162,\"warpscale\":5.582,\"zoomexp\":0.32104,\"zoom\":0.9901,\"warp\":0.11563,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_y\":0.6,\"ob_size\":0,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.5,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":1.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":1.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":1.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"x1 = 0;\\ny1 = 0;\",\"frame_eqs_eel\":\"zoom = 1.0;\\n\\nq1 = .1*(bass-treb);\\n\\nvvb = if(below(vvb,0),0,vvb);\\nvvm = if(below(vvm,0),0,vvm);\\nvvt = if(below(vvt,0),0,vvt);\\nvb = vb*0.85 + (1-vb)*pow(bass,2)*0.001;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.2;\\nvm = vm*0.85 + (1-vm)*pow(mid,2)*0.01;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.2;\\nvt = vt*0.85 + (1-vt)*pow(treb,2)*0.001;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.2;\\n\\nq1 = (vvb-vvt)*vvm;//0.5 + vb - vvb;\\nq2 = vvm;//0.5 + vm - vvm;\\nq3 = vvt;//0.5 + vt - vvt;\\n\\nv=0.2;\\nd = 0;//v*0.2;\\nbb = bb + vvb*v - d;\\nmm = mm + vvm*v - d;\\ntt = tt + vvt*v - d;\\nq4 = bb;\\nq5 = mm;\\nq6 = tt;\\n\\n\\nq4 = if(above(abs(q1),0.02),0.99,1);\\nq9 = 0.5 + 0.5*sin(time*0.14);\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmp_1;\\n  vec3 ret_2;\\n  tmp_1.x = (ang * 3.0);\\n  tmp_1.y = rad;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\\n  tmpvar_5.y = tmpvar_4.y;\\n  ret_2 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_3 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_4 * 0.01)\\n  .xy)).xyz + (tmpvar_3 * 0.1)));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmp_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_6.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_6.z * 0.5));\\n  };\\n  float tmpvar_7;\\n  tmpvar_7 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_2 = (ret_2 * (0.98 * (tmpvar_7 * tmpvar_7)));\\n  ret_2 = (ret_2 - 0.04);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Krash + Illusion - Spiral Movement.json":
/*!*******************************************************************!*\
  !*** ./presets/converted/Krash + Illusion - Spiral Movement.json ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"decay\":1,\"echo_zoom\":1,\"wave_mode\":1,\"wave_brighten\":0,\"wave_a\":1,\"wave_scale\":0.504218,\"wave_mystery\":0.24,\"warpanimspeed\":9.8608,\"warpscale\":16.2174,\"zoomexp\":1.503744,\"zoom\":1.0201,\"warp\":0.819544,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.005,\"ob_a\":0.2,\"ib_size\":0.005,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":0.06,\"mv_a\":0},\"shapes\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dx=-0.0005;\\ndy=-0.0005;\\nvol = (bass+mid+att)/6;\\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nwave_x = xpos + 0.5;\\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nwave_y = ypos + 0.5;\\nwave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\\ncx = cx + 0.410*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.410*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nwave_mystery = wave_mystery + 0.15*( 0.60*sin(0.629*time) + 0.40*sin(1.826*time) );\\nwarp = warp*vol;\\nzoom = zoom - 0.02*zoom*bass_att;\\nzoom_exp = 1.5*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\\nob_a = 1 - 2*vol;\\nmonitor = zoom_exp;\",\"pixel_eqs_eel\":\"\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Martin - Diabolo.json":
/*!*************************************************!*\
  !*** ./presets/converted/Martin - Diabolo.json ***!
  \*************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.78,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":3,\"additivewave\":1,\"wave_dots\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.084,\"wave_smoothing\":0.36,\"wave_mystery\":0.2,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_a\":1,\"ib_size\":0,\"mv_x\":12.8,\"mv_y\":9.6,\"mv_l\":0.05,\"mv_b\":0.5,\"mv_a\":0,\"b1x\":0.7,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"num_inst\":22,\"rad\":0.43,\"tex_ang\":3.14159,\"tex_zoom\":1.53117,\"g\":1,\"b\":1,\"a\":0,\"r2\":0.84,\"g2\":0.93,\"b2\":1,\"border_r\":0.8,\"border_g\":0,\"border_a\":0.9,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"additive\":1,\"rad\":1.99863,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"a\":0.1,\"r2\":1,\"b2\":1,\"a2\":0.6,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"x\":0.123,\"y\":0,\"rad\":0.27319,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.54822,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":382,\"thick\":1,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.05},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = 1*cos(q30);\\nt2 = 1*sin(q30*4);\\nt3 = q29/3;\\n\",\"point_eqs_eel\":\"\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = abs(sin(t_abs*3)-q28%2)+.5;\\n\\nox = 3*sin (4*q30)+ ampl*(sin (t_rel*500)) ;\\noy = 3*cos (q30) + ampl*(cos (t_rel*(480+4*q28))) ;\\noz = t_abs*3 ;\\n\\nr = q12;\\nb = q13;\\ng = q14;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = min(max(0.2*q20,.1),.4);\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 7;\\nx = ox*fov/oz +0.5 ;\\ny = oy*fov/oz + 0.5 ;\\n\"},{\"baseVals\":{\"samples\":232,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"a\":0.3,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"trel = rand(10);\\nindex = rand(8);\\nindex2 = rand(8);\\navg = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.98, 30/fps);\\nbeat = (bass + mid + treb)/3;\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = (bass+mid+treb)-(bass_att+mid_att+treb_att);\\nq23 = beat - avg;\\nq24 = is_beat;\\nq27 = index;\\nq28 = index2;\\nq19 = index;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\nq1 = cos(rott);\\nq2 = sin(rott);\\n\\npulse = pulse*dec_slow+ (1-dec_slow)* peak;\\nwinkel = winkel + pulse/fps*30;\\nq29 = winkel;\\n\\ntrel = trel + (bass_+mid_+treb_)/fps/3;\\ntrel_ = trel_*dec_med + (1-dec_med)*trel;\\nq30 = trel_;\\nq31 = sin(trel_/4)*12;\\n\\ndec_slow = pow (0.94, 30/fps);\\nbass_ = bass_*dec_slow + (1-dec_slow)*bass_att;\\nmid_  = mid_*dec_slow + (1-dec_slow)*(mid_att);\\ntreb_ = treb_*dec_slow + (1-dec_slow)*treb_att;\\n\\nq12 = sigmoid((bass_-treb_)*4,1);\\nq13 = sigmoid((mid_-bass_)*4,1);\\nq14 = sigmoid((treb_-mid_)*4,1);\\n\\nq15 = above(q20,1.3); //stopngo\\n\\nrota = rota*dec_med + (1-dec_med)*q22/2;\\nzoom = 1.0 + .04*q1*50/fps;\\ncx = .5+.2*sin(trel_*12) * bnot(q28%3);\\ncy = .5+.4*cos(trel_*6) * bnot(q28%3);\\nrot = (.04*q1+rota/8*q2)*50/fps;\\ndx = .012*q1*50/fps*avg;\\ndy = .012*q2*50/fps*avg;\",\"pixel_eqs_eel\":\"\",\"warp\":\"float xlat_mutableq25;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 crisp_2;\\n  float tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv_orig);\\n  tmpvar_3 = ((16.0 * dot (\\n    ((tmpvar_4.xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))) * (0.5 + q22));\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\\n  tmpvar_5[1u].x = sin(tmpvar_3);\\n  tmpvar_5[1u].y = cos(tmpvar_3);\\n  uv_1 = (uv + ((0.25 * \\n    dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * (\\n    (uv - 0.5)\\n   * tmpvar_5)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (((uv_orig * texsize.xy) * 0.02) + time);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\\n  uv_1 = (uv_1 + ((tmpvar_7 * texsize.zw) * q31));\\n  crisp_2 = (((\\n    ((texture (sampler_fw_main, uv_1) * 2.0).xyz * 0.98)\\n   / 2.0) - 0.005) - (8.0 * max (\\n    pow ((uv_orig.x - 0.5), 6.0)\\n  , \\n    pow ((uv_orig.y - 0.5), 6.0)\\n  )));\\n  xlat_mutableq25 = (float((q22 >= 1.0)) * q15);\\n  crisp_2 = ((crisp_2 * (1.0 - xlat_mutableq25)) + (xlat_mutableq25 * texture (sampler_main, uv_orig).xyz));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = mix (crisp_2, vec3(dot (crisp_2, vec3(0.32, 0.49, 0.29))), vec3((0.2 * dot (\\n    ((tmpvar_4.xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29)))));\\n  ret = tmpvar_8.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableback;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutableback = ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = uv.x;\\n  tmpvar_2.y = ((-(uv.y) * 2.0) + 2.0);\\n  ret_1 = (mix (texture (sampler_main, uv).xyz, (1.5 * \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ), vec3(clamp (\\n    dot (xlat_mutableback, vec3(0.32, 0.49, 0.29))\\n  , 0.0, 1.0))) + ((xlat_mutableback * q22) / 2.0));\\n  ret_1 = (ret_1 + ((\\n    (clamp ((0.5 - (4.0 * \\n      dot (xlat_mutableback, vec3(0.32, 0.49, 0.29))\\n    )), 0.0, 1.0) * (uv.y / 2.0))\\n   * \\n    (1.0 - (dot ((\\n      (texture (sampler_blur2, fract(tmpvar_2)).xyz * scale2)\\n     + bias2), vec3(0.32, 0.49, 0.29)) * clamp ((4.0 - \\n      (4.0 * tmpvar_2.y)\\n    ), 0.0, 1.0)))\\n  ) * (0.5 + \\n    (hue_shader / 2.0)\\n  )));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Martin - QBikal - Surface Turbulence IIb.json":
/*!*************************************************************************!*\
  !*** ./presets/converted/Martin - QBikal - Surface Turbulence IIb.json ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":4,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.527,\"wave_smoothing\":0.45,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.8,\"wave_g\":0.49,\"ob_size\":0.015,\"ob_a\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b2x\":0.3,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"additive\":1,\"textured\":1,\"rad\":2.37185,\"tex_ang\":1.5708,\"tex_zoom\":0.93101,\"r\":0,\"g\":1,\"b\":1,\"a\":0.4,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":12,\"additive\":1,\"textured\":1,\"x\":0.3,\"y\":0.8,\"rad\":1.06345,\"tex_ang\":1.63363,\"tex_zoom\":0.46617,\"g\":1,\"g2\":0,\"a2\":1,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":13,\"additive\":1,\"num_inst\":5,\"x\":0.65,\"y\":0.38,\"rad\":0.57049,\"tex_zoom\":0.73678,\"a\":0.7,\"g2\":0,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":14,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.6,\"y\":0.55,\"rad\":0.97237,\"ang\":1.25664,\"tex_zoom\":0.34933,\"g\":0.6,\"g2\":0,\"b2\":1,\"border_r\":0.2,\"border_g\":0.7,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":506,\"sep\":116,\"spectrum\":1,\"thick\":1,\"scaling\":1.07408,\"smoothing\":0,\"a\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\\nn = int((reg00+.5)*sample);\\n\\nm = 30001+n/(reg00/reg01);\\ngmegabuf(m) = (value1+value2);\\n\\nx = gmegabuf(10000+n);\\ny = gmegabuf(15000+n);\\na = gmegabuf(20000+n);\\n\\nb = min(max(gmegabuf(25000+n),0),1);\\nr = 1-b;  \\ng = 0.5;\"},{\"baseVals\":{\"enabled\":1,\"samples\":506,\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n = int((reg00+.5)*sample) +reg00;\\n\\nx = gmegabuf(10000+n);\\ny = gmegabuf(15000+n);\\na = gmegabuf(20000+n);\\n\\nb = min(max(gmegabuf(25000+n),0),1);\\nr = 1-b;  \\ng = 0.5;\"},{\"baseVals\":{\"enabled\":1,\"samples\":506,\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n = int((reg00+.5)*sample)+2*reg00;\\n\\n\\nx = gmegabuf(10000+n);\\ny = gmegabuf(15000+n);\\na = gmegabuf(20000+n);\\n\\nb = min(max(gmegabuf(25000+n),0),1);\\nr = 1-b;  \\ng = 0.5;\\n\"},{\"baseVals\":{\"enabled\":1,\"samples\":506,\"spectrum\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n = int((reg00-.5)*sample)+3*reg00;\\n\\n\\nx = gmegabuf(10000+n);\\ny = gmegabuf(15000+n);\\na = gmegabuf(20000+n);\\n\\nb = min(max(gmegabuf(25000+n),0),1);\\nr = 1-b;  \\ng = 0.5;\"}],\"init_eqs_eel\":\"index = 0;\\nloop (70000,\\n  megabuf(index) = 0;\\n  gmegabuf(index) = 0;\\n  index = index + 1;\\n);\\n\\nzang = 1;\\n\\nyang = 0;\\nzang = 2;\",\"frame_eqs_eel\":\"xlen = 45; ylen = 45; flen = 30; reg00 = xlen*ylen/4; reg01=reg00/4;\\ndec_med = 1-0.06*30/fps; dec_slow = 1-0.02*30/fps; dec_f = pow (0.8, 30/fps);\\nq30 = dec_slow;\\nsmooth = max(1,pow(6,fps/30)-2); // >= 0; Ausbreitungsgeschwindigkeit\\n\\n//\\\"Classic\\\" beat reaction\\ncbeat = bass+mid+treb;\\ndecc = if (vol>cbeat,0.8,dec_med);\\nvol  = vol * decc + (1-decc)*cbeat;\\navg = avg*dec_slow + cbeat*(1-dec_slow);\\nis_beat = above(cbeat, 1.5*avg) * above (time, tc0+.2);\\ntc0 = if (bor(is_beat, bd_bt),time,tc0);\\npeak = if (is_beat,cbeat,peak*dec_med);\\n\\n\\n//Gleichanteil entfernen und normalisieren\\nind = 0; sum = 0; amp = 0.01;\\nloop (reg01,\\n  sum = sum + gmegabuf(ind+30000)/(reg01);\\n  amp = amp + pow(gmegabuf(ind+30000),2);\\n  ind = ind+1;\\n); \\nind = 0; amp_= amp_*dec_med + (1-dec_med)*sqrt(amp)/reg01*600;\\nloop (reg01,\\n  megabuf(ind+30000)= (gmegabuf(ind+30000)-sum)/amp_;\\n  ind = ind+1;\\n);\\n \\n// Spectrum of spectrum  !\\nindex2 = 0;\\nloop(flen, //Frequency step\\n  index=0; real= 0; imag = 0;\\n  loop (flen,\\n    real = real + cos(index/flen*6.28*index2)*megabuf(index*reg01/8+30002);\\n    imag = imag + sin(index/flen*6.28*index2)*megabuf(index*reg01/8+30002);\\n    index=index+1;\\n  );\\n  megabuf(10000+index2)= megabuf(10000+index2) * dec_f + real;\\n  megabuf(15000+index2)= megabuf(15000+index2) * dec_f + imag;\\n  index2 = index2+1;\\n );\\n\\n//Anregung\\nind = 1;\\nloop (flen/2,\\n  cx = megabuf(10000+ind);\\n  cy = megabuf(15000+ind);\\n  yind = -1;\\n  loop (3,\\n    xind = -1;\\n    loop (3,\\n      ox = ((cx+.5)*xlen+xind)%xlen;\\n      oy = ((cy+.5)*ylen+yind)%ylen;\\n      amp = (cx*cx+cy*cy)*3;\\n      megabuf (oy*ylen+ox) = megabuf (oy*ylen+ox) \\n                           - 2*30/fps*sqrt(amp)*above(amp,.02)/(1+xind*xind+yind*yind);\\n      xind = xind+1;\\n    );\\n    yind = yind+1;\\n  );\\n  ind = ind+1;\\n);\\n\\n//Simulation\\nyind = 0;\\nloop (ylen,\\n  xind = 0;\\n  loop (xlen,\\n    megabuf(yind*ylen+xind+5000) = //megabuf ab 5000 ist nur Zwischenspeicher\\n    dec_med*((gmegabuf(yind*ylen+(xind+1)%xlen) +\\n    gmegabuf(yind*ylen+(xlen+xind-1)%xlen) + \\n    gmegabuf(((yind+1)%ylen)*ylen+xind) + \\n    gmegabuf(((yind+ylen-1)%ylen)*ylen+xind)\\n    +gmegabuf(yind*ylen+xind)*smooth*4)/(2+2*smooth) - megabuf(yind*ylen+xind)); \\n    xind = xind+1;\\n  );\\n  yind = yind+1;\\n);\\n\\n//Projektionsparameter\\n\\nbindex += is_beat;\\nif (is_beat && (bindex%4==0), ran2 = (rand(100)-30)/60,0 );\\nif (is_beat && (bindex%4==2), ran3 = (rand(100)-30)/60,0 );\\nif (is_beat && (bindex%6==2), ran4 = (rand(100)-30)/60,0 );\\ndec_v = min(max(0, 1-8*vol/fps),dec_slow);\\nran2_ = ran2_ * dec_v + (1-dec_v)*ran2;\\nran3_ = ran3_ * dec_v + (1-dec_v)*ran3;\\nran4_ = ran4_ * dec_v + (1-dec_v)*ran4;\\ntrelx += ran2_/fps/7;\\ntrely += ran3_/fps/2;\\ntrelz += ran4_/fps/6;\\nzang = 6*sin(trelz);\\nxang = 6*sin(zang/5+trelx);\\nyang = 6*sin(zang/3*0+trely);\\n\\nq1 = cos(xang);q2 = sin(xang);q3 = cos(yang);\\nq4 = sin(yang);q5 = cos(zang);q6 = sin(zang);\\nfov = 1;\\n\\n//Umkopieren und Projektion\\nyind = 0;\\nloop (ylen,\\n  xind = 0;\\n  loop (xlen,\\n    ind = yind*ylen+xind;\\n    megabuf(ind) = gmegabuf(ind); \\n    gmegabuf(ind) = megabuf(ind+5000); \\n    oz = yind - ylen/2; //#\\n    ox = if(bnot(yind%2),xind,xlen-xind-1);\\n    oy0a = (oy0+oy0a)/2.5;\\n    oy = gmegabuf(yind*ylen+ox); oy0 = oy;\\n    ox = ox - xlen/2;  \\n    mx = ox*q5 - oy*q6;  my = ox*q6 + oy*q5;\\n    ox = mx; oy = my;  \\n    mx = ox*q3 + oz*q4;  mz = - ox*q4 + oz*q3;\\n    ox = mx; oz = mz;  \\n    my = oy*q1 - oz*q2;  mz = oy*q2 + oz*q1;\\n    z0 = 90+40*sin(trelz*14);\\n    oy = my; oz = mz+z0;\\n    gmegabuf(10000+ind) = fov*ox/(oz)+.5;\\n    gmegabuf(15000+ind) = fov*oy/(oz)+.5;\\n    hell= max(min(.5+oy0/4,1),0.1); //Helligkeit\\n    gmegabuf(20000+ind) = max(min(hell* (.5+ (oy0a-oy0)*0.1),1),0.1) ;\\n    gmegabuf(25000+ind) = oy0/16+.5;;\\n    xind = xind+1;\\n  );\\n  yind = yind+1;\\n);\\n\\nq29 = fov*50/z0;\\nq32 = aspecty;\\nq28 = min (vol/3-0.3,1);\\nmonitor = is_beat;\",\"pixel_eqs_eel\":\"rot = 0; zoom = 1.1; warp = 0; dy = 0.02;\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = vec3(0.0, 0.0, 0.0);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\"vec3 xlat_mutablecol;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  int iter_3;\\n  vec3 ret_4;\\n  ret_4 = texture (sampler_main, uv).xyz;\\n  iter_3 = int((clamp (q29, 0.0, 1.0) * 8.0));\\n  for (int n_2 = 1; n_2 < iter_3; n_2++) {\\n    vec2 tmpvar_5;\\n    tmpvar_5.y = 0.0;\\n    tmpvar_5.x = float(n_2);\\n    vec2 tmpvar_6;\\n    tmpvar_6.y = 0.0;\\n    tmpvar_6.x = float(n_2);\\n    ret_4 = max (max (ret_4, texture (sampler_main, (uv_1 - \\n      (texsize.zw * tmpvar_5)\\n    )).xyz), texture (sampler_main, (uv_1 + (texsize.zw * tmpvar_6))).xyz);\\n  };\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((1.0 - (2.0 * \\n    dot (ret_4, vec3(0.32, 0.49, 0.29))\\n  )), 0.0, 1.0);\\n  float tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (uv.x - 0.5);\\n  tmpvar_8 = (0.5 / ((\\n    (uv.y + ((tmpvar_9 * 1.4) * (q5 * q3)))\\n   - 0.4) + (0.3 * q4)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (tmpvar_8 * tmpvar_9);\\n  tmpvar_10.y = tmpvar_8;\\n  vec3 tmpvar_11;\\n  tmpvar_11.x = q2;\\n  tmpvar_11.y = q4;\\n  tmpvar_11.z = q6;\\n  xlat_mutablecol = (0.5 + (0.5 * tmpvar_11));\\n  float x_12;\\n  x_12 = ((uv.x - (\\n    dot (ret_4, vec3(0.32, 0.49, 0.29))\\n   * 5.0)) + 0.5);\\n  ret_4 = (ret_4 * (q28 + (\\n    ((6.0 * (0.05 / sqrt(\\n      (x_12 * x_12)\\n    ))) * (1.0 + xlat_mutablecol))\\n   / 2.0)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q1;\\n  tmpvar_13.y = (q3 + time);\\n  float tmpvar_14;\\n  tmpvar_14 = (((\\n    (texture (sampler_noise_lq, (tmpvar_10 + tmpvar_13)).x * tmpvar_7)\\n   * \\n    float((tmpvar_8 > 0.0))\\n  ) * 0.2) * min (1.0, (1.0/(tmpvar_8))));\\n  ret_4 = (ret_4 + tmpvar_14);\\n  ret_4 = (ret_4 + ((\\n    (sin((12.0 * q2)) * tmpvar_7)\\n   * tmpvar_14) * dot (\\n    (12.0 * ((texture (sampler_blur1, (tmpvar_10 - vec2(-0.5, 0.3))).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))));\\n  ret_4 = (ret_4 + ((\\n    ((0.5 / abs(tmpvar_8)) * normalize(xlat_mutablecol))\\n   * \\n    float((tmpvar_8 < 0.0))\\n  ) * tmpvar_7));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_4;\\n  ret = tmpvar_15.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Martin - bombyx mori mix2.json":
/*!**********************************************************!*\
  !*** ./presets/converted/Martin - bombyx mori mix2.json ***!
  \**********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.002,\"wave_scale\":0.14,\"wave_smoothing\":0,\"wave_mystery\":-0.84,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_g\":0,\"wave_b\":0.6,\"ob_size\":0.015,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":23,\"rad\":0.19788,\"tex_ang\":0.62832,\"tex_zoom\":0.0402,\"g\":1,\"b\":1,\"a\":0.9,\"r2\":0.9,\"b2\":1,\"a2\":0.3,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = .3; a2 = 0;\\n\\nk1 = instance/num_inst*6.28;\\nx = .5 + .25*cos(q27*6.28/4);\\ny = .5 + .25*sin(q27*6.28/4);\\n\\nr = .5 + .5*sin(time+q27*6.28/3);\\ng = .5 + .5*sin(time/2+(q27+1)*6.28/3);\\nb = .5 + .5*sin(time/3+(q27+2)*6.28/3);\\n\\nrad = q22/18;\"},{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":4.77803,\"tex_zoom\":1.78051,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_g\":0.99,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang =sin(time/65) ;\\nrad = q24/8;\"},{\"baseVals\":{\"sides\":5,\"additive\":1,\"num_inst\":4,\"x\":0.9,\"rad\":0.24732,\"tex_zoom\":0.40839,\"g\":0.6,\"a\":0.4,\"g2\":0,\"b2\":0.6,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"steps = q28+1;\\nsteps = 4;\\nampl = .2; //.2 bis .5 praktisch\\n\\nx = .5 + ampl*cos((q27/steps+instance/4)*6.28);\\ny = .5 + ampl*sin((q27/steps+instance/4)*6.28);\\n\\na = .3; a2 = .0;\\n\\n\\ntrig = q24 * bnot(q27%4);\\nred = bnot(trig)*red+ (rand(100)/100)*trig;\\ngreen = bnot(trig)*green+ (rand(100)/100)*trig;\\nblue = bnot(trig)*blue+ (rand(100)/100)*trig;\\n\\nk1 = instance / num_inst;\\n\\nr = red *k1;\\ng = green * (1-k1);\\nb = blue * 4*k1*(1-k1);\\n\\nr = red;\\ng = green;\\nb = blue;\\n\\n\\n\\nr2 = r; b2 = b; g2 = g;\"},{\"baseVals\":{\"sides\":36,\"additive\":1,\"rad\":0.01,\"r\":0,\"g\":0.12,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"additive\":1,\"scaling\":0.5033,\"r\":0.5,\"g\":0.1,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = .5 + .5*sample*sin(sample*50);\\ny = .5 + .5*sample*cos(sample*50);\\n\\ntrel = time;\\n\\nx = .5 + .5*sample*sin(time); \\ny = .5 + .5*sample*cos(time); \\n\\nx = rand(100)/100;\\ny = rand(100)/100;\\n\\na=.2;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"step = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\ndec_fast = pow (0.6, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = bass_att + mid_att + treb_att;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 1;\\nq23 = q22 -0.1/q22;\\nq23 = max(q23,1);\\n\\nk1 =  is_beat*equal(index%8,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_fast * p2+ (1-dec_fast)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%2);\\nvx = vx*bnot(trig) + trig* (rand(100)/100-.5);\\nvy = vy*bnot(trig) + trig* (rand(100)/100-.5);\\nq10 = 0.2+vy*vy*2;\\nq11 = sin(time/9)/2+.4;\\nmovz = movz-1/fps*(.3+vx);\\nq9 = movz;\\n\\nq12 = min(q22,6)*2;\\nq13 = min(2,1+abs(8*vy*vx));\\n//dir_ = dec_med*dir_ + (1-dec_med)*(index2%2-.5);\\ndir_ =  bass-1;\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(rand(10)-5);\\n\\ntrel = trel + .1/fps*dir;\\ntrel_ = dec_med*trel_ + (1-dec_med)*trel;\\n\\nq5 = cos(trel_);\\nq6 = sin(trel_+0*q27*(q28%2));\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1.02;\\nrot = .5*sin(bnot(q28%2)*q28) ;\\nrot = .0*sin(time/3);\\ndx = .0;\\n\\nmonitor = q11;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 uv6_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_3);\\n  uv1_2 = (tmpvar_3 + ((-0.01 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_6));\\n  uv1_2 = (uv1_2 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((0.5 * (\\n    ((texture (sampler_main, ((uv1_2 * \\n      (0.8 + (0.2 * tmpvar_5))\\n    ) + 0.5)).xyz + (vec3((0.01 / \\n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\\n    )) * (0.3 * \\n      (1.0 + roam_cos)\\n    ).xyz)) * 0.96)\\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_7.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableneu;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 ofs_2;\\n  vec3 ret1_3;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q5;\\n  tmpvar_4.y = q6;\\n  uv_1 = (uv_1 + (tmpvar_4 / 4.0));\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)] = _qb.xy;\\n  tmpvar_5[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_5);\\n  float tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (min (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0) / max (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0));\\n  float tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\\n  tmpvar_8 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\\n  tmpvar_8 = (tmpvar_8 + (float(\\n    (abs((uv_1.y / uv_1.x)) > 1.0)\\n  ) * (\\n    (tmpvar_8 * -2.0)\\n   + 1.570796)));\\n  tmpvar_6 = (tmpvar_8 * sign((uv_1.y / uv_1.x)));\\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\\n    if ((uv_1.x < 0.0)) {\\n      if ((uv_1.y >= 0.0)) {\\n        tmpvar_6 += 3.141593;\\n      } else {\\n        tmpvar_6 = (tmpvar_6 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_6 = (sign(uv_1.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = (((tmpvar_6 / 3.1416) * 6.0) * q28);\\n  xlat_mutablers0.y = inversesqrt(dot (uv_1, uv_1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (xlat_mutablers0.x + (q9 * 8.0));\\n  tmpvar_9.y = (xlat_mutablers0.y + ((q9 * q28) * 4.0));\\n  xlat_mutablerss = (tmpvar_9 / 12.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q5;\\n  tmpvar_10.y = q6;\\n  ofs_2 = (0.1 * tmpvar_10.yx);\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = -(q9);\\n  tmpvar_11 = fract(tmpvar_12);\\n  mat2 tmpvar_13;\\n  tmpvar_13[uint(0)].x = 1.0;\\n  tmpvar_13[uint(0)].y = -0.0;\\n  tmpvar_13[1u].x = 0.0;\\n  tmpvar_13[1u].y = 1.0;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_11)\\n   * tmpvar_13)) * aspect.yx);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_14).xyz + ((texture (sampler_blur1, tmpvar_14).xyz * scale1) + bias1));\\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), ((xlat_mutableneu * \\n    (1.0 - (tmpvar_11 * tmpvar_11))\\n  ) * 2.0));\\n  float tmpvar_15;\\n  tmpvar_15 = fract((tmpvar_12 + 0.3333333));\\n  mat2 tmpvar_16;\\n  tmpvar_16[uint(0)].x = -0.4990803;\\n  tmpvar_16[uint(0)].y = -0.8665558;\\n  tmpvar_16[1u].x = 0.8665558;\\n  tmpvar_16[1u].y = -0.4990803;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_15)\\n   * tmpvar_16)) * aspect.yx);\\n  vec2 tmpvar_17;\\n  tmpvar_17 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_17).xyz + ((texture (sampler_blur1, tmpvar_17).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_15 * tmpvar_15))\\n  ) * 2.0));\\n  float tmpvar_18;\\n  tmpvar_18 = fract((tmpvar_12 + 0.6666667));\\n  mat2 tmpvar_19;\\n  tmpvar_19[uint(0)].x = -0.5018377;\\n  tmpvar_19[uint(0)].y = 0.8649619;\\n  tmpvar_19[1u].x = -0.8649619;\\n  tmpvar_19[1u].y = -0.5018377;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_18)\\n   * tmpvar_19)) * aspect.yx);\\n  vec2 tmpvar_20;\\n  tmpvar_20 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_20).xyz + ((texture (sampler_blur1, tmpvar_20).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_18 * tmpvar_18))\\n  ) * 2.0));\\n  float tmpvar_21;\\n  tmpvar_21 = fract((tmpvar_12 + 1.0));\\n  mat2 tmpvar_22;\\n  tmpvar_22[uint(0)].x = 0.9999949;\\n  tmpvar_22[uint(0)].y = 0.003185092;\\n  tmpvar_22[1u].x = -0.003185092;\\n  tmpvar_22[1u].y = 0.9999949;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_21)\\n   * tmpvar_22)) * aspect.yx);\\n  vec2 tmpvar_23;\\n  tmpvar_23 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_23).xyz + ((texture (sampler_blur1, tmpvar_23).xyz * scale1) + bias1));\\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \\n    (1.0 - (tmpvar_21 * tmpvar_21))\\n  ) * 2.0));\\n  vec2 tmpvar_24;\\n  tmpvar_24.x = (ret1_3.x + ret1_3.z);\\n  tmpvar_24.y = (ret1_3.x - ret1_3.y);\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 1.0;\\n  tmpvar_25.xyz = ((ret1_3 + (\\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\\n   * roam_sin).xyz) + ((2.0 * \\n    (bass_att * ((texture (sampler_blur1, fract(\\n      (xlat_mutablerss + (tmpvar_24 / 2.0))\\n    )).xyz * scale1) + bias1).zxy)\\n  ) * clamp (\\n    (1.0 - (ret1_3 * 4.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_25.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Martin - disco mix 3 -fast.json":
/*!***********************************************************!*\
  !*** ./presets/converted/Martin - disco mix 3 -fast.json ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":5,\"wave_dots\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.169162,\"wave_smoothing\":0,\"wave_mystery\":0.08,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0.99,\"ob_size\":0.015,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":53,\"rad\":0.024396,\"tex_ang\":1.00531,\"tex_zoom\":1.531168,\"r\":0.2,\"g\":0.7,\"g2\":0,\"a2\":0.2,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = min(q22/4,1); a2 = 1;\\n\\n\\nr0 = bnot(q24)*r0 + q24 * rand(10)/10;\\nb0 = bnot(q24)*b0 + q24 * rand(10)/10;\\ng0 = bnot(q24)*g0 + q24 * rand(10)/10;\\nrad = q22/40;\\nr = r0; b = b0; g = g0;\\nr2 = 0; b2 = 0; g2 = 0;\"},{\"baseVals\":{\"enabled\":1,\"sides\":44,\"textured\":1,\"x\":0.7,\"rad\":0.2173,\"tex_ang\":0.628319,\"tex_zoom\":1.633192,\"g\":1,\"b\":1,\"r2\":0.99,\"g2\":0.99,\"b2\":1,\"a2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;\"},{\"baseVals\":{\"enabled\":1,\"sides\":63,\"x\":0.503,\"rad\":0.038857,\"tex_zoom\":2.2233,\"g\":0.1,\"r2\":1,\"b2\":1,\"a2\":0.7,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"textured = 1;\\nrot0 = rot0 + .1/fps * q2;\\n\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/400);\\nrad = rad0;\\n\\n\\nx =  posx+q26;\\ny =  posy;\\nang = rot0;\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.548217,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"sep\":120,\"usedots\":1,\"additive\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.02,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"step = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, -2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index + 1;\\nq28 = index2;\\n\\nq29 = ((index%2)-.5)*2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/8;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n//ds = max ((q26-.2),0);\\n//step = step + ds/10;\\n\\nstep = step + q24 ;\\n\\np3 = p3*dec_slow + (1-dec_slow) * step;\\nq30 = step;\\n\\np4 = dec_slow*p4 + (1-dec_slow)*q27;\\nq31 = p4;\\n\\nq12 = time -t0;\\nmonitor = q12;\\n\\n\\n\\nzoom = 1;\\nrot = -0 ;\\ndx = .00;\",\"pixel_eqs_eel\":\"zoom = 1.3;\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((q29 * 2.0) * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + (clamp (\\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((q24 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.02)\\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\"vec3 xlat_mutablenoise;\\nvec2 xlat_mutablers;\\n shader_body { \\n  xlat_mutablers.x = ((1.0/(rad)) + (time * 4.0));\\n  xlat_mutablers.y = ang;\\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_pw_noise_lq, ((xlat_mutablers / 3.0) / q27));\\n  xlat_mutablenoise = (tmpvar_1.xyz * vec3(greaterThanEqual (tmpvar_1.xyz, vec3(0.8, 0.8, 0.8))));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((1.0 + q22) * texture (sampler_main, (uv + \\n    (xlat_mutablenoise.xy * xlat_mutablers)\\n  )).xyz) - (0.2 * xlat_mutablenoise));\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Martin - disco mix 6.json":
/*!*****************************************************!*\
  !*** ./presets/converted/Martin - disco mix 6.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":4,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.5274,\"wave_smoothing\":0.45,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.8,\"wave_g\":0.49,\"ob_size\":0,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"additive\":1,\"rad\":0.048958,\"tex_ang\":1.00531,\"tex_zoom\":1.531168,\"r\":0,\"g\":1,\"b\":1,\"r2\":0.83,\"g2\":0.93,\"b2\":0.8,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\n\\nrad = .1;\\na = .8;\"},{\"baseVals\":{\"thickoutline\":1,\"textured\":1,\"x\":0.26,\"y\":0.2,\"rad\":0.393173,\"tex_zoom\":0.9355,\"r\":0,\"g\":0.55,\"b\":0.5,\"g2\":0.4,\"b2\":0.4,\"a2\":0.07,\"border_r\":0.3,\"border_g\":0.7,\"border_b\":0.8,\"border_a\":0.4,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_zoom = q27;\"},{\"baseVals\":{\"sides\":44,\"x\":0.503,\"rad\":0.038857,\"tex_zoom\":0.609857,\"g\":0.1,\"a\":0.9,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = rand(50)/50;\\ny = .5;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na2 = min(q21/2 ,1)/2;\\n\\na = 0;\\n\\nrad = a2 * (.1+abs(x-.5))/2 ;\"},{\"baseVals\":{\"thickoutline\":1,\"textured\":1,\"x\":0.26,\"y\":0.76,\"rad\":0.39478,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":0.8,\"border_r\":0.2,\"border_g\":0.7,\"border_b\":0.5,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_zoom = q27/2;\"}],\"waves\":[{\"baseVals\":{\"samples\":282,\"sep\":20,\"thick\":1,\"additive\":1,\"scaling\":7.858,\"smoothing\":0.1,\"r\":0.2,\"g\":0.3,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"\\nx = sample;\\ny = value1 * rand(50)/100 * abs(sample-.5)+ .478;\\n\\na = q26/4 * (.2 + abs(sample-.5)); \"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\n\\nbeat = bass+mid+treb;\\nbeat = beat*beat;\\n\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .3*avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindexa = (indexa + is_beat) %5;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att + 1;\\nq27 = index + 1;\\nq28 = -index2 + indexa/5;\\nq29 = index2;\\n\\nk1 =  is_beat*equal(index%16,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrot1 = p2 * 3.1416/2;\\nq8 = cos(rot1);\\n\\nrott = rott + 1/fps * sin(time/3.5);\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel = trel + .5/fps * (1);\\nq5 = cos(time/6+trel)/3;\\nq6 = sin(trel)/16+.4;\\nq7 = 1.02+.03*sin(rott/3.7);\\n\\nran = ran * (1-q24) + rand(100)/100;\\nq10 = ran -.5;\\n\\n\\nzoom = 1.0;\\nwarp = 0;\",\"pixel_eqs_eel\":\"\",\"warp\":\"float xlat_mutableq24;\\n shader_body { \\n  vec2 rs_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv_orig - 0.5);\\n  float theta_3;\\n  theta_3 = (q1 * ((q27 * \\n    sqrt(dot (tmpvar_2, tmpvar_2))\\n  ) + (rand_frame * 64.0)).x);\\n  rs_1 = (clamp ((\\n    (sin(theta_3) / cos(theta_3))\\n   * \\n    normalize((1.0/(tmpvar_2)))\\n  ), vec2(-4.0, -4.0), vec2(4.0, 4.0)) * cos((tmpvar_2.yx * q28)));\\n  vec2 x_4;\\n  x_4 = ((rs_1 * tmpvar_2) + 0.01);\\n  xlat_mutableq24 = (q24 + 0.03);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((xlat_mutableq24 * (\\n    ((texture (sampler_main, (uv + (rs_1 / 44.0))).xyz + (vec3((0.002 / \\n      sqrt(dot (x_4, x_4))\\n    )) * roam_cos.xyz)) * 0.98)\\n   - 0.02)) + ((\\n    (1.0 - xlat_mutableq24)\\n   * texture (sampler_main, \\n    ((tmpvar_2 * q7) + 0.5)\\n  ).xyz) * 0.99));\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1.x = uv.x;\\n  vec2 uv1_2;\\n  uv_1.y = ((uv.y + q5) - 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (1.0/((tmpvar_3.y + (tmpvar_3.x * q1))));\\n  xlat_mutablers0.x = (tmpvar_3.x * tmpvar_4);\\n  xlat_mutablers0.y = (tmpvar_4 / 4.0);\\n  xlat_mutablers.x = xlat_mutablers0.x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (time * 2.0));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q5;\\n  tmpvar_5.y = q6;\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)] = _qa.xy;\\n  tmpvar_6[1u] = _qa.zw;\\n  uv1_2 = ((tmpvar_3 + tmpvar_5) * tmpvar_6);\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((4.0 / tmpvar_4), 0.0, 1.0);\\n  xlat_mutableuv2 = ((2.0 * uv1_2) * (sqrt(\\n    dot (uv1_2, uv1_2)\\n  ) + q8));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = fract(((xlat_mutableuv2 + 0.5) - (\\n    (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 40.0)), vec4(0.32, 0.49, 0.29, 0.0))) - 0.5)\\n   * tmpvar_7).xy));\\n  xlat_mutableret1 = ((texture (sampler_main, tmpvar_8) * (1.0 - tmpvar_7)).xyz + (tmpvar_7 * (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 + (\\n    (q22 / 16.0)\\n   * xlat_mutableret1)));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (xlat_mutableret1 + (clamp (\\n    ((texture (sampler_blur2, vec2(fract((\\n      ((xlat_mutableuv2.y / xlat_mutableuv2.x) * q10)\\n     / 3.0)))).xyz * scale2) + bias2)\\n  , 0.0, 1.0) * clamp (\\n    ((q22 / 24.0) - 0.4)\\n  , 0.0, 1.0)));\\n  ret = tmpvar_9.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Martin - journey into space.json":
/*!************************************************************!*\
  !*** ./presets/converted/Martin - journey into space.json ***!
  \************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":4,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.002705,\"wave_scale\":1.291486,\"wave_smoothing\":0.45,\"wave_mystery\":0.08,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0.99,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0.11,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":44,\"rad\":0.108525,\"tex_ang\":1.00531,\"tex_zoom\":1.531168,\"g\":1,\"b\":1,\"r2\":0.83,\"g2\":0.93,\"b2\":0.8,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trig = q24 * equal(q27%4,0);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 - ( 1/(dist+1))/2;\\ny = 1-x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q9/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;\"},{\"baseVals\":{\"enabled\":1,\"sides\":34,\"thickoutline\":1,\"x\":0.4,\"rad\":2.366958,\"tex_ang\":3.455753,\"tex_zoom\":0.993053,\"r\":0.5,\"b\":1,\"a\":0.2,\"r2\":0.7,\"g2\":0.4,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trig = q24 * equal(q27%4,2);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 + ( 1/(dist+1))/1.9;\\ny = 1-x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q9/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;\"},{\"baseVals\":{\"enabled\":1,\"sides\":44,\"x\":0.503,\"rad\":0.038857,\"tex_zoom\":0.609857,\"g\":0.1,\"a\":0.9,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trig = q24 * equal(q27%4,1);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 - ( 1/(dist+1))/1.9;\\ny = x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q9/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;\"},{\"baseVals\":{\"enabled\":1,\"sides\":63,\"y\":1,\"rad\":0.548217,\"tex_zoom\":2.223327,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trig = q24 * equal(q27%4,3);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 + ( 1/(dist+1))/1.9;\\ny = x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q9/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;\"}],\"waves\":[{\"baseVals\":{\"sep\":120,\"additive\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);\"},{\"baseVals\":{\"usedots\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = sample;\\ny = 1-sample;\\na = (q24 * equal(q27%4,0));\\n\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.5, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%12;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att ;\\nq27 = index + 1;\\nq28 = index2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq10 = 20; //speed shot\\nq9 = .8; //brightness shot\\n\\n\\n\\n//***********************\\ntrig1= q24*bnot(index%4);\\ntrig2= q24*bnot((index+4)%16);\\ntrig3= q24*bnot((index+8)%16);\\n\\n\\nq5 = cos(time/3.7);\\nq6 = .3*sin(time/2);\\nq7 = .3*sin(time/1.5);\\n\\n\\n\\n//**************\\ntrel = trel + (1+q22)/fps;\\nz0 = 4;\\nq11 = .3*sin(trel*2); \\nq12 = .1*cos(trel*1.5); \\nq13 = 2+z0 + 6*sin(trel*1.1);\\n\\nq14 = .3*sin(trel*2.4); \\nq15 = .2*cos(trel*1) ; \\nq16 = 4+z0 + 3*sin(trel*1.6);\\n\\nq17 = .3*sin(trel*1); \\nq18 = .2*cos(trel*1.2); \\nq19 = 3+z0 + sin(trel*.8);\",\"pixel_eqs_eel\":\"rot = .05 * q1 * (1-rad);\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (q31 * sqrt((x_4 * x_4)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_3);\\n  uv_1 = (uv + ((0.1 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_6));\\n  uv_1 = (uv_1 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 14.0)\\n   + rand_frame.xy)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((texture (sampler_main, \\n    (((uv_1 - 0.5) * (0.95 + (\\n      (0.1 * q28)\\n     * tmpvar_5))) + 0.5)\\n  ).xyz + \\n    (vec3((0.01 / sqrt(dot (uv6_2, uv6_2)))) * (0.3 * (1.0 + roam_cos)).xyz)\\n  ) * 0.99) - 0.025);\\n  ret = tmpvar_7.xyz;\\n }\",\"comp\":\"vec2 xlat_mutableKugel1;\\nvec2 xlat_mutableKugel2;\\nfloat xlat_mutablerad1;\\nfloat xlat_mutablerad2;\\nfloat xlat_mutablerad3;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablersk;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q6;\\n  tmpvar_2.y = q7;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv + tmpvar_2) - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q11;\\n  tmpvar_4.y = q12;\\n  xlat_mutablersk = (tmpvar_3 + tmpvar_4);\\n  xlat_mutablerad1 = ((8.0 * q13) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((10.0 - (7.0 * xlat_mutablerad1)), 0.0, 1.0);\\n  xlat_mutableKugel1 = ((xlat_mutableuv4 * tmpvar_5) / (1.0 + q13));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q14;\\n  tmpvar_6.y = q15;\\n  xlat_mutablersk = (tmpvar_3 + tmpvar_6);\\n  vec2 x_7;\\n  x_7 = (xlat_mutablersk + 0.1);\\n  float tmpvar_8;\\n  tmpvar_8 = (1.0 + q16);\\n  xlat_mutablerad2 = ((2.0 * tmpvar_8) * sqrt(dot (x_7, x_7)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(xlat_mutablersk));\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((10.0 - (7.0 * xlat_mutablerad2)), 0.0, 1.0);\\n  xlat_mutableKugel2 = ((xlat_mutableuv4 * tmpvar_9) / tmpvar_8);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q17;\\n  tmpvar_10.y = q18;\\n  xlat_mutablersk = (tmpvar_3 + tmpvar_10);\\n  float tmpvar_11;\\n  tmpvar_11 = (1.0 + q19);\\n  xlat_mutablerad3 = ((4.0 * tmpvar_11) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * normalize(xlat_mutablersk));\\n  float tmpvar_12;\\n  tmpvar_12 = clamp ((10.0 - (7.0 * xlat_mutablerad3)), 0.0, 1.0);\\n  uv1_1 = (tmpvar_3 + ((\\n    (xlat_mutableKugel1 + xlat_mutableKugel2)\\n   + \\n    ((xlat_mutableuv4 * tmpvar_12) / tmpvar_11)\\n  ) * 0.5));\\n  float tmpvar_13;\\n  tmpvar_13 = (1.0/((uv1_1.y + (uv1_1.x * q5))));\\n  xlat_mutablers0.x = (uv1_1.x * tmpvar_13);\\n  xlat_mutablers0.y = (tmpvar_13 / 4.0);\\n  xlat_mutablers.x = xlat_mutablers0.x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (time * 2.0));\\n  float tmpvar_14;\\n  tmpvar_14 = clamp ((4.0 / tmpvar_13), 0.0, 1.0);\\n  xlat_mutableuv2 = ((0.4 * uv1_1) * (sqrt(\\n    dot (uv1_1, uv1_1)\\n  ) + 1.0));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  float tmpvar_15;\\n  tmpvar_15 = (0.2 * q22);\\n  xlat_mutableret1 = ((texture (sampler_main, fract(\\n    ((xlat_mutableuv2 + 0.5) - (((vec3(\\n      dot (texture (sampler_noise_lq, (xlat_mutablers / 16.0)), vec4(0.32, 0.49, 0.29, 0.0))\\n    ) - 0.5) * tmpvar_14) * 0.2).xy)\\n  )) * 2.0).xyz + ((\\n    ((tmpvar_15 * (float(mod (q27, 3.0)))) / xlat_mutablerad1)\\n   + \\n    ((tmpvar_15 * (float(mod ((q27 + 1.0), 3.0)))) / xlat_mutablerad2)\\n  ) + (\\n    (tmpvar_15 * (float(mod ((q27 + 2.0), 3.0))))\\n   / xlat_mutablerad3)));\\n  xlat_mutableret1 = (xlat_mutableret1 + ((\\n    ((0.4 * tmpvar_5) * ((texture (sampler_blur1, vec2(0.0, 0.0)).xyz * scale1) + bias1))\\n   + \\n    ((0.4 * tmpvar_9) * ((texture (sampler_blur1, vec2(0.1, 0.1)).xyz * scale1) + bias1))\\n  ) + (\\n    (0.4 * tmpvar_12)\\n   * \\n    ((texture (sampler_blur1, vec2(0.2, 0.2)).xyz * scale1) + bias1)\\n  )));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = max (xlat_mutableret1, vec3((clamp (\\n    (1.0/((float(mod (((uv.x * 2562.0) * (uv.y * 2562.0)), 13333.0)))))\\n  , 0.0, 1.0) * (1.0 - \\n    (4.0 * tmpvar_14)\\n  ))));\\n  ret = tmpvar_16.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/MilkDrop2077.R012.json":
/*!**************************************************!*\
  !*** ./presets/converted/MilkDrop2077.R012.json ***!
  \**************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.964,\"echo_zoom\":1.168,\"wave_mode\":5,\"wave_thick\":1,\"wave_brighten\":0,\"wave_a\":1.204,\"wave_scale\":1.99,\"wave_smoothing\":0.963,\"wave_mystery\":0.104,\"modwavealphastart\":0.94,\"modwavealphaend\":1.287,\"warpanimspeed\":0.01,\"warpscale\":0.01,\"rot\":-0.02,\"cx\":0.53,\"warp\":0.01,\"wave_r\":0.97,\"wave_g\":1.21,\"wave_b\":0.88,\"wave_x\":0.98,\"wave_y\":0.565,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"ib_r\":0.235,\"mv_x\":10.08,\"mv_y\":7.47,\"mv_l\":0.711,\"mv_r\":1.02,\"mv_g\":0.79,\"mv_b\":0.79,\"mv_a\":0,\"b2x\":0.85},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":40,\"thickoutline\":1,\"textured\":1,\"x\":0.57,\"y\":0.49,\"rad\":0.5516,\"tex_zoom\":0.83,\"r\":0.82,\"g\":1.11,\"b\":0.96,\"a\":1.21,\"r2\":0.89,\"g2\":1.09,\"b2\":0.89,\"a2\":0.83,\"border_r\":0.86,\"border_g\":0.87,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"bob = 1.49;\\nro = 0;\\nred = rand(20);\",\"frame_eqs_eel\":\"vol = 1 + 0.22*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.0091) - 0.0091 + 1*(1 - above(bob,0.0091));\\nbob = 0.32 + 0.32*sin(time*0.99);\\nbob = bob*vol;\\nrad = bob;\\nborder_1 = 0.46;\\nsides = 30;\\nro = ro + 0.022;\\nang = ro;\\nrad = 0.55;\\n\\nsp = red*0.0253;\\nspi = 0.54 - sp;\\ntm = time*0.12;\\nborder_r = 0.56 + sp*sin(tm*0.68) + spi*cos(tm*1.212);\\nborder_g = 0.48 + sp*sin(tm*1.087) + spi*cos(tm*0.705);\\nborder_b = 0.49 + sp*sin(tm*1.2337) + spi*cos(tm*0.692);\"},{\"baseVals\":{\"enabled\":1,\"sides\":40,\"additive\":1,\"x\":0.4,\"y\":0.415,\"rad\":0.113,\"tex_zoom\":1.24,\"r\":1.12,\"g\":1,\"b\":0.94,\"a\":1.06,\"g2\":0,\"border_r\":0.98,\"border_g\":1.15,\"border_b\":1.23,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.43 + 0.43*(sin(time*1.25)*0.24 + 0.466*sin(time*0.43));\\nx = 0.51 + 0.2543*sin(time);\\ny = 0.59 + 0.31*cos(time);\\n\\nrad = rad*mid_att;\\nr = 0.61 + 0.61*sin(frame*0.61);\\nb = 0.5151 + 0.5151*sin(frame*0.5151 + 2.1778);\\ng = 0.43 + 0.43*sin(frame*0.43 + 3.1829);\\n\"},{\"baseVals\":{\"enabled\":1,\"sides\":40,\"additive\":1,\"x\":0.38,\"y\":0.44,\"rad\":0.084,\"tex_zoom\":0.95,\"r\":0.97,\"g\":0.81,\"b\":0.78,\"a\":0.83,\"g2\":0,\"border_r\":1.2,\"border_g\":1.02,\"border_b\":0.83,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.43 + 0.43*(sin(time*1.05)*0.28 + 0.86*sin(time*0.43));\\nx = 0.4 + 0.2183*sin(time + 1.839);\\ny = 0.41 + 0.25*cos(time + 1.965);\\n\\nrad = rad*bass_att;\\nr = 0.484 + 0.484*sin(frame*0.484);\\nb = 0.41 + 0.41*sin(frame*0.41 + 2.3453);\\ng = 0.61 + 0.61*sin(frame*0.61 + 3.6017);\\n\"},{\"baseVals\":{\"enabled\":1,\"sides\":40,\"additive\":1,\"x\":0.41,\"y\":0.555,\"rad\":0.083,\"tex_zoom\":0.83,\"r\":1.12,\"g\":1,\"b\":1.17,\"a\":1.01,\"g2\":0,\"border_r\":1.09,\"border_g\":0.94,\"border_b\":0.88,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.42 + 0.42*(sin(time*1.1)*0.26 + 0.86*sin(time*0.42));\\nx = 0.52 + 0.2587*sin(time + 4.777);\\ny = 0.51 + 0.34*cos(time + 4.902);\\n\\nrad = rad*treb_att;\\nr = 0.428 + 0.428*sin(frame*0.428);\\nb = 0.46 + 0.46*sin(frame*0.46 + 2.5547);\\ng = 0.411 + 0.411*sin(frame*0.411 + 4.4812);\\n\"}],\"waves\":[{\"baseVals\":{\"scaling\":1.11,\"smoothing\":0.485,\"r\":1.16,\"g\":0.84,\"b\":0.9,\"a\":1.06,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"scaling\":1.1,\"smoothing\":0.4,\"r\":0.91,\"g\":0.77,\"b\":0.93,\"a\":0.8,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"scaling\":0.78,\"smoothing\":0.465,\"r\":0.98,\"g\":1.05,\"b\":1.22,\"a\":0.85,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"scaling\":0.79,\"smoothing\":0.62,\"r\":1.19,\"g\":0.85,\"b\":1.12,\"a\":0.84,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.056;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );\",\"pixel_eqs_eel\":\"zoom = zoom + 0.06*sin(rad*12 + ang*3 + time*-3.4)*(1-rad);\\nrot = rot * (1-rad);\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3)\\n  .y) * 0.2));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 0.0;\\n  tmpvar_17.xyz = ret_2;\\n  vec3 tmpvar_18;\\n  tmpvar_18 = mix (tmpvar_17, texture (sampler_main, uv_orig), vec4(0.2, 0.2, 0.2, 0.2)).xyz;\\n  ret_2 = tmpvar_18;\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = tmpvar_18;\\n  ret = tmpvar_19.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_blur1, uv);\\n  ret_1 = (mix (vec3((\\n    ((tmpvar_3.xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  .x)), tmpvar_2.xxx, pow (tmpvar_2.xxx, vec3(0.5, 0.5, 0.5))) * 2.7);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_3.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (ret_1 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    ((1.0 - ((tmpvar_3.xyz * scale1) + bias1).x) - ret_1.x)\\n  ), 0.0, 1.0));\\n  ret_1 = (((\\n    pow ((tmpvar_5 + clamp ((\\n      pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n     * \\n      ((1.0 - ((tmpvar_3.xyz * scale1) + bias1).x) - tmpvar_5.x)\\n    ), 0.0, 1.0)), vec3(0.9, 0.7, 0.6))\\n   * 1.25) - 0.25) - tmpvar_2.yyy);\\n  ret_1 = (ret_1 * ret_1);\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(1.0, 0.0, 1.0)) * q30)));\\n  if (((ret_1.x > (q26 * q3)) && (ret_1.x <= (q23 * q1)))) {\\n    ret_1.z = (ret_1.z - (tmpvar_6.x * 0.5));\\n  };\\n  if (((ret_1.y > (q25 * q1)) && (ret_1.y <= (q22 * q2)))) {\\n    ret_1.x = (ret_1.x - (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q2)) && (ret_1.z <= (q21 * q3)))) {\\n    ret_1.y = (ret_1.y - (tmpvar_6.z * 0.5));\\n  };\\n  ret_1 = (ret_1 - 0.15);\\n  ret_1 = (ret_1 * normalize(texture (sampler_noise_hq, (\\n    (uv + (q4 / 2.0))\\n   / 6.0))).xyz);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/ORB - Magma Pool.json":
/*!*************************************************!*\
  !*** ./presets/converted/ORB - Magma Pool.json ***!
  \*************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":7,\"solarize\":1,\"wave_a\":0.001,\"warpanimspeed\":2.007,\"warpscale\":3.749,\"zoomexp\":1.0741,\"zoom\":1.0004,\"warp\":38.6131,\"wave_r\":0,\"wave_g\":0.4,\"wave_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"textured\":1,\"rad\":2.66718,\"tex_zoom\":0.37409,\"g\":1,\"b\":1,\"a\":0.8,\"r2\":1,\"b2\":1,\"a2\":0.4},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang = basstime;\\ntex_ang = sin(basstime);\\n\\nob_r = 0.5 * sin(basstime*1.12);\\nob_g = 0.5 * sin(basstime*1.5);\\nob_b = 0.5 * sin(basstime*2.12);\"},{\"baseVals\":{\"enabled\":1,\"textured\":1,\"rad\":2.66718,\"tex_zoom\":0.37713,\"g\":1,\"b\":1,\"a\":0.7,\"r2\":0.8,\"b2\":1,\"a2\":0.5},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_capture = above(bass,1);\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"g2\":0.8,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"b2 = sin(q5*0.4);\"},{\"baseVals\":{\"x\":0.54,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"basstime  = basstime + bass*0.006;\\nq2 = basstime;\\nq1 = basstime*0.001;\\n\\n\\nq4 = cos(basstime);\\nq5 = sin(basstime);\\n\\n//Transision detection\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = 0;//(diff-0.5)*5;\\nq6 = diff;\\nbit2 = time%2;\\n\\nmonitor = (diff-1)*5;\",\"pixel_eqs_eel\":\"zoom = 0.2;\\nrot = 0;\",\"warp\":\" shader_body { \\n  float final_noise_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q5;\\n  tmpvar_2[uint(0)].y = -(q4);\\n  tmpvar_2[1u].x = q4;\\n  tmpvar_2[1u].y = q5;\\n  vec3 tmpvar_3;\\n  tmpvar_3.xy = uv;\\n  tmpvar_3.z = q2;\\n  final_noise_1 = ((texture (sampler_noisevol_hq, (tmpvar_3 * \\n    pow (q3, 0.0)\\n  )) * 2.0) - 1.0).x;\\n  final_noise_1 = (final_noise_1 + (0.5 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_3 * q3)) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (final_noise_1 + (0.25 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_3 * (q3 * q3))) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (final_noise_1 + (0.125 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_3 * pow (q3, 3.0))) * 2.0)\\n   - 1.0)).x);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_main, ((\\n    (((uv - 0.5) * tmpvar_2) * (1.0 - ((rad * 3.7) * (1.0 - \\n      (bass_att * 0.3)\\n    ))))\\n   * final_noise_1) + 0.5)).xyz - 0.08);\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q4;\\n  tmpvar_2[uint(0)].y = -(q5);\\n  tmpvar_2[1u].x = q5;\\n  tmpvar_2[1u].y = q4;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  ret_1 = (mix (texture (sampler_main, fract(\\n    (((tmpvar_3 * tmpvar_2) * 0.9) + 0.5)\\n  )).xyz, texture (sampler_main, fract(\\n    ((((\\n      (-(tmpvar_3) + 0.5)\\n     - 0.5) * -(tmpvar_2)) * 0.9) + 0.5)\\n  )).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4.x = (ret_1.x * 10.0);\\n  tmpvar_4.y = ret_1.y;\\n  tmpvar_4.z = -(ret_1.z);\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/ORB - Pastel Primer.json":
/*!****************************************************!*\
  !*** ./presets/converted/ORB - Pastel Primer.json ***!
  \****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"decay\":0.9,\"echo_zoom\":1.007,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":1,\"wrap\":0,\"brighten\":1,\"wave_a\":0.001,\"zoom\":0.96,\"rot\":-18.84024,\"warp\":0.00052,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_r\":0.9,\"ob_g\":0.5,\"ob_a\":0.1,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":0.1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":4.95,\"mv_r\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"rad\":2.66718,\"tex_zoom\":0.45112,\"g\":1,\"a\":0.15,\"g2\":0,\"a2\":0.05,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"x\":0.35,\"y\":0,\"rad\":0.09959,\"tex_zoom\":0.42497,\"r\":0,\"b\":1,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"y\":0,\"rad\":0.10201,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"x\":0.65,\"y\":0,\"g\":1,\"b\":1,\"r2\":1,\"g2\":0,\"b2\":1,\"a2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"thick\":1,\"additive\":1,\"r\":0,\"g\":0,\"b\":0,\"a\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.3;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);\\n\\n\\nr = 0.5 + 0.5*sin(q1*0.22);\\ng = 0.5 + 0.5*sin(q1*0.307) + x;\\n//b = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),rand(100)*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),rand(10),burstspeed);\\nxdrift = if(equal(state,0),rand(20),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\nmonitor = q1;\",\"pixel_eqs_eel\":\"zoom = 0.98;\\nrot = 0;\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 color_2;\\n  vec2 uv2_3;\\n  uv2_3 = (uv + q3);\\n  color_2 = ((texture (sampler_noise_lq, uv2_3) - 0.5).xyz + (texture (sampler_noise_mq, uv2_3) - 0.5).xyz);\\n  color_2 = (color_2 + (texture (sampler_noise_hq, uv2_3) - 0.5).xyz);\\n  uv_1 = (uv + (color_2 * 0.01).xy);\\n  uv_1.y = (uv_1.y + (abs(\\n    (color_2 * 0.01)\\n  ) + (bass_att * 0.01)).x);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_main, ((uv_1 * 0.95) + (\\n    ((texture (sampler_blur1, ((\\n      (uv_1 - 0.5)\\n     * 0.9) + 0.5)).xyz * scale1) + bias1)\\n   * 0.1).xy)).xyz - 0.01);\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 2.0);\\n  ret = tmpvar_1.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/PieturP - triptrap_(ultimate-trip-mix).json":
/*!***********************************************************************!*\
  !*** ./presets/converted/PieturP - triptrap_(ultimate-trip-mix).json ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":0.9559,\"echo_zoom\":2.003071,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_brighten\":0,\"wave_a\":0.001,\"wave_scale\":0.535239,\"wave_smoothing\":0,\"wave_mystery\":-0.48,\"modwavealphastart\":1,\"modwavealphaend\":1.1,\"warpscale\":0.01,\"zoomexp\":1.008148,\"zoom\":1.0018,\"warp\":0.01,\"sx\":1.001829,\"sy\":1.008151,\"wave_g\":0.65,\"wave_b\":0,\"ob_size\":0,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":6.4,\"mv_y\":48,\"mv_dx\":0.5,\"mv_dy\":0.5,\"mv_l\":5,\"mv_r\":0.013716,\"mv_g\":0.872347,\"mv_b\":0.522466,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"thickoutline\":1,\"textured\":1,\"rad\":0.746302,\"tex_zoom\":0.942039,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang=sin(time)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=cos(time*.3)*.4+0.65;\\nx=sin(time*.25)*.25+.5;\\ny=cos(time*.45)*.25+.5;\\n\\n\\n\"},{\"baseVals\":{\"enabled\":1,\"thickoutline\":1,\"textured\":1,\"rad\":0.746302,\"tex_zoom\":0.942039,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang=cos(time*.3)*.5+.5;\\nval=3;\\na2=val*.33;\\na=val*.33;\\nrad=sin(time*.3)*.4+0.65;\\nx=cos(time*.25)*.25+.5;\\ny=sin(time*.45)*.25+.5;\\n\\n\\n\"},{\"baseVals\":{\"enabled\":1,\"thickoutline\":1,\"rad\":0.364564,\"r\":0,\"g2\":0,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\nh2=h2+(above(treb,1.32)*0.8)*.9;\\nvr=sin(h2*.8)*.5+.5;\\nvg=sin(h2*.5)*.5+.5;\\nvb=sin(h2*.1)*.5+.5;\\n\\ng=vg;\\nr=vr;\\nb=vb;\\ng2=g;\\nr2=r;\\nb2=b;\\ndist=(frame%100)*.01;\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\nx=if(below(maat,8),if(below(maat,4),dist,1-dist),x);\\ny=if(above(maat,8),if(above(maat,4),dist,1-dist),y);\"},{\"baseVals\":{\"thickoutline\":1,\"textured\":1,\"rad\":0.364564,\"r\":0,\"g2\":0,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\nh2=h2+(above(treb,1.32)*0.8)*.9;\\nvr=sin(h2*.8)*.5+.5;\\nvg=sin(h2*.5)*.5+.5;\\nvb=sin(h2*.1)*.5+.5;\\n\\ng=vg;\\nr=vr;\\nb=vb;\\ng2=g;\\nr2=r;\\nb2=b;\\ndist=(frame%100)*.01;\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\ny=if(below(maat,8),if(below(maat,4),dist,1-dist),y);\\nx=if(above(maat,8),if(above(maat,4),dist,1-dist),x);\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"decay=1;\\nbeatvol=1.04;\",\"frame_eqs_eel\":\"zoom=1;\\ndecay=1;\\n\\nmaat=maat+(above(bass_att,1.5));\\nmaat=below(maat,16)*maat;\\n\\nval=if(above(maat,8),1,val);\\nval=if(above(val,0.6),val*.99,0.3);\\necho_zoom=val+0.7;\\n\\nzoom=1;\\n\\nob_size=0;\\nob_g=0;\\nob_r=0;\\nob_b=0;\\nob_a=1;\\n\\nzoomin=(sin(time)*.5+.5)%2;\\nzval=cos(time*.3)*zoomin;\\nzuse=(zval)*.05+1;\\nmonitor=zuse;\\nzoom=zuse;\\n\\n//echo_orient=((maat*.5)%4)+1;\\n\\n//monitor=val;\\nr=above(bass,1.3)+r*.95;\\nt=below(r,5);\\nq1=t*val*.5;\",\"pixel_eqs_eel\":\"dx=(dx-0.05*sin(x*32))*(cos(time*8)*q1);\\ndy=(dy-0.05*sin(y*18))*(sin(time*8)*q1);\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Redi Jedi - i dont think those were portabello mushrooms.json":
/*!*****************************************************************************************!*\
  !*** ./presets/converted/Redi Jedi - i dont think those were portabello mushrooms.json ***!
  \*****************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":0.925,\"echo_zoom\":1.006593,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wave_a\":4.099998,\"wave_scale\":1.285751,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":0.999514,\"warp\":0.01,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0.005,\"ob_r\":0.01,\"ob_a\":0.5,\"ib_size\":0.26,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"textured\":1,\"rad\":0.090528,\"g\":1,\"b\":1,\"a\":0.5,\"r2\":1,\"b2\":1,\"a2\":0.5,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=q6;\\ny=q7;\"},{\"baseVals\":{\"enabled\":1,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"rad=q2*.3;\\nx=.2;\\ny=.2;\"},{\"baseVals\":{\"additive\":1,\"thickoutline\":1,\"rad\":0.436055,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"rad=q5*.33;\\ny=.75;\\nx=.2;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"sep\":256,\"usedots\":1,\"thick\":1,\"a\":0.5},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x=q6+value1*.2;\\ny=q7+value2*.2;\\n\\nr=sin(q2+sample*3.14*treb)*.4+.5;\\ng=cos(q2+sample*3.14*bass)*.3+.4;\\nb=sin(q2+sample*3.14*mid)*.3+.6;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"db=.01;\\nbeatrate=1;\\navgbeatrate=2;\\nlbbtime=time;\\navgdb=.01;\\nvol=1;\\navgvol=.2;\\nphase=0;\\nbool=0;\\nconst=.02;\\nmtime=150+bass_att*1000;\\nt3=200+treb_att*1000;\\nt4=100+mid_att*1000;\",\"frame_eqs_eel\":\"db=(bass-lbass)*fps;\\nlbass=bass;\\navgdb=avgdb*.99+abs(db)*.01;\\navgvol=avgvol*.99+(bass+mid+treb)*.0033;\\n\\n//beatdection\\nrawbeatb=above(abs(db),avgdb*avgvol*4);\\nbeatb=rawbeatb*above(time-lbbtime,avgbeatrate*.5);\\nbeathard=beatb*(abs(db)-avgdb*4);\\n//beatrate calc\\nbeatrate=beatb*(time-lbbtime)+(1-beatb)*beatrate;\\navgbeatrate=beatb*(avgbeatrate*.9+beatrate*.1)+(1-beatb)*avgbeatrate;\\nlbbtime=time*beatb+(1-beatb)*lbbtime;\\n\\nph=(time-lbbtime)*(60/avgbeatrate)*const;\\nphase=max(min( ph, 1 ),0);\\n\\n//const=beatb*( bool*(const-.001)+(1-bool)*(const+.001) ) + (1-beatb)*const;\\nconst=const*(1-beatb)+beatb*( const+ (.01*bool) );\\n\\nbool=below(phase,.98)*(.99-ph)-above(phase,.98)*(ph*.5);\\nmonitor=const;\\nbc=bc+beatb;\\n\\nvol=(rawbeatb*(db-(avgdb))*.01);\\navgvol=avgvol*.999+vol*.01;\\n\\nmtime=mtime+min(avgvol*.5,.25)*(60/fps);\\n\\ndecay=.9999;\\nwarp=0;\\nwrap=1;\\n\\n\\n// This is the version you should use...\\n// ----------- start copying -----------\\nhue=(mtime*.01+phase*.5); // change this\\nh=6*(hue-int(hue));\\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\\nob_r=sw1+sw2*(2-h)+sw5*(h-4)+sw6;  // resulting Red value, assign it to q1\\nob_g=sw1*h+sw2+sw3+sw4*(4-h);      // resulting Green value, assign it to q2\\nob_b=sw3*(h-2)+sw4+sw5+sw6*(6-h);  // resulting Blue value, assign it to q3\\n// ----------- end ----------------\\nob_a=.3+phase*.6;\\n\\nq8=phase;\\nt3=t3+min(avgvol*.0005*treb*(60/avgbeatrate),.3)*(60/fps);\\nt4=t4+min(avgvol*.0005*bass*(60/avgbeatrate),.3)*(60/fps);\\nq3=t3;\\nq4=t4;\\ncx=sin((t3+t4)*.01)*.4+.5;\\ncy=sin((mtime+t3)*.01)*.4+.5;\\n\\nq6=cx;\\nq7=cy;\\n\\nq5=mtime;\",\"pixel_eqs_eel\":\"pi=3.1415;\\nzmx=1+sin(q3+mtime)*.05;\\nzmy=1+sin(q4-mtime)*.05;\\n\\nsx=zmx;\\nsy=zmy;\\n\\nax=ang;\\nay=ang;\\n\\nmrot=sin(q5*.01)*.5;\\n//rot=(1-mrot);\\ndx= sin(ax)*mrot*zmx*.1;\\ndy= (cos(ay)*mrot)*zmy*.1;\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Rocke - Answer.42 (New Mix 1) - mash0000 - slash and char p. jungle.json":
/*!****************************************************************************************************!*\
  !*** ./presets/converted/Rocke - Answer.42 (New Mix 1) - mash0000 - slash and char p. jungle.json ***!
  \****************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.998,\"decay\":0.993,\"wave_mode\":1,\"additivewave\":1,\"darken\":1,\"wave_a\":5.9,\"wave_scale\":0.75,\"wave_smoothing\":0.9,\"warpanimspeed\":5.003,\"warpscale\":0.01,\"zoom\":0.96194,\"rot\":-0.01,\"warp\":0.39986,\"wave_r\":0.9,\"wave_g\":0.45,\"wave_b\":0,\"ob_a\":1,\"ib_r\":1,\"ib_g\":1,\"mv_x\":63.936,\"mv_y\":19.2,\"mv_l\":5,\"mv_r\":0.5,\"mv_g\":0,\"mv_a\":0.1},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.1*(0.6*sin(0.933*time) + 0.4*sin(1.072*time));\\nwave_g = wave_g + 0.05*(0.6*sin(0.888*time) + 0.4*sin(0.918*time));\\nwave_b = wave_b + 0.2*(0.6*sin(0.335*time) + 0.4*sin(0.4*time));\\nwave_mystery = 0.5*sin(0.35*bass);\\ndecay = decay - 0.01*equal(frame%50,0);\",\"pixel_eqs_eel\":\"obj = 0.05 + 0.05*sin(0.2*time);\\nzoom = zoom + (obj*rad);\\nrot = rot - 0.15*sin(ang);\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Rovastar + Che - Asylum Animations.json":
/*!*******************************************************************!*\
  !*** ./presets/converted/Rovastar + Che - Asylum Animations.json ***!
  \*******************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_orient\":1,\"wave_mode\":2,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"darken_center\":1,\"wave_a\":1,\"wave_scale\":0.5,\"wave_smoothing\":0,\"modwavealphastart\":1.5,\"modwavealphaend\":1,\"warp\":0,\"wave_r\":0.23,\"wave_g\":0.2,\"wave_b\":0.2,\"ob_size\":0.005,\"ob_a\":0.4,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0.3,\"mv_x\":0,\"mv_y\":0,\"mv_dy\":0.33,\"mv_l\":5,\"mv_g\":0.3,\"mv_b\":0.1},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.350*( 0.60*sin(0.825*time) + 0.40*sin(0.915*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.025*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.810*time) + 0.40*sin(0.950*time) );\\nwave_x = 0.5-cos(time+dx_residual)/3.5;\\nwave_y = 0.5-cos(time+dy_residual)/2.5;\\ncx = cx + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) );\\ncy = cy + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) );\\ndx = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndx_residual=max(bass, bass_att)-1;\\ndy_residual=min(bass, bass_att)-1;\\ndx = if(above(bass_att+bass,2.8),6*dx,dx);\\n// timed sidon sensor\\n// le = signal level; desired average value = 2\\nle=1.4*bass_att+.1*bass+.5*treb;\\npulse=above(le,th);\\n// pulsefreq = running average of interval between last 5 pulses\\npulsefreq=if(equal(pulsefreq,0),2,\\nif(pulse,.8*pulsefreq+.2*(time-lastpulse),pulsefreq));\\nlastpulse=if(pulse,time,lastpulse);\\n// bt = relative time; 0 = prev beat; 1 = expected beat\\nbt=(time-lastbeat)/(.5*beatfreq+.5*pulsefreq);\\n// hccp = handcicap for th driven by bt\\nhccp=(.03/(bt+.2))+.5*if(band(above(bt,.8),below(bt,1.2)),\\n(pow(sin((bt-1)*7.854),4)-1),0);\\nbeat=band(above(le,th+hccp),btblock);\\nbtblock=1-above(le,th+hccp);\\nlastbeat=if(beat,time,lastbeat);\\nbeatfreq=if(equal(beatfreq,0),2,\\nif(beat,.8*beatfreq+.2*(time-lastbeat),beatfreq));\\n// th = threshold\\nth=if(above(le,th),le+114/(le+10)-7.407,\\nth+th*.07/(th-12)+below(th,2.7)*.1*(2.7-th));\\nth=if(above(th,6),6,th);\\nq3=30/fps;\\nccl=ccl+beat;\\nminorccl=minorccl+.01*le;\\nq4=beat;\\nwave_r=.5+.15*sin(12*ccl)+.35*sin(3.62*minorccl);\\nwave_g=.5+.15*sin(14*ccl)+.35*sin(7.38*minorccl);\\nwave_b=.5+.15*sin(16*ccl)+.35*sin(5.21*minorccl);\\nq1=.5+.25*sin(17*ccl+minorccl);\\ncx=if(beat,.5+.5*sin(38*ccl),q1);\\nq2=.5+.25*sin(17*ccl+minorccl);\\ncy=if(beat,.5+.5*sin(46*ccl),q2);\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx =q1-0.5;\\nmv_dy = -1*(q2-0.5);\",\"pixel_eqs_eel\":\"myrot = 0.03*sin(0.84*time)-0.013*cos(0.784*time)+0.02*sin(1-rad);\\nrot = myrot;\\n// coordinates transfomation\\n// q1,q2 = position; q3 = 1/zoom; q4 = rotation\\naang=atan2(y-q2,x-q1)-1.57;\\narad=sqrt(sqr(y-q2)+sqr(x-q1));\\natx=cos(aang)*arad;\\naty=sin(aang)*arad;\\n\\nsound=if(below(x,.5),2*x*mid+(1-(2*x))*bass,\\n(x-.5)*2*treb+(1-(x-.5)*2)*mid);\\nsound=sound*q3;\\nzone=below(abs(x-q1),.15)*below(abs(y-q2),.15);\\nrot=if(zone,bass*bass_att*0.2*pow(arad,arad),myrot);\\ndx = if(zone,0,dx+0.01*rad*sound);\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Rovastar + Flexi - Hurricane Nightmare (Moebius Mix).json":
/*!*************************************************************************************!*\
  !*** ./presets/converted/Rovastar + Flexi - Hurricane Nightmare (Moebius Mix).json ***!
  \*************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_orient\":3,\"wave_mode\":1,\"wave_thick\":1,\"wrap\":0,\"darken_center\":1,\"wave_a\":0.3,\"wave_scale\":0.881,\"wave_smoothing\":0.5,\"wave_mystery\":-1,\"warpscale\":2.853,\"zoomexp\":3.6,\"zoom\":1.02109,\"rot\":-0.16,\"warp\":0.309,\"wave_r\":0.6,\"wave_g\":0.6,\"wave_b\":0.6,\"wave_y\":0.47,\"mv_l\":1.75},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);\\n\\n// the m�bius transformation\\n// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector\\n// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c\\n// so a/c and mu can be calculated outside of the shader\\n\\n//before inversion\\n\\nscale = 1;\\nangle = time*.2;\\ntranslation_x = 0;\\ntranslation_y = 0.12;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1;\\nangle = sin(time*0.1337)*0.3;\\ntranslation_u = 0;\\ntranslation_v = -0.2;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;\",\"pixel_eqs_eel\":\"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));\",\"warp\":\"\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 moebius_2;\\n  vec2 d_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q11;\\n  tmpvar_4.y = q12;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q17;\\n  tmpvar_5.y = q18;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_6.x * q15) - (tmpvar_6.y * q16));\\n  tmpvar_7.y = ((tmpvar_6.x * q16) - (tmpvar_6.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_2 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((((tmpvar_9 / \\n        ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n      ) + tmpvar_4) * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.99));\\n  d_3 = (texsize.zw * 8.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (((\\n    (texture (sampler_blur1, (moebius_2 + (vec2(1.0, 0.0) * d_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (moebius_2 - (vec2(1.0, 0.0) * d_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (((\\n    (texture (sampler_blur1, (moebius_2 + (vec2(0.0, 1.0) * d_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (moebius_2 - (vec2(0.0, 1.0) * d_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = (moebius_2 - ((tmpvar_10 * texsize.zw) * 32.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = abs(((\\n    ((texture (sampler_blur3, (uv_1 + (\\n      (((texture (sampler_noise_lq, (rand_frame.xy + \\n        ((moebius_2 * texsize.xy) * texsize_noise_lq.zw)\\n      )) * 2.0) - 1.0).xy * texsize.zw)\\n     * 5.0))).xyz * scale3) + bias3)\\n   * 2.0) - texture (sampler_main, uv_1).xyz));\\n  ret = tmpvar_11.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Rovastar + Geiss - Hurricane Nightmare (Relief Mix).json":
/*!************************************************************************************!*\
  !*** ./presets/converted/Rovastar + Geiss - Hurricane Nightmare (Relief Mix).json ***!
  \************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_orient\":3,\"wave_mode\":1,\"wave_thick\":1,\"wrap\":0,\"darken_center\":1,\"wave_a\":0.3,\"wave_scale\":0.881,\"wave_smoothing\":0.5,\"wave_mystery\":-1,\"warpscale\":2.853,\"zoomexp\":3.6,\"zoom\":1.02109,\"rot\":-0.16,\"warp\":0.309,\"wave_r\":0.6,\"wave_g\":0.6,\"wave_b\":0.6,\"wave_y\":0.47,\"mv_l\":1.75},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);\",\"pixel_eqs_eel\":\"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));\",\"warp\":\"\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_5;\\n  tmpvar_5.z = 0.06;\\n  tmpvar_5.x = (tmpvar_2 - tmpvar_3);\\n  tmpvar_5.y = (tmpvar_4 - ((texture (sampler_main, uv2_1).x + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).x * 0.3)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n  .x * 0.1)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_5);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((vec3(0.9, 1.17, 0.8099999) * clamp (\\n    dot (tmpvar_6, vec3(0.804518, 0.5229367, 0.2815813))\\n  , 0.0, 1.0)) + (vec3(0.54, 0.63, 0.8099999) * clamp (\\n    dot (tmpvar_6, vec3(0.3137279, -0.9411837, 0.1254912))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Rovastar + Geiss - Hurricane Nightmare.json":
/*!***********************************************************************!*\
  !*** ./presets/converted/Rovastar + Geiss - Hurricane Nightmare.json ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":0.999609,\"echo_orient\":3,\"wave_mode\":1,\"wave_thick\":1,\"wrap\":0,\"darken_center\":1,\"wave_a\":0.3,\"wave_scale\":0.881381,\"wave_smoothing\":0.5,\"wave_mystery\":-1,\"warpscale\":2.853,\"zoomexp\":3.6,\"zoom\":1.021087,\"rot\":-0.16,\"warp\":0.309,\"wave_r\":0.6,\"wave_g\":0.6,\"wave_b\":0.6,\"wave_y\":0.47,\"mv_l\":1.75},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);\",\"pixel_eqs_eel\":\"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Rovastar + Geiss - Hyperkaleidoscope Glow 2 motion blur (Jelly).json":
/*!************************************************************************************************!*\
  !*** ./presets/converted/Rovastar + Geiss - Hyperkaleidoscope Glow 2 motion blur (Jelly).json ***!
  \************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"decay\":0.973,\"echo_zoom\":1.047,\"wave_mode\":3,\"wave_dots\":1,\"wrap\":0,\"darken_center\":1,\"darken\":1,\"wave_a\":0.9,\"wave_scale\":2.905,\"wave_smoothing\":0.627,\"wave_mystery\":-0.3,\"warpscale\":2.853,\"zoomexp\":1.23219,\"zoom\":1.08017,\"warp\":0.01678,\"wave_r\":0.6,\"wave_g\":0.6,\"wave_b\":0.6,\"ob_size\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_r\":0.35,\"mv_g\":0.35,\"mv_b\":0.35,\"b1n\":0.67},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);\\nq2 = oldq2 + 0.05*(pow(1+1.2*treb+0.4*treb_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n\\n//q2 = oldq2 +q1;\\noldq2 = q2 ;\\nmonitor = q2;\",\"pixel_eqs_eel\":\"zoom = zoom + rad*0.1*q1;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  tmpvar_3.xyz = ret_1;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 0.0;\\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 0.0;\\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 0.0;\\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \\n    (tmpvar_2 * 2.0)\\n  )) * 0.9)).xyz;\\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \\n    (uv - (tmpvar_2 * 2.0))\\n  ) * 0.9)).xyz * 0.95);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.zyx, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Rovastar + Geiss - Snapshot Of Space (LSB mix).json":
/*!*******************************************************************************!*\
  !*** ./presets/converted/Rovastar + Geiss - Snapshot Of Space (LSB mix).json ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"decay\":0.981,\"echo_zoom\":1.047,\"wave_mode\":3,\"wave_dots\":1,\"wave_thick\":1,\"wrap\":0,\"darken\":1,\"wave_a\":0.9,\"wave_scale\":2.905,\"wave_smoothing\":0.6,\"wave_mystery\":-0.3,\"warpscale\":2.853,\"zoomexp\":2.63006,\"zoom\":1.031,\"warp\":0,\"wave_r\":0.6,\"wave_g\":0.6,\"wave_b\":0.6,\"ob_size\":0,\"ob_a\":1,\"mv_x\":24.986,\"mv_y\":20.031,\"mv_dx\":0.065,\"mv_dy\":0.109,\"mv_l\":0.036,\"mv_r\":0.816,\"mv_g\":0.099,\"mv_b\":0.816,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq8 =oldq8+ 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\nq5_residual = equal(bass_thresh,2)*0.0064*sin(q8*5) + (1-equal(bass_thresh,2))*q5_residual;\\nq6_residual = equal(bass_thresh,2)*0.0048*sin(q8*6) + (1-equal(bass_thresh,2))*q6_residual;\\ndx=q5_residual ;\\ndy=q6_residual ;\\nq1 = 0.03*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\nmonitor = q1;\\nmv_a = bass-1.2;\",\"pixel_eqs_eel\":\"zoom = 0.9 + 0.1*q1 + rad*0.1;\\nzoomexp = 2*zoom;\",\"warp\":\"\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  ret_1 = -(texture (sampler_main, uv).xyz);\\n  ret_1 = (ret_1 + (clamp (\\n    ((dot (texture (sampler_main, (uv + tmpvar_2.xz)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv - tmpvar_2.xz)).xyz, vec3(0.32, 0.49, 0.29))) * 64.0)\\n  , 0.0, 1.0) * vec3(1.0, 0.6, 0.1)));\\n  ret_1 = (ret_1 + (clamp (\\n    ((dot (texture (sampler_main, (uv + tmpvar_2.zy)).xyz, vec3(0.32, 0.49, 0.29)) - dot (texture (sampler_main, (uv - tmpvar_2.zy)).xyz, vec3(0.32, 0.49, 0.29))) * 64.0)\\n  , 0.0, 1.0) * vec3(0.2, 0.5, 0.7)));\\n  ret_1 = (ret_1 - clamp ((\\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 4.0)\\n   - 1.0), 0.0, 1.0));\\n  ret_1 = (ret_1 * 1.5);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Rovastar + Loadus + Geiss - Tone-mapped FractalDrop 7c.json":
/*!***************************************************************************************!*\
  !*** ./presets/converted/Rovastar + Loadus + Geiss - Tone-mapped FractalDrop 7c.json ***!
  \***************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1.006752,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_a\":0.1,\"wave_scale\":3.815202,\"wave_smoothing\":0.9,\"modwavealphastart\":0,\"modwavealphaend\":1.1,\"zoom\":1.029902,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"ob_size\":0.0065,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":3,\"x\":0.37,\"rad\":6.811289,\"ang\":3.644249,\"r\":0,\"a\":0.5,\"g2\":0,\"a2\":0.5,\"border_a\":1},\"init_eqs_eel\":\"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;\",\"frame_eqs_eel\":\"ang = q1*(0.303 + 0.01*t1);\\nr = min(1,max(0,0+ 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,0 + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,0 + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.02*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.02*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.02*sin(time*0.884 + 6)));\\nadditive =0.5+0.15*(bass+bass_att);\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"textured\":1,\"x\":0.37,\"rad\":0.897961,\"ang\":3.644249,\"g\":1,\"b\":1,\"a\":0.5,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;\",\"frame_eqs_eel\":\"x = x + 0.07*sin(q1*0.15+3);\\ny = y + 0.03*sin(q1*0.19+1);\\ntex_ang = q1*(0.01 + 0.0001*t1);\\nr = min(1,max(0,r + 0.01*sin(time*0.0417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.0437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"textured\":1,\"x\":0.67,\"y\":0.43,\"rad\":0.513861,\"ang\":4.209736,\"g\":1,\"b\":1,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;\",\"frame_eqs_eel\":\"x = x + 0.05*sin(q1*0.017);\\ny = y + 0.09*sin(q1*0.013);\\ntex_ang = q1*(0.02 + 0.0001*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.01*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.01*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.01*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.01*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.01*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.01*sin(time*0.484 + 6)));\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"textured\":1,\"rad\":0.222979,\"r\":0.6,\"g\":0.8,\"b\":1,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = x + 0.08*sin(q1*0.25);\\ny = y + 0.1*sin(q1*0.5+2);\\nang = time;\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\\nq1 = movement;\\nmonitor =q1;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.5));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\\n  ret = tmpvar_4.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Rovastar + Telek - Altars of Madness (Rolling Oceans Mix).json":
/*!******************************************************************************************!*\
  !*** ./presets/converted/Rovastar + Telek - Altars of Madness (Rolling Oceans Mix).json ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":1.98,\"decay\":1,\"echo_zoom\":1.006596,\"wave_mode\":5,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":4.099998,\"wave_scale\":0.660126,\"wave_smoothing\":0,\"wave_mystery\":0.3,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0.005,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.5,\"mv_r\":0.15,\"mv_g\":0.45,\"mv_b\":0.65,\"mv_a\":0.2},\"shapes\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"q8=0;\",\"frame_eqs_eel\":\"warp=0;\\nib_a =0.2*bass;\\nwave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\\nwave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.522));\\nwave_g = wave_g + 0.4*sin(time*1.731);\\ndecay = decay - equal(frame%100,0)*0.1;\\nvol = 0.167*(bass+mid);\\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nwave_x = 1.5*xpos + 0.5;\\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nwave_y = 1.5*ypos + 0.5;\\nzoom = .995;\\n\\n\\n\\n\\n\\n\\n\\nframetest = frame%2;\\nwave_x = if(frametest,1-wave_x,wave_x);\\nwave_y = if(frametest,1-wave_y,wave_y);\\nwave_r = if(frametest,wave_r,wave_g);\\nwave_g = if(frametest,wave_g,wave_b);\\nwave_b = if(frametest,wave_b,wave_r);\\nmonitor = green;\\nq8 =  oldq8+ 0.0005*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\n\\nmv_g=0.5+bass_att*.1;\\nbeat=if(above(bass*bass_att,4.5),1-beat,beat);\\nq1=beat*2-1;\\n\\namp =amp*.8+.2*(bass_att+mid_att+treb_att)*.3;\\nq2 = min(amp,1);\\ntrebcap=trebcap*.7+.16*treb;\\nq3=trebcap*2;\\nmonitor = q3;\",\"pixel_eqs_eel\":\"dx=dx+0.008*sin((y*2-1)*(48+12*sin(0.412*q8)))+0.008*sin(((y+sin(time*0.163))*2-1)* (3+sin(0.241*q8)));\\ndy=dy+0.008*cos((x*2-1)*(64+18*sin(0.376*q8)))+0.008*sin(((x+sin(q8*0.282))*2-1) *(3+sin(0.349*q8)));\\nwang = (3+q3)*x+time*1.7+bass*.1;\\nin = 0;\\nin = in + below(abs(x-.25),.05)*below(abs(y-.5),.25);\\nin = below(abs(y-(.5+.5*sin(wang)*q2)),.1);\\nin=bnot(bnot(in));\\ndx = dx+.02*in;\\ndy = dy+.08*cos(wang)*q2*in;\\n\\ndx = dx+bnot(in)*.005*q1;\\ndy = dy+bnot(in)*cos(wang)*-.01*q1;\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Rovastar - Explosive Minds.json":
/*!***********************************************************!*\
  !*** ./presets/converted/Rovastar - Explosive Minds.json ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"decay\":1,\"echo_zoom\":0.999608,\"echo_alpha\":0.5,\"echo_orient\":2,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"darken_center\":1,\"wave_scale\":0.011046,\"wave_mystery\":-0.42,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_r\":1,\"ob_a\":0.9,\"mv_x\":1.28,\"mv_y\":1.248,\"mv_dx\":-0.06,\"mv_dy\":-0.026,\"mv_l\":5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp = 0;\\nwave_r = bass_att*.3;\\nwave_g = treb_att*.3;\\nwave_b = mid_att*.3;\\nob_r = 0.5+0.5*sin(time*5.12);\\nob_b = 0.5+0.5*sin(time*6.112);\\nob_g = 0.5+0.5*sin(time*7.212);\\nq1 = zoom + pow((bass+bass_att),3)*.005-.02;\",\"pixel_eqs_eel\":\"zoom =q1+ rad*sin(ang*25)*.05;\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Rovastar - Trippy Sperm (Jelly).json":
/*!****************************************************************!*\
  !*** ./presets/converted/Rovastar - Trippy Sperm (Jelly).json ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"decay\":0.96,\"echo_zoom\":1.007,\"echo_orient\":3,\"wave_mode\":3,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_a\":4.1,\"wave_scale\":0.525,\"wave_smoothing\":0.36,\"wave_mystery\":-0.5,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":1.07055,\"rot\":0.02,\"warp\":0.19805,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ff = frame/100;\\nwave_r = sin(5*ff/2)/2+0.5;\\nwave_g = cos(ff/3)/2+0.5;\\nwave_b = cos(3*ff/2)/2+0.5;\",\"pixel_eqs_eel\":\"rot=0.1*(2*abs((sin(time)-0.5))-ang);\",\"warp\":\"\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.zxy, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Rovastar-altarsofmadness(forgottenrea.json":
/*!**********************************************************************!*\
  !*** ./presets/converted/Rovastar-altarsofmadness(forgottenrea.json ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":4,\"decay\":0.9,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":1,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.005,\"ob_b\":0.2,\"ob_a\":0.5,\"ib_size\":0.005,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"x\":0.88,\"y\":0.8,\"rad\":0.330038,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+ 0.4*sin(0.2765*time+0.341*q8);\\ny = 0.5+ 0.4*sin(0.311*time+0.213*q8);\\nang = 3.1415-3.1415*cos(time*0.1389);\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"x\":0.88,\"y\":0.2,\"rad\":0.330038,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+ 0.4*sin(0.212*time+0.1*q8);\\ny = 0.5+ 0.4*sin(0.2891*time+0.121*q8);\\nang = 3.1415+3.1415*sin(time*0.181);\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"x\":0.12,\"y\":0.8,\"rad\":0.330038,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+ 0.4*sin(0.0932*time+0.421*q6);\\ny = 0.5+ 0.4*sin(0.1178*time+0.2135*q6);\\nang = 3.1415-3.1415*cos(time*0.1154);\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"x\":0.12,\"y\":0.2,\"rad\":0.330038,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+ 0.4*sin(0.105*time+0.3*q4);\\ny = 0.5+ 0.4*sin(0.1267*time+0.323*q4);\\nang = 3.1415+3.1415*sin(time*0.2654);\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"usedots\":1,\"thick\":1,\"scaling\":0.463735,\"smoothing\":0},\"init_eqs_eel\":\"//pi\\nt8=3.14159265/2;\\nt5 = 1;\",\"frame_eqs_eel\":\"rotx = rotx+bass;\\nroty = roty+mid;\\nrotz = rotz+treb;\\n//rotx = 0;\\n//roty =0;\\n//rotz = 0;\\n\\n//convert rotation values from degrees to radians\\nt1= t8*rotx/180;\\nt2 = t8*roty/180;\\nt3 = t8*rotz/180;\\n\\nt4 = sin(bass+0.86*t8);\\nt5 = 10+8*cos(time+0.56*t8);\",\"point_eqs_eel\":\"//Define 3D Shape\\n\\n//Sphere\\nfvar = sample*512;\\nsvar = fvar*128;\\ntvar = 0&svar;\\nnsample = tvar*4.5;\\nx1 = -2.5+(1.5)*sin(sample);\\ny1 = (-1)*cos(t8*nsample);\\nz1 = (-1)*sin(t8*nsample);\\n\\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\\ny2 = y1*cos(t1)-z1*sin(t1);\\nz2 = y1*sin(t1)+z1*cos(t1);\\nx2 = z2*sin(t2)+x1*cos(t2);\\nz3 = z2*cos(t2)-x1*sin(t2);\\nx3 = x2*cos(t3)-y2*sin(t3);\\ny3 = y2*cos(t3)+x2*sin(t3);\\n//move resulting shape in 3d space\\nx4 = x3;\\ny4 = y3;\\nz4 = z3+5;\\n//draw 3d shape in 2d\\nx=0.5+0.5*(x4/(1+z4*0.5));\\ny=0.5+0.5*(y4/(1+z4*0.5));\\n\\na = -.9+sin(nsample+time);\\na = if(below(a,0),0,a);\\na=1;\\nr =sin(abs(x2*sin(time)))*0.5 + 0.5;\\nb = sin(abs(y3+sin(0.8765*time)))*0.5 + 0.5;\\ng = x2*z2;\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"scaling\":0.463735,\"smoothing\":0},\"init_eqs_eel\":\"//pi\\nt8=3.14159265;\\nt5 = 1;\",\"frame_eqs_eel\":\"rotx = rotx+bass;\\nroty = roty+mid;\\nrotz = rotz+treb;\\n//rotx = 0;\\n//roty =0;\\n//rotz = 0;\\n\\n//convert rotation values from degrees to radians\\nt1= t8*rotx/180;\\nt2 = t8*roty/180;\\nt3 = t8*rotz/180;\\n\\nt4 = 3*sin(time+0.776*t8);\\nt5 = 10+8*cos(time+0.56*t8);\\n\",\"point_eqs_eel\":\"//Define 3D Shape\\n\\n//Sphere\\nfvar = sample*512;\\nsvar = fvar*128;\\ntvar = 0&svar;\\nnsample = tvar*4.5;\\nx1 = -.75+(1.5)*sin(sample);\\ny1 = (1)*cos(t8*nsample);\\nz1 = (1)*sin(t8*nsample);\\n\\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\\ny2 = y1*cos(t1)-z1*sin(t1);\\nz2 = y1*sin(t1)+z1*cos(t1);\\nx2 = z2*sin(t2)+x1*cos(t2);\\nz3 = z2*cos(t2)-x1*sin(t2);\\nx3 = x2*cos(t3)-y2*sin(t3);\\ny3 = y2*cos(t3)+x2*sin(t3);\\n//move resulting shape in 3d space\\nx4 = x3;\\ny4 = y3;\\nz4 = z3+5;\\n//draw 3d shape in 2d\\nx=0.5+0.75*(x4/(1+z4*0.5));\\ny=0.5+0.75*(y4/(1+z4*0.5));\\n\\na = -.9+sin(nsample+time);\\na = if(below(a,0),0,a);\\na=1;\\nr = y2*z2;\\nb = z3+y3;\\ng = z3/x2;\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"scaling\":0.463735,\"smoothing\":0},\"init_eqs_eel\":\"//pi\\nt8=3.14159265*1.56;\\nt5 = 1;\",\"frame_eqs_eel\":\"rotx = rotx+bass;\\nroty = roty+mid;\\nrotz = rotz+treb;\\n//rotx = 0;\\n//roty =0;\\n//rotz = 0;\\n\\n//convert rotation values from degrees to radians\\nt1= t8*rotx/180;\\nt2 = t8*roty/180;\\nt3 = t8*rotz/180;\\n\\nt4 = 12+13*sin(time+2.46*t8);\\nt5 = 2+8*cos(time+1.66*t8);\\nr = 1;\\nb = 0;\\ng=0;\",\"point_eqs_eel\":\"//Define 3D Shape\\n\\n//Sphere\\nfvar = sample*512;\\nsvar = fvar*128;\\ntvar = 0&svar;\\nnsample = tvar*4.5;\\nx1 = -.5+(2.5)*sin(sample);\\ny1 = (1)*cos(t8*nsample);\\nz1 = (1)*sin(t8*nsample);\\n\\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\\ny2 = y1*cos(t1)-z1*sin(t1);\\nz2 = y1*sin(t1)+z1*cos(t1);\\nx2 = z2*sin(t2)+x1*cos(t2);\\nz3 = z2*cos(t2)-x1*sin(t2);\\nx3 = x2*cos(t3)-y2*sin(t3);\\ny3 = y2*cos(t3)+x2*sin(t3);\\n//move resulting shape in 3d space\\nx4 = x3;\\ny4 = y3;\\nz4 = z3+5;\\n//draw 3d shape in 2d\\nx=0.5-1*(x4/(1+z4*0.5));\\ny=0.5-1*(y4/(1+z4*0.5));\\n\\na = -.9+sin(nsample+time);\\na = if(below(a,0),0,a);\\na=1;\\ng=y2;\\nb=x2;\\nr= z2+z3;\"},{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"usedots\":1,\"thick\":1,\"scaling\":0.463735,\"smoothing\":0},\"init_eqs_eel\":\"//pi\\nt8=3.14159265*0.15;\\nt5 = 1;\",\"frame_eqs_eel\":\"rotx = rotx+bass;\\nroty = roty+mid;\\nrotz = rotz+treb;\\n//rotx = 0;\\n//roty =0;\\n//rotz = 0;\\n\\n//convert rotation values from degrees to radians\\nt1= t8*rotx/180;\\nt2 = t8*roty/180;\\nt3 = t8*rotz/180;\\n\\nt4 = 3*sin(time+0.66*t8);\\nt5 = 10+8*cos(time+0.66*t8);\\n\",\"point_eqs_eel\":\"//Define 3D Shape\\n\\n//Sphere\\nfvar = sample*512;\\nsvar = fvar*128;\\ntvar = 0&svar;\\nnsample = tvar*4.5;\\nx1 = -.75+(1.5)*sin(sample);\\ny1 = (1)*cos(t8*nsample);\\nz1 = (1)*sin(t8*nsample);\\n\\n//modulate values to adjust for rotation on multiple axes, convert to world co-ordinates\\ny2 = y1*cos(t1)-z1*sin(t1);\\nz2 = y1*sin(t1)+z1*cos(t1);\\nx2 = z2*sin(t2)+x1*cos(t2);\\nz3 = z2*cos(t2)-x1*sin(t2);\\nx3 = x2*cos(t3)-y2*sin(t3);\\ny3 = y2*cos(t3)+x2*sin(t3);\\n//move resulting shape in 3d space\\nx4 = x3;\\ny4 = y3;\\nz4 = z3+5;\\n//draw 3d shape in 2d\\nx=0.5+0.8*(x4/(1+z4*0.5));\\ny=0.5+0.8*(y4/(1+z4*0.5));\\n\\na = -.9+sin(nsample+time);\\na = if(below(a,0),0,a);\\na=1;\\n\\nb = z4;\\nr=z2-x1;\\ng=y2+z2;\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp=0;\\nwave_a=0;\\ndecay = 0.976;\\ndecay=0.99;\\n//q8 - bass tracking\\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nq7 = 0.00004*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q6 = treble tracking\\nq6 =  oldq6+ 0.0002*(pow(1+0.1*bass+0.1*bass_att+1.2*treb+0.4*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq6 = q6;\\n//q4 = midrage tracking\\nq4 =  oldq4+ 0.0002*(pow(1+0.1*bass+0.1*bass_att+0.1*treb+0.1*treb_att+1.2*mid+0.4*mid_att,6)/fps);\\noldq4 = q4;\\n\\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\n\\nq8 =  oldq8+ 0.0002*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\n\\nob_size = min(max(0,q7-0.3)+0.005,0.9);\\nob_b = max(0,sin(q8*0.2542)*0.2 +0.1);\\nob_r = max(0,sin(q8*0.985)*0.4 + 0.2);\\nob_g = max(0,sin(q8*0.8711)*0.3 + 0.1);\\nob_a =max(0,0.3*(q7-0.2))+0.1;\\nib_r = 1-if(ob_size-0.005,0,1);\\nib_g = ib_r*(0.21*0.2*sin(time*0.643));\\nib_b = ib_r*(0.21*0.2*sin(time*0.853));\\nib_a =1;\\nmonitor = ob_a;\\n//q6 = max(0.0005*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps),1)-1;\\n//oldq6 = q6;\\nmonitor =q6;\",\"pixel_eqs_eel\":\"dx=dx+0.008*sin((y*2-1)*meshx)+0.008*sin((y*2-1)*meshx*1.3333);\\ndy=dy+0.008*cos((x*2-1)*meshx*1.3333)+0.008*cos((x*2-1)*meshx);\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Stahlregen & Boz + Eo.S + Geiss + Phat + Rovastar + Zylot - Machine Code [Jelly].json":
/*!*****************************************************************************************************************!*\
  !*** ./presets/converted/Stahlregen & Boz + Eo.S + Geiss + Phat + Rovastar + Zylot - Machine Code [Jelly].json ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.14,\"decay\":1,\"echo_zoom\":1.002,\"echo_orient\":1,\"wave_mode\":4,\"wave_thick\":1,\"wave_a\":1.577,\"wave_scale\":0.01,\"wave_smoothing\":0,\"wave_mystery\":-0.24,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpanimspeed\":32.544,\"warpscale\":9.738,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_y\":0,\"ob_size\":0.005,\"ob_r\":0.01,\"ob_a\":0.6,\"ib_size\":0.26,\"mv_x\":16,\"mv_y\":16.8,\"mv_l\":0.15,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"//decay = 0.94\",\"frame_eqs_eel\":\"dy = dy -0.0085;\\n//bass_effect = max(max(bass,bass_effect)-1.4,0);\\n//warp = if(above(bass_effect,0),10,0);\\nred_rand = rand(100);\\nblue_rand = rand(100);\\nwave_r = 0.01*red_rand + 0.2*sin(time*1.311);\\nwave_b = 0.01*blue_rand - 0.2*sin(time*1.46);\\nwave_g = 1-0.5*(wave_r+wave_b)+ 0.2*cos(time*0.789);\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = max (texture (sampler_fc_main, uv).xyz, (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.33, 0.33))).xyz * 0.95));\\n  vec2 x_2;\\n  x_2 = (uv - uv_orig);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    mix (tmpvar_1, (floor((\\n      (tmpvar_1 * vec3(7.0, 6.0, 8.0))\\n     + 0.25)) / vec3(7.0, 6.0, 8.0)), vec3(0.1, 0.1, 0.1))\\n   * 0.995) - 0.001) - ((1.0 - \\n    clamp ((sqrt(dot (x_2, x_2)) * 40.0), 0.0, 1.0)\\n  ) * 0.002));\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.zxy, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Stahlregen & Boz - Machine Code (Reaction Diffusion)_1 - Isosceles Tweak 08.json":
/*!************************************************************************************************************!*\
  !*** ./presets/converted/Stahlregen & Boz - Machine Code (Reaction Diffusion)_1 - Isosceles Tweak 08.json ***!
  \************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.14,\"decay\":1,\"echo_zoom\":1.002,\"echo_orient\":1,\"wave_mode\":4,\"wave_thick\":1,\"wave_a\":1.577,\"wave_scale\":0.01,\"wave_smoothing\":0,\"wave_mystery\":-0.24,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpanimspeed\":32.544,\"warpscale\":9.738,\"dy\":0.008,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_y\":0,\"ob_size\":0.005,\"ob_r\":0.01,\"ob_a\":0.6,\"ib_size\":0.26,\"mv_x\":16,\"mv_y\":16.8,\"mv_l\":0.15,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"//decay = 0.94\",\"frame_eqs_eel\":\"dy = dy -0.01;\\n//bass_effect = max(max(bass,bass_effect)-1.4,0);\\n//warp = if(above(bass_effect,0),10,0);\\nred_rand = int(rand(100));\\nblue_rand = int(rand(100));\\nwave_r = 0.01*red_rand + 0.2*sin(time*1.311);\\nwave_b = 0.01*blue_rand - 0.2*sin(time*1.46);\\nwave_g = 1-0.5*(wave_r+wave_b)+ 0.2*cos(time*0.789);\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 z_1;\\n  vec3 tmpvar_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.1 * texsize.zw);\\n  tmpvar_2 = (0.25 * ((\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + (tmpvar_3 * vec2(-1.0, 1.0)))).xyz)\\n   + texture (sampler_main, \\n    (uv + (tmpvar_3 * vec2(1.0, -1.0)))\\n  ).xyz) + texture (sampler_main, (uv - tmpvar_3)).xyz));\\n  float tmpvar_4;\\n  tmpvar_4 = ((tmpvar_2.x * tmpvar_2.y) * tmpvar_2.y);\\n  z_1.x = (tmpvar_2.x + ((\\n    -(tmpvar_4)\\n   + \\n    (0.035 * (1.0 - tmpvar_2.x))\\n  ) * 4.0));\\n  z_1.y = (tmpvar_2.y + ((tmpvar_4 - \\n    (0.095 * tmpvar_2.y)\\n  ) * 4.0));\\n  z_1.z = tmpvar_2.z;\\n  z_1.x = (z_1.x + (0.4 * (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv).xyz)).x);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (z_1 + (0.05 * (\\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\\n   - 1.0)));\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  float blur_2;\\n  float crisp_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  uv2_1 = ((tmpvar_5 * 0.8) + 0.5);\\n  crisp_3 = texture (sampler_main, uv2_1).y;\\n  blur_2 = ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).y;\\n  ret_4 = (texture (sampler_main, ((tmpvar_5 * 0.6) + 0.5)).zzz * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = max (ret_4, vec3(crisp_3));\\n  uv2_1 = uv;\\n  crisp_3 = texture (sampler_main, uv).x;\\n  blur_2 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1).x;\\n  ret_4 = (tmpvar_6 * (1.0 - (blur_2 * 1.15)));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = max (ret_4, vec3(crisp_3));\\n  ret_4 = tmpvar_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = tmpvar_7;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Stahlregen + martin + others - Psychedelic Metal Flower.json":
/*!****************************************************************************************!*\
  !*** ./presets/converted/Stahlregen + martin + others - Psychedelic Metal Flower.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.7,\"decay\":0.955,\"modwavealphabyvolume\":1,\"wrap\":0,\"darken\":1,\"solarize\":1,\"wave_a\":1.059,\"wave_scale\":0.706,\"wave_smoothing\":0.126,\"wave_mystery\":-0.28,\"modwavealphastart\":0.81,\"modwavealphaend\":1.35,\"warpanimspeed\":5.278,\"warpscale\":0.01,\"zoomexp\":0.29999,\"zoom\":1.05101,\"warp\":0.01,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0.005,\"ob_a\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":32,\"additive\":1,\"thickoutline\":1,\"num_inst\":22,\"rad\":0.12953,\"r\":0,\"g\":0.5,\"g2\":0.5,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = if(equal(q3,3),.15,0);\\na = trans;\\na2 = trans;\\nborder_a = 0;\\n\\ninstance_counter = 3.14*instance*(2/(num_instance));\\nx = q1 + (.1+0.1*treb_att) * (1/q5) * sin(instance_counter);\\ny = q2 + (.1+0.1*treb_att) * (1/q4) * cos(instance_counter);\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"additive\":1,\"thickoutline\":1,\"num_inst\":22,\"rad\":0.12953,\"r\":0,\"b\":0.5,\"g2\":0,\"b2\":0.5,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = if(equal(q3,6),.15,0);\\na = trans;\\na2 = trans;\\nborder_a = 0;\\n\\ninstance_counter = 3.14*instance*(2/(num_instance));\\nx = q1 + (.1+0.1*mid_att) * (1/q5) * sin(instance_counter);\\ny = q2 + (.1+0.1*mid_att) * (1/q4) * cos(instance_counter);\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"additive\":1,\"thickoutline\":1,\"num_inst\":22,\"rad\":0.12953,\"r\":0.5,\"r2\":0.5,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = if(equal(q3,9),.15,0);\\na = trans;\\na2 = trans;\\nborder_a = 0;\\n\\ninstance_counter = 3.14*instance*(2/(num_instance));\\nx = q1 + (.1+0.1*bass_att) * (1/q5) * sin(instance_counter);\\ny = q2 + (.1+0.1*bass_att) * (1/q4) * cos(instance_counter);\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"rad\":0.25481,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"count = if(below(count,9),count+1,0);\\n\\nq1 = .5;\\nq2 = .5;\\nq3 = count;\\nq4 = aspectx;\\nq5 = aspecty;\\n//zoom = .99 + 0.1*bass_att+0.05*bass;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.0009, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0009, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  tmpvar_2.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.0009))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.0009))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - (tmpvar_2 * 0.01));\\n  ret_1.y = texture (sampler_fc_main, (tmpvar_3 - floor(tmpvar_3))).y;\\n  ret_1.y = (ret_1.y + ((ret_1.y - \\n    ((texture (sampler_blur3, (tmpvar_3 - floor(tmpvar_3))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  ret_1.y = (ret_1.y + 0.006);\\n  ret_1.y = ret_1.y;\\n  ret_1.x = ret_1.y;\\n  ret_1.z = ret_1.y;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (dot ((\\n    (-(tmpvar_2) / 4.0)\\n   + \\n    ((6.0 * vec3(clamp ((0.03 / \\n      sqrt(dot (uv1_1, uv1_1))\\n    ), 0.0, 1.0))) * (-0.08 + tmpvar_2))\\n  ), vec3(0.32, 0.49, 0.29)) * rand_preset).xyz;\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/The NG + Flexi + BDRV - Ultramix, Aderrasi + Flexi - Predator Prey Spirals, Flexi - Jellyfish Jam.json":
/*!**********************************************************************************************************************************!*\
  !*** ./presets/converted/The NG + Flexi + BDRV - Ultramix, Aderrasi + Flexi - Predator Prey Spirals, Flexi - Jellyfish Jam.json ***!
  \**********************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"wave_mode\":1,\"wave_dots\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":2.346,\"wave_smoothing\":0.45,\"wave_mystery\":0.08,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpscale\":1.331,\"zoom\":0.99951,\"warp\":0.0101,\"wave_r\":0,\"wave_g\":0.99,\"ob_size\":0.005,\"ob_a\":0.1,\"ib_size\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"rad\":0.04896,\"tex_ang\":1.00531,\"tex_zoom\":1.53117,\"r\":0.5,\"g\":1,\"b\":0.9,\"r2\":0.83,\"g2\":0.93,\"b2\":0.8,\"a2\":1,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"xi = xi - dx*q22/200;\\nyi = yi - dy*q23/200;\\n\\nlow = 0; \\nhigh = 1;\\n\\nk0x = below(xi,low);\\nk1x = above(xi,high);\\nk0y = below(yi,low);\\nk1y = above(yi,high);\\n\\ndx = k0x*1 + k1x*-1;\\ndy = k0y*1 + k1y*-1;\\n\\n//xi = 0; yi = 0;\\nx = xi;\\ny = yi;\\n\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3 +q28/3);\\n\\na = q26/4+.2; \\n//a = 1;\"},{\"baseVals\":{\"thickoutline\":1,\"x\":0.4,\"rad\":2.36696,\"tex_ang\":3.45575,\"tex_zoom\":0.99305,\"r\":0.5,\"b\":1,\"a\":0.2,\"r2\":0.7,\"g2\":0.4,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a2 =0;a = 0;\\na = q24/2;\"},{\"baseVals\":{\"enabled\":1,\"x\":0.503,\"rad\":0.03886,\"tex_zoom\":0.60986,\"g\":0.1,\"a\":0.9,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\na = min(q21/2 ,.9);\\nrad = a *a/3 ;\\n\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.54822,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"sep\":120,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"k1 = (sample*100)%2;\\nk2 = (sample*100)%4;\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + xi;\\ny = .5 + yi;\\n\\na = q22/8; \\na = min(a,.2);\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;\",\"point_eqs_eel\":\"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\n\\nwave_x = wave_x + 0.2*sin(0.32*time);\\nwave_y = wave_y + 0.2*cos(0.32*time);\\n\\nob_r = wave_r;\\nob_g = wave_g;\\nob_b = wave_b;\\n// the m�bius transformation\\n// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector\\n// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c\\n// so a/c and mu can be calculated outside of the shader\\n\\n//before inversion\\n\\nscale = 1;\\nangle = time*.2;\\ntranslation_x = 0;\\ntranslation_y = 0.12;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1;\\nangle = sin(time*0.1337)*0.3;\\ntranslation_u = 0;\\ntranslation_v = -0.2;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;\",\"pixel_eqs_eel\":\"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.0095*(sin(10*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.3)) + rand_frame.xy)).xyz - 0.5)\\n   * 0.1) * (bass - treb)));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.04));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix ((texture (sampler_fc_main, (uv - \\n    (tmpvar_2 * 0.4)\\n  )).x * pow (hue_shader.zxy, vec3(4.0, 4.0, 4.0))), (mix (\\n    (pow (hue_shader, vec3(6.0, 6.0, 6.0)) * 1.2)\\n  , \\n    pow (hue_shader, vec3(8.0, 8.0, 8.0))\\n  .yzx, texture (sampler_main, uv).yyy) * 2.0), vec3(((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1).z * 0.7)));\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/TonyMilkdrop - Magellan's Nebula [Flexi - fancy + $this shall not retain].json":
/*!**********************************************************************************************************!*\
  !*** ./presets/converted/TonyMilkdrop - Magellan's Nebula [Flexi - fancy + $this shall not retain].json ***!
  \**********************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.3,\"decay\":1,\"echo_zoom\":1.75,\"echo_alpha\":0.15,\"echo_orient\":3,\"wave_mode\":1,\"wave_dots\":1,\"darken\":1,\"wave_scale\":0.5,\"wave_smoothing\":0.9,\"warp\":0.01,\"mv_l\":5},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r = r + 1*sin(time*0.339);\\ng = g + 1*sin(time*0.369);\\nb = b + 1*sin(time*0.399);\\nr2 = r2 + 1*sin(time*0.113);\\ng2 = g2 + 1*sin(time*0.123);\\nb2 = b2 + 1*sin(time*0.133);\\nrad = q1/3;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q1 = 0.0003*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6));\\nmv_a = q1;\\nmv_x = mv_x + 1*sin(time);\\nmv_y = mv_y + 1*cos(time);\\nmv_dx = mv_dx + 1.25*sin(fps*8);\\nmv_dy = mv_dy + 1.35*sin(fps*8);\\nmv_r = mv_r + 1*sin(time*0.565);\\nmv_g = mv_g + 1*sin(time*0.615);\\nmv_b = mv_b + 1*sin(time*0.665);\\nwave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\",\"pixel_eqs_eel\":\"zoom = zoom + 0.0125*q1;\\nrot = rot + 0.025*sin(fps*10)*q1;\\nwarp = 0;\",\"warp\":\"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 16.0);\\n  xlat_mutabledx = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale2) + bias2));\\n  xlat_mutabledy = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale2) + bias2));\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 16.0)\\n  )).y - 0.006) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 16.0)\\n  )).z - 0.006) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.2) + (tmpvar_2 * 0.01)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   * 2.0) + (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q19;\\n  tmpvar_10.y = q20;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(((0.5 + \\n    (uv - 0.5)\\n  ) + (tmpvar_10 * vec2(-1.0, 1.0))));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dx_3.y;\\n  tmpvar_12.y = dy_2.y;\\n  vec3 tmpvar_13;\\n  tmpvar_13 = ((mix (ret_5, vec3(3.0, 2.0, 1.0), \\n    ((texture (sampler_blur3, (tmpvar_11 - tmpvar_12)).xyz * scale3) + bias3)\\n  .xxx) * (vec3(1.0, 1.0, 1.0) - \\n    ((texture (sampler_blur2, (tmpvar_11 - dz_1)).xyz * scale2) + bias2)\\n  .xxx)) * (vec3(1.0, 1.0, 1.0) - vec3((1.5 * texture (sampler_main, tmpvar_11).x))));\\n  ret_5 = tmpvar_13;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = tmpvar_13;\\n  ret = tmpvar_14.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Unchained & Rovastar - Wormhole Pillars (Hall of Shadows mix).json":
/*!**********************************************************************************************!*\
  !*** ./presets/converted/Unchained & Rovastar - Wormhole Pillars (Hall of Shadows mix).json ***!
  \**********************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"wave_mode\":7,\"additivewave\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":100,\"wave_scale\":0.438649,\"wave_smoothing\":0.5,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"zoomexp\":0.999996,\"fshader\":1,\"dx\":0.00001,\"dy\":0.00001,\"warp\":0.01,\"wave_y\":0.976,\"ob_size\":0.005,\"ob_r\":0.4,\"ob_g\":0.3,\"ob_a\":1,\"ib_r\":1,\"ib_g\":0.6,\"ib_b\":0,\"ib_a\":1,\"mv_x\":24.959999,\"mv_y\":19.199999,\"mv_l\":0.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0},\"shapes\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp = 0;\\nwave_r = 0.5 + 0.5*sin(time*0.894);\\nwave_g = 0.5 + 0.5*sin(time*1.14);\\nwave_b = 0.5 + 0.5*sin(3-bass_att);\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*(0.9+.1*sin(time*2.8))+1.3);\\ndx_r = equal(thresh,2)*0.004*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.004*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nq1 = thresh;\\ndx = 1.1* dx_r;\\ndy = 1.1* dy_r;\\ndx = dx + if (above(bass,1.35), 31*dx_r, 0);\\ndy = if(above(bass,1.3), 0, dy);\\ndecay=.995+.004*sin(time*.369)+.001*sin(time*1.54);\",\"pixel_eqs_eel\":\"zoom = zoom -0.01*q1*rad;\\nzoomexp = 1+0.2*(rad-0.2*q1);\\nsx=sx-cos(y*(6.28+3.14*sin(time)))*(.009+.003*sin(time*2.18))*sin(time*.3);\\nrot=sin(x*3.14)*.001*sin(time*.67);\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Unchained - Making a Science of It 4.json":
/*!*********************************************************************!*\
  !*** ./presets/converted/Unchained - Making a Science of It 4.json ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":1.560001,\"decay\":1,\"echo_zoom\":0.9998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":2,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.419996,\"wave_scale\":0.972362,\"wave_smoothing\":0.09,\"wave_mystery\":0.02,\"zoomexp\":2.468457,\"zoom\":1.001789,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.005,\"ob_r\":1,\"ob_a\":1,\"ib_size\":0.005,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":0.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0},\"shapes\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp=0;\\nle=1+.5+2*sin(bass_att);\\nbpulse=band(above(le,bth),above(le-bth,bblock));\\nbblock=le-bth;\\nbth=if(above(le,bth),le+114/(le+10)-7.407,\\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\\nbth=if(above(bth,6),6,bth);\\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\\n\\nle=1+.5+2*sin(treb_att);\\ntpulse=band(above(le,tth),above(le-tth,tblock));\\ntblock=le-tth;\\ntth=if(above(le,tth),le+114/(le+10)-7.407,\\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\\ntth=if(above(tth,6),6,tth);\\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\\n\\nle=1+.5+2*sin(mid_att);\\nmpulse=band(above(le,mth),above(le-mth,mblock));\\nmblock=le-mth;\\nmth=if(above(le,mth),le+114/(le+10)-7.407,\\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\\nmth=if(above(mth,6),6,mth);\\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\\n\\n\\n\\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\\nq1=bres;\\nq2=tres;\\nq3=mres;\\nq4=sin(pulse);\\n\\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\\nccl=ccl+tpulse+mpulse-bpulse;\\nq5=cos(pulse*(.5+.1*mod_state));\\nq6=sin(pulse*(.5+pow(.25,mod_state)));\\nq7=mod_state;\\nq8=ccl;\\nob_r=.5+.5*cos(q1+q7);\\nob_g=.5+.5*cos(q2*3.14+q7);\\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\\nib_size=.025+.02*q2;\\nob_size=.03+.02*q3-.002*q7;\\nwave_r=.5+.5*sin(q1*q7+time*2.183);\\nwave_g=.5+.5*sin(q2*3+time*1.211);\\nwave_b=.5+.5*sin(q3+time*1.541);\\n\\ndecay=.997+.0015*q3+.0015*q1;\\nob_a=.5+.5*q2;\",\"pixel_eqs_eel\":\"snee=bnot(above(sin(ang)-x,.5)*above(q2,0)+above(y-cos(ang),.5)*above(q1,0));\\nsnur=bnot(below(x,.5)*above(q3,0)+below(y,.5)*below(q7,4));\\ngrid=sin(sigmoid(sin(y*6.28*q2),sin(x*6.28*q6))*(10+q7));\\nrot=(1-snee*if(above(grid,0),snur,bnot(snur))*(.5+.5*sin(rad*3.14*q1)))*q6*.13;\\nzoom=zoom+.01*sin(rad*(q7%2+q5)*2*q2+1.6*q1+q8)*bnot(snee)*if(snur,-1,q3);\\nsx=sx-bor(bnot(snee),bnot(snur))*cos(y*3.14*q4)*.04;\\nsy=sy-bor(bnot(snee),snur)*cos(x*3.14*q6)*.04;\\ncx=cx+sin(rad*3.14*q4)*.26;\\ncy=cx+sin(3.14*q5)*.1816;\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/Waltra - Cosmic Wind.json":
/*!*****************************************************!*\
  !*** ./presets/converted/Waltra - Cosmic Wind.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.5,\"wave_mode\":4,\"additivewave\":1,\"wave_dots\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_a\":0.331,\"wave_scale\":0.898,\"wave_smoothing\":0.108,\"wave_mystery\":0.1,\"modwavealphastart\":0.72,\"modwavealphaend\":1.28,\"warpscale\":1.178,\"zoomexp\":0.56609,\"zoom\":1.031,\"rot\":0.003,\"dx\":-0.004,\"warp\":0.20798,\"sx\":0.99405,\"sy\":1.09369,\"wave_r\":0,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_y\":0.54,\"mv_x\":24.8,\"mv_dy\":0.16,\"mv_l\":1.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":3,\"rad\":0.31275,\"tex_zoom\":0.17914,\"r\":0.82,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"xy=0.5+rand_frame;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":352,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":0.03856,\"smoothing\":0.2,\"g\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q1=bass_att;\",\"point_eqs_eel\":\"r = abs (sin (frame /38));\\ng = 0.5*abs (cos (frame /45));\\nb = 0.5*abs (sin (frame / 133));\\na = 0.3;\\nt02 = t02 + q1/10;\\nratio = sin (frame/49);\\n\\nampl = 0.01+0.4*sqr(sin ((frame ) / 18)* cos (frame / 123));\\n\\nx1 = (r-0.5)/15 +0.5 + ampl* sin (sample*6.28);\\ny1 = (b-0.5)/15+0.5 + ampl* cos (sample*6.28);\\n\\nx =  x1+1*0.2*(ampl+ratio )*sin ( sample*6.28 * ratio*7.3);\\ny =  y1+1*0.2*(ampl+ratio )*cos ( sample*6.28*6);\\n\"},{\"baseVals\":{\"samples\":15,\"scaling\":2.06378,\"smoothing\":0.8,\"r\":0.8,\"g\":0,\"b\":0.6,\"a\":0.9,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"samples\":112,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = min(1,max(0,(bass_att-1)*1.3));\\nwave_g = wave_r*0.7;\\nwave_b = wave_r*0.1;\\nrot = rot + 0.010*( 0.60*sin(0.038*time) + 0.40*sin(0.054*time) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  float tmpvar_2;\\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \\n    ((tmpvar_3 * (1.0 - (8.0 * \\n      sqrt(tmpvar_2)\\n    ))) + 0.5)\\n  ).xyz), texture (sampler_main, (\\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\\n   + 0.5)).xyz) - 0.03);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (pow ((\\n    (abs(((\\n      ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n     * 2.0) - texture (sampler_main, uv).xyz)) * 1.8)\\n   + 0.12), vec3(1.8, 1.8, 1.8)) * ((\\n    dot ((((\\n      (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale2)\\n     + bias2) - (\\n      (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale2)\\n     + bias2)) + ((\\n      (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale2)\\n     + bias2) - (\\n      (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale2)\\n     + bias2))), vec3(0.32, 0.49, 0.29))\\n   * 4.0) + 1.0));\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Waltra - Ice Plasma.json":
/*!****************************************************!*\
  !*** ./presets/converted/Waltra - Ice Plasma.json ***!
  \****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.84,\"decay\":0.95,\"echo_zoom\":1,\"wave_mode\":5,\"wave_dots\":1,\"wave_thick\":1,\"wave_a\":0.303,\"wave_scale\":1.936,\"wave_smoothing\":0.9,\"wave_mystery\":0.66,\"modwavealphastart\":0.66,\"modwavealphaend\":0.86,\"fshader\":1,\"zoom\":1.0299,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.8,\"ob_size\":0.007,\"ib_size\":0.26,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\\nq1 = movement;\\nmonitor =q1;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.z;\\n  tmpvar_5.y = tmpvar_4.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  ret_1.z = (((texture (sampler_main, tmpvar_6).z - \\n    ((texture (sampler_main, tmpvar_6).z - ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3).z) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1)).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.x;\\n  tmpvar_7.y = tmpvar_4.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((0.5 + (uv - 0.5)) - (tmpvar_7 * texsize.zw));\\n  ret_1.x = texture (sampler_main, tmpvar_8).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3))\\n  .x * 0.4) + 0.006));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.x;\\n  tmpvar_9.y = tmpvar_4.x;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.z;\\n  tmpvar_11.y = tmpvar_4.z;\\n  ret_1.y = texture (sampler_fc_main, (((uv - \\n    ((tmpvar_9 * texsize.zw) * 8.0)\\n  ) + (\\n    (tmpvar_10 * texsize.zw)\\n   * 4.0)) + ((tmpvar_11 * texsize.zw) * 8.0))).y;\\n  ret_1.y = (ret_1.y * (1.0 + (ret_1.x * 0.1)));\\n  ret_1.y = (ret_1.y - (0.004 + (\\n    clamp (ret_1.z, 0.0, 1.0)\\n   * 0.012)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\\n  vec2 tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_blur1, uv);\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (tmpvar_3 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_3.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 + clamp ((\\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_6.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = uv.x;\\n  tmpvar_8.y = (1.0 - uv.y);\\n  ret_1 = (pow (mix (\\n    (vec3((((tmpvar_5.xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)) + (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).x + ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).x))\\n  , tmpvar_7, tmpvar_7), vec3(5.0, 1.0, 0.5)) + pow ((texture (sampler_main, tmpvar_8).yyy + texture (sampler_main, \\n    (1.0 - uv)\\n  ).yyy), vec3(0.6, 0.95, 5.0)));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\\n    ret_1.z = (ret_1.z - (tmpvar_9.x * 0.5));\\n  };\\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\\n    ret_1.x = (ret_1.x - (tmpvar_9.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\\n    ret_1.y = (ret_1.y - (tmpvar_9.z * 0.5));\\n  };\\n  ret_1 = (ret_1 - ((slow_roam_sin.xyz * roam_cos.zxy) * 0.5));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_1;\\n  ret = tmpvar_10.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Waltra - Square Orgy.json":
/*!*****************************************************!*\
  !*** ./presets/converted/Waltra - Square Orgy.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.78,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_dots\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":100,\"wave_scale\":28.599,\"wave_smoothing\":0.5,\"wave_mystery\":-1,\"modwavealphastart\":0.4,\"modwavealphaend\":1,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"ob_size\":0,\"ob_b\":0.2,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_a\":1,\"mv_l\":1.5,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0,\"b1x\":0.7,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"rad\":0.40031,\"r\":0.5,\"g\":0.5,\"r2\":0.5,\"g2\":0,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"sounds=(bass+treb+mid)/3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.1);\\ny=y+0.207*sin(time*bass*0.1);\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"rad\":0.13465,\"r2\":1,\"a2\":0.3,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"rad\":0.20047,\"g\":1,\"b\":1,\"r2\":0.5,\"g2\":0.5,\"b2\":1,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.217*cos(time*2.3)+sounds*0.1;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"sep\":256,\"scaling\":20.35074,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"sep\":256,\"usedots\":1,\"scaling\":100,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nsb = sb*dec_med + q21*(1-dec_med);\\nq29 = sb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nq5 = cos(p3*3.14/2);\\n\\nrott =  rott +  .003*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovx = movx + .002*30/fps;\\nq28 = movx;\\n\\nq15 = (1+sin(time/23))*.15;\\nq29 = 4*(.5+sin(time/17));\\nq30 = 5/(1.2+sin(time/50)); \\nq31 = sin(time/38)/3;\\nq32 = 2+sin(time/18);\\n\\nwarp = .06;\\nzoom = .998;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  float ang2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = cos(q30);\\n  float tmpvar_6;\\n  tmpvar_6 = sin(q30);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract(q29));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (2.093333 + q30);\\n  float tmpvar_7;\\n  tmpvar_7 = cos(ang2_4);\\n  float tmpvar_8;\\n  tmpvar_8 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.3333333 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (4.186667 + q30);\\n  float tmpvar_9;\\n  tmpvar_9 = cos(ang2_4);\\n  float tmpvar_10;\\n  tmpvar_10 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.6666667 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (6.28 + q30);\\n  float tmpvar_11;\\n  tmpvar_11 = cos(ang2_4);\\n  float tmpvar_12;\\n  tmpvar_12 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (xlat_mutableret1 - 0.1);\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/Zylot - In death there is life (Geiss Layered Mix).json":
/*!***********************************************************************************!*\
  !*** ./presets/converted/Zylot - In death there is life (Geiss Layered Mix).json ***!
  \***********************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"wave_mode\":3,\"wave_dots\":1,\"modwavealphabyvolume\":1,\"wave_scale\":16.217468,\"wave_mystery\":-0.44,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"additive\":1,\"textured\":1,\"rad\":0.599579,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp = 0; \\nwave_r = wave_r + .2*sin(time*1.33)+bass*.3; \\nwave_g = wave_g + .2*sin(time)+treb*.3; \\nwave_b = wave_b + .2*sin(time*.988)+mid*.3; \\nzoom = 1+bass*.01;\",\"pixel_eqs_eel\":\"zoom = zoom + (rad*.01)*treb;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.96) + 0.5)).z;\\n  ret_1 = (ret_1 - (ret_1 * 0.5));\\n  ret_1 = ((ret_1 * abs(\\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\\n  )) * 5.0);\\n  ret_1 = (ret_1 - 0.01);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz * 5.0);\\n  ret_1 = (ret_1 + 1.2);\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = (1.0 + (0.2 * sin(time)));\\n  tmpvar_3.y = (1.0 + (0.2 * sin(\\n    (time * 0.2233333)\\n  )));\\n  tmpvar_3.z = (1.0 + (0.2 * sin(\\n    (time * 0.733467)\\n  )));\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  ret_1 = ((ret_1 * (\\n    (tmpvar_4.xyz * scale1)\\n   + bias1).x) * tmpvar_3);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix ((mix (\\n    (mix ((ret_1 * (\\n      (tmpvar_4.xyz * scale1)\\n     + bias1)), (tmpvar_2.xyz * 3.0), tmpvar_2.xxx) * ((tmpvar_4.xyz * scale1) + bias1))\\n  , \\n    (tmpvar_2.xyz * 1.5)\\n  , tmpvar_2.yyy) * (\\n    (tmpvar_4.xyz * scale1)\\n   + bias1)), tmpvar_2.xyz, tmpvar_2.zzz);\\n  ret_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = tmpvar_5;\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/_Eo.S. - glowsticks v2 02 - Geiss HPF.json":
/*!**********************************************************************!*\
  !*** ./presets/converted/_Eo.S. - glowsticks v2 02 - Geiss HPF.json ***!
  \**********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.96,\"echo_zoom\":1.007,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.012,\"wave_smoothing\":0.9,\"warpanimspeed\":0.037,\"warpscale\":0.015,\"warp\":0.033,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_size\":0,\"ob_r\":0.11,\"ob_b\":0.1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":3,\"mv_y\":2,\"mv_dx\":0.02,\"mv_dy\":-0.02,\"mv_l\":0.15,\"mv_r\":0.49,\"mv_g\":0.48,\"mv_b\":0.3,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":5,\"textured\":1,\"rad\":1.06779,\"ang\":0.75398,\"tex_zoom\":0.77977,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0.1,\"b\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*flip;\\n\\nb=b+pow(1-sample,2)*0.3\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0.2,\"b\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*flip;\\n\\n\\nb=b+pow(1-sample,2)*0.3\\n\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"g\":0.6,\"b\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"g\":0.3,\"b\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0\",\"frame_eqs_eel\":\"decay=0.98;\\nzoom=1.002;\\n\\nq1=time*0.9;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (mix (texture (sampler_fc_main, uv).xyz, (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1), vec3(-0.25, -0.25, -0.25)) * 0.93);\\n  ret_1 = (ret_1 * 0.96);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/_Flexi, martin + geiss - painterly rogue wave strike (color emboss mix).json":
/*!********************************************************************************************************!*\
  !*** ./presets/converted/_Flexi, martin + geiss - painterly rogue wave strike (color emboss mix).json ***!
  \********************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.56,\"decay\":1,\"echo_zoom\":0.362,\"echo_orient\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.599,\"wave_smoothing\":0,\"wave_mystery\":-0.5,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpscale\":0.107,\"zoomexp\":0.1584,\"fshader\":1,\"warp\":0.01,\"wave_r\":0.51,\"wave_g\":0.5,\"ob_size\":0,\"ob_a\":1,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.5,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"rad\":0.50126,\"tex_zoom\":0.99996,\"g\":1,\"b\":1,\"r2\":1,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\"},{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"rad\":0.50126,\"g\":1,\"b\":1,\"g2\":0,\"b2\":1,\"border_g\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n\"},{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"rad\":0.50126,\"tex_zoom\":0.9998,\"g\":1,\"b\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"scaling\":0.16188,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"scaling\":25.12601,\"smoothing\":1,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\nwave_r = 1- ib_r;\\nwave_g = 1- ib_g;\\nwave_b = 1- ib_b;\\n//wave_mystery = -1+bass/2;\\nwave_x = 0.5+sin(time*3)*0.3;\\nwave_y = 0.5+cos(time*2.187)*0.3;\\n\\nq6 = cos(time*0.77);\\nq7 = cos(time*0.57);\",\"pixel_eqs_eel\":\"r = bass/4;\\ncx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = (bass)*(r*r-d*d)*0.3;\\nx1 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny1 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(mid)*(r*r-d*d)*0.3;\\nx2 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny2 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\ndir = -(treb)*(r*r-d*d)*0.3;\\nx3 = if( above(d,r),0,  sin(y-cy1)*dir);\\ny3 = if( above(d,r),0, -sin(x-cx1)*dir);\\n\\n\\ndx = x1+x2+x3;\\ndy = y1+y2+y3;\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = bass;\\n  tmpvar_1.y = treb;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * \\n    (0.005 + (0.045 * clamp ((tmpvar_1 - 1.0), 0.0, 1.0)))\\n  ))).xyz - 0.001);\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 N_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  N_1.x = (((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\\n   + bias2)).x * 0.7);\\n  N_1.y = (((\\n    (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\\n   + bias2)).x * 0.7);\\n  N_1.x = (N_1.x + ((\\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ).x * 0.3));\\n  N_1.y = (N_1.y + ((\\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ).x * 0.3));\\n  N_1.z = -0.05;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = normalize(N_1);\\n  N_1 = tmpvar_4;\\n  vec3 tmpvar_5;\\n  tmpvar_5.z = -0.8;\\n  tmpvar_5.x = q6;\\n  tmpvar_5.y = q7;\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.xy = ((uv_orig * 2.0) - 1.0);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = normalize((tmpvar_5 - tmpvar_6));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = normalize((tmpvar_6 - vec3(0.0, 0.0, 1.0)));\\n  ret_2 = (vec3(clamp (dot (tmpvar_4, tmpvar_7), 0.0, 1.0)) * normalize((\\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n   + 0.05)));\\n  ret_2 = (ret_2 + (pow (\\n    clamp (dot (normalize((tmpvar_8 + \\n      ((2.0 * tmpvar_4) * dot (tmpvar_8, tmpvar_4))\\n    )), tmpvar_7), 0.0, 1.0)\\n  , 16.0) * 0.5));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/_Geiss - Artifact 03.json":
/*!*****************************************************!*\
  !*** ./presets/converted/_Geiss - Artifact 03.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.998,\"echo_zoom\":1.421,\"wave_mode\":1,\"additivewave\":1,\"modwavealphabyvolume\":1,\"darken_center\":1,\"wave_a\":1.193,\"wave_scale\":1.489,\"wave_smoothing\":0,\"wave_mystery\":-0.4,\"modwavealphastart\":0.87,\"modwavealphaend\":1.09,\"warpanimspeed\":1.348,\"warpscale\":1.16,\"zoom\":1.002,\"warp\":0.08979,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_x\":0.6,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\\nwave_g = wave_g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\\nwave_b = wave_b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\\n//wave_mystery = time*0.3;\\nrot = rot + 0.02*( 0.60*sin(0.181*time) + 0.09*sin(-0.279*time) );\\nzoom = zoom + 0.025*( 0.60*sin(0.3131*time+2) + 0.4*sin(-0.479*time+4) );\\n//cx = cx + 0.10*( 0.60*sin(0.374*time) + 0.10*sin(0.294*time) );\\n//cy = cy + 0.10*( 0.60*sin(0.393*time) + 0.10*sin(0.223*time) );\\n//dx = dx + 0.0040*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\n//dy = dy + 0.0040*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\n\\n//wave_x = 0.1 + rand(80)*0.01;\\n//wave_y = 0.1 + rand(80)*0.01;\\nt2 = time*6;\\nwave_x = 0.5 + 0.2*( 0.60*sin(0.374*t2) + 0.40*sin(0.294*t2) );\\nwave_y = 0.5 + 0.2*( 0.60*sin(0.393*t2) + 0.40*sin(0.223*t2) );\",\"pixel_eqs_eel\":\"dx = 0;\\ndy = 0;\\ndx = dx + cos(y*29.37 - time*1.9) * 1.0/pixelsx * 2;\\ndy = dy + cos(x*33.21 - time*1.7) * 1.0/pixelsy * 2;\\ndx = dx + cos(y*77.55 - time*2.1) * 1.0/pixelsx * 1.5;\\ndy = dy + cos(x*78.32 - time*2.4) * 1.0/pixelsy * 1.5;\",\"warp\":\" shader_body { \\n  vec2 dxy_1;\\n  dxy_1.x = cos(((154.56 * uv_orig.y) - time));\\n  dxy_1.y = cos(((154.56 * uv_orig.x) - time));\\n  float tmpvar_2;\\n  tmpvar_2 = (time * 5.0);\\n  dxy_1.x = (dxy_1.x + cos((\\n    (412.16 * uv_orig.y)\\n   - tmpvar_2)));\\n  dxy_1.y = (dxy_1.y + cos((\\n    (412.16 * uv_orig.x)\\n   - tmpvar_2)));\\n  dxy_1.y = (dxy_1.y + 0.15);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (max (texture (sampler_fw_main, (uv + \\n    (dxy_1 * texsize.zw)\\n  )).xyz, (texture (sampler_main, uv_orig).xyz * 0.8)) - 0.004);\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 0.8) + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.7));\\n  ret = tmpvar_1.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/_Krash + Eo.S. - Photographic Sentinel.json":
/*!***********************************************************************!*\
  !*** ./presets/converted/_Krash + Eo.S. - Photographic Sentinel.json ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"decay\":0.99,\"echo_zoom\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":1,\"wave_scale\":0.608,\"wave_mystery\":-0.4,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_r\":0,\"mv_g\":0.7,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"textured\":1,\"rad\":0.47221,\"tex_zoom\":0.5033,\"g\":0.7,\"r2\":1,\"g2\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"xpos = if(q1,(rand(4)+1)*0.25-0.125,xpos);\\nypos = if(q1,(rand(3)+1)*0.333-0.166,ypos);\\nx = xpos;\\ny = ypos;\\nflash = if(q1,0.8,flash-0.1);\\ntextured = below(flash,0.5);\\na = above(flash,0);\\na2 = above(flash,0);\\nborder_a = 0.5*above(flash,0);\\nr = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\ng = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\nb = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\nr2 = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\ng2 = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\nb2 = if(above(flash,0.5),0.5*flash,0.6+0.1*rand(200));\\nborder_r = 0.5*above(flash,0);\\nborder_g = 0.5*above(flash,0);\\nborder_b = 0.5*above(flash,0);\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"b\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"h=q5;\\ns = 0.7;\\nl= 0.8;\\n///////////////////////////////////////////////////////////////////////////////////////////////\\n//\\n//                            HSL to RGB by PieturP\\n//\\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\\n//\\ncc=(6*h);\\ncc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));\\nzf=(6*h)-cc;\\nzm=l;\\nzp=l*(1-s);\\nzq=l*(1-s*zf);\\nzt=l*(1-s*(1-zf));\\nmonitor=zq;\\nrr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));\\ngg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));\\nbb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));\\nrr=if(equal(s,0),l,rr);\\ngg=if(equal(s,0),l,gg);\\nbb=if(equal(s,0),l,bb);\\n\\n///////////////////////////////////////////////////////////////////////////////////////////////\\nr=rr;\\ng=gg;\\nb=bb;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q4 + phs*4;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.1-0.05)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*20 + sin(tm*76 + time*4)*0.4;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=0.5*(sin(tm*2)+sin(tm*1.248));\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + (sin(tm*2 - 0.5)+sin(tm*1.237))*1.25;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=(cos(tm*1)+cos(tm*0.653))*0.875 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=0.5*(cos(tm*1.273)+cos(tm));\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"g\":0.9,\"b\":0.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"h=q5;\\ns = 0.7;\\nl= 0.6;\\n///////////////////////////////////////////////////////////////////////////////////////////////\\n//\\n//                            HSL to RGB by PieturP\\n//\\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\\n//\\ncc=(6*h);\\ncc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));\\nzf=(6*h)-cc;\\nzm=l;\\nzp=l*(1-s);\\nzq=l*(1-s*zf);\\nzt=l*(1-s*(1-zf));\\nmonitor=zq;\\nrr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));\\ngg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));\\nbb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));\\nrr=if(equal(s,0),l,rr);\\ngg=if(equal(s,0),l,gg);\\nbb=if(equal(s,0),l,bb);\\n\\n///////////////////////////////////////////////////////////////////////////////////////////////\\nr=rr;\\ng=gg;\\nb=bb;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.4 ;\\ntm=q4 + phs*2 - 0.01;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.2-0.1)*(sample);\\nzp=0;\\n\\n//spin;\\nang=-tm*29 + sin(tm*76 + time*4)*0.4;;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=0.5*(sin(tm*2)+sin(tm*1.248));\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + (sin(tm*2 - 0.5)+sin(tm*1.237))*1.25;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + 0.5*(cos(tm*3 + 0.5)+cos(tm*0.867));\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=(cos(tm*1)+cos(tm*0.653))*0.875 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=0.5*(cos(tm*1.273)+cos(tm));\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"g\":0.72,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"h=q5;\\ns = 0.8;\\nl= 0.5;\\n///////////////////////////////////////////////////////////////////////////////////////////////\\n//\\n//                            HSL to RGB by PieturP\\n//\\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\\n//\\ncc=(6*h);\\ncc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));\\nzf=(6*h)-cc;\\nzm=l;\\nzp=l*(1-s);\\nzq=l*(1-s*zf);\\nzt=l*(1-s*(1-zf));\\nmonitor=zq;\\nrr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));\\ngg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));\\nbb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));\\nrr=if(equal(s,0),l,rr);\\ngg=if(equal(s,0),l,gg);\\nbb=if(equal(s,0),l,bb);\\n\\n///////////////////////////////////////////////////////////////////////////////////////////////\\nr=rr;\\ng=gg;\\nb=bb;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.4 ;\\ntm=q4 + phs*2 - 0.02;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.4-0.2)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*23 + sin(tm*76 + time*4)*0.3;;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=0.5*(sin(tm*2)+sin(tm*1.248));\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + (sin(tm*2 - 0.5)+sin(tm*1.237))*1.25;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + 0.5*(cos(tm*3 + 0.5)+cos(tm*0.867));\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=(cos(tm*1)+cos(tm*0.653))*0.875 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=0.5*(cos(tm*1.273)+cos(tm));\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"g\":0.7,\"b\":0.5},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"h=q5;\\ns = 0.75;\\nl= 0.4;\\n///////////////////////////////////////////////////////////////////////////////////////////////\\n//\\n//                            HSL to RGB by PieturP\\n//\\n// hue         h ( 0 - 0.9 )                          rr ( 0 - 1 )\\n// saturation  s ( 0 - 1 )            - >             gg ( 0 - 1 )\\n// luminance   l ( 0 - 1 )                            bb ( 0 - 1 )\\n//\\ncc=(6*h);\\ncc=if(below(cc,1),0,if(below(cc,2),1,if(below(cc,3),2,if(below(cc,4),3,if(below(cc,5),4,5)))));\\nzf=(6*h)-cc;\\nzm=l;\\nzp=l*(1-s);\\nzq=l*(1-s*zf);\\nzt=l*(1-s*(1-zf));\\nmonitor=zq;\\nrr=if(equal(cc,0),zm,if(equal(cc,1),zq,if(equal(cc,2),zp,if(equal(cc,3),zp,if(equal(cc,4),zt,zm)))));\\ngg=if(equal(cc,0),zt,if(equal(cc,1),zm,if(equal(cc,2),zm,if(equal(cc,3),zq,if(equal(cc,4),zp,zp)))));\\nbb=if(equal(cc,0),zp,if(equal(cc,1),zp,if(equal(cc,2),zt,if(equal(cc,3),zm,if(equal(cc,4),zm,zq)))));\\nrr=if(equal(s,0),l,rr);\\ngg=if(equal(s,0),l,gg);\\nbb=if(equal(s,0),l,bb);\\n\\n///////////////////////////////////////////////////////////////////////////////////////////////\\nr=rr;\\ng=gg;\\nb=bb;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.4 ;\\ntm=q4 + phs*2 - 0.03;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.6-0.3)*(sample);\\nzp=0;\\n\\n//spin;\\nang=-tm*4 + sin(tm*76 + time*4)*0.2;;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=0.5*(sin(tm*2)+sin(tm*1.248));\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + (sin(tm*2 - 0.5)+sin(tm*1.237))*1.25;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + 0.5*(cos(tm*3 + 0.5)+cos(tm*0.867));\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=(cos(tm*1)+cos(tm*0.653))*0.875 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=0.5*(cos(tm*1.273)+cos(tm));\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp=0;\\nwave_a = 0;\\n\\n//begin beat code\\nvolume = 0.3*(bass+mid);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\n//Adjust responsiveness: To increase responsiveness, set the \\\"0.96 and \\\"0.996\\\" on the next line to slightly lower values. Higher values decrease responsiveness.\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//end beat code\\n\\nxamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nyamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nq1 = beat;\\nq2 = xpos;\\nq3 = ypos;\\nq4 = time*0.5;\\n\\nq5 = 0.25*(sin(time*0.15)+sin(time*0.85))+0.5;\\n\\nmonitor = q5;\",\"pixel_eqs_eel\":\"\",\"warp\":\"uniform sampler2D sampler_cells;\\n shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)\\n  ).xyz - 0.5) / 256.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_cells, (uv_orig * aspect.xy));\\n  vec2 x_3;\\n  x_3 = (uv - uv_orig);\\n  ret_1 = (mix (ret_1, tmpvar_2.xyz, vec3((\\n    clamp ((1.0 - (abs(\\n      (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 0.8) + 0.1) - (0.5 + (roam_cos.y * 0.25)))\\n    ) * 43.0)), 0.0, 1.0)\\n   * 0.07))) * (0.97 + (0.03 * \\n    clamp ((sqrt(dot (x_3, x_3)) * 200.0), 0.0, 1.0)\\n  )));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/_Mig_004_version2.json":
/*!**************************************************!*\
  !*** ./presets/converted/_Mig_004_version2.json ***!
  \**************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1.007,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"wave_a\":0.001,\"wave_scale\":0.012,\"wave_smoothing\":0.9,\"warpscale\":2.853,\"zoomexp\":0.99983,\"zoom\":0.99752,\"warp\":0.01565,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_size\":0,\"mv_x\":0,\"mv_y\":43.2,\"mv_l\":1,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":1.06779,\"ang\":0.75398,\"tex_zoom\":0.77977,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":5,\"additive\":1,\"rad\":0.03809,\"g\":1,\"b\":1,\"g2\":0.6,\"b2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"r\":0.1,\"b\":0.7},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);\"},{\"baseVals\":{\"enabled\":1,\"r\":0.2,\"b\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"g\":0.6,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\n\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"g\":0.3,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);\\nq2 = oldq2 + 0.05*(pow(1+1.2*treb+0.4*treb_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n\\n//q2 = oldq2 +q1;\\noldq2 = q2 ;\\nmonitor = q2;\",\"pixel_eqs_eel\":\"zoom = zoom + rad*0.1*q1;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.2));\\n  ret_1 = (ret_1 * 0.9);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  float ang2_1;\\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\\n  float tmpvar_2;\\n  tmpvar_2 = (3.0 + floor((rand_preset.z * 5.95)));\\n  ang2_1 = (fract((ang2_1 * tmpvar_2)) / tmpvar_2);\\n  ang2_1 = (abs((ang2_1 - \\n    (0.5 / tmpvar_2)\\n  )) * 6.283185);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(ang2_1);\\n  tmpvar_3.y = sin(ang2_1);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_main, (0.5 + (\\n    ((0.4 * (rad * sqrt(\\n      dot (texsize.xy, texsize.xy)\\n    ))) * tmpvar_3)\\n   * texsize.zw))).xyz * 1.333);\\n  ret = tmpvar_4.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/_Mig_028.json":
/*!*****************************************!*\
  !*** ./presets/converted/_Mig_028.json ***!
  \*****************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":0.999997,\"wave_mode\":5,\"modwavealphabyvolume\":1,\"wave_a\":11.202061,\"wave_scale\":1.772913,\"wave_smoothing\":0.9,\"wave_mystery\":-0.5,\"warpanimspeed\":24.831774,\"warpscale\":0.419995,\"zoom\":0.999514,\"warp\":55.044964,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"smoothing\":0.8,\"r\":0.5,\"g\":0,\"b\":0,\"a\":0.5},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp = 0;\\n\\nwave_b = if(below(treb, 1.8),1-.025*rand(10),0);\\nwave_g = wave_g*sqr(.01*rand(100));\\ndecay = .9999+.0001+0*if(equal(frame % 10,0),.95,1);\\nmonitor = wave_g;\\ncx=.5+.3*cos(time*.21);\\ncy=.5+.3*sin(time*.1);\\ncx=cx+(bass-1.2)*.1;\\ncy=cy+(treb_att-1)*.1;\\nmv_r=bass_att*.4;\\nwave_x = cx;\\nwave_y=1-cy;\\n\\nq1=cx;\\nq2=cy;\",\"pixel_eqs_eel\":\"near=below(sqr(q1-x)+sqr(q2-y),.04);\\nnotnear = 1- near;\\nsy=max(0.3,pow(bass_att,.2))*near + notnear;\\nsx=1/sy*near + notnear;\\nrot = .02*sin(x*5+time)*notnear-.03;\\nzoom = 1+ notnear*.001*(.5+sin(ang*5+time));\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  tmpvar_3.xyz = ret_1;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 0.0;\\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv - tmpvar_2)) * 0.9)).xyz;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 0.0;\\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 0.0;\\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \\n    (tmpvar_2 * 2.0)\\n  )) * 0.97)).xyz;\\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \\n    (uv + (tmpvar_2 * 3.0))\\n  ) * 0.9)).xyz * 0.92);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (abs((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv).xyz)) * 6.0);\\n  ret_1 = (ret_1 * 1.333);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/_Mig_079.json":
/*!*****************************************!*\
  !*** ./presets/converted/_Mig_079.json ***!
  \*****************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"wave_mode\":3,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_a\":0.207,\"wave_scale\":1.074,\"wave_smoothing\":0,\"wave_mystery\":0.24,\"modwavealphaend\":1.17,\"warpanimspeed\":0.335,\"warpscale\":3.521,\"zoomexp\":2.1,\"zoom\":1.00002,\"warp\":0.92753,\"ob_size\":0,\"ob_a\":0.5,\"ib_size\":0.029,\"ib_r\":0.34,\"ib_g\":0.34,\"ib_b\":0.34,\"ib_a\":0.1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_r\":0.35,\"mv_g\":0.35,\"mv_b\":0.35,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_x = wave_x + 0.2900*( 0.60*sin(2.121*time) + 0.40*sin(1.621*time) );\\nwave_y = wave_y + 0.2900*( 0.60*sin(1.742*time) + 0.40*sin(2.322*time) );\\nwave_r = wave_r + 0.350*( 0.60*sin(0.823*time) + 0.40*sin(0.916*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.023*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.808*time) + 0.40*sin(0.949*time) );\\nblah = 0.5/(wave_r+wave_g+wave_b);\\nwave_r = wave_r*blah; wave_g = wave_g*blah; wave_b = wave_b*blah;\\nrot = rot + 0.035*( 0.60*sin(0.21*time) + 0.30*sin(0.339*time) );\\ncx = cx + 0.30*( 0.60*sin(0.374*time) + 0.14*sin(0.194*time) );\\ncy = cy + 0.37*( 0.60*sin(0.274*time) + 0.10*sin(0.394*time) );\\ndx = dx + 0.01*( 0.60*sin(0.324*time) + 0.40*sin(0.234*time) );\\ndy = dy + 0.01*( 0.60*sin(0.244*time) + 0.40*sin(0.264*time) );\\nib_r = ib_r + 0.2*sin(time*0.5413);\\nib_g = ib_g + 0.2*sin(time*0.6459);\\nib_b = ib_b + 0.2*sin(time*0.7354);\\nblah = 12.4/(ib_r+ib_g+ib_b)*3;\\nib_r = ib_r*blah; ib_g = ib_g*blah; ib_b = ib_b*blah;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/_Mig_COLORFUL9.json":
/*!***********************************************!*\
  !*** ./presets/converted/_Mig_COLORFUL9.json ***!
  \***********************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"additivewave\":1,\"wave_brighten\":0,\"wave_a\":0.001,\"wave_scale\":0.01,\"wave_smoothing\":0.63,\"wave_mystery\":-1,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":30.965099,\"warpscale\":2.571729,\"zoom\":1.009006,\"warp\":0.000536,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"mv_x\":12.799995,\"mv_y\":9.600006,\"mv_l\":1,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"rad\":0.491382,\"r\":0,\"g\":1,\"b\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=.5+q4;y=.5+q5;\\na=bass_att+mid_att+treb_att;\\na=a*0.25;\\na=a*a*1.5;\"},{\"baseVals\":{\"sides\":24,\"rad\":0.018423,\"tex_zoom\":0.819541,\"g\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_ang=0.01;\\nx=.5-q4;\\ny=.5-q5;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\nzoom = zoom + max(0,bass_att-1.1)*0.2;\\nwarp = warp + max(0,treb-1.1)*0.5;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.6));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 12.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.08, 0.08, 0.08));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/_Mig_Oscilloscope008.json":
/*!*****************************************************!*\
  !*** ./presets/converted/_Mig_Oscilloscope008.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.21,\"decay\":0.96,\"echo_zoom\":0.99663,\"echo_orient\":1,\"wave_mode\":6,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":11.94,\"wave_scale\":7.394711,\"wave_smoothing\":0.7,\"warpscale\":1.772,\"zoomexp\":4.401,\"zoom\":1.000678,\"rot\":0.003,\"warp\":0,\"wave_r\":0.49,\"wave_g\":0.49,\"wave_b\":0.49,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t = time*2.3;\\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time) + 0.30*sin(1.821*time) );\\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time) + 0.70*sin(2.522*time) );\\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\\nrot = rot + 0.010*( 0.60*sin(0.038*time) + 0.40*sin(0.054*time) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \\n    (uv + tmpvar_2)\\n  ).xyz), texture (sampler_main, (uv - tmpvar_2)).xyz) - 0.035);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/_geiss_experimental__wavefronts.json":
/*!****************************************************************!*\
  !*** ./presets/converted/_geiss_experimental__wavefronts.json ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.14,\"decay\":1,\"echo_zoom\":1.002,\"echo_orient\":1,\"wave_mode\":6,\"wave_thick\":1,\"wave_a\":1.577,\"wave_scale\":1.031,\"wave_smoothing\":0,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpanimspeed\":32.544,\"warpscale\":9.738,\"dx\":-0.005,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_x\":0,\"wave_y\":1,\"ob_size\":0.005,\"ob_r\":0.01,\"ob_a\":0.6,\"ib_size\":0.26,\"mv_x\":16,\"mv_y\":16.8,\"mv_l\":0.15,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"//decay = 0.94\",\"frame_eqs_eel\":\"dy = dy -0.0085;\\n//bass_effect = max(max(bass,bass_effect)-1.4,0);\\n//warp = if(above(bass_effect,0),10,0);\\nred_rand = rand(100);\\nblue_rand = rand(100);\\nwave_r = 0.01*red_rand + 0.2*sin(time*1.311);\\nwave_b = 0.01*blue_rand - 0.2*sin(time*1.46);\\nwave_g = 1-0.5*(wave_r+wave_b)+ 0.2*cos(time*0.789);\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/bdrv - ultramix2 \u0000#43.json":
/*!******************************************************!*\
  !*** ./presets/converted/bdrv - ultramix2  #43.json ***!
  \******************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_orient\":3,\"wave_mode\":5,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.312,\"wave_scale\":0.972,\"wave_smoothing\":0.5,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"dx\":0.00001,\"dy\":0.00001,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0.005,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":1.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":1.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":1.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\nob_r = 1-abs(wave_r);\\nob_g = 1-abs(wave_g);\\nob_b = 1-abs(wave_b);\\nib_r = abs(wave_r);\\nib_b = abs(wave_b);\\nib_g = abs(wave_g);\\n;\",\"pixel_eqs_eel\":\"mekdx=dx;//////////////////////////////////////////\\nkdy=dy;\\nksx=sx;\\nksy=sy;\\nkrt=rot;\\nkzm=zoom;\\nkcx=cx;\\nkcy=cy;\\nkwp=warp;\\n\\ndx=0;\\ndy=0;\\nsx=1;\\nsy=1;\\nrot=0;\\nzoom=1;\\ncx=.5;\\ncy=.5;\\nwarp=0;/////////////////////////////////////////////////////\\n\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nxy = above(sin(time),0)*x + below(sin(1.34*time),0)*y + above((bass_att),1.1)*-1;\\n\\ndx = dx + dx_r;\\ndy = dy + dy_r;\\nsx = sx - abs(12*dx_r*(xy*sin(xy*bass_att*1.25)));\\nsy = sy - abs(12*dy_r*(xy*sin(xy*bass_att*1.25)));\\nrot = rot + 22*dx_r*(xy*cos(4*xy*treb_att));\\ncx = cx + 8*dx_r*(xy*sin(xy*mid_att*1.1));\\ncy = cy + 8*dy_r*(xy*sin(xy*mid_att*1.1));\\n///////////////////////////////////////\\ncr1=1*.01;\\ncr2=99*.01;; ; ; ;\\ncrx=cr2-cr1;\\nci=(1-(1-abs(-2*(x+y)/2+1)+(1-abs(-2*(1-(x+(1-y))/2)+1)))/2)*4-1;\\ncb=.25  ;\\ncrs=2;\\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\\njx1=crr;\\nkx1=1-crr;\\n\\njdx=dx;\\njdy=dy;\\njsx=sx;\\njsy=sy;\\njrt=rot;\\njzm=zoom;\\njcx=cx;\\njcy=cy;\\njwp=warp;\\n\\ndx=(jx1*jdx+kx1*kdx);\\ndy=(jx1*jdy+kx1*kdy);\\nsx=(jx1*jsx+kx1*ksx);\\nsy=(jx1*jsy+kx1*ksy);\\nrot=(jx1*jrt+kx1*krt);\\nzoom=(jx1*jzm+kx1*kzm);\\ncx=(jx1*jcx+kx1*kcx);\\ncy=(jx1*jcy+kx1*kcy);\\nwarp=(jx1*jwp+kx1*kwp);////////////////////////////////////////////////////\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/beta106i - Burning Form (Seething Mass) - mash0000 - fire paint easter egg internals.json":
/*!*********************************************************************************************************************!*\
  !*** ./presets/converted/beta106i - Burning Form (Seething Mass) - mash0000 - fire paint easter egg internals.json ***!
  \*********************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.7,\"decay\":0.995,\"echo_zoom\":1,\"echo_orient\":1,\"wave_mode\":2,\"additivewave\":1,\"wave_dots\":1,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":100,\"wave_smoothing\":0.9,\"wave_mystery\":-0.6,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpanimspeed\":100,\"warpscale\":100,\"fshader\":1,\"dx\":0.00001,\"dy\":0.00001,\"warp\":0.01,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0.3,\"ib_r\":0,\"ib_g\":0,\"ib_b\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_x = wave_x + 0.1*sin(5*bass);\\nwave_y = wave_y + 0.1*sin(5*bass);\\nwave_r = wave_r + 1;\\nwave_g =wave_g + rand(2);\\nwave_b = 0;\\nrot = rot + if (above(bass,0), 0.02*sin(6*bass) - 0.025*cos(4.75*bass), 0);\",\"pixel_eqs_eel\":\"zoom = zoom + 0.05*rad;\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * \\n    (0.005 + (0.025 * clamp ((treb - 1.0), 0.0, 1.0)))\\n  ))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/cope + geiss + stahlregen - cartune (bending gelatine mix).json":
/*!*******************************************************************************************!*\
  !*** ./presets/converted/cope + geiss + stahlregen - cartune (bending gelatine mix).json ***!
  \*******************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.14,\"decay\":1,\"echo_zoom\":1,\"wave_mode\":5,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.599,\"wave_smoothing\":0,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":2.003,\"warpscale\":0.359,\"zoom\":1.0002,\"dy\":-0.004,\"warp\":0.01,\"wave_x\":0.2,\"wave_y\":0.88,\"ob_size\":0,\"ob_a\":0.8,\"ib_size\":0.005,\"ib_r\":0.3,\"ib_g\":0.3,\"ib_b\":0.3,\"ib_a\":1,\"mv_x\":0,\"mv_y\":0,\"mv_l\":1,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":63,\"x\":0.56,\"y\":0,\"rad\":0.11039,\"ang\":3.40549,\"r\":0.7,\"g\":0.6,\"b\":0.7,\"r2\":0.6,\"g2\":0.6,\"b2\":0.6,\"a2\":1,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r = r + 0.3*(0.6*sin(time*1.4) + 0.4*sin(0.98*time));\\nb = b + 0.3*(0.6*sin(time*1.134) + 0.4*sin(0.78*time));\\ng = g + 0.3*(0.6*sin(time*1.287) + 0.4*sin(0.6*time));\\n\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;\\n\\n//r=0.7;\\n//g=0.1;\\n//b=0;\\n\\n//r2=0.7;\\n//g2=0.7;\\n//b2=0;\"},{\"baseVals\":{\"enabled\":1,\"sides\":34,\"num_inst\":3,\"y\":0,\"rad\":0.11046,\"r\":0.7,\"g\":0.6,\"b\":0.7,\"r2\":0.6,\"g2\":0.6,\"b2\":0.6,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r = r + 0.3*(0.6*sin(time*2.4) + 0.4*sin(0.34*time));\\nb = b + 0.3*(0.6*sin(time*1.65) + 0.4*sin(0.976*time));\\ng = g + 0.3*(0.6*sin(time*2.05) + 0.4*sin(0.577*time));\\n\\nr = q4;\\nb = 1-r;\\ng = 1-r;\\n\\n//r=0;\\n//b=0;\\n//g=0;\\nr2=r;\\nb2=b;\\ng2=g;\\n\\nx = ((.5+instance)/num_inst);\"},{\"baseVals\":{\"sides\":54,\"x\":0.44,\"y\":0,\"rad\":0.11039,\"r\":0.7,\"g\":0.6,\"b\":0.7,\"r2\":0.6,\"g2\":0.6,\"b2\":0.6,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;\"},{\"baseVals\":{\"x\":0,\"y\":0.2,\"rad\":0.20068,\"r\":0,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"additive\":1,\"r\":0.2,\"g\":0.7,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\\n\\n\\n\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\n\\nq4 = min(vol*0.5, 1);\\ndy = -0.005;\\nwarp= 0.0215+.006*mid;\\n\\nsx = 1.003;\",\"pixel_eqs_eel\":\"dx1=(cos(y*q3*30)*1.2)*0.11;\\n\\ndx=if(above(y,0.8),if(below(y,0.83),if(above(x,0.05),if(below(x,0.93),(dx1*(1-rad+0.1))*1.5,0),0),0),0);\\n\\nq1=dx;\\n\\nsx = 1+0.0075*y*(bass-.25*treb);\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = uv.x;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = fract(uv);\\n  tmpvar_1.y = (uv.y - pow (pow (\\n    (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1) - 0.05)\\n  , \\n    (texture (sampler_main, tmpvar_2).xyz - 0.9)\\n  ).x, 0.007));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (texture (sampler_main, fract(fract(\\n    fract(tmpvar_1)\\n  ))).xyz + 0.001);\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.0);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader, ret_2)));\\n  ret_2 = (ret_2 * hue_shader);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/cope - strange attractor [flexis let it grow mix] (Jelly 5.56 [volume noise zoom-in]).json":
/*!**********************************************************************************************************************!*\
  !*** ./presets/converted/cope - strange attractor [flexis let it grow mix] (Jelly 5.56 [volume noise zoom-in]).json ***!
  \**********************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.925,\"echo_zoom\":1.007,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"wave_brighten\":0,\"wrap\":0,\"brighten\":1,\"darken\":1,\"solarize\":1,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"fshader\":1,\"zoom\":0.99951,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":1.248,\"mv_l\":5,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1},\"init_eqs_eel\":\"t1=0.5;\\nt2=0.5;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//x = a*sin(b*y) - z*cos(c*x); \\nx = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\\n\\n//y = z*sin(d*x) - cos(e*y); \\ny = t3*sin(-q1*t1) - cos(-0.5*t2);\\n\\n//z = f*sin(x);\\nz = 1*sin(t1);\\n\\n\\n//transmit the x,y,z positions to the next point\\nt1=x;\\nt2=y;\\nt3=z;\\n\\n//adjust the scale and position of the entire attractor *after* we passed xyz to the next point\\nx = x*0.4+0.45;\\ny = y*0.4+0.8;\\n\\nr = q8;\\nb = q7;\\ng = q6;\"},{\"baseVals\":{\"a\":0.07,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\\nx = 1.4*sin(q2*t2) - t3*cos(0.5*t1);\\ny = t3*sin(-q1*t1) - cos(-0.5*t2);\\nz = 1*sin(t1);\\n\\nt1=x;\\nt2=y;\\nt3=z;\\n\\nx = x*0.4+0.45;\\ny = y*0.4+0.8;\\n\\n\\nr = q8;\\nb = q7;\\ng = q6;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//keep q1 negative, that's where the interesting shape is\\nq1= -abs(1*sin(time*0.3));\\nq2= 1*sin(time*0.45);\\nq3= 1*cos(time*0.6);\\n\\n\\nwave_r = wave_r + 0.45*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = wave_b + 0.45*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = wave_g + 0.45*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\n//q8=wave_r;\\n//q7=wave_g;\\n//q6=wave_b;\\nq8=1;\\nq7=1;\\nq6=1;\\n\\nwarp = 0;\\nzoom = 1;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 2.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_2.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (texture (sampler_fc_main, (uv + (\\n    (tmpvar_2 * texsize.zw)\\n   * 6.0))).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)).xxx - 0.5)\\n   * 0.04) - 0.008));\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = (uv * 1.5);\\n  tmpvar_9.z = (0.1 * time);\\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) - (0.2 * dot (texture (sampler_noisevol_lq, tmpvar_9), vec4(0.32, 0.49, 0.29, 0.0))));\\n  ret_1 = (mix (ret_1, (\\n    (0.75 * ret_1)\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, ret_1)) * 0.8);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = sqrt(ret_1);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/cope - the drain to heaven.json":
/*!***********************************************************!*\
  !*** ./presets/converted/cope - the drain to heaven.json ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.14,\"decay\":1,\"echo_zoom\":1,\"wave_mode\":6,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":1.17,\"wave_scale\":0.797,\"wave_smoothing\":0,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoomexp\":0.9995,\"zoom\":0.9998,\"rot\":0.02,\"dy\":-0.008,\"warp\":0.01,\"sx\":1.0098,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_x\":0.9,\"ob_size\":0.005,\"ob_a\":0.8,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":44.8,\"mv_y\":38.4,\"mv_l\":5,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":33,\"y\":0,\"rad\":0.11039,\"ang\":3.4054,\"r\":0,\"g2\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//ang = ang + time*2;\\n\\n//x = x + 0.4*sin(time);\\n//y = y + 0.4*sin(-time*1.4);\"},{\"baseVals\":{\"sides\":34,\"y\":0.45,\"rad\":1.62175,\"r\":0,\"a\":0.05,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":54,\"x\":0,\"y\":0.6,\"rad\":0.13478,\"r\":0.7,\"g\":0.6,\"b\":0.7,\"r2\":0.6,\"g2\":0.6,\"b2\":0.6,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;\"},{\"baseVals\":{\"x\":0,\"y\":0.2,\"rad\":0.20068,\"r\":0,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"r\":0.2,\"g\":0.7,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.3*sin(vol*50);\\nwave_b = wave_b + 0.3*sin(vol*20);\\nwave_g = wave_g + 0.5*sin(vol*35);\\n\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.4*(0.6*sin(time*1.1) + 0.4*sin(0.8*time));\\nwb = 0.5+0.4*(0.6*sin(time*1.6) + 0.4*sin(0.5*time));\\nwg = 0.5+0.4*(0.6*sin(time*1.34) + 0.4*sin(0.4*time));\\n\\nmonitor=wg;\\nq10=wr;\\nq11=wb;\\nq12=wg;\\nq18 = 0.007*sin(time*0.1);\\nq17 = -0.007*sin(time*0.254);\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\n\\nwarp=0;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 noise3_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.5 + ((\\n    (uv - vec2(0.0, 1.0))\\n   - 0.5) * (1.0 + \\n    (tmpvar_2.y * 0.03)\\n  )));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (tmpvar_3.x + pow (tmpvar_2.x, 0.0));\\n  tmpvar_4.y = (tmpvar_3.y + pow (tmpvar_2.x, 0.005));\\n  noise3_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\\n    (q3 * 0.5)\\n  ))));\\n  noise3_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, fract(tmpvar_4));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = q10;\\n  tmpvar_7.y = q11;\\n  tmpvar_7.z = q12;\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (tmpvar_5, tmpvar_7, tmpvar_6.xxx);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (tmpvar_6.xyz + clamp ((\\n    (tmpvar_6.yzx * tmpvar_8.zxy)\\n   - \\n    (tmpvar_6.zxy * tmpvar_8.yzx)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_9.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz + ((texture (sampler_blur2, uv).xyz * scale2) + bias2));\\n  ret = tmpvar_1.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/cope, martin + flexi - the slickery of alternative varnish.json":
/*!*******************************************************************************************!*\
  !*** ./presets/converted/cope, martin + flexi - the slickery of alternative varnish.json ***!
  \*******************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.49,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"wave_mode\":1,\"wave_thick\":1,\"wave_brighten\":0,\"brighten\":1,\"darken\":1,\"wave_a\":1.06,\"wave_scale\":0.43,\"wave_smoothing\":0.9,\"wave_mystery\":-1,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":0.403,\"zoomexp\":1.0016,\"zoom\":1.0298,\"warp\":0.01,\"sx\":0.9901,\"sy\":0.97078,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.005,\"ob_a\":0.05,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.05,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":54,\"textured\":1,\"rad\":0.10406,\"tex_zoom\":7.09852,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_r\":0.1,\"border_g\":0.1,\"border_b\":0.1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":44,\"textured\":1,\"rad\":0.2047,\"tex_zoom\":4.81638,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//r=q8;\\n//b=q7;\\n//g=q6;\\n//r2=q8;\\n//b2=q7;\\n//g2=q6;\"},{\"baseVals\":{\"sides\":3,\"y\":0.451,\"rad\":0.02076,\"ang\":1.82212,\"tex_zoom\":2.0882,\"r\":0,\"b\":1,\"a\":0,\"r2\":1,\"b2\":1,\"a2\":0.03,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//r=1-q8;\\n//b=1-q7;\\n//g=1-q6;\\n//r2=1-q8;\\n//b2=1-q7;\\n//g2=1-q6;\\n//x=x-(int(q1*10)*0.05);\\nrad = rad+0.09*q1;\"},{\"baseVals\":{\"sides\":44,\"rad\":0.17628,\"r\":0,\"g2\":0,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"scaling\":0.30299,\"r\":0,\"g\":0,\"b\":0,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":0.90529,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.5*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = wave_b + 0.5*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = wave_g + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.3*(0.6*sin(time*1.8) + 0.4*sin(0.8*time));\\nwb = 0.5+0.3*(0.6*sin(time*1.67) + 0.4*sin(0.5*time));\\nwg = 0.5+0.3*(0.6*sin(time*1.92) + 0.4*sin(0.4*time));\\n\\nq10=wr;\\nq11=wb;\\nq12=wg;\\n\\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\\nq1=vol;\\nmonitor=vol;\\nmtime=mtime+vol*0.01;\\nq2=mtime*0.25;\\nwave_mystery = wave_mystery + 0.6*vol;\\nsy=sy+vol*0.02;\\nsx=sy;\\n\\ncx = cx + 0.2*sin(mtime);\\ncy = cy - 0.2*sin(mtime*1.2);\",\"pixel_eqs_eel\":\"rot=log(x+0.1)*(x+0.1);\\nrot=rot*0.1;\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.zw = vec2(0.0, 0.0);\\n  tmpvar_2.xy = uv;\\n  vec4 tmpvar_3;\\n  tmpvar_3.zw = vec2(0.0, 0.0);\\n  tmpvar_3.xy = uv_orig;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = mix (tmpvar_2, tmpvar_3, ((1.3 - rad) + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.15)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((texture (sampler_main, clamp (\\n    (tmpvar_4.xy - (((vec2(0.0, 64.0) * texsize.zw) * dot (\\n      (texture (sampler_main, clamp (tmpvar_4.xy, 0.0, 1.0)).xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (texture (sampler_main, \\n      clamp (tmpvar_4.xy, 0.0, 1.0)\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, tmpvar_1) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    ((uv - 0.5) * 2.0)\\n  )) - tmpvar_4);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((0.04 / sqrt(\\n    dot (uv1_1, uv1_1)\\n  )), 0.0, 1.0);\\n  uv1_1 = ((0.3 * cos(\\n    (uv1_1 * 12.0)\\n  )) - (9.0 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\\n  , 0.0, 1.0))));\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/fed + flexi + geiss - tokamak repellor tech twist mix [stabilized].json":
/*!***************************************************************************************************!*\
  !*** ./presets/converted/fed + flexi + geiss - tokamak repellor tech twist mix [stabilized].json ***!
  \***************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.28,\"decay\":0.8,\"echo_zoom\":1,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"brighten\":1,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":1.004,\"warp\":0.19788,\"sx\":0.99967,\"sy\":0.9999,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0,\"ob_r\":1,\"ob_a\":0.7,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":39,\"additive\":1,\"num_inst\":126,\"rad\":0.06989,\"tex_ang\":0.62832,\"a\":0,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"sides\":41,\"additive\":1,\"num_inst\":239,\"rad\":0.06989,\"tex_ang\":0.62832,\"r\":0,\"g\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"sides\":43,\"additive\":1,\"num_inst\":32,\"rad\":0.06989,\"tex_ang\":0.62832,\"r\":0,\"b\":1,\"g2\":0,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"enabled\":1,\"sides\":14,\"rad\":0.15964,\"tex_ang\":0.62832,\"a\":0,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );\\n//zoom = 1;\\nwarp = 0;\",\"pixel_eqs_eel\":\"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.04*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5)*aspectx;\\ndy = mult*cos(ang2*2-1.5)*aspecty;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + (0.2 * rand_frame.xy))\\n  ).xyz - 0.5) * 0.3));\\n  ret_1 = (ret_1 - (ret_1.yzx * 0.1));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.z;\\n  tmpvar_6.y = tmpvar_4.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (tmpvar_5 * 0.1)) + (tmpvar_6 * 0.06));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  ret_1 = (((\\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - tmpvar_8.y), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_1 = (mix (ret_1, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_7).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec3 tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_10 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11 * texture (sampler_main, clamp ((uv - (tmpvar_9 * 2.0)), 0.0, 1.0)).y)\\n   * 1.2)), (tmpvar_11.zxy * 1.8), tmpvar_8.zzz);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_10;\\n  ret = tmpvar_12.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/fed + flexi - tech test 2-1 - humpgorge.json":
/*!************************************************************************!*\
  !*** ./presets/converted/fed + flexi - tech test 2-1 - humpgorge.json ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"additivewave\":1,\"wave_dots\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wave_a\":0.513,\"wave_scale\":100,\"wave_smoothing\":0,\"wave_mystery\":1,\"modwavealphastart\":0.83,\"modwavealphaend\":1.31,\"warpanimspeed\":100,\"warpscale\":0.021,\"zoomexp\":0.26623,\"zoom\":1.00808,\"warp\":0.02599,\"ob_size\":0.005,\"ob_a\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":65,\"textured\":1,\"num_inst\":27,\"rad\":0.50627,\"tex_ang\":1.50796,\"tex_zoom\":1.08284,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=x+sin(instance*360)*rad;\\ny=y+cos(instance*360)*rad;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":25,\"rad\":0.01041,\"tex_zoom\":0.96098,\"a\":0,\"a2\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r2=int(rand(200))/200;\\ng2=int(rand(200))/200;\\nb2=int(rand(200))/200;\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//yr code\\ndx=0;\\n//end.\\nq6=dx;\\nq7=dy;\\n//zoom=1.00;\\n//warp=0;\\nq2=abs(sin(time*3));\\nq3=abs(sin(time*4));\\nq4=abs(sin(time*2));\\nmonitor=q3;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  float dy_1;\\n  float dx_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_6.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_3.y = texture (sampler_fw_main, clamp ((uv + (\\n    (tmpvar_6 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.01));\\n  ret_3.y = (ret_3.y + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.02));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dx_2;\\n  tmpvar_7.y = dy_1;\\n  ret_3.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_7 * texsize.zw) * 4.0)\\n  )).z - (ret_3.y * 0.01)) + 0.004);\\n  ret_3.z = (ret_3.z + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.01));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(-1.0, 0.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, -1.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dx_2;\\n  tmpvar_8.y = dy_1;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * texsize.zw);\\n  vec2 domain_10;\\n  domain_10 = (uv - (tmpvar_9 * 2.5));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 0.0;\\n  tmpvar_11.xyz = max (vec4(0.0, 0.0, 0.0, 0.0), texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(-1.0, 0.0))))).xyz;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 0.0;\\n  tmpvar_12.xyz = max (tmpvar_11, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, -1.0))))).xyz;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 0.0;\\n  tmpvar_13.xyz = max (tmpvar_12, texture (sampler_fc_main, domain_10)).xyz;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 0.0;\\n  tmpvar_14.xyz = max (tmpvar_13, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, 1.0))))).xyz;\\n  ret_3.x = ((max (tmpvar_14, texture (sampler_fc_main, \\n    (domain_10 + (texsize.zw * vec2(1.0, 0.0)))\\n  )).x + (\\n    (texture (sampler_main, (uv + (tmpvar_9 * 4.0))).x - ((texture (sampler_blur1, (uv + \\n      (tmpvar_9 * 4.0)\\n    )).xyz * scale1) + bias1).x)\\n   * 0.206)) - 0.09);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/fiShbRaiN + geiss - witchcraft (Grow Mix 3).json":
/*!****************************************************************************!*\
  !*** ./presets/converted/fiShbRaiN + geiss - witchcraft (Grow Mix 3).json ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":0.955,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"fshader\":1,\"zoom\":1.00951,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"rad\":1.79142,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"a\":0,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec4 lums_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 * 3.0);\\n  lums_1.x = dot (texture (sampler_main, (uv + (texsize.zw * tmpvar_3.xz))).xyz, vec3(0.32, 0.49, 0.29));\\n  lums_1.y = dot (texture (sampler_main, (uv - (texsize.zw * tmpvar_3.xz))).xyz, vec3(0.32, 0.49, 0.29));\\n  lums_1.z = dot (texture (sampler_main, (uv + (texsize.zw * tmpvar_3.zy))).xyz, vec3(0.32, 0.49, 0.29));\\n  lums_1.w = dot (texture (sampler_main, (uv - (texsize.zw * tmpvar_3.zy))).xyz, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (lums_1.x - lums_1.y);\\n  tmpvar_4.y = (lums_1.z - lums_1.w);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (texture (sampler_fc_main, (uv + (\\n    (((clamp (\\n      ((((2300.0 * tmpvar_4) / 3.0) * 0.5) + 0.5)\\n    , 0.0, 1.0) * 2.0) - 1.0) * 1.4)\\n   * texsize.zw))).xyz * 0.965);\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = ((texture (sampler_main, uv).xyz * 1.5) - 0.1);\\n  ret_1.y = (ret_1 * 0.7).y;\\n  ret_1.x = (((texture (sampler_blur1, uv).xyz * scale1) + bias1).x * 2.0);\\n  ret_1.z = (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 3.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/fiShbRaiN - toffee cream and icing sugar.json":
/*!*************************************************************************!*\
  !*** ./presets/converted/fiShbRaiN - toffee cream and icing sugar.json ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":2.4,\"echo_zoom\":1.006596,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":1.285751,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.951307,\"zoomexp\":0.255373,\"fshader\":0.5,\"zoom\":0.960513,\"rot\":-0.04,\"warp\":0.972365,\"sx\":1.030301,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":20.160004,\"mv_l\":0.4,\"mv_g\":0.4,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"rad\":1.203212,\"tex_zoom\":1.220188,\"a\":0,\"a2\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1},\"init_eqs_eel\":\"ma=.5;\\nmy=.5;\\nmd=0; //direction 0 1 2 3\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\\n\\nr=bass*.5;\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1},\"init_eqs_eel\":\"mx=.5;\\nmy=.5;\\nmd=1;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\\n\\ng=treb*.5;\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1},\"init_eqs_eel\":\"mx=.5;\\nmy=.5;\\nmd=2;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1},\"init_eqs_eel\":\"mx=.5;\\nmy=.4;\\nmd=3;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"pixel_eqs_eel\":\"\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/fiShbRaiN, flexi + martin - grafitti tagging witchcraft must be overrated - demonlord shaders - lampshade hubrys2.json":
/*!**************************************************************************************************************************************************!*\
  !*** ./presets/converted/fiShbRaiN, flexi + martin - grafitti tagging witchcraft must be overrated - demonlord shaders - lampshade hubrys2.json ***!
  \**************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1,\"decay\":0.955,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"fshader\":1,\"zoom\":0.99951,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":14,\"num_inst\":266,\"rad\":0.0303,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"enabled\":1,\"sides\":14,\"num_inst\":318,\"rad\":0.03,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"enabled\":1,\"sides\":14,\"num_inst\":252,\"rad\":0.0297,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"enabled\":1,\"sides\":14,\"num_inst\":206,\"rad\":0.0303,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vb = vb*0.95 + (1-vb)*pow(bass*treb*mid,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n// these lines belong to the composite shader\\na = a*0.98 - (bass-treb)*0.01;\\nq15 = a;\\nv = v*0.96 + a*0.12;\\nq16 = v;\\nw = w - v*0.01;\\nq18 = w;\\nq19 = 0.5-(bass_att-treb_att)*0.15;\\nd = d + (bass_att-0.5)*0.01*60/fps;\\nd2 = d2 + (treb_att-0.5)*0.006*60/fps;\\nq20 = d;\\nq21 = d2;\\nmonitor = d2;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.95) + 0.5)).z;\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = -(ret_1.x);\\n  tmpvar_3.y = (ret_1.x - ret_1.y);\\n  tmpvar_3.z = (ret_1.y - ret_1.z);\\n  ret_1 = (ret_1 + (tmpvar_3 * 0.03));\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 3.0));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, (uv + (cos(\\n    (texture (sampler_main, uv).xz * 17.3)\\n  ) * 0.02))).xyz;\\n  ret = tmpvar_1.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/fishbrain + flexi - stitchcraft.json":
/*!****************************************************************!*\
  !*** ./presets/converted/fishbrain + flexi - stitchcraft.json ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":0.955,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"fshader\":1,\"zoom\":0.99951,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":14,\"num_inst\":198,\"rad\":0.06081,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"enabled\":1,\"sides\":3,\"num_inst\":197,\"rad\":0.05396,\"ang\":0.43982,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"enabled\":1,\"sides\":14,\"num_inst\":32,\"rad\":0.01525,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"enabled\":1,\"sides\":14,\"num_inst\":32,\"rad\":0.01525,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp = 0;\\nzoom = 1.001;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 12.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.8)) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - uv);\\n  tmpvar_5 = (((uv_orig - \\n    (tmpvar_6 * 0.4)\\n  ) + (\\n    (tmpvar_4 * texsize.zw)\\n   * 2.0)) + ((\\n    (texture (sampler_noise_lq, tmpvar_3).xy - 0.5)\\n   * texsize.zw) * 4.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \\n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, tmpvar_3).x - 0.5) * 0.1));\\n  ret_1.y = texture (sampler_main, uv).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\\n   * 0.1) - 0.015));\\n  ret_1.z = ((texture (sampler_main, (uv_orig + \\n    (tmpvar_6 * 0.8)\\n  )).z * 0.94) - 0.004);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }\",\"comp\":\"float xlat_mutablea;\\nfloat xlat_mutableb;\\nfloat xlat_mutablec;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (uv * 2.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = floor((fract(\\n    (uv_1 * 0.5)\\n  ) * 2.0));\\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_2)) + (tmpvar_2 * fract(\\n    (1.0 - uv_1)\\n  )));\\n  uv_1 = ((0.5 + (\\n    (uv_1 - 0.5)\\n   * vec2(0.75, -0.9))) - vec2(0.0, 0.05));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((\\n    (((texture (sampler_blur3, uv_1).xyz * scale3) + bias3) + ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   + \\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n  ) + texture (sampler_main, uv_1).xyz) + 0.04);\\n  xlat_mutablea = (tmpvar_3.x / 4.0);\\n  xlat_mutableb = (tmpvar_3.y / 4.0);\\n  xlat_mutablec = (tmpvar_3.z / 4.0);\\n  xlat_mutablec = ((xlat_mutablec + xlat_mutableb) - (xlat_mutablec * xlat_mutableb));\\n  xlat_mutablea = ((xlat_mutablea + xlat_mutablec) - (xlat_mutablea * xlat_mutablec));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = vec3((1.4 * xlat_mutablea));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((vec3(4.0, 2.8, 0.0) * (\\n    (tmpvar_4 * (1.0 - tmpvar_4))\\n   * \\n    (1.0 - tmpvar_4)\\n  )) + ((tmpvar_4 * tmpvar_4) * vec3(-0.3, 0.2, 0.6)));\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi + amandio c - organic.json":
/*!************************************************************!*\
  !*** ./presets/converted/flexi + amandio c - organic.json ***!
  \************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"wrap\":0,\"darken_center\":1,\"brighten\":1,\"darken\":1,\"wave_a\":0.001,\"warpanimspeed\":0.141,\"warpscale\":14.497,\"zoom\":0.99951,\"warp\":0.75055,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":6,\"rad\":0.17809,\"ang\":0.26,\"tex_zoom\":0.39711,\"g\":0.7,\"b\":0.6,\"r2\":0.4,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nb=.6+.3*q3;\\ng=.7+.2*q3;\\nr= .7;\\n\\ng2=.3*g;\\nr2=.3*r;\\nb2=.3*b;\"},{\"baseVals\":{\"enabled\":1,\"sides\":6,\"additive\":1,\"rad\":0.17809,\"ang\":0.26,\"tex_zoom\":0.99999,\"g\":1,\"b\":0.4,\"a\":0.5,\"r2\":0.2,\"g2\":0,\"b2\":0.3,\"a2\":0.6,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nb=.6+.3*q3;\\ng=.7+.2*q3;\\nr= .7;\\n\\ng2=.3*g;\\nr2=.3*r;\\nb2=.3*b;\"},{\"baseVals\":{\"enabled\":1,\"sides\":6,\"textured\":1,\"rad\":0.17633,\"ang\":0.26,\"tex_zoom\":1.19615,\"r2\":1,\"b2\":1,\"a2\":0.2,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0.2},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=.22*rand(6);\\ny=.18+.16*(2*time%5);\\n\\ng=1.5*q3;\\nr=1.3*q4;\\nb=1.7*q5;\\n\\ntex_ang=-q1;\\ntex_zoom=2+sin(q1);\"},{\"baseVals\":{\"enabled\":1,\"sides\":6,\"textured\":1,\"rad\":0.16284,\"ang\":0.26,\"r2\":0.8,\"g2\":0.8,\"b2\":0.8,\"a2\":0.2,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0.2},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=.11+.22*rand(5);\\ny=.1+.16*(2*time%6);\\n\\nr=.3*q3;\\nb=.2*q2;\\ng=.1*q1;\\n\\ntex_ang=q1;\\ntex_zoom=2+1.2*sin(1.5*q1);\"}],\"waves\":[{\"baseVals\":{\"samples\":395,\"usedots\":1,\"r\":0.15,\"g\":0.15,\"b\":0.15,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"usedots\":1,\"scaling\":0.01,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 1;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;\",\"frame_eqs_eel\":\"sx=1+.01*(8*bass%8)*equal(time%(int(24-2*bass)),0);\\nsy=1+.01*(8*mid%8) *equal(time%(12+int(24-2*bass)),0);\\n\\nzoom = 0.99;\\n//warp = 0;\\nwave_a = 0;\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.12+ max(bass_att,treb_att)*0.004;\\nbounce = below(y1,r);\\ny1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.00006*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.00006*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.00006*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.00006*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1;\\nq4 = y1;\\nq5 = r;\\nq6 = x2;\\nq7 = y2;\\nq8 = r;\\nq9 = x3;\\nq10 = y3;\\nq11 = r;\\nq12 = x4;\\nq13 = y4;\\nq14 = r;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(8.0, 8.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur1, mix (uv_orig, uv, vec2(-8.0, -8.0))).xyz * scale1) + bias1)\\n    , vec3(0.32, 0.49, 0.29))) * 0.75)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.004).xyz) + -0.0015);\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q3;\\n  tmpvar_1.y = q4;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q6;\\n  tmpvar_2.y = q7;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q9;\\n  tmpvar_3.y = q10;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q12;\\n  tmpvar_4.y = q13;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 1.2);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (texture (sampler_main, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (texture (sampler_main, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz - texture (sampler_main, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 8.0)) - (1.0 - tmpvar_1));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 8.0)) - (1.0 - tmpvar_2));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_12.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_13;\\n  x_13 = ((uv - (tmpvar_12 * 8.0)) - (1.0 - tmpvar_3));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_14.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec2 x_15;\\n  x_15 = ((uv - (tmpvar_14 * 8.0)) - (1.0 - tmpvar_4));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = (mix (texture (sampler_main, uv).xyz, max (\\n    max ((vec3((1.0 - pow (\\n      sqrt(dot (x_9, x_9))\\n    , 0.2))) * vec3(2.0, 1.0, -1.0)), (vec3((1.0 - pow (\\n      sqrt(dot (x_11, x_11))\\n    , 0.2))) * vec3(2.0, -1.0, 1.0)))\\n  , \\n    max ((vec3((1.0 - pow (\\n      sqrt(dot (x_13, x_13))\\n    , 0.2))) * vec3(-1.0, 1.0, 2.0)), (vec3((1.0 - pow (\\n      sqrt(dot (x_15, x_15))\\n    , 0.2))) * vec3(1.0, -1.0, 2.0)))\\n  ), vec3(0.5, 0.5, 0.5)) * 1.25);\\n  ret = tmpvar_16.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi + bdrv - acid etching (jelly v5.5).json":
/*!*************************************************************************!*\
  !*** ./presets/converted/flexi + bdrv - acid etching (jelly v5.5).json ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":5,\"additivewave\":1,\"wave_a\":0,\"wave_scale\":0.9,\"wave_smoothing\":0.63,\"wave_mystery\":1,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpscale\":1.772,\"zoomexp\":4.401,\"zoom\":1.011,\"rot\":0.003,\"warp\":0,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"mv_x\":0,\"mv_y\":48,\"mv_dx\":-0.941,\"mv_dy\":0.426,\"mv_l\":5,\"mv_r\":0.316,\"mv_g\":0.078,\"mv_b\":0.942,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":12,\"additive\":1,\"rad\":0.02508,\"r\":0,\"g\":1,\"a\":0.2,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t = time*12.3;\\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time*5) + 0.30*sin(1.821*time*15) );\\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time*5) + 0.70*sin(2.522*time*15) );\\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\\nrot = rot + 0.030*( 0.60*sin(0.38*time) + 0.40*sin(0.54*time+4) );\\nzoom = zoom + 0.015*( 0.60*sin(0.29*time+1) + 0.40*sin(0.43*time+2) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_2.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_1.y = texture (sampler_fw_main, (uv + (tmpvar_2 * 0.005))).y;\\n  ret_1 = (ret_1 + ((\\n    (ret_1 - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   * 0.3) - 0.05));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  ret_1 = (mix (vec3(tmpvar_9), (\\n    (0.75 * vec3(tmpvar_9))\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, vec3(tmpvar_9))) * 0.9);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = sqrt(ret_1);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi + fishbrain - witchcraft [complex terraforming - fiddling twists in the fabric of space].json":
/*!*******************************************************************************************************************************!*\
  !*** ./presets/converted/flexi + fishbrain - witchcraft [complex terraforming - fiddling twists in the fabric of space].json ***!
  \*******************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.28,\"decay\":0.8,\"echo_zoom\":1,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"brighten\":1,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"zoomexp\":3.04777,\"zoom\":1.0173,\"warp\":0.01605,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0,\"ob_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":5,\"additive\":1,\"num_inst\":2,\"x\":0.49,\"rad\":0.11589,\"tex_zoom\":4.36077,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"g\":0,\"b\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0,\"b\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"r\":0,\"g\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"r\":0,\"g\":0,\"b\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"x1 = 0.5;\\nx2 = 0.500001;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.9;\\n\\nx4 = 0.2;\\ny4 = 0.9;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;\",\"frame_eqs_eel\":\"zoom = 1;\\n\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.1+ max(bass_att,treb_att)*0.006;\\nbounce = below(y1,r);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0001*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0001*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0001*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0001*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 =  0.5 - x1;\\nq2 = -0.5 + y1;\\nq3 =  0.5 - x2;\\nq4 = -0.5 + y2;\\nq5 =  0.5 - x3;\\nq6 = -0.5 + y3;\\nq7 =  0.5 - x4;\\nq8 = -0.5 + y4;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  ret_1.x = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_6 * texsize.zw) * 4.0))).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  ret_1.y = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_7 * texsize.zw) * 4.0))).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  ret_1.z = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_8 * texsize.zw) * 4.0))).z;\\n  ret_1 = (ret_1 - ((\\n    (ret_1.yzx + ret_1.zxy)\\n   * 0.16) + 0.002));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.04));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }\",\"comp\":\"vec2 xlat_mutablefactorA;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_3);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (xlat_mutablefactorA * vec2(8.0, 8.0));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q3;\\n  tmpvar_5.y = q4;\\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_5);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (xlat_mutablefactorA * vec2(8.0, 8.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q5;\\n  tmpvar_7.y = q6;\\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_7);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (xlat_mutablefactorA * vec2(8.0, 8.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q7;\\n  tmpvar_9.y = q8;\\n  xlat_mutablefactorA = (tmpvar_2 + tmpvar_9);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (xlat_mutablefactorA * vec2(8.0, 8.0));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((tmpvar_4.x * tmpvar_6.x) - (tmpvar_4.y * tmpvar_6.y));\\n  tmpvar_11.y = ((tmpvar_4.x * tmpvar_6.y) + (tmpvar_4.y * tmpvar_6.x));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = ((tmpvar_8.x * tmpvar_10.x) - (tmpvar_8.y * tmpvar_10.y));\\n  tmpvar_12.y = ((tmpvar_8.x * tmpvar_10.y) + (tmpvar_8.y * tmpvar_10.x));\\n  xlat_mutablefactorA = tmpvar_11;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = ((tmpvar_11.x * tmpvar_12.x) - (tmpvar_11.y * tmpvar_12.y));\\n  tmpvar_13.y = ((tmpvar_11.x * tmpvar_12.y) + (tmpvar_11.y * tmpvar_12.x));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = tmpvar_13.x;\\n  tmpvar_14.y = -(tmpvar_13.y);\\n  uv_1 = ((tmpvar_14 / (\\n    (tmpvar_13.x * tmpvar_13.x)\\n   + \\n    (tmpvar_13.y * tmpvar_13.y)\\n  )) * ((16.0 + bass) + treb));\\n  uv_1 = (0.5 + ((1.0 - \\n    abs(((fract(\\n      (mix ((0.5 + (tmpvar_2 * 2.0)), (uv_1 + 0.5), vec2(0.5, 0.5)) * 0.5)\\n    ) * 2.0) - 1.0))\\n  ) - 0.5));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = mix (mix ((vec3(0.8, 0.6, 0.5) * texture (sampler_fc_main, uv_1).x), mix (vec3(0.6, 1.2, 0.0), vec3(-1.0, 0.8, -1.0), texture (sampler_main, uv_1).zzz), vec3((texture (sampler_main, uv_1).y * 0.4))), vec3(0.0, 0.15, 0.3), vec3(((texture (sampler_main, uv_1).z * \\n    (1.0 - texture (sampler_main, uv_1).y)\\n  ) * 2.0)));\\n  ret = tmpvar_15.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi - Mindblob.json":
/*!*************************************************!*\
  !*** ./presets/converted/flexi - Mindblob.json ***!
  \*************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.004,\"wave_scale\":0.01,\"wave_smoothing\":0,\"wave_mystery\":-0.44,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpanimspeed\":0.01,\"warpscale\":100,\"zoomexp\":0.9217,\"zoom\":0.9901,\"warp\":0.01,\"wave_y\":0.04,\"ob_size\":0,\"ob_g\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"thickoutline\":1,\"rad\":0.02015,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"r\":0,\"a\":0.1,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"thickoutline\":1,\"x\":1,\"rad\":0.39872,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"thickoutline\":1,\"x\":1,\"rad\":3.0054,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"r\":0,\"g\":1,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"thickoutline\":1,\"x\":1,\"rad\":0.39872,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"scaling\":2.44415,\"smoothing\":0,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;\",\"point_eqs_eel\":\"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;\"},{\"baseVals\":{\"scaling\":2.44415,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\",\"point_eqs_eel\":\"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"scaling\":100,\"smoothing\":0.6,\"r\":0,\"g\":0.4,\"a\":0.3,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;\"},{\"baseVals\":{\"usedots\":1,\"scaling\":2.44415,\"smoothing\":0,\"r\":0,\"g\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\",\"point_eqs_eel\":\"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;\"}],\"init_eqs_eel\":\"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;\",\"frame_eqs_eel\":\"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*1.5;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 18;\\ngrav = 1;\\nresist = 5;\\nbounce = 0.9;\\ndt = 0.0003;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nwarp = 0;\\nzoom = 1.00;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\",\"pixel_eqs_eel\":\"dir = -q6*1 + asin(1)*1;\\n\\nb1 = 0.1; // distance\\nm1 = q5*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;\",\"warp\":\" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - vec2(0.005, 0.0));\\n  tmpvar_3 = (((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2)).x;\\n  float tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv - vec2(0.0, 0.005));\\n  tmpvar_6 = (((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2)).x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3;\\n  tmpvar_9.y = tmpvar_6;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_5).xyz * scale2) + bias2)).x;\\n  tmpvar_10.y = (((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2) - ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2)).x;\\n  ret_2.x = texture (sampler_fc_main, ((uv - (tmpvar_9 * 0.005)) + (tmpvar_10 * 0.002))).x;\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_11.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.006);\\n  ret_2.x = ret_2.x;\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_6;\\n  tmpvar_12.y = -(tmpvar_3);\\n  my_uv_1 = (uv + ((tmpvar_12 * 0.05) * (1.2 - \\n    ((tmpvar_11.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_13;\\n  x_13 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    (ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\\n   * \\n    sqrt(dot (x_13, x_13))\\n  ) * 120.0));\\n  ret_2.z = (ret_2.z * 0.85);\\n  ret_2.z = (ret_2.z + 0.008);\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = -(tmpvar_6);\\n  tmpvar_14.y = tmpvar_3;\\n  my_uv_1 = (tmpvar_14 * 0.05);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.01, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  tmpvar_15.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.01))\\n  ).xyz * scale2) + bias2)).y;\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_15 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.03));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_2;\\n  ret = tmpvar_16.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_fw_main, uv);\\n  ret_1 = (mix (vec3(0.0, 0.0, 0.3), vec3(0.4, 0.0, 1.0), tmpvar_3.yyy) * (1.0 - (\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .z * 2.0)));\\n  ret_1 = (ret_1 + (texture (sampler_main, uv).z * vec3(0.9, 0.2, 0.8)));\\n  ret_1 = (ret_1 * (1.0 - (\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .x * 1.6)));\\n  ret_1 = (ret_1 + (vec3(0.9, 0.63, 0.0) * tmpvar_3.xxx));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi - alien canvas [learning].json":
/*!****************************************************************!*\
  !*** ./presets/converted/flexi - alien canvas [learning].json ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.21,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.004,\"wave_scale\":0.073,\"wave_smoothing\":0,\"wave_mystery\":-0.44,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpanimspeed\":0.01,\"warpscale\":100,\"zoomexp\":0.92178,\"fshader\":1,\"zoom\":0.9901,\"warp\":0.01,\"wave_y\":0.04,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.5,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":24,\"rad\":0.0639,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"r\":0,\"g\":1,\"a\":0.96,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q1;\\ny = q5;\"},{\"baseVals\":{\"sides\":24,\"rad\":0.0639,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"a\":0.96,\"g2\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q2;\\ny = q6;\"},{\"baseVals\":{\"sides\":24,\"rad\":0.0639,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"r\":0,\"b\":1,\"a\":0.96,\"g2\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q3;\\ny = q7;\"},{\"baseVals\":{\"sides\":24,\"rad\":0.0639,\"tex_ang\":0.12566,\"tex_zoom\":1.51878,\"g\":1,\"b\":1,\"a\":0.96,\"g2\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q4;\\ny = q8;\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"additive\":1,\"scaling\":1.69136,\"smoothing\":0,\"r\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ntt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\ndd = dd*0.9 + tt1*0.2;\\nddd = sample*(1-sample)*dd*d*4;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"scaling\":1.69136,\"smoothing\":0,\"g\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"sample = 1-sample;\\n\\nx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":1.69136,\"smoothing\":0,\"g\":0,\"b\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*q1 + 5*pow(sample,4)*(1-sample)*q1 + 10*pow(sample,3)*sqr(1-sample)*q2\\n+ 10*sqr(sample)*pow(1-sample,3)*q3 + 5*pow(1-sample,4)*sample*q4 + pow(1-sample,5)*q4;\\n\\nyy = pow(sample,5)*q5 + 5*pow(sample,4)*(1-sample)*q5 + 10*pow(sample,3)*sqr(1-sample)*q6\\n+ 10*sqr(sample)*pow(1-sample,3)*q7 + 5*pow(1-sample,4)*sample*q8 + pow(1-sample,5)*q8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = sample*(1-sample)*sin(sample*180)*d*0.1;\\nx = xx + (yy-yyy)*dd;\\ny = yy - (xx-xxx)*dd;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n\"},{\"baseVals\":{\"usedots\":1,\"scaling\":2.44415,\"smoothing\":0,\"r\":0,\"g\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\",\"point_eqs_eel\":\"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;\"}],\"init_eqs_eel\":\"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;\",\"frame_eqs_eel\":\"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n// elastic thread code\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4)*0.8;\\nq14 = atan2(vx4,vy4);\",\"pixel_eqs_eel\":\"x = 0.5 + (x-0.5)*q11;\\ny = 0.5 + (y-0.5)*q12;\\ndir = -q14*1 + asin(1)*1;\\n\\nvelocity = q13;\\nstrength = 100;\\nsize = 0.07;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*size;\\ny1 = yy -sin(dir+1.5708)*size;\\n\\nx2 = xx   -cos(dir+1.5708)*size;\\ny2 = yy +sin(dir+1.5708)*size;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-size*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-size*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\ndx = (si1*sin(y1-y)*d1  - si2*sin(y2-y)*d2)*strength*velocity;\\ndy = (-si1*sin(x1-x)*d1 + si2*sin(x2-x)*d2)*strength*velocity;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_4.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_1.y = texture (sampler_fw_main, clamp ((uv + (\\n    (tmpvar_4 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  .y * 0.025) + (-0.01 + \\n    (texture (sampler_main, uv).x * 0.1)\\n  )));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.02));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  tmpvar_5.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_5 * texsize.zw) * 4.0)\\n  )).z - (ret_1.y * 0.01)) + 0.004);\\n  ret_1.z = (ret_1.z + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.01));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 dy_1;\\n  vec3 dx_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 3.0);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(-1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, -1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_5.y;\\n  tmpvar_7.y = tmpvar_6.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.z;\\n  tmpvar_8.y = tmpvar_6.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q19;\\n  tmpvar_9.y = q20;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = fract(((0.5 + \\n    (uv - 0.5)\\n  ) + (tmpvar_9 * vec2(-1.0, 1.0))));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_10 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (tmpvar_10 + (vec2(-1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_10 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (tmpvar_10 + (vec2(0.0, -1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dx_2.x;\\n  tmpvar_11.y = dy_1.x;\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = dx_2.x;\\n  tmpvar_12.y = dy_1.x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = dx_2.x;\\n  tmpvar_13.y = dy_1.x;\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (mix (mix (\\n    mix (mix (ret_3, vec3(1.0, 1.0, 1.0), ((texture (sampler_blur2, \\n      (fract(((uv - tmpvar_7) - (\\n        (tmpvar_8 * rad)\\n       * 2.0))) - (tmpvar_11 * 4.0))\\n    ).xyz * scale2) + bias2).yyy), vec3(1.0, 0.5, 0.0), texture (sampler_main, uv).yyy)\\n  , vec3(1.0, 1.0, 1.0), vec3(\\n    (texture (sampler_main, (uv - (tmpvar_12 * 0.2))).z * clamp ((1.0 - (rad * 1.5)), 0.0, 1.0))\\n  )), vec3(1.0, 1.0, 1.0), (\\n    (texture (sampler_blur1, (tmpvar_10 + (tmpvar_13 * 0.3))).xyz * scale1)\\n   + bias1).xxx), vec3(0.5, 0.0, 1.0), texture (sampler_main, tmpvar_10).xxx);\\n  ret_3 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = tmpvar_14;\\n  ret = tmpvar_15.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi - bouncing balls [double mindblob gastrointestinal mix].json":
/*!**********************************************************************************************!*\
  !*** ./presets/converted/flexi - bouncing balls [double mindblob gastrointestinal mix].json ***!
  \**********************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.995,\"echo_zoom\":1.007,\"echo_orient\":3,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":1.413,\"wave_scale\":0.418,\"wave_smoothing\":0,\"wave_mystery\":-0.66,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpanimspeed\":0.626,\"warpscale\":8.642,\"zoom\":0.99951,\"warp\":0.09014,\"wave_r\":0,\"wave_g\":0,\"wave_x\":0.24,\"wave_y\":0.44,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":48,\"additive\":1,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"r2\":1,\"g2\":0,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q3;\\ny = q4;\\nrad = q5;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"},{\"baseVals\":{\"enabled\":1,\"sides\":48,\"additive\":1,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"r\":0,\"b\":1,\"g2\":0,\"b2\":1,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q6;\\ny = q7;\\nrad = q8;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"},{\"baseVals\":{\"sides\":48,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"r\":0,\"g\":1,\"a2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q9;\\ny = q10;\\nrad = q11;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"},{\"baseVals\":{\"sides\":48,\"additive\":1,\"thickoutline\":1,\"rad\":0.0277,\"ang\":6.03186,\"tex_ang\":6.03186,\"tex_zoom\":0.6839,\"r\":0,\"g\":1,\"a\":0,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q12;\\ny = q13;\\nrad = q14;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"additive\":1,\"scaling\":2.0231,\"smoothing\":0,\"r\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;\",\"point_eqs_eel\":\"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;\"},{\"baseVals\":{\"spectrum\":1,\"g\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"chance = 0;\",\"frame_eqs_eel\":\"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;\",\"point_eqs_eel\":\"x = t1 + sample*sin(t4)*t3*20;\\ny = t2 + sample*cos(t4)*t3*20;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;\"},{\"baseVals\":{\"spectrum\":1,\"g\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"chance = 0;\",\"frame_eqs_eel\":\"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;\",\"point_eqs_eel\":\"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;\"},{\"baseVals\":{\"spectrum\":1,\"g\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"chance = 0;\",\"frame_eqs_eel\":\"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10 + asin(1), ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;\",\"point_eqs_eel\":\"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;\"}],\"init_eqs_eel\":\"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;\",\"frame_eqs_eel\":\"zoom = 1.001;\\n//warp = 0;\\nwave_a = 0;\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.04+ max(bass_att,treb_att)*0.008;bounce = below(y1,r);y1 = y1+vy1;\\nvy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0003*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0003*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0003*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0003*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1;\\nq4 = y1;\\nq5 = r*2;\\nq6 = x2;\\nq7 = y2;\\nq8 = r*2;\\nq9 = x3;\\nq10 = y3;\\nq11 = r*2;\\nq12 = x4;\\nq13 = y4;\\nq14 = r*2;\\nq15 = atan2(vx4,vy4);\\nq16 = sqrt(vx4*vx4+vy4*vy4);\\nq17 = atan2(vx3,vy3);\\nq18 = sqrt(vx3*vx3+vy3*vy3);\",\"pixel_eqs_eel\":\"x = 0.5 + (x-0.5)*q2;\\ny = 0.5 + (y-0.5)*q1;\\n\\n\\ndir = -q15 + asin(1);\\nb1 = 0.075;\\nm1 = q16*25;\\nxx = q12;\\nyy = 1-q13;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;\\n\\ndir = -q17 + asin(1);\\nm1 = q18*25;\\nxx = q9;\\nyy = 1-q10;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = dx + (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = dy + (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  ret_1.x = (texture (sampler_fc_main, (uv + (\\n    (tmpvar_5 * texsize.zw)\\n   * 2.0))).x - 0.008);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.z;\\n  tmpvar_6.y = tmpvar_4.z;\\n  ret_1.z = texture (sampler_fc_main, (uv - (tmpvar_6 * texsize.zw))).z;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }\",\"comp\":\"float xlat_mutablea;\\nfloat xlat_mutableb;\\nfloat xlat_mutablec;\\n shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = cos(((uv.y * texsize.y) * 0.4));\\n  tmpvar_2.y = sin(((uv.x * texsize.x) * 0.4));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv + ((8.0 * texsize.zw) * tmpvar_2));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = vec3((((\\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3).x + ((texture (sampler_blur2, uv).xyz * scale2) + bias2).x)\\n   + \\n    ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1)\\n  .x) + texture (sampler_main, tmpvar_3).x) + 0.04));\\n  xlat_mutablea = (tmpvar_4.x / 4.0);\\n  xlat_mutableb = (tmpvar_4.y / 4.0);\\n  xlat_mutablec = (tmpvar_4.z / 4.0);\\n  xlat_mutablec = ((xlat_mutablec + xlat_mutableb) - (xlat_mutablec * xlat_mutableb));\\n  xlat_mutablea = ((xlat_mutablea + xlat_mutablec) - (xlat_mutablea * xlat_mutablec));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = vec3((1.4 * xlat_mutablea));\\n  ret_1 = ((vec3(8.0, 4.0, 0.0) * (\\n    (tmpvar_5 * (1.0 - tmpvar_5))\\n   * \\n    (1.0 - tmpvar_5)\\n  )) + ((tmpvar_5 * tmpvar_5) * vec3(-0.3, 0.2, 0.5)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix ((1.0 - mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(\\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 6.0)\\n  ))), vec3(1.0, 1.0, 0.0), vec3((texture (sampler_main, uv).z * 0.9)));\\n  ret_1 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = tmpvar_6;\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi - hyperspaceflight (bn cn Jelly 4).json":
/*!*************************************************************************!*\
  !*** ./presets/converted/flexi - hyperspaceflight (bn cn Jelly 4).json ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_a\":0.107,\"wave_scale\":1.119,\"wave_smoothing\":0,\"modwavealphastart\":1.2,\"modwavealphaend\":1.2,\"zoomexp\":1.4166,\"zoom\":1.14635,\"warp\":0.01605,\"wave_r\":0,\"wave_g\":0.93,\"ob_size\":0.005,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":24,\"additive\":1,\"num_inst\":8,\"x\":0.48,\"rad\":0.0261,\"tex_zoom\":4.36077,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;\"},{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":0.986,\"tex_ang\":3.14159,\"tex_zoom\":0.99979,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"x\":0.9,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = sin(time) * .4 + .5;\\n\\n\"},{\"baseVals\":{\"sides\":36,\"additive\":1,\"rad\":0.16777,\"r\":0,\"g\":0.1,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"additive\":1,\"r\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q1 = below(rand(100),4 + 10*(treb+mid+bass));\",\"point_eqs_eel\":\"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//wave_g = wave_g + 0.100*( 0.90*sin(0.583*time) + 0.10*sin(1.006*time) );\\n//wave_b = wave_b + 0.100*( 0.90*sin(0.993*time) + 0.10*sin(0.933*time) );\\nzoom = 0.935*zoom + 0.04*( 0.60*sin(0.339*bass_att) + 0.10*sin(0.276*bass_att) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.003*( 0.60*sin(0.471*treb_att) + 0.40*sin(0.297*treb_att) );\\ncy = cy + 0.003*( 0.60*sin(0.379*mid_att) + 0.40*sin(0.351*mid_att) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\nrot=rot+0.02*(sin(time*2.134)+sin(time*1.7134)+sin(time*2.834));\\ndx=dx+0.01*(sin(time*1.134)+sin(time*0.7134)+sin(time*2.334));\\ndy=dy+0.01*(sin(time*1.8834)+sin(time*1.0144)+sin(time*1.334));\\n\\nq23 = rand(1000)/1000;\\nq24 = rand(1000)/1000;\\nq25 = (rand(1000)/1000)*6.28;\\nq26 = q25 - 3.14;\\nq27 = (rand(1000)/12000)+0.1;\\n\\nq28 = rand(1000)/1000;\\nq29 = rand(1000)/1000;\\nq30 = (rand(1000)/1000)*6.28;\\nq31 = q30 - 3.14;\\nq32 = (rand(1000)/14000)+0.1;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 10.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_3 * texsize.zw) * 2.0));\\n  ret_1.x = ((texture (sampler_main, tmpvar_4).x - (\\n    (texture (sampler_main, tmpvar_4).x - ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3).x)\\n   * 0.02)) - 0.008);\\n  ret_1.y = texture (sampler_main, uv).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\\n   * 0.2) - 0.004));\\n  ret_1.z = (texture (sampler_main, ((uv_orig - \\n    ((uv_orig - uv) * 2.0)\\n  ) + (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n  .xy * texsize.zw))).z - 0.004);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.3 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    ((0.8 * ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.3 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    ((0.8 * ((tmpvar_6.xyz * scale3) + bias3)) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 - (0.175 * sqrt(tmpvar_12)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi - infused with the spiral (jelly 4.x cn).json":
/*!*******************************************************************************!*\
  !*** ./presets/converted/flexi - infused with the spiral (jelly 4.x cn).json ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":0.5,\"echo_zoom\":1.03,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":0.01,\"wave_smoothing\":0,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpscale\":0.107,\"zoomexp\":4.28632,\"fshader\":1,\"warp\":0.01743,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0,\"ob_g\":1,\"ob_a\":1,\"ib_size\":0,\"ib_r\":1,\"ib_g\":1,\"ib_b\":1,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"rad\":0.789,\"ang\":0.6283,\"tex_zoom\":1.17257,\"r\":0,\"g\":1,\"border_a\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"rad = 0.65 + bass*0.1;\\n\\nan = an*0.99 + (bass-treb)*0.1;\\nang = an*0.1 + 0.6;\"},{\"baseVals\":{\"sides\":100,\"thickoutline\":1,\"textured\":1,\"rad\":0.40271,\"tex_zoom\":2.23888,\"g\":1,\"b\":1,\"r2\":0.08,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"rad\":1.21525,\"tex_ang\":2.57611,\"tex_zoom\":0.55595,\"g\":1,\"b\":1,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":34,\"x\":0.99,\"y\":0.99,\"rad\":0.02558,\"r\":0,\"g\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":495,\"sep\":4,\"spectrum\":1,\"thick\":1,\"additive\":1,\"scaling\":100,\"smoothing\":1,\"r\":0,\"g\":0.04,\"b\":0,\"a\":0.99},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;\",\"point_eqs_eel\":\"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_y = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_z = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.65;\\n\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;\\nr = 1-b*2\\n//b = (1 - r)*0.1;\\n//a =  7/(d*16) - 0.1;\"},{\"baseVals\":{\"samples\":445,\"sep\":4,\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":100,\"smoothing\":1,\"a\":0.99,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .09;\\nt7 = 1;\",\"point_eqs_eel\":\"t7 = -t7;\\npi = asin(1);\\nn = 160;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nxx = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = -d*t5;\\ns1 = sin(t2*1+w);\\ns2 = sin(t3*1+w);\\ns3 = sin(t4*1+w);\\nc1 = cos(t2*1+w);\\nc2 = cos(t3*1+w);\\nc3 = cos(t4*1+w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.75;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = sample*pi*4-2*time;\\nc=1.6;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\na = 1-(z + a)/2;\\n\"},{\"baseVals\":{\"sep\":4,\"scaling\":0.09348,\"smoothing\":1,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\",\"point_eqs_eel\":\"s8 = sample*383;\\n\\ns = 100;//0.3;\\nxx = sin(sample*s);//((sample*343)%7 - 3.5)*s;\\nzz = cos(sample*s);//((sample*49)%7 - 3.5)*s;\\nyy = (sample-0.5);//((sample*7)%7 - 3.5)*s;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1/d;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = 1+0*(d)*(t6);//(sample*sin(time*0.3)*0.02-1);\\ns1 = sin(t2*w);\\ns2 = sin(t3*w);\\ns3 = sin(t4*w);\\nc1 = cos(t2*w);\\nc2 = cos(t3*w);\\nc3 = cos(t4*w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 2;\\nzoom = 0.3*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*13+t5*20;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(-z,10)*1.0+0.0;\"},{\"baseVals\":{\"samples\":484,\"sep\":4,\"usedots\":1,\"scaling\":9.94125,\"smoothing\":1,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\",\"point_eqs_eel\":\"s8 = sample*383;\\n\\ns = 0.25;\\nxx = ((sample*(465))%15 - 8)*s*2;\\nyy = ((sample*31)%31 - 16)*s;\\nzz = 0;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = 1;\\n\\ns1 = sin(t2*1);\\ns2 = sin(t3*0);\\ns3 = sin(t4*1);\\nc1 = cos(t2*1);\\nc2 = cos(t3*0);\\nc3 = cos(t4*1);\\n\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 500;\\nzoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*5+t5;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(z,5);\"}],\"init_eqs_eel\":\"x1 = 0;\\ny1 = 0;\",\"frame_eqs_eel\":\"q1 = 0;\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n\\nq2 = n*0.01;\\nq3 = n1*0.01;\\nq4 = n2*0.01;\\n\\nk = k*0.99 + sqr(mid_att*2);\\nq5 = k*0.00;\\n\\nzoom = 1.0016;\\nwarp = 0;\\n\\nrot = -0.00;\\n\\nq9 = aspectx;\\nq10 = aspecty;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur2, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_3.y = -(((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2)).z);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 60.0));\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 - uv);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, uv);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_1.z = (((texture (sampler_main, tmpvar_4).z + \\n    (((tmpvar_6.z - (\\n      (tmpvar_7.xyz * scale1)\\n     + bias1).z) * 200.0) * sqrt(dot (x_5, x_5)))\\n  ) * 0.96) - 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_8.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  ret_1.y = ((texture (sampler_main, (uv_orig + \\n    ((tmpvar_8 * texsize.zw) * 6.0)\\n  )).y + (\\n    (tmpvar_6.y - ((tmpvar_7.xyz * scale1) + bias1).y)\\n   * 0.1)) - 0.016);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.25 * clamp ((2.0 * \\n    ((tmpvar_6.xyz * scale3) + bias3)\\n  ), 0.0, 1.0));\\n  ret_2 = (ret_2 - (0.8 * clamp (\\n    ((20.0 * ((0.6 * \\n      ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n    ) - 0.01)) - 2.0)\\n  , 0.0, 1.0)));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + clamp ((\\n    (30.0 * ((texture (sampler_main, uv).xyz + (\\n      ((tmpvar_7.xyz * scale1) + bias1)\\n     * 0.15)) - 0.01))\\n   - 2.0), 0.0, 1.0));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    (((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = (vec3((-0.5 * dot (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n  , vec3(0.32, 0.49, 0.29)))) + (0.8 * (\\n    (texture (sampler_blur1, tmpvar_5).xyz * scale1)\\n   + bias1)));\\n  ret2_1 = (ret2_1 - (0.9 * texture (sampler_main, tmpvar_5).xyz));\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    (((tmpvar_6.xyz * scale3) + bias3) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 * tmpvar_12);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi - inter state.json":
/*!****************************************************!*\
  !*** ./presets/converted/flexi - inter state.json ***!
  \****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"echo_orient\":1,\"wave_mode\":5,\"additivewave\":1,\"wave_a\":0,\"wave_scale\":0.9,\"wave_smoothing\":0.63,\"wave_mystery\":1,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpscale\":2.853,\"rot\":0.006,\"warp\":0,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"mv_x\":0,\"mv_y\":48,\"mv_dx\":-0.941,\"mv_dy\":0.426,\"mv_l\":5,\"mv_r\":0.316,\"mv_g\":0.078,\"mv_b\":0.942,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"c_x = 0.5;\\nc_y = 0.5;\",\"frame_eqs_eel\":\"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n//beat = 0;\\nr = if(beat, 0.015*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\n\\n\\nq3 = c_x;\\nq4 = c_y;\",\"pixel_eqs_eel\":\"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),0.5)-0);\\nv = 0.02;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.y;\\n  tmpvar_6.y = tmpvar_5.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 6.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - ((tmpvar_8 * texsize.zw) * 2.0));\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_main, uv_orig);\\n  ret_1.y = (((\\n    (texture (sampler_main, tmpvar_7).y - (((\\n      (tmpvar_10.xyz * scale1)\\n     + bias1).y - texture (sampler_main, tmpvar_7).y) * 0.024))\\n   - 0.01) + (\\n    (1.0 - tmpvar_11.x)\\n   * 0.014)) + (tmpvar_2 * 0.01)).x;\\n  ret_1.z = (((texture (sampler_main, tmpvar_9).z - \\n    ((((tmpvar_10.xyz * scale1) + bias1).z - texture (sampler_main, tmpvar_9).z) * 0.024)\\n  ) - 0.01) + (tmpvar_11.x * 0.014));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.4) + (tmpvar_2 * 0.004)).x);\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }\",\"comp\":\"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_1;\\n  tmpvar_1.x = xlat_mutabledx.x;\\n  tmpvar_1.y = xlat_mutabledy.x;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.x;\\n  tmpvar_3.y = xlat_mutabledy.x;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (mix ((\\n    (texture (sampler_main, ((uv + (\\n      (tmpvar_2 * texsize.zw)\\n     * 16.0)) - ((tmpvar_3 * texsize.zw) * 16.0))).y * (1.0 + (-(xlat_mutabledx) + xlat_mutabledy).y))\\n   * vec3(1.0, 0.6, 0.0)), vec3(0.7, 0.3, 1.0), vec3(pow (\\n    ((0.5 + ((xlat_mutabledx + xlat_mutabledy).x * 0.5)) * ((texture (sampler_blur1, (uv + \\n      ((tmpvar_1 * 12.0) * texsize.zw)\\n    )).xyz * scale1) + bias1).x)\\n  , 0.8))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, \\n    (uv + ((tmpvar_4 * texsize.zw) * 16.0))\\n  ).z * \\n    (1.0 + (-(xlat_mutabledx) + xlat_mutabledy).z)\\n  ))));\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi - jelly fish mandala.json":
/*!***********************************************************!*\
  !*** ./presets/converted/flexi - jelly fish mandala.json ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.5,\"echo_zoom\":1,\"echo_orient\":3,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_a\":0.009,\"wave_scale\":1.554,\"wave_smoothing\":0.756,\"modwavealphastart\":1.2,\"modwavealphaend\":1.2,\"warpanimspeed\":0.01,\"warpscale\":100,\"zoomexp\":0.26311,\"warp\":0.01359,\"wave_r\":0,\"wave_b\":0,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0.5,\"ib_r\":1,\"ib_g\":1,\"ib_b\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"thickoutline\":1,\"rad\":0.86644,\"r\":0.85,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":0.986,\"tex_ang\":3.14159,\"tex_zoom\":0.99979,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"x\":0.9,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = sin(time) * .4 + .5;\\n\\n\"},{\"baseVals\":{\"sides\":36,\"additive\":1,\"rad\":0.81623,\"r\":0,\"g\":0.04,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"additive\":1,\"r\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q1 = below(int(rand(100)),4 + 10*(treb+mid+bass));\",\"point_eqs_eel\":\"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,int(rand(1001))*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,int(rand(1001))*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,int(rand(10)));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_a = 0.01;\",\"pixel_eqs_eel\":\"vx = 0.5+cos(time*0.2)*0.5;\\nvy = 0.5+sin(time*0.2)*0.5;\\nx = x - vx;\\ny = y - vy;\\n\\nd = time*0.04;\\nxx = sin(d)*x + cos(d)*y;\\nyy = cos(d)*x - sin(d)*y;\\n\\nx = xx;\\ny = yy;\\n\\ncz = 0.5;\\nzoom = 0.33;\\nw = 1/zoom*(1+sqrt(sqr(cz) + sqr(x-cx)+sqr(y-cy)));\\ndx = (x-mx)*w;\\ndy = (y-my)*w;\",\"warp\":\" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).y * 0.65);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 6.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \\n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\\n  .z) * 0.02));\\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(1.0001, 1.0001))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\\n  ret_2.z = (ret_2.z * (1.0 + (ret_2.y * 0.024)));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  float ang2_2;\\n  ang2_2 = (fract((0.9549295 * ang)) / 6.0);\\n  ang2_2 = (abs((ang2_2 - 0.08333334)) * 6.283185);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(ang2_2);\\n  tmpvar_3.y = sin(ang2_2);\\n  uv_1 = (0.5 + ((\\n    (0.4 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_3) * texsize.zw));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = cos((uv_1.y * 100.0));\\n  tmpvar_4.y = sin((uv_1.x * 120.0));\\n  uv_1 = (uv_1 + (0.02 * tmpvar_4));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_fc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/flexi, stahlregen, geiss + tobias wolfboi - space gelatine burst - mash0000 - chromatidal pool mirror blasphemy.json":
/*!************************************************************************************************************************************************!*\
  !*** ./presets/converted/flexi, stahlregen, geiss + tobias wolfboi - space gelatine burst - mash0000 - chromatidal pool mirror blasphemy.json ***!
  \************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1,\"decay\":1,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_a\":0.009,\"wave_scale\":2.713,\"wave_smoothing\":0,\"modwavealphastart\":1.2,\"modwavealphaend\":1.2,\"warpscale\":1.331,\"zoom\":0.99951,\"warp\":0.00909,\"wave_r\":0.44,\"wave_g\":0.4,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":12,\"additive\":1,\"num_inst\":2,\"x\":0.49,\"rad\":0.09902,\"tex_zoom\":4.36077,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;\"},{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":0.986,\"tex_ang\":3.14159,\"tex_zoom\":0.99979,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"x\":0.9,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = sin(time) * .4 + .5;\\n\\n\"},{\"baseVals\":{\"sides\":36,\"additive\":1,\"rad\":1.38306,\"r\":0,\"g\":0.03,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"additive\":1,\"r\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q1 = below(rand(100),4 + 10*(treb+mid+bass));\",\"point_eqs_eel\":\"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n\\nx = if(beat,rand(60)*0.01 + 0.2,x);\\ny = if(beat,rand(60)*0.01 + 0.2,y);\\nq1 = x;\\nq2 = y;\\n\\nwave_x = q1;\\nwave_y = 1-q2;\",\"pixel_eqs_eel\":\"cx = q1;\\ncy = q2;\\n\\nd = pow(sqrt(sqr(x-cx)+sqr(y-cy)),0.8);\\nr = 0.2;\\nv = 0.2;\\n\\ndx = (x - cx)*v*(d-r);\\ndy = (y - cy)*v*(d-r);\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = normalize((uv_orig - 0.5));\\n  float tmpvar_3;\\n  tmpvar_3 = (time * 7.0);\\n  uv_1 = (mix (uv_orig, uv, vec2((\\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\\n   * 0.3))) + ((\\n    (tmpvar_2 * texsize.zw)\\n   * \\n    cos(((rad * 170.0) - tmpvar_3))\\n  ) * 2.0));\\n  uv_1 = (uv_1 + ((\\n    (vec2(5.0, -5.0) * texsize.zw)\\n   * \\n    cos(((ang * 30.0) - tmpvar_3))\\n  ) * tmpvar_2.yx));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_pw_main, uv_1).xyz - 0.004);\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.0);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader, ret_2)));\\n  ret_2 = (ret_2 * hue_shader);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/goody + martin - crystal palace - schizotoxin - the wild iris bloom - 16 iterations.json":
/*!********************************************************************************************************************!*\
  !*** ./presets/converted/goody + martin - crystal palace - schizotoxin - the wild iris bloom - 16 iterations.json ***!
  \********************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":5,\"wave_dots\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":5.552,\"wave_smoothing\":0.504,\"wave_mystery\":-1,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_g\":0,\"wave_b\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"textured\":1,\"x\":0.8,\"rad\":0.24243,\"tex_ang\":1.88496,\"tex_zoom\":1.72851,\"r\":0.8,\"g\":1,\"b\":0.5,\"a\":0.6,\"r2\":0.9,\"g2\":0.9,\"b2\":1,\"a2\":0.3,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"x\":0.13,\"y\":0.19,\"rad\":0.11045,\"tex_ang\":3.14159,\"tex_zoom\":1.71105,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":5,\"additive\":1,\"x\":0.9,\"rad\":0.22613,\"g\":0.2,\"b\":0.2,\"g2\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":36,\"additive\":1,\"rad\":0.18717,\"r\":0,\"g\":0.02,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":0.5033,\"g\":0.6,\"b\":0.4,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\\nx0 = .5 + .4 * sin(time/2);\\n\\nangle = rand(1000)/1000*6.28;\\nrad =  rand(1000)/1000;\\nrad = rad * rad;\\n\\nx = x0 + .1*rad*sin(angle);\\ny = .5 + .1*rad*cos(angle);\\n a = 1-rad;\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trel = q11-.0;\\nt1 = int(trel);\\nt2 = trel - int(trel);\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trel = q11-.33;\\nt1 = int(trel);\\nt2 = trel - int(trel);\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trel = q11-.66;\\nt1 = int(trel);\\nt2 = trel - int(trel);\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.98, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\n\\nvol = bass_att + treb_att;\\nv2 = v2 * dec_slow + vol * (1-dec_slow) ;\\nq26 = max(atan (vol - v2*.8),.3);\\n\\nq27 = index + 1;\\n\\nsw = sw*dec_med + (1-dec_med)*(index2%2);\\nq28 = sw;\\n\\nk1 =  is_beat*bnot(index*20);\\nk2 =  is_beat*bnot(index);\\n\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.1416/2;\\nmonitor = k1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/6);\\nq6 = -sin(time/6);\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1;\\nrot = -0;\\n\\nmovez = movez + .006*(q1+1.1)*30/fps;\\nq29 = movez;\\nrota = rota + .003*(2-q1)*30/fps;\\nq30 = rota;\\nq31 = 2 + 16*abs(cos(time/18));\\nq32 = cos(time/23)/4;\",\"pixel_eqs_eel\":\"\",\"warp\":\"vec2 xlat_mutablers;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv8;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 xlat_varmod_2;\\n  float z_3;\\n  vec3 ret_4;\\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\\n  vec2 x_5;\\n  x_5 = (xlat_mutableuv1 * 5.0);\\n  float tmpvar_6;\\n  tmpvar_6 = (sqrt(dot (x_5, x_5)) + time);\\n  xlat_mutablers = clamp (((\\n    sin(tmpvar_6)\\n   / \\n    cos(tmpvar_6)\\n  ) * normalize(xlat_mutableuv1)), vec2(-5.0, -5.0), vec2(5.0, 5.0));\\n  xlat_mutableuv8 = (sin((xlat_mutableuv1 * \\n    (q31 + (rad * 2.0))\\n  )) * 7.0);\\n  z_3 = (1.0 - cos((8.0 * \\n    (sqrt(dot (xlat_mutableuv8, xlat_mutableuv8)) * ((abs(xlat_mutableuv1.x) + abs(xlat_mutableuv1.y)) + q32))\\n  )));\\n  z_3 = (z_3 * (0.2 * clamp (\\n    dot (vec3(z_3), vec3(0.32, 0.49, 0.29))\\n  , 0.0, 1.0)));\\n  float tmpvar_7;\\n  tmpvar_7 = float((z_3 <= 1.0));\\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\\n  uv_1 = (uv_orig + ((\\n    ((1.0 - tmpvar_7) * 3.0)\\n   * xlat_mutablers.yx) + (\\n    ((0.5 * tmpvar_7) * z_3)\\n   * \\n    sign(z_3)\\n  )));\\n  mat2 tmpvar_8;\\n  vec4 tmpvar_9;\\n  tmpvar_9 = (_qb * 0.5);\\n  tmpvar_8[uint(0)] = tmpvar_9.xy;\\n  tmpvar_8[1u] = tmpvar_9.zw;\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_main, uv_1);\\n  vec3 tmpvar_11;\\n  tmpvar_11 = (tmpvar_10.xyz + vec3((0.075 * abs(\\n    (0.0225 / sqrt((xlat_mutableuv1 * tmpvar_8).x))\\n  ))));\\n  xlat_varmod_2 = ((0.98 - (texture (sampler_noise_lq, \\n    ((50.0 * uv_1) + time)\\n  ) - 0.15).xyz) - (tmpvar_10.xyz - (0.5 * \\n    ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n  )));\\n  ret_4 = (((\\n    (1.0/(tmpvar_7))\\n   * tmpvar_11) * xlat_varmod_2) + ((tmpvar_7 * tmpvar_11) * xlat_varmod_2));\\n  ret_4 = (ret_4 * (vec3(0.96, 0.96, 0.96) - (0.1 * texture (sampler_noise_hq, uv_1)).xyz));\\n  vec3 tmpvar_12;\\n  tmpvar_12.z = 0.0;\\n  tmpvar_12.xy = uv_orig;\\n  ret_4 = (ret_4 * (vec3(1.76, 1.64, 1.52) * dot (tmpvar_12, vec3(0.32, 0.49, 0.29))));\\n  ret_4 = (ret_4 * 0.86);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_4;\\n  ret = tmpvar_13.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float t_rel_2;\\n  float inten_4;\\n  float dist_5;\\n  float ang2_6;\\n  vec3 ret_7;\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_fc_main, uv);\\n  ret_7 = tmpvar_8.xyz;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_5 = 0.0;\\n  inten_4 = 0.0;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  t_rel_2 = q29;\\n  for (float n_3 = 0.0; n_3 < 16.0; n_3 += 1.0) {\\n    ang2_6 = (((6.28 * n_3) / 16.0) + q30);\\n    float tmpvar_9;\\n    tmpvar_9 = cos(ang2_6);\\n    float tmpvar_10;\\n    tmpvar_10 = sin(ang2_6);\\n    xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n    xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n    dist_5 = (1.0 - fract((\\n      (n_3 * 16.0)\\n     - t_rel_2)));\\n    inten_4 = (dist_5 * (1.0 - (dist_5 * dist_5)));\\n    xlat_mutableuv3 = ((-0.85 * xlat_mutableuv2) * dist_5);\\n    xlat_mutableblur = (((texture (sampler_blur1, \\n      fract(xlat_mutableuv3)\\n    ).xyz * scale1) + bias1) * vec3(0.5, 0.9, 1.0));\\n    xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, \\n      (xlat_mutableuv3 * 2.0)\\n    ).xyz - xlat_mutableblur) * inten_4));\\n  };\\n  uv_1 = (uv_1 * (tmpvar_8.xy * uv_orig));\\n  ret_7 = (uv_1.x - (tmpvar_8.xyz * uv_1.x));\\n  ret_7 = (ret_7 + (xlat_mutableret1 * 16.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_7;\\n  ret = tmpvar_11.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/it is the night of the demon weed bowel.json":
/*!************************************************************************!*\
  !*** ./presets/converted/it is the night of the demon weed bowel.json ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":1,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wave_a\":0.001,\"wave_scale\":0.573,\"wave_smoothing\":0,\"modwavealphastart\":0.24,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoomexp\":1.48886,\"zoom\":1.0196,\"warp\":0.24146,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0.26,\"mv_x\":28,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":3,\"thickoutline\":1,\"textured\":1,\"num_inst\":311,\"rad\":0.01,\"tex_ang\":0.62832,\"r\":0,\"g2\":0,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"scaling\":2.27969,\"smoothing\":0.7,\"b\":0},\"init_eqs_eel\":\"t8 = time;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"d1 = sample*95.13;\\nd2 = sample*111.52*value1;\\nd3 = sample*84.45;\\nd4 = sample*143.23;\\nx = sample;\\ny = 0.5 + value1;\\ndx = 1.2*cos(sample*27.43 + 1 + 6.28*(d1-int(d1)));\\ndy = .4 + 1*cos(sample*73.92 + 4 + 6.28*(d2-int(d2)));\\nddy = .85;     // acceleration downward\\nt = time*0.3 + 0.25*sin(sample*64.21+5) + 0.25*sin(sample*123.56+3) + d4-int(d4);\\nt = t - int(t);\\nt=.3+1*.1;\\ntt=t;\\n// simple particle physics: x = x0 + dx*t and y = y0 + dy*t + ddy*t*t\\nx = 0.5 + dx*t;\\ny = .2 + dy*t + ddy*t*t;\\na = 1;//1-t*t;\\n// for some easy audio sync:\\n//a = min(1,a * bass);\\ng = 0 + 0.5*sin(sample*513.32)+.4*sin(time*3);\\nb = 0 + 0.5*sin(sample*53.32)+.3*sin(time*5);\\nr = 0 + 0.5*sin(sample*23.32)+.2*sin(time*2);\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\nq4=sin(atime*.03);\\nq5=cos(atime*.030383824);\\nq6=tan(atime*.029384834);\\n\\n//begin beat code\\nvolume = 0.3*(bass+mid);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.05*(meanbass_att*19 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\n//Adjust responsiveness: To increase responsiveness, set the \\\"0.96 and \\\"0.996\\\" on the next line to slightly lower values. Higher values decrease responsiveness.\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.96 + (1-above(time - lastbeat, 2*beatrate))*0.996);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//end beat code\\n\\ntim = if(beat,time,tim);\\nq5 = below(time - tim,.1);\\n\\nwarp = 0;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\nra = 1/tic*.25;\\n\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb;\\nmt = mt + tic*mid;\\nbt = bt + tic*bass;\\nvt = vt + tic*vav;\\n\\nq1 = treb_avg;\\nq2 = mid_avg;\\nq3 = bass_avg;\\n\\nmonitor = q5;\\n\\nmx = if(beat,int(rand(1001))*.001*.5 + int(rand(1001))*.001*.5,mx);\\nmy = if(beat,int(rand(1001))*.001*.5 + int(rand(1001))*.001*.5,my);\\ncx = mx;\\ncy = my;\\n\\nmox = mx - .5;\\nmoy = my - .5;\\nan = atan(moy/mox) + if(above(mox,0),above(moy,0)*6.2832,3.1416);\\ndis = pow(mox*mox + moy*moy,.5);\\ndis = max(.17,dis);\\n\\nq7 = .5 + dis*cos(an);\\nq8 = .5 + dis*sin(an);\\nwarp=bass*.2;\\nwarp=warp+(above(bass,1)*bass*.2);\\n\\necho_alpha=(above(bass,q1)*.3);\\n\\n// nao usar mv_a=(above(bass,1)*bass*.5);\\n\\nq6=q6+(above(bass,1.3)*sin(time)*.02);\\nrot=rot+q6;\\n\\nzoom=zoom+(above(bass,1.3)*bass*.03);\\n\\n//sy=sy+(above(treb_att,1.2)*treb_att*.002*sin(time));\\n//sx=sx+(above(treb_att,1.2)*treb_att*.002*sin(time));\",\"pixel_eqs_eel\":\"mx = x - q7;\\nmy = y - q8;\\n\\nan = ang;\\n//zoom = 1 + pow(sin(an*5 - time),1)*.02*bass*bass;\\n\\nra = pow(mx*mx + my*my,.5);\\nrot = .02*sin(ra*6.2832*2 - time*4)*(mid + treb)*(mid + treb)*.5;\",\"warp\":\" shader_body { \\n  vec2 tmp_1;\\n  vec3 ret_2;\\n  tmp_1.x = (ang * 3.0);\\n  tmp_1.y = rad;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\\n  tmpvar_5.y = tmpvar_4.y;\\n  ret_2 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_3 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_4 * 0.01)\\n  .xy)).xyz + (tmpvar_3 * 0.1)));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmp_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_6.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_6.z * 0.5));\\n  };\\n  float tmpvar_7;\\n  tmpvar_7 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_2 = (ret_2 * (0.98 * (tmpvar_7 * tmpvar_7)));\\n  ret_2 = (ret_2 - 0.04);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\",\"comp\":\"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_4)).xyz - texture (sampler_main, (uv - tmpvar_4)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_1 = (uv - 0.5);\\n  vec2 tmpvar_5;\\n  tmpvar_5.y = 0.0;\\n  float tmpvar_6;\\n  tmpvar_6 = (time / 8.0);\\n  tmpvar_5.x = tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (q27 * 2.0);\\n  xlat_mutableuv3 = (((tmpvar_7 * uv2_1) * 0.1) + tmpvar_5);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  vec4 tmpvar_9;\\n  tmpvar_9 = (1.0 + roam_cos);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_8)) + ((0.45 * \\n    dot (vec3(tmpvar_8), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_9).xyz);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  vec2 tmpvar_10;\\n  tmpvar_10.y = 0.0;\\n  tmpvar_10.x = tmpvar_6;\\n  xlat_mutableuv3 = (((tmpvar_7 * uv2_1) * 0.1) + tmpvar_10);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_11;\\n  tmpvar_11 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_11)) + ((0.45 * \\n    dot (vec3(tmpvar_11), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_9).xyz);\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  ret_2 = (xlat_mutableret1 + clamp ((\\n    (texture (sampler_main, uv).xyz * 4.0)\\n   * \\n    (0.2 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_12.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_12.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_12.z * 0.5));\\n  };\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin + stahlregen - martin in da mash 12.json":
/*!***************************************************************************!*\
  !*** ./presets/converted/martin + stahlregen - martin in da mash 12.json ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":4,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":2.233,\"wave_smoothing\":0.81,\"wave_mystery\":0.28,\"modwavealphastart\":0.47,\"modwavealphaend\":1.32,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.9,\"wave_b\":0.9,\"ob_size\":0.11,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"additive\":1,\"textured\":1,\"y\":0.9,\"rad\":0.26913,\"ang\":1.5708,\"tex_zoom\":9.75346,\"r\":0.6,\"g\":0.6,\"b\":0.6,\"a\":0.4,\"r2\":0.29,\"g2\":0.3,\"b2\":0.3,\"border_b\":0,\"border_a\":0.4,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;\"},{\"baseVals\":{\"sides\":100,\"rad\":0.14451,\"ang\":1.13097,\"tex_zoom\":1.02315,\"g\":1,\"b\":1,\"a\":0.97,\"r2\":1,\"b2\":1,\"a2\":0.1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = q24*1; a2 = 0;\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"x\":0.123,\"y\":0,\"rad\":0.27319,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.54822,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.9},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"//Alle Funktionen muessen rel. zu t_rel sein\\n\\nk1 = cos(time/3);\\nk2 = sin(time/2);\\n\\nt_abs = sample;\\nt_rel = sample-time/2.12;\\nampl =  cos(t_rel)*5;\\n//ampl = 3;\\n\\nox = sin (t_rel*8) + ampl*sin (t_rel*12) ;\\noy = cos (t_rel*13) + ampl*cos (t_rel*11);\\noz =  ampl/3;\\n\\n\\n\\n\\n//r = sqr(sin(t_rel*3.4));\\n//g = sqr(sin(t_rel*2.3));\\n//b = sqr (cos(t_rel*1.9));\\n\\nr = 1;\\ng = 0.5;\\nb = 0;\\n\\na=0.25*(cos(t_abs*3.14/2)) + 0.2 *below (abs(1-t_abs- t1),0.0);\\n//a=0.25*(sin(t_abs*3.14)) + 0.4 *below (abs(1-t_abs-t1), bass_att/1);\\na=0.25*(cos(t_abs*1.5)) + 0.7 *below (abs(t_abs),0.0);\\n\\nxang = k1*3;\\nyang = 1;\\nzang = 3*k1;\\nfov = 0.22;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"}],\"init_eqs_eel\":\"p1 = rand(16);\\np2 = p1;\",\"frame_eqs_eel\":\"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = 8-index;\\nq28 = sin(time/7);\\nq29 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmv_a = .5 * q1;\\n\\nmovez = movez + .01 * 30/fps ;\\nq29 = movez;\\n\\nmovex = movex + .003 * 30/fps *q2;\\nq30 = movex;\\n\\nq31 = sqr(sin(time/17));\\nq32 = sqr(cos(time/17));\\n\\nzoom = 1.0;\\nrot = .0;\\ndx = .0;\\nwarp = .2;\",\"pixel_eqs_eel\":\"\",\"warp\":\"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 d_1;\\n  vec2 uv6_2;\\n  vec2 uv1_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  uv1_3 = tmpvar_5;\\n  uv6_2 = tmpvar_5;\\n  float x_6;\\n  x_6 = (abs(tmpvar_5.x) - abs(tmpvar_5.y));\\n  float tmpvar_7;\\n  tmpvar_7 = (12.0 * sqrt((x_6 * x_6)));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = normalize(tmpvar_5);\\n  d_1 = tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (float(mod (q28, 2.0)));\\n  if ((tmpvar_9 == 0.0)) {\\n    d_1 = ((q1 * tmpvar_8) - (q2 / tmpvar_8));\\n  };\\n  uv1_3 = (tmpvar_5 + ((-0.06 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * normalize(tmpvar_5)));\\n  uv1_3 = (uv1_3 - (clamp (\\n    ((sin(tmpvar_7) / cos(tmpvar_7)) * d_1)\\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 60.0));\\n  uv6_2 = (0.4 * cos((\\n    (uv1_3 * 2.0)\\n   * q28)));\\n  xlat_mutablemus = (clamp (vec3((0.0006 / \\n    (sqrt(dot (uv6_2, uv6_2)) - (0.002 * (q27 + (8.0 * q28))))\\n  )), 0.0, 1.0) * q31);\\n  xlat_mutablemus = (xlat_mutablemus * (1.0 + roam_cos).xyz);\\n  ret_4 = ((0.4 * (\\n    ((texture (sampler_main, ((uv1_3 * \\n      (0.8 + (0.2 * tmpvar_7))\\n    ) + 0.5)).xyz + xlat_mutablemus) * 0.95)\\n   - 0.025)) + (0.6 * texture (sampler_main, uv_orig)).xyz);\\n  ret_4 = (ret_4 * (1.0 - (0.5 * \\n    dot (((texture (sampler_blur2, vec2(0.55, 0.55)).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29))\\n  )));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_4;\\n  ret = tmpvar_10.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableblur;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_3;\\n  float dist_4;\\n  float ang2_5;\\n  vec2 uv2_6;\\n  vec3 ret_7;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_4 = 1.0;\\n  inten_3 = 1.0;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  for (float n_2 = 1.0; n_2 <= 8.0; n_2 += 1.0) {\\n    ang2_5 = (((6.28 * n_2) / 8.0) + (q5 * (n_2 - 1.0)));\\n    float tmpvar_8;\\n    tmpvar_8 = cos(ang2_5);\\n    float tmpvar_9;\\n    tmpvar_9 = sin(ang2_5);\\n    uv2_6.x = ((uv_1.x * tmpvar_8) - (uv_1.y * tmpvar_9));\\n    uv2_6.y = ((uv_1.x * tmpvar_9) + (uv_1.y * tmpvar_8));\\n    uv2_6 = (uv2_6 * aspect.yx);\\n    dist_4 = (1.0 - fract((\\n      (0.25 * n_2)\\n     + q29)));\\n    dist_4 = (dist_4 * dist_4);\\n    inten_3 = ((pow (dist_4, 0.2) * (1.0 - dist_4)) * 2.0);\\n    vec2 tmpvar_10;\\n    tmpvar_10.x = q18;\\n    tmpvar_10.y = q19;\\n    vec2 tmpvar_11;\\n    tmpvar_11 = (((\\n      (3.0 * uv2_6)\\n     * dist_4) + 0.5) + ((0.5 * \\n      (1.0 - (0.5 * q28))\\n    ) * tmpvar_10));\\n    xlat_mutableblur = ((texture (sampler_blur1, fract(tmpvar_11)).xyz * scale1) + bias1);\\n    xlat_mutableneu = (texture (sampler_main, tmpvar_11).xyz + xlat_mutableblur);\\n    xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_3));\\n  };\\n  uv2_6 = (0.5 * cos((uv_1 * 16.0)));\\n  ret_7 = ((xlat_mutableret1 * 0.7) + ((\\n    clamp ((0.04 / sqrt(dot (uv2_6, uv2_6))), 0.0, 1.0)\\n   * vec3(1.0, 0.7, 0.0)) * q31));\\n  float tmpvar_12;\\n  tmpvar_12 = (0.5 / ((1.0 + uv_1.x) - (4.0 * \\n    fract((time * 3.0))\\n  )));\\n  ret_7 = (ret_7 + (vec3((q17 * \\n    clamp ((tmpvar_12 * tmpvar_12), 0.0, 1.0)\\n  )) * vec3(0.0, 0.0, 0.7)));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_7;\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin + stahlregen - martin in da mash 12a.json":
/*!****************************************************************************!*\
  !*** ./presets/converted/martin + stahlregen - martin in da mash 12a.json ***!
  \****************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":4,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":2.233,\"wave_smoothing\":0.81,\"wave_mystery\":0.28,\"modwavealphastart\":0.47,\"modwavealphaend\":1.32,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.9,\"wave_b\":0.9,\"ob_size\":0.015,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"additive\":1,\"textured\":1,\"y\":0.9,\"rad\":0.26913,\"ang\":1.5708,\"tex_zoom\":9.75346,\"r\":0.6,\"g\":0.6,\"b\":0.6,\"a\":0.4,\"r2\":0.29,\"g2\":0.3,\"b2\":0.3,\"border_b\":0,\"border_a\":0.4,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\nposx = (1-q24)*posx + q24*(.3+rand(100)/200);\\nposy = (1-q24)*posy + q24*(.3+rand(100)/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+rand(100)/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;\"},{\"baseVals\":{\"sides\":100,\"rad\":0.14451,\"ang\":1.13097,\"tex_zoom\":1.02315,\"g\":1,\"b\":1,\"a\":0.97,\"r2\":1,\"b2\":1,\"a2\":0.1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = q24*1; a2 = 0;\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"x\":0.123,\"y\":0,\"rad\":0.27319,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.54822,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.9},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"//Alle Funktionen muessen rel. zu t_rel sein\\n\\nk1 = cos(time/3);\\nk2 = sin(time/2);\\n\\nt_abs = sample;\\nt_rel = sample-time/2.12;\\nampl =  cos(t_rel)*5;\\n//ampl = 3;\\n\\nox = sin (t_rel*8) + ampl*sin (t_rel*12) ;\\noy = cos (t_rel*13) + ampl*cos (t_rel*11);\\noz =  ampl/3;\\n\\n\\n\\n\\n//r = sqr(sin(t_rel*3.4));\\n//g = sqr(sin(t_rel*2.3));\\n//b = sqr (cos(t_rel*1.9));\\n\\nr = 1;\\ng = 0.5;\\nb = 0;\\n\\na=0.25*(cos(t_abs*3.14/2)) + 0.2 *below (abs(1-t_abs- t1),0.0);\\n//a=0.25*(sin(t_abs*3.14)) + 0.4 *below (abs(1-t_abs-t1), bass_att/1);\\na=0.25*(cos(t_abs*1.5)) + 0.7 *below (abs(t_abs),0.0);\\n\\nxang = k1*3;\\nyang = 1;\\nzang = 3*k1;\\nfov = 0.22;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = (bass_att + mid_att + treb_att)/2;\\nq27 = index + 1;\\nq28 = index2;\\n\\n\\n\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\\nq30 = p3 ;\\n\\np4 = dec_med*p4 + (1-dec_med)*q27;\\nq31 = p4;\\n\\nzoom = 1+q28/4;\\nwarp = .0;\\ndx = .2*q2;\",\"pixel_eqs_eel\":\"\",\"warp\":\"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 d_1;\\n  vec2 uv6_2;\\n  vec2 uv1_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - 0.5);\\n  uv1_3 = tmpvar_5;\\n  uv6_2 = tmpvar_5;\\n  float x_6;\\n  x_6 = (abs(tmpvar_5.x) - abs(tmpvar_5.y));\\n  float tmpvar_7;\\n  tmpvar_7 = (12.0 * sqrt((x_6 * x_6)));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = normalize(tmpvar_5);\\n  d_1 = tmpvar_8;\\n  float tmpvar_9;\\n  tmpvar_9 = (float(mod (q28, 2.0)));\\n  if ((tmpvar_9 == 0.0)) {\\n    d_1 = ((q1 * tmpvar_8) - (q2 / tmpvar_8));\\n  };\\n  uv1_3 = (tmpvar_5 + ((-0.06 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * normalize(tmpvar_5)));\\n  uv1_3 = (uv1_3 - (clamp (\\n    ((sin(tmpvar_7) / cos(tmpvar_7)) * d_1)\\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 60.0));\\n  uv6_2 = (0.4 * cos((\\n    (uv1_3 * 2.0)\\n   * q28)));\\n  xlat_mutablemus = (clamp (vec3((0.0006 / \\n    (sqrt(dot (uv6_2, uv6_2)) - (0.002 * (q27 + (8.0 * q28))))\\n  )), 0.0, 1.0) * q31);\\n  xlat_mutablemus = (xlat_mutablemus * (1.0 + roam_cos).xyz);\\n  ret_4 = ((0.4 * (\\n    ((texture (sampler_main, ((uv1_3 * \\n      (0.8 + (0.2 * tmpvar_7))\\n    ) + 0.5)).xyz + xlat_mutablemus) * 0.95)\\n   - 0.025)) + (0.6 * texture (sampler_main, uv_orig)).xyz);\\n  ret_4 = (ret_4 * (1.0 - (0.5 * \\n    dot (((texture (sampler_blur2, vec2(0.55, 0.55)).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29))\\n  )));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_4;\\n  ret = tmpvar_10.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float ang2_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  for (int n_2 = 0; n_2 <= 9; n_2++) {\\n    ang2_3 = ((6.28 * float(n_2)) / 9.0);\\n    float tmpvar_5;\\n    tmpvar_5 = cos(ang2_3);\\n    float tmpvar_6;\\n    tmpvar_6 = sin(ang2_3);\\n    uv2_4.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\\n    uv2_4.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\\n    xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_4 + 0.5)).xyz);\\n  };\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (xlat_mutableret1 * 2.0);\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin + stahlregen - martin in da mash 14.json":
/*!***************************************************************************!*\
  !*** ./presets/converted/martin + stahlregen - martin in da mash 14.json ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":2.103,\"wave_smoothing\":0.54,\"wave_mystery\":0.38,\"modwavealphastart\":0.81,\"modwavealphaend\":1.4,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_r\":0.4,\"ob_a\":0.2,\"ib_size\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":18,\"textured\":1,\"rad\":0.15416,\"tex_ang\":3.76991,\"tex_zoom\":5.27784,\"g\":1,\"b\":1,\"a\":0.7,\"r2\":1,\"b2\":1,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_ang = 3+2*q1;\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"rad\":0.06892,\"tex_zoom\":1.8315,\"g\":1,\"b\":1,\"a\":0.9,\"g2\":0,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = q24/2; a2 = 0;\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;\"},{\"baseVals\":{\"sides\":63,\"x\":0.123,\"y\":0,\"rad\":0.27319,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = .5 + .1* sin (time*73);\\ny = .5 + .1* sin (time*23);\\n\\nr = 0; g = 0; b = 0;\\nr2 = 1; g2 = 1; b2 = 1;\\n\\nrad = mid_att/100;\\na = .7;\\na2 = a;\"},{\"baseVals\":{\"enabled\":1,\"y\":0.51,\"rad\":0.19869,\"tex_ang\":1.00531,\"tex_zoom\":0.49981,\"g\":0.4,\"a\":0.7,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\n\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":442,\"thick\":1,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = sample ;\\ny = .5+ value2*0;\\n\\na = .5*q24*((q27+1)%2);\\nr = 0;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"y = sample ;\\nx = .5+ value2*0;\\n\\na = .5*q24*(q27%2);\\nr = 0;\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq11 = min(q22,3);\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0 + .02*q1;\\nrot = .01*q2;\\ndx = .0*index;\\n\\nwave_a = 0;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.04);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (cos((tmpvar_1.y * q1)) * sin(-(tmpvar_1.y)));\\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos((tmpvar_1.y * q2)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \\n    ((tmpvar_2 * texsize.zw) * (24.0 * q28))\\n  )).xyz * 0.99) - 0.006);\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin + stahlregen - martin in da mash 3.json":
/*!**************************************************************************!*\
  !*** ./presets/converted/martin + stahlregen - martin in da mash 3.json ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":2.26,\"decay\":0.97,\"echo_zoom\":1.007,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wave_a\":0.001,\"wave_scale\":2.103,\"wave_smoothing\":0.54,\"wave_mystery\":0.38,\"modwavealphastart\":0.81,\"modwavealphaend\":1.4,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"fshader\":0.53,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0.015,\"ob_b\":0.2,\"ob_a\":1,\"ib_size\":0.005,\"ib_r\":0,\"ib_g\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":18,\"textured\":1,\"rad\":0.15416,\"tex_ang\":3.76991,\"tex_zoom\":5.27784,\"g\":1,\"b\":1,\"a\":0.7,\"r2\":1,\"b2\":1,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_ang = 3+2*q1;\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"rad\":0.06892,\"tex_zoom\":1.8315,\"g\":1,\"b\":1,\"a\":0.9,\"g2\":0,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = q24/2; a2 = 0;\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;\"},{\"baseVals\":{\"sides\":63,\"x\":0.123,\"y\":0,\"rad\":0.27319,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = .5 + .1* sin (time*73);\\ny = .5 + .1* sin (time*23);\\n\\nr = 0; g = 0; b = 0;\\nr2 = 1; g2 = 1; b2 = 1;\\n\\nrad = mid_att/100;\\na = .7;\\na2 = a;\"},{\"baseVals\":{\"enabled\":1,\"y\":0.51,\"rad\":0.19869,\"tex_ang\":1.00531,\"tex_zoom\":0.49981,\"g\":0.4,\"a\":0.7,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\n\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":442,\"thick\":1,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = .4+sample*.2 ;\\ny = .5+ value2*.01*q22;\\n\\na = .5*q24*((q27+1)%2);\\nr = 0.2;b=1; g =.6;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"scaling\":0.89152,\"smoothing\":0,\"a\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"y = .4+sample*.2 ;\\nx = .5+ value2*.01*q22;\\n\\na = .6*q24*((q27)%2);\\nr = 0.2;b=1; g =.6;\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nmonitor = index2;\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = (bass + mid + treb)/16;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.1416/4;\\n\\npos = pos + q20/140;\\nq28 = pos;\\nq27 = index+1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel = time/10;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;\\nq8 = q5;\\n\\ntrig = q24 * (index%4);\\nmox = bnot(trig)*mox + trig * (rand (100)/100-.5);\\nmoy = bnot(trig)*moy + trig * (rand (100)/100-.5);\\nq15 = mox/2;\\nq16 = moy/2;\\n\\n//speed\\nspeed = speed * bnot(trig) + trig * q26;\\nmovz = movz + speed/fps;\\nq9 = movz;\\n\\n\\nq30 = (1.2 + sin(time/7))*3;\\n\\nzoom = 1;\\nrot = -0.00;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableblur;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_3;\\n  float dist_4;\\n  float ang2_5;\\n  vec2 uv2_6;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_4 = 1.0;\\n  inten_3 = 1.0;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  mat2 tmpvar_7;\\n  tmpvar_7[uint(0)] = _qa.xy;\\n  tmpvar_7[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_7);\\n  for (float n_2 = 1.0; n_2 <= 6.0; n_2 += 1.0) {\\n    ang2_5 = ((6.28 * n_2) / 6.0);\\n    float tmpvar_8;\\n    tmpvar_8 = cos(ang2_5);\\n    float tmpvar_9;\\n    tmpvar_9 = sin(ang2_5);\\n    uv2_6.x = ((uv_1.x * tmpvar_8) - (uv_1.y * tmpvar_9));\\n    uv2_6.y = ((uv_1.x * tmpvar_9) + (uv_1.y * tmpvar_8));\\n    uv2_6 = (uv2_6 * aspect.yx);\\n    dist_4 = (1.0 - fract((\\n      (0.1666667 * n_2)\\n     + q30)));\\n    inten_3 = ((pow (dist_4, 0.3) * (1.0 - dist_4)) * 2.0);\\n    vec2 tmpvar_10;\\n    tmpvar_10 = (((2.0 * uv2_6) * dist_4) + 0.5);\\n    xlat_mutableblur = ((texture (sampler_blur2, tmpvar_10).xyz * scale2) + bias2);\\n    xlat_mutableneu = (texture (sampler_main, tmpvar_10).xyz + xlat_mutableblur);\\n    xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_3));\\n  };\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (xlat_mutableret1 + (vec3(0.0, 0.0, 0.15) * rad));\\n  ret = tmpvar_11.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - Flexis swarm in Martins pond [not yet a boid implementation] .json":
/*!*******************************************************************************************************!*\
  !*** ./presets/converted/martin - Flexis swarm in Martins pond [not yet a boid implementation] .json ***!
  \*******************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1,\"wave_thick\":1,\"wrap\":0,\"wave_a\":0.004,\"wave_scale\":0.037,\"wave_smoothing\":0,\"wave_mystery\":-0.44,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpanimspeed\":0.803,\"warpscale\":1.22,\"zoomexp\":1.50374,\"warp\":0.31218,\"wave_y\":0.04,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0,\"ib_r\":1,\"ib_g\":0,\"ib_b\":0.75,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":41,\"additive\":1,\"num_inst\":50,\"rad\":0.01,\"ang\":3.20442,\"tex_zoom\":6.23873,\"g\":1,\"b\":1,\"a\":0,\"r2\":1,\"b2\":1,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"index = instance*q32;\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\n\\nang = gmegabuf(index+9);\\nrad = gmegabuf(index+4)*2;\\n\\nr = gmegabuf(index+5);\\ng = gmegabuf(index+6);\\nb = gmegabuf(index+7);\\n\\nr2 = r; g2 = g; b2 = b;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\"},{\"baseVals\":{\"sides\":23,\"additive\":1,\"num_inst\":50,\"x\":0.74,\"y\":0.27,\"rad\":0.01,\"tex_zoom\":0.81948,\"g\":1,\"b\":1,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"sample = instance/(num_inst-1);\\n\\nx1 = 0.5;\\ny1 = 0.5 + (q3-0.5)*0.01;\\ny2 = 0.5;\\nx = x1 + (sample-0.5)*0.2;\\ny = y2*sample + y1*(1-sample);\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"rad\":0.0999,\"tex_zoom\":0.73458,\"r\":0,\"g\":1,\"a\":0,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":3,\"additive\":1,\"num_inst\":400,\"rad\":0.16283,\"tex_zoom\":0.73458,\"g\":1,\"b\":1,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"i3 = 0;\\ni4 = 0;\",\"frame_eqs_eel\":\"i3 = if(equal(instance,0),0,i3);\\ni4 = if(equal(instance,0),0,i4);\\nppo = 8;\\nindex = i4*q32;\\nsample = i3 % ppo;\\n\\nsize = gmegabuf(index+4)*40;\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\n\\nang = gmegabuf(index+9);\\nrad = size*0.05;\\n\\nr = gmegabuf(index+5);\\ng = gmegabuf(index+6);\\nb = gmegabuf(index+7);\\n\\n\\nsample = sample/ppo;\\nbending = gmegabuf(index + 12)*5 + gmegabuf(index + 10)*5;\\ndir = -ang + (sample-0.4)*bending;\\n\\n ang =  asin(1)*1.5 - dir + bending*0.05;\\n\\nx = x + ((sample-0.3)*0.06*cos(dir)*size + sin(dir)*size*bending*0.01);\\ny = y + ((sample-0.3)*0.06*sin(dir)*size - cos(dir)*size*bending*0.01);\\n\\nx = 0.5 + (x-0.5)/q2;\\n\\nrad = rad*1.5 - sample*0.05*size;\\n\\ni3 = i3 + 1;\\ni4 = if( equal(i3%ppo,0), i4 +1, i4);\"}],\"waves\":[{\"baseVals\":{\"samples\":452,\"additive\":1,\"scaling\":2.44415,\"smoothing\":0,\"a\":0.15,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t1 = 0;\\nt2 = 0;\",\"point_eqs_eel\":\"ppo = 9;\\nindex = t2*q32;\\nsample = t1 % ppo;\\n\\nnindex = gmegabuf(index + q30); // the next neighbor's index\\nnnindex = gmegabuf(index + q30+1); // the next neighbor's index\\nnnnindex = gmegabuf(index + q30+2); // the next neighbor's index\\n\\nx = gmegabuf(index);\\ny = gmegabuf(index+1);\\nr = 0.5 + gmegabuf(index+5)*0.5;\\ng = 0.5 + gmegabuf(index+6)*0.5;\\nb = 0.5 + gmegabuf(index+7)*0.5;\\n\\nnx = gmegabuf(nindex);\\nny = gmegabuf(nindex+1);\\nnnx = gmegabuf(nnindex);\\nnny = gmegabuf(nnindex+1);\\nnnnx = gmegabuf(nnnindex);\\nnnny = gmegabuf(nnnindex+1);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q2;\\nnx = 0.5 + (nx-0.5)/q2;\\nny = 0.5 + (ny-0.5)/q2;\\nnnx = 0.5 + (nnx-0.5)/q2;\\nnny = 0.5 + (nny-0.5)/q2;\\nnnnx = 0.5 + (nnnx-0.5)/q2;\\nnnny = 0.5 + (nnny-0.5)/q2;\\n\\nx = if( equal(sample,2), nx, x);\\ny = if( equal(sample,2), ny, y);\\nx = if( equal(sample,4), nnx, x);\\ny = if( equal(sample,4), nny, y);\\nx = if( equal(sample,6), nnnx, x);\\ny = if( equal(sample,6), nnny, y);\\n\\na = above(sample,1)*below(sample,ppo-1)*a;\\n\\nt1 = t1 + 1;\\nt2 = if( equal(t1%ppo,0), t2 +1, t2);\"},{\"baseVals\":{\"scaling\":7.7518,\"smoothing\":0,\"a\":0.21,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;\",\"point_eqs_eel\":\"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;\"},{\"baseVals\":{\"samples\":280,\"additive\":1,\"scaling\":5.92556,\"smoothing\":0,\"a\":0.5,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = 0;\\nt2 = 0;\\n\\n\",\"point_eqs_eel\":\"// q32 number of attributes\\n// q31 number of objects\\n\\nppo = 7; // number of points used for each object\\nindex = t2*q32; // object's index\\n\\nx = 0.5 +(gmegabuf(index)-0.5)/q2;\\ny = 0.5 + (gmegabuf(index+1)-0.5)/q2;\\n\\n// collecting pairs of index and distance to the current object in a local buffer\\ni = 0;\\nj = 0;\\nloop(q31,\\n     d = sqrt( sqr(gmegabuf(index)-gmegabuf(i)) + sqr(gmegabuf(index+1)-gmegabuf(i+1)));\\n     d = if( equal(d,0), 1, d);\\n     megabuf(j)   = i; // store index/distance pairs\\n     megabuf(j+1) = d;\\n     j = j+2;\\n     i = i+q32;\\n    );\\n\\n// sort that buffer, but only 5 cycles for the 5 nearest objects\\ni = 0;\\nloop( 5,\\n      j = i;\\n      smallestfind = 100;\\n      findindex = 0;\\n      loop( q31-j,\\n            distance =megabuf(j*2+1);\\n            smaller = above( smallestfind, distance);\\n            smallestfind = if(smaller, distance, smallestfind);\\n            findindex = if( smaller, j*2, findindex);\\n            j = j + 1;\\n          );\\n\\n      // now that the nearest object was found, swap it to the buffer's top\\n\\n      j = megabuf(i);\\n      d = megabuf(i+1);\\n\\n      megabuf(i)   = megabuf(findindex);\\n      megabuf(i+1) = megabuf(findindex+1);\\n      megabuf(findindex)   = j;\\n      megabuf(findindex+1) = d;\\n\\n      i = i+1;\\n    );\\n\\n\\nindex2 = (t1)%ppo;\\ni = megabuf(index2-2);\\nxx = 0.5 + (gmegabuf(i)-0.5)/q2;\\nyy = 0.5 + (gmegabuf(i+1)-0.5)/q2;\\nw = asin(1)*index2/4;\\n//xx = x + sin(w)*0.1;\\n//yy = y + cos(w)*0.1;\\nx = if( equal(index2%2,0), x, xx);\\ny = if( equal(index2%2,0), y, yy);\\n\\n\\na = below(index2,ppo-1)*above(index2,1)*a;\\nr = 0.5 + gmegabuf(index + 5)*0.5;\\ng = 0.5 + gmegabuf(index + 6)*0.5;\\nb = 0.5 + gmegabuf(index + 7)*0.5;\\n\\n\\nt2 = t2 + equal(t1%ppo,ppo-1);\\nt1 = t1 + 1;\\n\\n//a = above(t1,128);\"},{\"baseVals\":{\"samples\":15,\"thick\":1,\"additive\":1,\"scaling\":5.92556,\"smoothing\":0,\"a\":0.4,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0\",\"frame_eqs_eel\":\"t1 = 0;\\nt2 = 0;\\nt3 = 0;\\nt4 = 0.5;\",\"point_eqs_eel\":\"ppo = 5;\\n\\nindex = t2*q32;\\nneighbor = 1;\\nneighbor = gmegabuf(index+10+neighbor);\\nx = 0.5 + (gmegabuf(index)-0.5)/q2;\\ny = 0.5 + (gmegabuf(index+1)-0.5)/q2;\\nxx = 0.5 + ( gmegabuf(neighbor) - 0.5)/q2;\\nyy = 0.5 + ( gmegabuf(neighbor+1) - 0.5)/q2;\\n\\nx = if( equal(t1 % 2, 0), x, xx);\\ny = if( equal(t1 % 2, 0), y, yx);\\n\\n\\nt2 = t2 + equal(t1,ppo);\\nt1 = if(above(t1,ppo),t1-ppo,t1) + 1;\\n\"}],\"init_eqs_eel\":\"// clear buffer\\ni = 0; loop(1024*1024, gmegabuf(i) = 0; i = i+1;);\\n\\ncount = 50;\\nattributes = 32;\\nnListStart = 24; // starting index of neighbor list\\n\\nminradius = 0.01;\\nmaxradius = 0.0333;\\nv = 0.0;\\n\\n// randomize initial coordinates\\nindex = 0;\\nloop(count,\\n     gmegabuf(index*attributes) = rand(1000)/1000;\\n     gmegabuf(index*attributes+1) = rand(1000)/1000;\\n     gmegabuf(index*attributes+2) = v*(rand(1000)/1000-0.5);\\n     gmegabuf(index*attributes+3) = v*(rand(1000)/1000-0.5);\\n     gmegabuf(index*attributes+4) = minradius + (maxradius-minradius)*(index+1)/count;\\n     gmegabuf(index*attributes+5) = rand(1000)/1000;\\n     gmegabuf(index*attributes+6) = rand(1000)/1000;\\n     gmegabuf(index*attributes+7) = rand(1000)/1000;\\n     gmegabuf(index*attributes+8) = pow(gmegabuf(index*attributes+4),3) ;\\n     gmegabuf(index*attributes+9) = 4*asin(1)*rand(1000)/1000;\\n     gmegabuf(index*attributes+10) = 0;\\n     gmegabuf(index*attributes+13) = index/count;\\n     index = index+1;\\n    );\\n\\nq30 = nListStart;\\nq31 = count;\\nq32 = attributes;\\n\\n// 0, x\\n// 1, y\\n// 2, vx\\n// 3, vy\\n// 4, radius\\n// 5, red\\n// 6, green\\n// 7, blue\\n// 8, mass\\n// 9, angle\\n// 10, rotation\\n// 11, bend force\\n// 12, bending\\n// 13, sample\",\"frame_eqs_eel\":\"random = rand(1000)/1000;\\n\\ndt = 1/fps;\\nbend_force = bend_force*0.92 - 4*bend*dt + 2*(random-0.5)*dt;\\n\\nbend = bend + 60*bend_force*dt;\\nq3 = bend*4;\\n\\nmonitor = bend;\\n\\nwarp = 0;\\nzoom = 1;\\n\\ngravity = 0.0015*dt*0;\\ndampening = 0.;\\nfriction = 2048*dt;\\nshock = 0.002;\\npi2 = asin(1);\\n\\nnn = 3; // number of nearest neighbors to search, reduce if not needed\\n        // provide enough attributes, otherwise the next object's coordinate will be overwritten\\n        // collision detection is based on nearest neighbors, so keep it at least at 1.\\n\\ncheck = 2; // how many neighbors will be checked for a possible collision. may not be above nn.\\n           // raise to avoid odd behavior in clusters of touching objects.\\n\\nbouncefactor = 0.1;\\nrotatefactor = 0.0; // relation between angular and translative momentum, when object hits a border. this is an empirical value for a convincing impression\\n\\n\\n\\nh = (aspecty-1)*0.5; w = (aspectx-1)*0.5;\\nindex = 0; index2 = 0;\\nloop(count,\\n\\n     random = rand(1000)/1000;\\n     sample = gmegabuf(index+13);\\n\\n     // bend force\\n     gmegabuf(index + 11) = gmegabuf(index + 11)*0.92 - 4*gmegabuf(index+12)*dt + 2*(random-0.5)*dt*(bass*0.4*sample + treb*0.5*(1-sample));\\n\\n     // bend\\n     gmegabuf(index + 12) += 60*gmegabuf(index + 11)*dt;\\n\\n     v = sqrt( sqr( gmegabuf(index + 2) ) + sqr( gmegabuf(index + 3) ) );\\n\\n     // apply friction\\n     fric = max(0,1 - sqr(v*friction) - v*2);\\n     gmegabuf(index + 2) *= fric;\\n     gmegabuf(index + 3) *= fric;\\n\\n     // apply direction change\\n     gmegabuf(index + 10) = gmegabuf(index + 10)*fric +  v*gmegabuf(index +12)*0;\\n\\n     // apply acceleration force\\n     acceleration = random*0.000 + abs(gmegabuf(index+11))*0.003;\\n     direction = gmegabuf(index + 9) - pi2;\\n     gmegabuf(index + 2) += sin(direction)*acceleration;\\n     gmegabuf(index + 3) += cos(direction)*acceleration;\\n\\n     // adding velocity vectors\\n     gmegabuf(index) = gmegabuf(index) + gmegabuf(index+2)*60*dt;\\n     gmegabuf(index+1) = gmegabuf(index+1) + gmegabuf(index+3)*60*dt;\\n     gmegabuf(index+9) = gmegabuf(index+9) + gmegabuf(index+10)*0.5;\\n\\n     // applying gravity\\n     gmegabuf(index+3) = gmegabuf(index+3) - gravity;\\n\\n     vr = sin(gmegabuf(index+10))*gmegabuf(index+4); // rotation speed at the surface\\n\\n     // bounce off ceiling\\n     bounce = above( gmegabuf(index+1), 1 - gmegabuf(index+4) + w);\\n     gmegabuf(index+2) = if( bounce, gmegabuf(index+2) + (vr+gmegabuf(index+2))*rotatefactor, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, -abs(gmegabuf(index+3))*dampening - shock, gmegabuf(index+3));\\n     vr = if( bounce, vr - (gmegabuf(index+2) + vr)*(1-rotatefactor), vr);\\n\\n     // bounce off floor\\n     bounce = below( gmegabuf(index+1), gmegabuf(index+4) - w);\\n     gmegabuf(index+2) = if( bounce, gmegabuf(index+2) + (vr-gmegabuf(index+2))*rotatefactor, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, abs(gmegabuf(index+3))*dampening + shock, gmegabuf(index+3));\\n     vr = if( bounce, vr + (gmegabuf(index+2) - vr)*(1-rotatefactor), vr);\\n\\n     // bounce off right border\\n     bounce = above( gmegabuf(index), 1 - gmegabuf(index+4) + h);\\n     gmegabuf(index+2) = if( bounce, -abs(gmegabuf(index+2))*dampening - shock, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, gmegabuf(index+3) + (vr-gmegabuf(index+3))*rotatefactor, gmegabuf(index+3));\\n     vr = if( bounce, vr + (gmegabuf(index+3) - vr)*(1-rotatefactor), vr);\\n\\n     // bounce off left border\\n     bounce = below( gmegabuf(index), gmegabuf(index+4) - h);\\n     gmegabuf(index+2) = if( bounce, abs(gmegabuf(index+2))*dampening + shock, gmegabuf(index+2));\\n     gmegabuf(index+3) = if( bounce, gmegabuf(index+3) - (vr+gmegabuf(index+3))*rotatefactor, gmegabuf(index+3));\\n     vr = if( bounce, vr - (gmegabuf(index+3) + vr)*(1-rotatefactor), vr);\\n\\n     gmegabuf(index+10) = asin(vr/gmegabuf(index+4));\\n\\n     i = 0; j = 0; // collecting pairs of index and distance to the current object in a local buffer\\n     loop( count,\\n           d = sqrt( sqr(gmegabuf(index)-gmegabuf(i)) + sqr(gmegabuf(index+1)-gmegabuf(i+1)));\\n           d = if( equal(d,0), 10, d); // leave out comparison with itself (where d == 0, set d to a high value)\\n           d = d - (gmegabuf(index+4)+gmegabuf(i+4))*0.5; // subtract radius (surface to surface distance)\\n           megabuf(j)   = i; // store index/distance pairs\\n           megabuf(j+1) = d;\\n           j = j+2;\\n           i = i+attributes; );\\n     i = 0; // sort that buffer, but only as many cycles as needed for the _nn_ nearest neighbors\\n     loop( nn,\\n           j = i; smallestfind = 10; findindex = -1;\\n           loop( count-j,\\n                 distance =megabuf(j*2+1);\\n                 smaller = above( smallestfind, distance);\\n                 smallestfind = if(smaller, distance, smallestfind);\\n                 findindex = if( smaller, j*2, findindex);\\n                 j = j + 1; );\\n           j = megabuf(i*2); d = megabuf(i*2+1);\\n           megabuf(i*2)   = megabuf(findindex);\\n           megabuf(i*2+1) = megabuf(findindex+1);\\n           megabuf(findindex)   = j;\\n           megabuf(findindex+1) = d;\\n           i = i+1;\\n         );\\n     i = 0; // storing the indexes of the nearest neighbors in the list\\n     loop( nn,\\n           gmegabuf(index + nListStart + i) = megabuf(i*2);\\n           i = i +1;\\n         );\\n     i = 0; // collision detection and impulse transmission below\\n     loop( check,\\n           index2 = megabuf(i);\\n           hit = below( sqrt( sqr( gmegabuf(index) - gmegabuf(index2)) +\\n                              sqr( gmegabuf(index+1) - gmegabuf(index2+1))),\\n                        gmegabuf(index + 4) + gmegabuf(index2 + 4)\\n                      )\\n                 *\\n                 above( sqrt( sqr( gmegabuf(index)   - gmegabuf(index2))+\\n                        sqr( gmegabuf(index+1) - gmegabuf(index2+1))),\\n                        sqrt( sqr( gmegabuf(index+0) - gmegabuf(index2+0)+\\n                                   gmegabuf(index+2) - gmegabuf(index2+2))+\\n                              sqr( gmegabuf(index+1) - gmegabuf(index2+1)+\\n                                   gmegabuf(index+3) - gmegabuf(index2+3)) ) );\\n           ref_ang = atan2( gmegabuf(index2)-gmegabuf(index), // calculating the angle of the common tangent\\n                            gmegabuf(index2 + 1)-gmegabuf(index + 1)) + pi2;\\n           v1 = sqrt(sqr( gmegabuf(index + 2)) + sqr( gmegabuf(index + 3))); // velocity of object1\\n           v2 = sqrt(sqr( gmegabuf(index2 + 2)) + sqr( gmegabuf(index2 + 3)));  // velocity of object2\\n           w1 = atan2( gmegabuf(index + 2), gmegabuf(index + 3));   // object1 motion angle\\n           w2 = atan2( gmegabuf(index2 + 2), gmegabuf(index2 + 3)); // object2 motion angle\\n           vr2 = sin(gmegabuf(index2 + 10))*gmegabuf(index2+4); // the other object's surface velocity\\n           m1 = gmegabuf(index + 8); m2 = gmegabuf(index2 + 8);\\n           vv1 = ((m1-m2)*v1 + 2*m2*v2)/(m1+m2); vv2 = ((m2-m1)*v2 + 2*m1*v1)/(m1+m2);\\n           vrr = ((m1-m2)*vr + 2*m2*vr2)/(m1+m2); vrr2 = ((m2-m1)*vr2 + 2*m1*vr)/(m1+m2);\\n\\n           gmegabuf( index + 2) = if( hit, sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-vr2)-sin(ref_ang)*v1*cos(w1-ref_ang))*rotatefactor\\n                                         + cos(ref_ang)*vv1*sin(w2-ref_ang),\\n                                                  gmegabuf( index + 2) );\\n\\n           gmegabuf( index + 3) = if( hit, cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-vr2)-cos(ref_ang)*v1*cos(w1-ref_ang))*rotatefactor\\n                                         - sin(ref_ang)*vv1*sin(w2-ref_ang),\\n                                                 gmegabuf( index + 3) );\\n\\n           gmegabuf( index2 + 2) = if( hit, sin(ref_ang)*v2*cos(w2-ref_ang) + ((vr2-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*rotatefactor\\n                                          + cos(ref_ang)*vv2*sin(w1-ref_ang),\\n                                                  gmegabuf( index2 + 2) );\\n\\n           gmegabuf( index2 + 3) = if( hit, cos(ref_ang)*v2*cos(w2-ref_ang) + ((vr2-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*rotatefactor\\n                                          - sin(ref_ang)*vv2*sin(w1-ref_ang),\\n                                                  gmegabuf( index2 + 3) );\\n\\n           vr = if( hit, vrr + (cos(w1-ref_ang)*(v1-v2)-vrr)*(1-rotatefactor) , vr);\\n           gmegabuf( index + 10) = asin( vr / gmegabuf(index+4) );\\n\\n           vr2 = if( hit, vrr2 + (cos(w2-ref_ang)*(v2-v1)-vrr2)*(1-rotatefactor) , vr2);\\n           gmegabuf( index2 + 10) = asin( vr2 / gmegabuf(index2+4) );\\n\\n           i=i+2;\\n         );\\n     index = index+attributes;\\n    );\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\",\"pixel_eqs_eel\":\"\",\"warp\":\"vec2 pix;\\nfloat xlat_mutablebuf2;\\n shader_body { \\n  pix = (texsize.zw * 2.0);\\n  vec3 res_1;\\n  res_1 = (texture (sampler_main, (uv + (pix * vec2(1.0, 0.0)))).xyz - 0.5);\\n  res_1 = ((res_1 * res_1) * sign(res_1));\\n  vec3 res_2;\\n  res_2 = (texture (sampler_main, (uv + (pix * vec2(0.0, 1.0)))).xyz - 0.5);\\n  res_2 = ((res_2 * res_2) * sign(res_2));\\n  vec3 res_3;\\n  res_3 = (texture (sampler_main, (uv + (pix * vec2(-1.0, 0.0)))).xyz - 0.5);\\n  res_3 = ((res_3 * res_3) * sign(res_3));\\n  vec3 res_4;\\n  res_4 = (texture (sampler_main, (uv + (pix * vec2(0.0, -1.0)))).xyz - 0.5);\\n  res_4 = ((res_4 * res_4) * sign(res_4));\\n  vec3 res_5;\\n  res_5 = (texture (sampler_main, (uv + (pix * vec2(2.0, 0.0)))).xyz - 0.5);\\n  res_5 = ((res_5 * res_5) * sign(res_5));\\n  vec3 res_6;\\n  res_6 = (texture (sampler_main, (uv + (pix * vec2(0.0, 2.0)))).xyz - 0.5);\\n  res_6 = ((res_6 * res_6) * sign(res_6));\\n  vec3 res_7;\\n  res_7 = (texture (sampler_main, (uv + (pix * vec2(-2.0, 0.0)))).xyz - 0.5);\\n  res_7 = ((res_7 * res_7) * sign(res_7));\\n  vec3 res_8;\\n  res_8 = (texture (sampler_main, (uv + (pix * vec2(0.0, -2.0)))).xyz - 0.5);\\n  res_8 = ((res_8 * res_8) * sign(res_8));\\n  vec3 res_9;\\n  res_9 = (texture (sampler_main, uv).xyz - 0.5);\\n  res_9 = ((res_9 * res_9) * sign(res_9));\\n  xlat_mutablebuf2 = (((\\n    ((((\\n      (res_1.y + res_2.y)\\n     + \\n      (res_3.y + res_4.y)\\n    ) + (res_5.y / 2.0)) + (res_6.y / 2.0)) + (res_7.y / 2.0))\\n   + \\n    (res_8.y / 2.0)\\n  ) / 3.0) - res_9.x);\\n  xlat_mutablebuf2 = (xlat_mutablebuf2 * 0.98);\\n  vec3 tmpvar_10;\\n  tmpvar_10.z = 0.0;\\n  tmpvar_10.x = texture (sampler_pw_main, uv).y;\\n  tmpvar_10.y = ((sign(xlat_mutablebuf2) * sqrt(\\n    abs(xlat_mutablebuf2)\\n  )) + 0.5);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }\",\"comp\":\"uniform sampler2D sampler_smalltiled_lizard_scales;\\nvec2 pix;\\nvec2 xlat_mutabledz;\\nvec2 xlat_mutabledz1;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  pix = (texsize.zw * 2.0);\\n  vec2 uv_1;\\n  vec2 uvi_2;\\n  uvi_2 = (uv + (pix * vec2(1.0, 0.0)));\\n  float res_3;\\n  res_3 = (mix ((\\n    (texture (sampler_blur1, uvi_2).xyz * scale1)\\n   + bias1).x, (\\n    (texture (sampler_blur1, uvi_2).xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_3 = ((res_3 * res_3) * sign(res_3));\\n  vec2 uvi_4;\\n  uvi_4 = (uv + (pix * vec2(-1.0, 0.0)));\\n  float res_5;\\n  res_5 = (mix ((\\n    (texture (sampler_blur1, uvi_4).xyz * scale1)\\n   + bias1).x, (\\n    (texture (sampler_blur1, uvi_4).xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_5 = ((res_5 * res_5) * sign(res_5));\\n  xlat_mutabledz1.x = (res_3 - res_5);\\n  vec2 uvi_6;\\n  uvi_6 = (uv + (pix * vec2(0.0, 1.0)));\\n  float res_7;\\n  res_7 = (mix ((\\n    (texture (sampler_blur1, uvi_6).xyz * scale1)\\n   + bias1).x, (\\n    (texture (sampler_blur1, uvi_6).xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_7 = ((res_7 * res_7) * sign(res_7));\\n  vec2 uvi_8;\\n  uvi_8 = (uv + (pix * vec2(0.0, -1.0)));\\n  float res_9;\\n  res_9 = (mix ((\\n    (texture (sampler_blur1, uvi_8).xyz * scale1)\\n   + bias1).x, (\\n    (texture (sampler_blur1, uvi_8).xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_9 = ((res_9 * res_9) * sign(res_9));\\n  xlat_mutabledz1.y = (res_7 - res_9);\\n  float res_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_blur1, uv);\\n  res_10 = (mix ((\\n    (tmpvar_11.xyz * scale1)\\n   + bias1).x, (\\n    (tmpvar_11.xyz * scale1)\\n   + bias1).y, 0.5) - 0.5);\\n  res_10 = ((res_10 * res_10) * sign(res_10));\\n  uv_1 = (uv + ((xlat_mutabledz1 * \\n    clamp ((1.0 - res_10), 0.0, 1.0)\\n  ) * 0.5));\\n  xlat_mutabledz.x = (texture (sampler_main, (uv_1 + (pix * vec2(1.0, 0.0)))).z - texture (sampler_main, (uv_1 + (pix * vec2(-1.0, 0.0)))).z);\\n  xlat_mutabledz.y = (texture (sampler_main, (uv_1 + (pix * vec2(0.0, 1.0)))).z - texture (sampler_main, (uv_1 + (pix * vec2(0.0, -1.0)))).z);\\n  xlat_mutableuv1 = ((uv_1 - 0.1) + (xlat_mutabledz1 * 8.0));\\n  vec2 x_12;\\n  x_12 = (xlat_mutableuv1 + (xlat_mutabledz * 0.6));\\n  vec2 x_13;\\n  x_13 = (xlat_mutableuv1 + xlat_mutabledz);\\n  vec2 x_14;\\n  x_14 = (xlat_mutableuv1 + (xlat_mutabledz * 2.6));\\n  vec3 tmpvar_15;\\n  tmpvar_15.x = sqrt(dot (x_12, x_12));\\n  tmpvar_15.y = sqrt(dot (x_13, x_13));\\n  tmpvar_15.z = sqrt(dot (x_14, x_14));\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ((texture (sampler_smalltiled_lizard_scales, (\\n    (uv_1 + xlat_mutabledz1)\\n   - \\n    (time * 0.02)\\n  )) * 0.5).xyz + ((\\n    (0.1 / tmpvar_15)\\n   - \\n    (texture (sampler_main, uv).z * 0.2)\\n  ) - (texture (sampler_main, \\n    (0.8 - uv_1)\\n  ).z * 0.2)));\\n  ret = tmpvar_16.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - baby one more time.json":
/*!************************************************************!*\
  !*** ./presets/converted/martin - baby one more time.json ***!
  \************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":7,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.229,\"wave_smoothing\":0.9,\"wave_mystery\":0.2,\"modwavealphastart\":0,\"modwavealphaend\":0,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":33,\"textured\":1,\"rad\":0.80375,\"tex_ang\":0.06283,\"tex_zoom\":1.03922,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":39,\"thickoutline\":1,\"num_inst\":41,\"x\":0.6,\"rad\":0.033,\"tex_zoom\":6.16617,\"r\":0.4,\"g\":1,\"b\":0.7,\"a\":0.9,\"g2\":0,\"a2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"rad = q21*.2;\"},{\"baseVals\":{\"enabled\":1,\"sides\":12,\"num_inst\":256,\"x\":0.123,\"y\":0,\"rad\":0.20303,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"b2\":1,\"a2\":1,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"k1 = instance/num_inst*6.3;\\n//q15 = 0; q16 = 0;\\n\\nx = .5 +q15 *cos(k1+q17) + q11*-.2; \\ny = .5 +q16 *q32*sin(k1+q17+time)+q12*.2;\\n\\n\\na = .5;\\na2 = .1; r = .5; b = 1; g = 1;\\nrad = max(max(abs(q15),abs(q16))*.2,.04);\\n\"},{\"baseVals\":{\"sides\":63,\"rad\":0.01645,\"tex_zoom\":1.31212,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"usedots\":1,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"scaling\":0.89152,\"smoothing\":1,\"g\":0.6,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"scaling\":0.01348,\"smoothing\":0,\"g\":0.6,\"b\":0,\"a\":0.31,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"g\":0.6,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"ran1 = (rand(100)/100-.5)*2;\\nran2 = (rand(100)/100-.5)*2;\\nran3 = (rand(100)/100-.5)*2;\\nindex2 = 3;\",\"frame_eqs_eel\":\"dec_med = pow (0.85, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, -.5+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nq22 = peak;\\nq27 = index;\\nq28 = index2+1;\\nq24 = is_beat;\\n\\ntrig =  is_beat*equal(index%2,0);\\np1 =  trig*(p1+1) + (1-trig)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\n\\n\\ntrig = is_beat*equal(index%24,0);\\nran1 = if(trig,(rand(100)/100-.5)*2,ran1);\\n\\ntrig = is_beat*equal(index%16,0);\\nran2 = if(trig,(rand(100)/100-.5)*2,ran2);\\n\\ntrig = is_beat*equal(index%12,0);\\nran3 = if(trig,(rand(100)/100-.5)*2,ran3);\\n\\nran1_ = dec_med*ran1_ + (1-dec_med)*ran1;\\nran2_ = dec_med*ran2_ + (1-dec_med)*ran2;\\nran3_ = dec_med*ran3_ + (1-dec_med)*ran3;\\nq11 = ran1_;\\nq12 = ran2_;\\n\\n\\ndx = .02*ran1_;\\ndy = .02*ran2_;\\nzoom = 1+.05*ran3_;\\n\\npeak_ = dec_med*peak_ + (1-dec_med)*peak;\\npeak__ = dec_slow*peak__ + (1-dec_slow)*peak_;\\n//peak__ = 1;\\n\\nma = ma + (peak_-peak__)*50/fps * bnot(index%2);\\nmx=mx*dec_slow+(1-dec_slow)*cos(ma*1.3);\\nmy=my*dec_slow+(1-dec_slow)*sin(ma);\\n\\nq15 = mx;\\nq16 = my*.8;\\nq17 = ma*.8;\\nq32 = aspecty;\\nmonitor = dx;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\\n  float tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  tmpvar_3 = (dot ((\\n    (tmpvar_4.xyz * scale1)\\n   + bias1), vec3(0.32, 0.49, 0.29)) * 4.0);\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\\n  tmpvar_5[1u].x = sin(tmpvar_3);\\n  tmpvar_5[1u].y = cos(tmpvar_3);\\n  uv_1 = ((tmpvar_2 + (\\n    (0.1 * dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n   * \\n    (tmpvar_2 * tmpvar_5)\\n  )) - 0.5);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = ((uv_1 * texsize.xy) * 0.02);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\\n  uv_1 = (uv_1 - ((tmpvar_7 * texsize.zw) * (q28 * 4.0)));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ((texture (sampler_main, uv_1).xyz * 0.99) - 0.02);\\n  ret = tmpvar_8.xyz;\\n }\",\"comp\":\"vec2 xlat_mutabledz;\\n shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * 4.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = 0.0;\\n  tmpvar_5.y = texsize.w;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * 4.0);\\n  xlat_mutabledz.x = ((2.0 * dot (texture (sampler_main, \\n    (uv + tmpvar_4)\\n  ).xyz, vec3(0.32, 0.49, 0.29))) - (2.0 * dot (texture (sampler_main, \\n    (uv - tmpvar_4)\\n  ).xyz, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutabledz.y = ((2.0 * dot (texture (sampler_main, \\n    (uv + tmpvar_6)\\n  ).xyz, vec3(0.32, 0.49, 0.29))) - (2.0 * dot (texture (sampler_main, \\n    (uv - tmpvar_6)\\n  ).xyz, vec3(0.32, 0.49, 0.29))));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_main, uv);\\n  xlat_mutabledz = (xlat_mutabledz * 12.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = sin(((\\n    (2.0 * tmpvar_2)\\n   + \\n    (xlat_mutabledz * 0.8)\\n  ) + vec2(1.0, 1.0)));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = sin(((\\n    (2.0 * tmpvar_2)\\n   + xlat_mutabledz) + vec2(1.0, 1.0)));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = sin(((\\n    (2.0 * tmpvar_2)\\n   + \\n    (xlat_mutabledz * 1.2)\\n  ) + vec2(1.0, 1.0)));\\n  vec3 tmpvar_11;\\n  tmpvar_11.x = (0.1 / sqrt(dot (tmpvar_8, tmpvar_8)));\\n  tmpvar_11.y = (0.1 / sqrt(dot (tmpvar_9, tmpvar_9)));\\n  tmpvar_11.z = (0.1 / sqrt(dot (tmpvar_10, tmpvar_10)));\\n  ret_1 = ((tmpvar_11 - (tmpvar_7.xyz * 0.15)) + (tmpvar_7.y / 2.0));\\n  ret_1 = (ret_1 * (1.0 + ret_1));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_1;\\n  ret = tmpvar_12.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - bombyx mori [flexi′s logarithmic edit].json":
/*!********************************************************************************!*\
  !*** ./presets/converted/martin - bombyx mori [flexi′s logarithmic edit].json ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken_center\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.236,\"wave_smoothing\":0,\"wave_mystery\":-0.64,\"modwavealphastart\":0.81,\"modwavealphaend\":1.4,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_b\":0.6,\"ob_size\":0.005,\"ob_a\":0.8,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":18,\"num_inst\":4,\"x\":0.83,\"rad\":0.14349,\"tex_ang\":3.76991,\"tex_zoom\":5.27784,\"r\":0,\"g\":1,\"b\":1,\"a\":0.5,\"r2\":1,\"g2\":0.2,\"b2\":1,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"d = .3+(frame%8)/8*.2;\\n//d = .3;\\nk1 = instance/num_inst*6.28;\\nd = .3 + q22/8 ;\\n\\nx = .5 + d*cos(k1);\\ny = .5 + d*sin(k1);\\n\\na = min(1, .2+ .8*q22/2*((q27)%2));\\na2 = 0;\\nr = .6 + .4*sin(time/4+1.56);\\nb = .6 + .4*sin(time/4+3.14);\\ng = .6 + .4*sin(time/4);\\n\\nr0 = r0 * bnot(q24) + (.5+.5*sin(time))*q24;\\ng0 = g0 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;\\nb0 = (2-r0-g0)/2;\\n\\nr = r0;\\nb = b0;\\ng = g0;\\n\\nr2 = 1-g;\\ng2 = 1-b;\\nb2 = 1-r;\"},{\"baseVals\":{\"sides\":32,\"num_inst\":4,\"rad\":0.16218,\"tex_zoom\":1.8315,\"g\":1,\"b\":1,\"a\":0.9,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = q24/2; a2 = 0;\\na = min(1, .2+ .8*q22/2*((q27)%2));\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;\\n\\n\\n\\n\\nd = .3+(frame%8)/8*.2;\\nd = .3 + q22/12;\\n\\nx = .5 + d*cos(6.28*instance/num_inst);\\ny = .5 + d*sin(6.28*instance/num_inst);\\na = min(1, .2+ .8*q22/2*((q27)%2));\\nb = 1; g = 1; \"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"rad\":8.85459,\"tex_zoom\":0.03204,\"g\":1,\"b\":1,\"a\":0.4,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"x\":0.4,\"rad\":0.14741,\"tex_zoom\":1.59918,\"g\":0.4,\"r2\":1,\"g2\":0.6,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = q24*.3;\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":128,\"scaling\":0.89152,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = t1 * bnot(q24) + (.5+.5*sin(time))*q24;\\nt2 = t2 * bnot(q24) + (.5+.5*sin(time*1.7))*q24;\",\"point_eqs_eel\":\"x = sample ;\\ny = .5;\\n\\na = q22*((q27+1)%2);\\n//a = 1;\\na = q24*((q27+1)%2)/2+.0;\\n\\nr = t1; b = t2; g = (2-r0-g0)/2;\\n;\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"}],\"init_eqs_eel\":\"speed_=1;\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0.2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = (bass_att + mid_att + treb_att)/2;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 2;\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%8);\\nvx = vx*bnot(trig) + trig* (rand(100)/100-.5);\\nvy = vy*bnot(trig) + trig* (rand(100)/100-.5);\\nvz = vz*bnot(trig) + trig* (rand(100)/100-.5);\\n\\nspeed = min(vol_-vol__+.5,1);\\nspeed = max(speed,-.5);\\nspeed_ = bnot(trig)*speed_ + trig*speed;\\nspg = dec_med*spg + (1-dec_med)*speed_;\\nmovz = movz + 1/fps*(speed_+0*vol_/6);\\nq9 = movz;\\nq12 = min(q22,6)*2;\\n\\n//puls = puls*dec_med + (1-dec_med)*q22;\\n\\nq13 = 2* sin(movz/3-time/11);\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(rand(10)-5);\\ntrel = trel + .1/fps*dir;\\nq5 = cos(trel-movz);\\nq6 = sin(trel/2-movz);\\nq7 = -q6;\\nq8 = q5;\\n\\nang0 = ang0*dec_med + vz*(1-dec_med);\\nq17 = ang0*2; \\nq30 = .2*sin(time/8);\\n\\nq31 = .5 + .5*sin(time/3.3);\\n\\nzoom = 1;\\nrot = .0;\\ndx = .00;\\nmonitor = q28;\",\"pixel_eqs_eel\":\"\",\"warp\":\"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 d_1;\\n  vec2 uv6_2;\\n  vec2 uv1_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  uv1_3 = tmpvar_4;\\n  uv6_2 = tmpvar_4;\\n  float x_5;\\n  x_5 = (abs(tmpvar_4.x) - abs(tmpvar_4.y));\\n  float tmpvar_6;\\n  tmpvar_6 = (12.0 * sqrt((x_5 * x_5)));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = normalize(tmpvar_4);\\n  d_1 = tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (float(mod (q28, 2.0)));\\n  if ((tmpvar_8 == 0.0)) {\\n    d_1 = ((q1 * tmpvar_7) - (q2 / tmpvar_7));\\n  };\\n  uv1_3 = (tmpvar_4 + ((-0.06 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * normalize(tmpvar_4)));\\n  uv1_3 = (uv1_3 - (clamp (\\n    ((sin(tmpvar_6) / cos(tmpvar_6)) * d_1)\\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 60.0));\\n  uv6_2 = (0.4 * cos((\\n    (uv1_3 * 2.0)\\n   * q28)));\\n  xlat_mutablemus = (clamp (vec3((0.0006 / \\n    (sqrt(dot (uv6_2, uv6_2)) - (0.002 * (q27 + (8.0 * q28))))\\n  )), 0.0, 1.0) * q31);\\n  xlat_mutablemus = (xlat_mutablemus * (1.0 + roam_cos).xyz);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((0.4 * (\\n    ((texture (sampler_main, ((uv1_3 * \\n      (0.8 + (0.2 * tmpvar_6))\\n    ) + 0.5)).xyz + xlat_mutablemus) * 0.95)\\n   - 0.025)) + (0.6 * texture (sampler_main, uv_orig)).xyz);\\n  ret = tmpvar_9.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableneu;\\nvec3 xlat_mutableret2;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 ofs_2;\\n  vec3 ret1_3;\\n  vec2 uv5_4;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q5;\\n  tmpvar_5.y = q6;\\n  uv_1 = (uv_1 + (tmpvar_5 / 4.0));\\n  uv5_4 = uv_1;\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)] = _qb.xy;\\n  tmpvar_6[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_6);\\n  float tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (min (abs(\\n    (uv5_4.y / uv5_4.x)\\n  ), 1.0) / max (abs(\\n    (uv5_4.y / uv5_4.x)\\n  ), 1.0));\\n  float tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * tmpvar_8);\\n  tmpvar_9 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\\n     * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\\n   * tmpvar_9) + 0.9999793) * tmpvar_8);\\n  tmpvar_9 = (tmpvar_9 + (float(\\n    (abs((uv5_4.y / uv5_4.x)) > 1.0)\\n  ) * (\\n    (tmpvar_9 * -2.0)\\n   + 1.570796)));\\n  tmpvar_7 = (tmpvar_9 * sign((uv5_4.y / uv5_4.x)));\\n  if ((abs(uv5_4.x) > (1e-08 * abs(uv5_4.y)))) {\\n    if ((uv5_4.x < 0.0)) {\\n      if ((uv5_4.y >= 0.0)) {\\n        tmpvar_7 += 3.141593;\\n      } else {\\n        tmpvar_7 = (tmpvar_7 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_7 = (sign(uv5_4.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = (((tmpvar_7 / 3.1416) * 6.0) * q28);\\n  float tmpvar_10;\\n  tmpvar_10 = (16.0 * log(inversesqrt(\\n    dot (uv_1, uv_1)\\n  )));\\n  xlat_mutablers0.y = tmpvar_10;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (xlat_mutablers0.x + (q9 * 4.0));\\n  tmpvar_11.y = (tmpvar_10 + ((q9 * q28) * 4.0));\\n  xlat_mutablerss = (tmpvar_11 / 12.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q5;\\n  tmpvar_12.y = q6;\\n  ofs_2 = (0.1 * tmpvar_12.yx);\\n  float tmpvar_13;\\n  float tmpvar_14;\\n  tmpvar_14 = -(q9);\\n  tmpvar_13 = fract(tmpvar_14);\\n  mat2 tmpvar_15;\\n  tmpvar_15[uint(0)].x = 1.0;\\n  tmpvar_15[uint(0)].y = -0.0;\\n  tmpvar_15[1u].x = 0.0;\\n  tmpvar_15[1u].y = 1.0;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_13)\\n   * tmpvar_15)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * (1.0 - \\n    (tmpvar_13 * tmpvar_13)\\n  )));\\n  float tmpvar_16;\\n  tmpvar_16 = fract((tmpvar_14 + 0.3333333));\\n  mat2 tmpvar_17;\\n  tmpvar_17[uint(0)].x = -0.4990803;\\n  tmpvar_17[uint(0)].y = -0.8665558;\\n  tmpvar_17[1u].x = 0.8665558;\\n  tmpvar_17[1u].y = -0.4990803;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_16)\\n   * tmpvar_17)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_16 * tmpvar_16)\\n  )));\\n  float tmpvar_18;\\n  tmpvar_18 = fract((tmpvar_14 + 0.6666667));\\n  mat2 tmpvar_19;\\n  tmpvar_19[uint(0)].x = -0.5018377;\\n  tmpvar_19[uint(0)].y = 0.8649619;\\n  tmpvar_19[1u].x = -0.8649619;\\n  tmpvar_19[1u].y = -0.5018377;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_18)\\n   * tmpvar_19)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_18 * tmpvar_18)\\n  )));\\n  float tmpvar_20;\\n  tmpvar_20 = fract((tmpvar_14 + 1.0));\\n  mat2 tmpvar_21;\\n  tmpvar_21[uint(0)].x = 0.9999949;\\n  tmpvar_21[uint(0)].y = 0.003185092;\\n  tmpvar_21[1u].x = -0.003185092;\\n  tmpvar_21[1u].y = 0.9999949;\\n  xlat_mutableuv2 = ((uv_1 * (\\n    (q13 * tmpvar_20)\\n   * tmpvar_21)) * aspect.yx);\\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\\n    (xlat_mutableuv2 + 0.5)\\n   + ofs_2)))).xyz;\\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \\n    (tmpvar_20 * tmpvar_20)\\n  )));\\n  vec2 tmpvar_22;\\n  tmpvar_22.x = (ret1_3.x + ret1_3.z);\\n  tmpvar_22.y = (ret1_3.x - ret1_3.y);\\n  xlat_mutableret2 = (((\\n    (texture (sampler_blur1, fract((xlat_mutablerss + (tmpvar_22 / 2.0)))).xyz * scale1)\\n   + bias1) / tmpvar_10) * 64.0);\\n  vec4 tmpvar_23;\\n  tmpvar_23.w = 1.0;\\n  tmpvar_23.xyz = ((ret1_3 + (\\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\\n   * roam_sin).xyz) + (sqrt(xlat_mutableret2.zxy) * clamp (\\n    (1.0 - (ret1_3 * 4.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_23.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - bring up the big guns.json":
/*!***************************************************************!*\
  !*** ./presets/converted/martin - bring up the big guns.json ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":4,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.002705,\"wave_scale\":1.291486,\"wave_smoothing\":0.45,\"wave_mystery\":0.08,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0.99,\"ob_size\":0.025,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0.11,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1x\":0.6999,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":44,\"rad\":0.108525,\"tex_ang\":1.00531,\"tex_zoom\":1.531168,\"g\":1,\"b\":1,\"r2\":0.83,\"g2\":0.93,\"b2\":0.8,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trig = q24 * equal(q27%4,0);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 - ( 1/(dist+1))/2;\\ny = 1-x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q11/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;\"},{\"baseVals\":{\"enabled\":1,\"sides\":34,\"thickoutline\":1,\"x\":0.4,\"rad\":2.366958,\"tex_ang\":3.455753,\"tex_zoom\":0.993053,\"r\":0.5,\"b\":1,\"a\":0.2,\"r2\":0.7,\"g2\":0.4,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trig = q24 * equal(q27%4,2);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 + ( 1/(dist+1))/1.9;\\ny = 1-x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q11/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;\"},{\"baseVals\":{\"enabled\":1,\"sides\":44,\"x\":0.503,\"rad\":0.038857,\"tex_zoom\":0.609857,\"g\":0.1,\"a\":0.9,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trig = q24 * equal(q27%4,1);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 - ( 1/(dist+1))/1.9;\\ny = x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q11/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;\"},{\"baseVals\":{\"enabled\":1,\"sides\":63,\"y\":1,\"rad\":0.548217,\"tex_zoom\":2.223327,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trig = q24 * equal(q27%4,3);\\n\\ndist = bnot(trig)*(dist+q10/fps);\\n\\nx = .5 + ( 1/(dist+1))/1.9;\\ny = x;\\n\\nr0 = bnot(trig)*r0 + trig*rand(100)/100;\\ng0 = bnot(trig)*g0 + trig*rand(100)/100;\\nb0 = bnot(trig)*b0 + trig*rand(100)/100;\\n\\ncmax = max(max(r0,g0),b0);\\n\\nr = r0/cmax; r2 = r;\\ng = g0/cmax; g2 = g;\\nb = b0/cmax; b2 = b;\\n\\nrad = q11/(dist+1);\\n//rad = .2;\\na = 1 / (1+dist/4) ; a2 = 0;\"}],\"waves\":[{\"baseVals\":{\"sep\":120,\"additive\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);\"},{\"baseVals\":{\"usedots\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = sample;\\ny = 1-sample;\\na = (q24 * equal(q27%4,0));\\n\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.5, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att ;\\nq27 = index + 1;\\nq28 = -index2/100;\\nq29 = bnot(below(index2+index3,1));\\n\\npuls = dec_slow*puls + (1-dec_slow)*q29;\\nq32 = puls;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel1 = trel1 + 4.2*q1/fps*(q22);\\ntrel2 = trel2 + 3*q2/fps*(1);\\npx = .2*sin(trel1);\\npy = .1*cos(trel2);\\nq5 = px;\\nq6 = py;\\n\\nrotx = rotx + q5/fps*4;\\nroty = roty + q6/fps*4;\\nq15 = rotx;\\nq16 = roty;\\n\\nppx = ppx*dec_slow + (1-dec_slow)*px;\\nppy = ppy*dec_slow + (1-dec_slow)*py;\\nq7 = ppx;\\nq8 = ppy;\\n\\n\\nq10 = 20; //speed shot\\nq11 = .8; //brightness shot\\n\\n\\nzoom = 1;\\ndy = .00;\\ndx = .0;\\nwarp = .1;\",\"pixel_eqs_eel\":\"rot = .05 * q1 * (1-rad);\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - vec2(0.5, 0.5));\\n  float x_4;\\n  x_4 = (tmpvar_3.x * tmpvar_3.y);\\n  float tmpvar_5;\\n  tmpvar_5 = (64.0 * sqrt((x_4 * x_4)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_3);\\n  uv_1 = (uv + ((q28 * tmpvar_6) * (1.0 - \\n    ((1.0/(tmpvar_5)) * (q2 + 1.0))\\n  )));\\n  uv_1 = (uv_1 - ((\\n    clamp (((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6), vec2(-2.0, -2.0), vec2(2.0, 2.0))\\n   / 20.0) * rad));\\n  uv6_2 = (0.2 * cos((\\n    (uv_1 * 32.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (((texture (sampler_main, \\n    (((uv_1 - 0.5) * (0.95 + (0.1 * tmpvar_5))) + 0.5)\\n  ).xyz + vec3(\\n    ((0.002 / (sqrt(\\n      dot (uv6_2, uv6_2)\\n    ) - 0.004)) * (1.0 - rad))\\n  )) * 0.94) - 0.01);\\n  ret = tmpvar_7.xyz;\\n }\",\"comp\":\"vec2 xlat_mutablers;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q7;\\n  tmpvar_1.y = q8;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (((uv - 0.5) - tmpvar_1) * aspect.xy);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q5;\\n  tmpvar_3.y = q6;\\n  xlat_mutablers = (((uv_orig - 0.5) - tmpvar_3) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((22.0 * \\n    sqrt(dot (xlat_mutablers, xlat_mutablers))\\n  ) * q32) - 0.1);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q15;\\n  tmpvar_5.y = q16;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = fract(((\\n    (tmpvar_2 * (1.0 - pow (sqrt(\\n      dot (tmpvar_2, tmpvar_2)\\n    ), 3.0)))\\n   - 0.5) - (\\n    (texture (sampler_noise_hq, (((0.1 * \\n      (sin(tmpvar_4) / cos(tmpvar_4))\\n    ) * normalize(xlat_mutablers)) + tmpvar_5)).xyz * 0.04)\\n   * \\n    clamp ((10.0 - (7.0 * tmpvar_4)), 0.0, 1.0)\\n  ).xy));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((1.5 * texture (sampler_main, tmpvar_6).xyz) + ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - cherry brain wall mod.json":
/*!***************************************************************!*\
  !*** ./presets/converted/martin - cherry brain wall mod.json ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1.88,\"decay\":0.5,\"echo_zoom\":0.952,\"echo_alpha\":0.5,\"wave_mode\":6,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0,\"wave_scale\":1.211,\"wave_smoothing\":0.09,\"wave_mystery\":0.4,\"modwavealphastart\":1.42,\"modwavealphaend\":2,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":1.0099,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_x\":1,\"ob_size\":0,\"ob_r\":0.1,\"ob_b\":0.3,\"ib_size\":0.15,\"ib_r\":0.6,\"ib_g\":0.5,\"ib_b\":0.4,\"mv_l\":0,\"mv_a\":0,\"b1x\":0.6,\"b2x\":0.6,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":25,\"thickoutline\":1,\"textured\":1,\"rad\":0.5703,\"g\":1,\"b\":1,\"a\":0,\"r2\":1,\"b2\":1,\"a2\":0.5,\"border_a\":0},\"init_eqs_eel\":\"bob = 1.5;\\nro = 0;\\nred = rand(20);\",\"frame_eqs_eel\":\"rad = 0.57 + 0.1*sin(q1*1.24);\\n\\ntex_zoom = 1.2+0.4*sin(q3);\\ntex_ang = sin(q4*3.29);\\n\\nborder_a = q24/4;\\n\\nx = 0.5 + 0.10*sin(q2*0.62);\\ny = 0.5 + 0.10*sin(q3*0.73);\\na = 0.5 + 0.5*sin(q4*0.452);\\n\\na2 = min(0.8,1+sin(q4*1.6));\\na = 1-a2;\"},{\"baseVals\":{\"enabled\":1,\"sides\":15,\"thickoutline\":1,\"num_inst\":4,\"g\":1,\"b\":1,\"g2\":0,\"a2\":0.5,\"border_r\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"arg = (q10/num_inst + instance/num_inst)*6.283;\\n\\nrad1 = 0.25 ;\\n\\nccx = 0.5 + 0.1*sin(q4*2.7);\\nccy = 0.5 + 0.1*sin(q1*4.8);\\n\\nx = ccx + rad1*cos(arg * q11-q1*0.31)/q11;\\ny = ccy + rad1*sin(arg)*q32;\\n\\nrad = min(0.3,(bass_att+mid_att)*0.04);\\n\\n//rad *= 0.5+pow(sin(cos(q1)),4)*3;\\n\\nr = 0.5 + 0.4*sin(frame/4);\\nb = 0.5 + 0.4*sin(frame/4 + 2.1);\\ng = 0.5 + 0.4*sin(frame/4 + 4.2);\\nfac = 0.5;\\nr2 = r*fac; b2=b*fac; g2=g*fac;\\na = 1 ; a2 = q11/2;\\n\\nborder_a = (q27<3);\"},{\"baseVals\":{\"textured\":1,\"num_inst\":4,\"rad\":0.40272,\"tex_ang\":2.51327,\"tex_zoom\":0.55045,\"g\":0.95,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_ang = q3;\\nk1 = instance/num_inst*6.28+3.14/4;\\nx = 0.5 + 0.5*cos(k1);\\ny = 0.5 + 0.5*sin(k1);\\n\\n//border_a = q24;\"},{\"baseVals\":{\"enabled\":1,\"sides\":5,\"num_inst\":25,\"rad\":0.08195,\"tex_zoom\":0.90529,\"g\":1,\"b\":1,\"a\":0.2,\"r2\":0.3,\"g2\":0.3,\"b2\":0.3,\"a2\":0.2,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"if (instance==0,k1=0,k1 += 0.05*bass_att);\\n\\nk2 = k1+q10*6.283;\\nccx = 0.2*sin(q4*.96);\\nccy = 0.2*-sin(q3*.296);\\n\\nx = 0.5 + ccx + 0.3*cos(k2+sin(q2*2.29));\\ny = 0.5 + ccy + 0.3*sin(k2)*q32;\\n\\nang = k2;\\nrad = min(0.1,0.035*treb_att);\\n\\n//rad = 0.4; a=1; textured = 1;\"}],\"waves\":[{\"baseVals\":{\"additive\":1,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"n = -5000; loop (20000, megabuf(n)=0; gmegabuf(n)=0; n +=1; );\\n\\nMINBPM = 50; MAXBPM = 180; num_res = 80; num_sig=3;\\nblocksize = num_res*12+12; \\nreg04 = blocksize;\\n\\nsig = 0;\\nloop (num_sig,\\n  index = 0;\\n  loop (num_res,\\n    n = blocksize*sig + 12*index;\\n    BPM      = minbpm * pow(maxbpm/minbpm,index/num_res);\\n    gmegabuf(n) = BPM;\\n    index += 1;\\n  );\\nsig+=1);\\n\\npi = 3.1416;\\nOCTAVE = (num_res) * log(2) / log (MAXBPM / MINBPM);\\n\\nprog = 0;\\nbindex = int (rand(8));\\ncount5 = int (rand(8));\",\"frame_eqs_eel\":\"dt = min (1/fps,0.1) ; //Stability !\\ndec_f = 0.8; dec_m = 1 - 4*dt; dec_s = 1 - dt;\\n\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_s + beat*(1-dec_s);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.25);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_m;\\nbindex = (bindex + is_beat) %16;\\nq24 = is_beat;\\nq27 = bindex;\\n\\nsig=0; \\nloop (num_sig,\\n  excite = if (sig==0, bass-bass_att, if (sig==1, mid-mid_att, treb-treb_att));\\n  index = 0; maxquad = 0;\\n  m = sig*blocksize+num_res*12; // Start Infoblock;\\n  gmegabuf(m+2) = 0.001; //lok. MW\\n  gmegabuf(m+3) = 0; //lok. MAX\\n  loop (num_res, \\n    n = sig*blocksize+index*12;  omega=gmegabuf(n) * 6.283/60;\\n    gmegabuf (n+1) *= 1- 0.22*dt; \\n    EC_Steps = int (10*dt*omega)+1; dt1 = dt/EC_Steps;\\n    ex = excite / sqrt(omega);\\n    loop (EC_Steps, // Euler-Cauchy \\n      gmegabuf (n+1) += (ex - sqr(omega)*gmegabuf(n+2)) * dt1;\\n      gmegabuf (n+2) += gmegabuf(n+1) * dt1);\\n    beatcos  = gmegabuf(n+1);  beatsin = gmegabuf(n+2)*omega;\\n    quad     = sqrt (pow(beatsin,2) + pow(beatcos,2)) ;\\n    gmegabuf (m+4) += abs (gmegabuf(n+3)-Quad); //Lok Aenderung\\n    gmegabuf (n+3) = gmegabuf(n+3) *dec_m +  quad* (1-dec_m);\\n    if (gmegabuf(n+3) > gmegabuf(m+3),gmegabuf(m+3)=gmegabuf(n+3),0); //LOK MAX\\n    gmegabuf (m+2) += gmegabuf(n+3)/num_res; //LOK MW\\n    gmegabuf(n+4)= beatcos;\\n    gmegabuf(n+5)= beatsin;\\n  index += 1;);\\nsig+=1;);\\n\\n\\n//Beste raussuchen\\nsig = 0; quali = 0; bestsig = -1;\\nloop (num_sig,\\n  m = sig*blocksize+num_res*12; // Start Infoblock;\\n  tmp = gmegabuf(m+3)/gmegabuf(m+2) ;\\n  if (tmp > quali, quali = tmp; bestsig = sig;, 0);\\nsig += 1);\\n\\nindex = 0; maxind1 = 0; maxv *= dec_s;\\nloop (num_res, \\n  n = bestsig*blocksize+index*12; // Start Infoblock;\\n  tmpv = gmegabuf(n+3);\\n  if (tmpv > maxv, maxv=tmpv; maxind1=index, 0);\\nindex += 1;);\\n\\nBPM   = minbpm * pow(maxbpm/minbpm,maxind1/num_res);\\ntrel1 += BPM/60*dt;\\nq10 = trel1;\\nq11 = (BPM < 125) * (sin(q10*6.283/128)>0.3) * (quali >4) +1;\\nq12 = max(0,quali-2);\\n\\ntrig = is_beat && (bindex%2==0);\\nr1 = if (trig, rand(2)-1, r1);\\nr2 = if (trig, rand(2)-1, r2);\\nr3 = if (trig, rand(2)-1, r3);\\nr4 = if (trig, rand(2)-1, r4);\\n\\nv0 = (bass+mid+treb)/3;\\ndec = if (v0>vol,0.5,dec_s);\\nvol = vol*dec + (1-dec)*v0;\\ndir = if (bindex<12,1,-1);\\ntm1 += (r1>0.3)*dt*(0.8+vol)/1.8*dir;\\ntm2 += (r2>0.3)*dt*(0.8+vol)/2.3;\\ntm3 += (r3>0.3)*dt*(0.8+vol)/3.4;\\ntm4 += (r4>0.3)*dt*(0.8+vol)/3.6;\\n\\ntm1_ = dec_f*tm1_ + (1-dec_f)*tm1;\\ntm2_ = dec_f*tm2_ + (1-dec_f)*tm2;\\ntm3_ = dec_f*tm3_ + (1-dec_f)*tm3;\\ntm4_ = dec_f*tm4_ + (1-dec_f)*tm4;\\n\\nq1 = tm1_;\\nq2 = tm2_;\\nq3 = tm3_;\\nq4 = tm4_;\\n\\nq25 = is_beat * (v0 > 4)* (prog > 30);\\ncount5 += (is_beat && (v0 > 5));;\\n\\ncount6 += (bindex==0)*is_beat*(v0>3);\\nq26 = count5;\\n\\nwarp = cos(q1*0.29)/4;\\nzoom = 1 + 0.025*sin(q3-q1*1.32);\\nrot = .0;\\n\\ntrel3 += sin(q10*6.283)*dt;\\nq18 = trel3;\\n\\nq32 = aspecty;\\nprog += 1;\\nreg50 = dt;\\n\\ntrel4 += (q12 >1.5) * BPM/60*pi/2*dt;\\nq28 = -trel4;\\n\\ndec = if (v0 > vol2, 0.5, dec_m);\\nvol2 = vol2*dec + (1-dec)*v0;\\nq21 = min(1.8,(vol2/5+0.6));\\n\\ntrig = is_beat && (bindex%8==0);\\nif (trig,\\n  obs = rand(10)/30;\\n  iba =   rand(10)/100 * rand(10)/10;\\n,0);\\nob_size = obs;\\nib_a = iba;\\nib_r = 0.3 + 0.2*sin(time/11);\\nib_g = 0.3 + 0.2*sin(time/17);\\nib_b = 0.3 + 0.2*sin(time/7);\\n\\nmonitor = q12;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.03);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (cos(tmpvar_1.y) * sin(-(tmpvar_1.y)));\\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos(-(tmpvar_1.y)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \\n    ((tmpvar_2 * texsize.zw) * 12.0)\\n  )) * 0.98) - 0.008).xyz;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\"uniform sampler2D sampler_rand00;\\nfloat fc;\\nfloat size;\\nvec2 hor;\\nvec2 ver;\\nfloat xlat_mutableang1;\\nfloat xlat_mutableca;\\nvec2 xlat_mutabledz;\\nfloat xlat_mutablesa;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  fc = (0.5 + (0.3 * sin(q4)));\\n  size = (0.4 + (0.1 * sin(q2)));\\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  hor = (tmpvar_1 * 2.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  ver = (tmpvar_2 * 2.0);\\n  vec2 uv_3;\\n  float noise_4;\\n  vec3 ret_5;\\n  uv_3 = (((\\n    (uv - 0.5)\\n   * 2.0) / (1.0 + rad)) + 0.5);\\n  xlat_mutableuv1 = (((\\n    (uv_3 - 0.5)\\n   * aspect.xy) * (1.2 + \\n    (rand_preset.y * 0.4)\\n  )) + 0.5);\\n  xlat_mutableang1 = (((\\n    (q1 / 7.0)\\n   + \\n    (q2 / 9.0)\\n  ) + (q3 / 11.0)) - q26);\\n  xlat_mutableang1 = (xlat_mutableang1 * 1.8);\\n  xlat_mutableca = cos(xlat_mutableang1);\\n  xlat_mutablesa = sin(xlat_mutableang1);\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)].x = xlat_mutableca;\\n  tmpvar_6[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_6[1u].x = xlat_mutablesa;\\n  tmpvar_6[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((xlat_mutableuv1 - 0.5) * tmpvar_6) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = xlat_mutableuv1.x;\\n  tmpvar_7.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  mat2 tmpvar_8;\\n  tmpvar_8[uint(0)].x = xlat_mutableca;\\n  tmpvar_8[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_8[1u].x = xlat_mutablesa;\\n  tmpvar_8[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_7 - 0.5) * tmpvar_8) + 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = xlat_mutableuv1.x;\\n  tmpvar_9.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  mat2 tmpvar_10;\\n  tmpvar_10[uint(0)].x = xlat_mutableca;\\n  tmpvar_10[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_10[1u].x = xlat_mutablesa;\\n  tmpvar_10[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_9 - 0.5) * tmpvar_10) + 0.5);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = xlat_mutableuv1.x;\\n  tmpvar_11.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  mat2 tmpvar_12;\\n  tmpvar_12[uint(0)].x = xlat_mutableca;\\n  tmpvar_12[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_12[1u].x = xlat_mutablesa;\\n  tmpvar_12[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_11 - 0.5) * tmpvar_12) + 0.5);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = xlat_mutableuv1.x;\\n  tmpvar_13.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  mat2 tmpvar_14;\\n  tmpvar_14[uint(0)].x = xlat_mutableca;\\n  tmpvar_14[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_14[1u].x = xlat_mutablesa;\\n  tmpvar_14[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_13 - 0.5) * tmpvar_14) + 0.5);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = xlat_mutableuv1.x;\\n  tmpvar_15.y = (abs((xlat_mutableuv1.y - size)) + size);\\n  xlat_mutableuv1 = (((\\n    (tmpvar_15 - fc)\\n   * aspect.yx) + fc) + (0.1 * cos(\\n    (q4 * 2.72)\\n  )));\\n  vec2 tmpvar_16;\\n  tmpvar_16 = fract(xlat_mutableuv1);\\n  xlat_mutabledz.x = dot (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_16 - hor)).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (tmpvar_16 + hor)).xyz * scale1) + bias1)\\n  )), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_16 - ver)).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (tmpvar_16 + ver)).xyz * scale1) + bias1)\\n  )), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_17;\\n  tmpvar_17 = (0.5 / log((1.0 + \\n    pow ((uv_3.x - 0.5), 0.5)\\n  )));\\n  xlat_mutableuv4 = (uv_3 - 0.5);\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = (tmpvar_17 + (time * 0.1));\\n  tmpvar_18.y = (xlat_mutableuv4.y * tmpvar_17);\\n  xlat_mutableuv4 = tmpvar_18;\\n  noise_4 = ((texture (sampler_noise_lq, tmpvar_18).x + 0.25) * (1.0 - texture (sampler_noise_lq, (tmpvar_18 + \\n    (texsize.zw * -4.0)\\n  )).x));\\n  noise_4 = (noise_4 * (0.5 + dot (\\n    vec4(greaterThan (texture (sampler_rand00, tmpvar_18), vec4(0.5, 0.5, 0.5, 0.5)))\\n  , vec4(0.32, 0.49, 0.29, 0.0))));\\n  float tmpvar_19;\\n  tmpvar_19 = clamp ((q21 - (1.1 * rad)), 0.0, 1.0);\\n  ret_5 = ((0.08 + (\\n    (1.3 * (1.2 - tmpvar_19))\\n   * \\n    ((texture (sampler_blur2, tmpvar_16).xyz * scale2) + bias2)\\n  )) * (0.2 + noise_4));\\n  vec2 x_20;\\n  x_20 = (cos((12.0 * tmpvar_16)) + (xlat_mutabledz * 16.0));\\n  vec3 tmpvar_21;\\n  tmpvar_21 = ((tmpvar_19 / (\\n    sqrt(dot (x_20, x_20))\\n   + 0.07)) * ((texture (sampler_blur1, tmpvar_16).xyz * scale1) + bias1));\\n  ret_5 = (max (ret_5, tmpvar_21) + ((0.2 * tmpvar_19) * tmpvar_21));\\n  xlat_mutableang1 = (q28 / 2.0);\\n  xlat_mutableca = cos(xlat_mutableang1);\\n  xlat_mutablesa = sin(xlat_mutableang1);\\n  mat2 tmpvar_22;\\n  tmpvar_22[uint(0)].x = xlat_mutableca;\\n  tmpvar_22[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_22[1u].x = xlat_mutablesa;\\n  tmpvar_22[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_16 - 0.5) * tmpvar_22) + 0.5);\\n  vec2 tmpvar_23;\\n  tmpvar_23.x = xlat_mutableuv1.y;\\n  tmpvar_23.y = (abs((xlat_mutableuv1.x - size)) + size);\\n  mat2 tmpvar_24;\\n  tmpvar_24[uint(0)].x = xlat_mutableca;\\n  tmpvar_24[uint(0)].y = -(xlat_mutablesa);\\n  tmpvar_24[1u].x = xlat_mutablesa;\\n  tmpvar_24[1u].y = xlat_mutableca;\\n  xlat_mutableuv1 = (((tmpvar_23 - 0.5) * tmpvar_24) + 0.5);\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = xlat_mutableuv1.y;\\n  tmpvar_25.y = (abs((xlat_mutableuv1.x - size)) + size);\\n  xlat_mutableuv1 = tmpvar_25;\\n  float tmpvar_26;\\n  tmpvar_26 = cos((8.0 * tmpvar_25.x));\\n  ret_5 = (ret_5 + ((\\n    ((1.0 - rad) * 0.6)\\n   * \\n    clamp (((0.05 / abs(\\n      sqrt((tmpvar_26 * tmpvar_26))\\n    )) - 0.5), 0.0, 1.0)\\n  ) * noise_4));\\n  vec2 x_27;\\n  x_27 = (uv_3 - 0.5);\\n  vec3 tmpvar_28;\\n  tmpvar_28 = mix (vec3(dot (ret_5, vec3(0.32, 0.49, 0.29))), ret_5, vec3(clamp ((2.2 - \\n    (3.0 * sqrt(dot (x_27, x_27)))\\n  ), 0.0, 1.0)));\\n  ret_5 = tmpvar_28;\\n  vec4 tmpvar_29;\\n  tmpvar_29.w = 1.0;\\n  tmpvar_29.xyz = tmpvar_28;\\n  ret = tmpvar_29.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - city of shadows.json":
/*!*********************************************************!*\
  !*** ./presets/converted/martin - city of shadows.json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.958,\"wave_smoothing\":0.45,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0.005,\"ob_g\":0.5,\"ob_b\":0.5,\"ob_a\":0.1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":25.6,\"mv_y\":9.6,\"mv_l\":0,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"x\":0.09,\"y\":0.9,\"rad\":0.22437,\"tex_zoom\":1.76002,\"r2\":1,\"g2\":0,\"a2\":0.6,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"x\":0.26,\"y\":0.2,\"rad\":0.39317,\"tex_zoom\":6.19589,\"r\":0,\"g\":0.55,\"b\":0.5,\"g2\":0.4,\"b2\":0.4,\"a2\":0.07,\"border_r\":0.3,\"border_g\":0.7,\"border_b\":0.8,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":44,\"additive\":1,\"x\":0.503,\"rad\":0.03886,\"tex_zoom\":0.60986,\"g\":0.1,\"a\":0.9,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"rad\":0.01,\"tex_zoom\":0.49981,\"r\":0,\"g2\":0,\"border_r\":0.2,\"border_g\":0.7,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"samples\":282,\"sep\":20,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":3.91581,\"smoothing\":0.1,\"r\":0.2,\"g\":0.3,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"//******** INITIALIZATION *********\\nmyzoom = .1; //MyZoom\\n\\ntele = 1.5; //tele\\nffac = 2.4; //fractal density factor ffac\\nstart = 1;\\n\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; );\\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; );\\n\\ngmegabuf(0) = 0;  gmegabuf (1) = 2;  gmegabuf(2) = 1;  gmegabuf (3) = -4;\\ngmegabuf(4) = 3;  gmegabuf (5) = 0;  gmegabuf(6) = 1;  gmegabuf (7) = 5;\\ngmegabuf(8) = 1;  gmegabuf (9) = -3;  gmegabuf(10) = 2; gmegabuf (11) = -4;\\ngmegabuf(12) = -4; gmegabuf (13) = 1; gmegabuf(14) = 2; gmegabuf (15) = 0;\\n\\n\\ngvol = 1;\\nwait = 1;\",\"frame_eqs_eel\":\"fps_ = .0 * fps_ + 1*if(fps<=25,fps,25+.5*(fps-25));\\ndec_s = 1-.05*30/fps_;\\ndec_xs = 1-.01*30/fps_;\\n\\ndvol = (bass_att + mid_att + treb_att) - (bass+mid+treb);\\ngvol = gvol*dec_xs + (1-dec_xs) * max(0.1,dvol)*6;\\nq8 = min(gvol*.9,1);\\n\\ntrel = trel + sqrt(gvol)/fps_;\\nctrl = pow(max(0,sin(trel*.25)*5-4),4);\\nq31 = ctrl;\\nq32 = .2/(ctrl+.05);\\n\\nchange = (ctrl >= 0.8) && (t0 > 2) || (start == 1);\\nt0 = if ( change, 0, t0 + 1/fps);\\n\\nq7 = myzoom;\\nq16 = tele;\\nq17 = ffac;\\n\\n//Find random starting point\\nif (change == 1,\\n  par1 =  rand(100)/40-.5; //fractal parameter\\n  q19 = par1;\\n  while (exec2(\\n    up = rand(120)/100; //look up\\n\\n    ran1 = rand(800)/100;  ran2 = 0;  ran3 = 1.5 + up;\\n    PosX = rand(10);   PosY = rand(10);\\n    PosZ = if ((up >= 0.4) && (rand(10)> 5), 1.8+rand(100)/100, 2*(rand(100)/100-.5)-.75);\\n\\n    index = 0; mindist = 1; maxdist = 0; avg = 0;\\n    loop (17,\\n      dax = (index%4-1.5) * q16/8; day = (floor(index/4) -1.5) * q16/8;\\n      if (index==16, dax=0; day=0; ,0);\\n      c1 = cos(ran1+dax); c2 = cos(ran2); c3 = cos(ran3+day);\\n      s1 = sin(ran1+dax); s2 = sin(ran2); s3 = sin(ran3+day);\\n\\n      reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n      reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n      reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n      //***********BOT*************\\n      //Coord. Trans. must exactly match def in warp S. !!!!\\n      dist = 0.004;\\n      while (exec2(\\n        uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n        uvx += PosX; uvy += PosY; uvz += PosZ;\\n\\n        uv3x = (floor(uvx+511.99))%4;\\n        uv3y = (floor(uvy+511.99))%4;\\n\\n        uvx = 1-abs( 2*(uvx*.5-.25 - int(uvx*.5-.25))-1);\\n        uvy = 1-abs( 2*(uvy*.5-.25 - int(uvy*.5-.25))-1);\\n\\n       ang1 = atan2(uvy,uvx); len = sqrt(uvx*uvx+uvy*uvy)*7.5;\\n        mod1 = .3*gmegabuf( uv3y+uv3x*4);\\n        uvz -= mod1;\\n        len *= 1-.3*floor(uvz*12*mod1+q19);\\n        uvx = len; uvy = ang1; uvz = uvz;\\n\\n        uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;\\n        loop (7+1,\\n          uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n          uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n          uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n          slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n          uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *q17 + uvx0;\\n          uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *q17 + uvy0;\\n          uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *q17 + uvz0;\\n        );\\n        len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n        dist *= 1.05;\\n      ,(dist < 0.8) && (len > 15)));\\n       if (dist > maxdist, maxdist = dist, 0);\\n       if (dist < mindist, mindist = dist, 0);\\n       avg += dist/17;\\n      index += 1;\\n    ); //loop 17\\n  , (avg > 0.7) || (mindist < 0.1))); //end while\\n\\n  lposx = rand(100)/100;\\n  lposy = rand(100)/100;\\n\\n,0);\\n\\n\\n//Position\\nq4 = PosX; q5 = PosY; q6 = PosZ;\\nq1 = lposx+.3*sin(time*.07);\\nq2 = lposy+.3*sin(time*.1);\\n\\n  //Multiply new RotMat by old one\\n  q20 = reg20;\\n  q21 = reg21;\\n  q22 = reg22;\\n  q23 = reg23;\\n  q24 = reg24;\\n  q25 = reg25;\\n  q26 = reg26;\\n  q27 = reg27;\\n  q28 = reg28;\\n\\nq14 =  (start + ctrl)*.05;\\nstart = start * .95;\\n\\nwarp = 0.0; zoom = 1; dx = 0; dy = 0; rot = 0;\\nmonitor = dist;\\nq30 = start;\\nq3 = up;\\nq19 = par1;\\n\\nif (time > ttrig + wait, trig = 1, trig = 0);\\nif (trig, ttrig = time; wait = rand(20)/100, 0);\\nif (trig, flashx = rand(100)/70-.2; flashy = rand(100)/70-.2,0);\\nq10 = flashx; q11 = flashy;\\n\\nmonitor = q31;\",\"pixel_eqs_eel\":\"\",\"warp\":\"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablelimit;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec3 xlat_mutableuv2;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.98 - (2.0 * q14));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  float sus_4;\\n  vec3 ret_5;\\n  xlat_mutableuv1 = (((uv_orig - 0.5) * aspect.xy) * q16);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_pw_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.yz));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = tmpvar_6.xyz;\\n  vec3 tmpvar_8;\\n  tmpvar_8 = (tmpvar_6.xyz - 0.5);\\n  bool tmpvar_9;\\n  tmpvar_9 = (tmpvar_6.y < 0.2);\\n  if (tmpvar_9) {\\n    xlat_mutabledist = tmpvar_7.x;\\n  } else {\\n    vec4 na_10;\\n    vec4 tmpvar_11;\\n    tmpvar_11.xy = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(0.0, 1.0)))).yz;\\n    tmpvar_11.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(-1.0, 0.0)))).yz;\\n    vec4 tmpvar_12;\\n    tmpvar_12 = floor(((255.0 * tmpvar_11) + vec4(0.5, 0.5, 0.5, 0.5)));\\n    vec4 tmpvar_13;\\n    tmpvar_13.xy = texture (sampler_pc_main, (uv_orig - texsize.zw)).yz;\\n    tmpvar_13.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(1.0, -1.0)))).yz;\\n    vec4 tmpvar_14;\\n    tmpvar_14 = floor(((255.0 * tmpvar_13) + vec4(0.5, 0.5, 0.5, 0.5)));\\n    vec4 tmpvar_15;\\n    tmpvar_15.xy = texture (sampler_pc_main, (uv_orig + texsize.zw)).yz;\\n    tmpvar_15.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(-1.0, 1.0)))).yz;\\n    vec4 tmpvar_16;\\n    tmpvar_16 = floor(((255.0 * tmpvar_15) + vec4(0.5, 0.5, 0.5, 0.5)));\\n    vec4 tmpvar_17;\\n    tmpvar_17.xy = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(0.0, -1.0)))).yz;\\n    tmpvar_17.zw = texture (sampler_pc_main, (uv_orig + (texsize.zw * vec2(1.0, 0.0)))).yz;\\n    vec4 tmpvar_18;\\n    tmpvar_18 = floor(((255.0 * tmpvar_17) + vec4(0.5, 0.5, 0.5, 0.5)));\\n    vec4 tmpvar_19;\\n    tmpvar_19.xy = (tmpvar_12.yw + (0.015625 * tmpvar_12.xz));\\n    tmpvar_19.zw = (tmpvar_14.yw + (0.015625 * tmpvar_14.xz));\\n    vec4 tmpvar_20;\\n    tmpvar_20.xy = (tmpvar_16.yw + (0.015625 * tmpvar_16.xz));\\n    tmpvar_20.zw = (tmpvar_18.yw + (0.015625 * tmpvar_18.xz));\\n    vec4 tmpvar_21;\\n    tmpvar_21 = max (tmpvar_19, tmpvar_20);\\n    na_10.zw = tmpvar_21.zw;\\n    na_10.xy = max (tmpvar_21.xy, tmpvar_21.zw);\\n    xlat_mutabledist = ((1.007812 - (\\n      max (na_10.x, na_10.y)\\n     * 0.0039216)) + (0.0013 * tmpvar_8.x));\\n  };\\n  vec2 tmpvar_22;\\n  tmpvar_22 = (0.0039216 * floor((\\n    (255.0 * texture (sampler_pc_main, uv_orig).yz)\\n   + vec2(0.5, 0.5))));\\n  float tmpvar_23;\\n  tmpvar_23 = min (xlat_mutabledist, ((1.007812 - tmpvar_22.y) - (0.015625 * tmpvar_22.x)));\\n  xlat_mutabledist = tmpvar_23;\\n  xlat_mutablelimit = (15.0 + (15.0 * tmpvar_23));\\n  vec3 tmpvar_24;\\n  tmpvar_24.xy = (xlat_mutableuv1 * tmpvar_23);\\n  tmpvar_24.z = tmpvar_23;\\n  xlat_mutableuv2 = (((tmpvar_24 / q7) * tmpvar_1) + tmpvar_2);\\n  vec3 uvi_25;\\n  uvi_25.z = xlat_mutableuv2.z;\\n  float mod1_26;\\n  float len_27;\\n  vec3 zzlo_28;\\n  vec3 zz_29;\\n  vec2 tmpvar_30;\\n  tmpvar_30 = floor((xlat_mutableuv2.xy + 63.99));\\n  mod1_26 = mat4(0.0, 0.9, 0.3, -1.2, 0.6, 0.0, -0.9, 0.3, 0.3, 0.3, 0.6, 0.6, -1.2, 1.5, -1.2, 0.0)[int((float(mod (tmpvar_30.y, 4.0))))][int((float(mod (tmpvar_30.x, 4.0))))];\\n  uvi_25.xy = (1.0 - abs((\\n    (fract(((xlat_mutableuv2.xy - 0.5) * 0.5)) * 2.0)\\n   - 1.0)));\\n  float angle_31;\\n  float tmpvar_32;\\n  tmpvar_32 = abs(uvi_25.y);\\n  if ((uvi_25.x >= 0.0)) {\\n    angle_31 = (1.0 - ((uvi_25.x - tmpvar_32) / (uvi_25.x + tmpvar_32)));\\n  } else {\\n    angle_31 = (3.0 - ((uvi_25.x + tmpvar_32) / (tmpvar_32 - uvi_25.x)));\\n  };\\n  angle_31 = ((angle_31 * 3.141593) / 4.0);\\n  float tmpvar_33;\\n  if ((uvi_25.y < 0.0)) {\\n    tmpvar_33 = -(angle_31);\\n  } else {\\n    tmpvar_33 = angle_31;\\n  };\\n  len_27 = (sqrt(dot (uvi_25.xy, uvi_25.xy)) * 7.5);\\n  uvi_25.z = (xlat_mutableuv2.z - mod1_26);\\n  len_27 = (len_27 * (1.0 - (0.3 * \\n    floor((((12.0 * uvi_25.z) * mod1_26) + q19))\\n  )));\\n  vec3 tmpvar_34;\\n  tmpvar_34.x = len_27;\\n  tmpvar_34.y = tmpvar_33;\\n  tmpvar_34.z = uvi_25.z;\\n  zz_29 = ((2.0 * clamp (tmpvar_34, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - tmpvar_34);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zzlo_28 = zz_29;\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  zz_29 = ((2.0 * clamp (zz_29, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_29);\\n  zz_29 = (zz_29 * (clamp (\\n    max ((0.25 / dot (zz_29, zz_29)), 0.25)\\n  , 0.0, 1.0) * 4.0));\\n  zz_29 = ((q17 * zz_29) + tmpvar_34);\\n  float tmpvar_35;\\n  tmpvar_35 = sqrt(dot (zz_29, zz_29));\\n  vec3 tmpvar_36;\\n  tmpvar_36.x = sqrt(dot (zzlo_28, zzlo_28));\\n  tmpvar_36.y = tmpvar_35;\\n  tmpvar_36.z = (((tmpvar_33 - mod1_26) - fract(\\n    (zz_29.y * 0.0001)\\n  )) * 0.3);\\n  float tmpvar_37;\\n  tmpvar_37 = mix (tmpvar_35, tmpvar_36.x, tmpvar_23);\\n  vec2 tmpvar_38;\\n  tmpvar_38 = (0.0039216 * floor((\\n    (255.0 * texture (sampler_pc_main, uv_orig).yz)\\n   + vec2(0.5, 0.5))));\\n  xlat_mutablestruc = (clamp ((\\n    (((-(xlat_mutablelimit) + tmpvar_35) * 0.02) + 1.0)\\n   + tmpvar_36.z), 0.0, 1.0) - (float(\\n    (((1.007812 - tmpvar_38.y) - (0.015625 * tmpvar_38.x)) > (1.1 - ((texture (sampler_blur1, \\n      (uv_orig + (0.1 * (tmpvar_3 - 0.5)))\\n    ).xyz * scale1) + bias1).z))\\n  ) * 0.5));\\n  sus_4 = sustain;\\n  if (tmpvar_9) {\\n    sus_4 = 1.0;\\n  };\\n  float x_39;\\n  x_39 = (1.0 - tmpvar_23);\\n  vec2 tmpvar_40;\\n  tmpvar_40 = (0.0039216 * floor((\\n    (255.0 * vec2(x_39))\\n   + vec2(0.5, 0.5))));\\n  vec2 tmpvar_41;\\n  tmpvar_41.x = ((64.0 * (x_39 - tmpvar_40.x)) + 0.495);\\n  tmpvar_41.y = tmpvar_40.x;\\n  vec3 tmpvar_42;\\n  vec4 tmpvar_43;\\n  tmpvar_43 = texture (sampler_main, uv_orig);\\n  tmpvar_42.x = mix (clamp (xlat_mutablestruc, 0.0, 1.0), tmpvar_43.x, sus_4);\\n  tmpvar_42.yz = tmpvar_41;\\n  vec3 tmpvar_44;\\n  tmpvar_44 = mix (tmpvar_42, ((tmpvar_43.xyz * sus_4) - 0.003921569), vec3(clamp ((tmpvar_37 - xlat_mutablelimit), 0.0, 1.0)));\\n  ret_5.yz = tmpvar_44.yz;\\n  ret_5.x = (tmpvar_44.x + (tmpvar_8.x * -0.02));\\n  vec4 tmpvar_45;\\n  tmpvar_45.w = 1.0;\\n  tmpvar_45.xyz = ret_5;\\n  ret = tmpvar_45.xyz;\\n }\",\"comp\":\"vec3 skycol;\\nfloat xlat_mutablebdist;\\nfloat xlat_mutablecloud;\\nvec3 xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\nfloat xlat_mutablez;\\n shader_body { \\n  skycol = (vec3(0.1333333, 0.1666667, 0.3333333) * (2.0 - q8));\\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q1;\\n  tmpvar_1.y = q2;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = q10;\\n  tmpvar_2.y = q11;\\n  vec2 uv_3;\\n  vec3 sky_4;\\n  vec2 trel_5;\\n  float z0_6;\\n  uv_3 = (uv + (texsize.zw * 0.5));\\n  uv_3 = (uv_3 + ((q31 * 0.1) * (texture (sampler_pw_noise_lq, \\n    (((uv_3 - 0.5) * q32) + (rand_frame.xy * q31))\\n  ) - 0.5)).xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.5;\\n  tmpvar_7.y = (0.5 + q3);\\n  xlat_mutableuv1 = (uv_3 - tmpvar_7);\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (texture (sampler_main, uv_3).xyz, ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1), vec3(0.2, 0.2, 0.2));\\n  xlat_mutablebdist = (1.0 - tmpvar_8.z);\\n  z0_6 = clamp ((0.25 / (xlat_mutableuv1.y - 0.3)), -0.7, 0.0);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q20;\\n  tmpvar_9.y = q21;\\n  trel_5 = ((0.015 * time) * tmpvar_9);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (xlat_mutableuv1.x * z0_6);\\n  tmpvar_10.y = z0_6;\\n  xlat_mutableuv2 = (tmpvar_10 - trel_5);\\n  vec2 uvi_11;\\n  uvi_11 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \\n    (texture (sampler_noise_hq, uvi_11).xy + (texture (sampler_noise_hq, (uvi_11 * 2.0)).xy / 2.0))\\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\\n  xlat_mutablez = (z0_6 + (xlat_mutablecloud * 0.015));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  tmpvar_12.y = xlat_mutablez;\\n  xlat_mutableuv2 = (tmpvar_12 - trel_5);\\n  vec2 uvi_13;\\n  uvi_13 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \\n    (texture (sampler_noise_hq, uvi_13).xy + (texture (sampler_noise_hq, (uvi_13 * 2.0)).xy / 2.0))\\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\\n  xlat_mutablez = (z0_6 + (xlat_mutablecloud * 0.015));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  tmpvar_14.y = xlat_mutablez;\\n  xlat_mutableuv2 = (tmpvar_14 - trel_5);\\n  vec2 uvi_15;\\n  uvi_15 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \\n    (texture (sampler_noise_hq, uvi_15).xy + (texture (sampler_noise_hq, (uvi_15 * 2.0)).xy / 2.0))\\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\\n  xlat_mutablez = (z0_6 + (xlat_mutablecloud * 0.015));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  tmpvar_16.y = xlat_mutablez;\\n  xlat_mutableuv2 = (tmpvar_16 - trel_5);\\n  vec2 uvi_17;\\n  uvi_17 = ((xlat_mutableuv2 * 3.0) + (2.0 * trel_5));\\n  xlat_mutablecloud = dot (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.015 * \\n    (texture (sampler_noise_hq, uvi_17).xy + (texture (sampler_noise_hq, (uvi_17 * 2.0)).xy / 2.0))\\n  ))), vec4(0.32, 0.49, 0.29, 0.0));\\n  vec2 x_18;\\n  x_18 = ((uv_3 - (xlat_mutablecloud * 0.2)) - tmpvar_2);\\n  xlat_mutableuv3 = (uv_3 * vec2(6.0, 3.0));\\n  sky_4 = (((\\n    (1.0 - xlat_mutablecloud)\\n   * skycol) + (\\n    ((clamp ((bass_att - 1.0), 0.0, 1.0) / sqrt(dot (x_18, x_18))) * (1.0 - xlat_mutablecloud))\\n   * vec3(0.0, 0.3, 0.6))) * clamp ((\\n    (16.0 * ((texture (sampler_blur1, fract(\\n      (xlat_mutableuv3 + (floor(xlat_mutableuv3.x) * 0.3))\\n    )).xyz * scale1) + bias1).x)\\n   - \\n    (64.0 * (xlat_mutableuv1.y + 0.1))\\n  ), 0.0, 1.0));\\n  sky_4 = (sky_4 * clamp ((\\n    (xlat_mutablebdist * 16.0)\\n   - 15.0), 0.0, 1.0));\\n  vec2 x_19;\\n  x_19 = (uv_3 - tmpvar_1);\\n  xlat_mutablestruc = ((mix (\\n    (q8 * clamp (pow (tmpvar_8.xxx, vec3(1.0, 1.8, 4.0)), 0.0, 1.0))\\n  , tmpvar_8.xxx, vec3(xlat_mutablebdist)) * (1.2 - xlat_mutablebdist)) * clamp ((1.25 - \\n    sqrt(dot (x_19, x_19))\\n  ), 0.0, 1.0));\\n  xlat_mutablestruc = (xlat_mutablestruc + ((\\n    ((((8.0 * tmpvar_8.x) * tmpvar_8.x) * clamp ((\\n      (2.0 * treb_att)\\n     - 3.0), 0.0, 1.0)) * mix (xlat_mutablebdist, (1.0 - xlat_mutablebdist), float((rand_frame.x > 0.5))))\\n   * \\n    (1.2 - clamp ((4.0 * (\\n      (((texture (sampler_blur1, fract(\\n        (uv_3 - ((2.0 - tmpvar_2) * 0.01))\\n      )).xyz * scale1) + bias1).z - 0.1)\\n     - tmpvar_8.z)), 0.0, 1.0))\\n  ) * skycol));\\n  vec4 tmpvar_20;\\n  tmpvar_20.w = 1.0;\\n  tmpvar_20.xyz = (sky_4 + xlat_mutablestruc);\\n  ret = tmpvar_20.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - cope - laser dome.json":
/*!***********************************************************!*\
  !*** ./presets/converted/martin - cope - laser dome.json ***!
  \***********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":0.952,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.312,\"wave_scale\":1.229,\"wave_smoothing\":0,\"wave_mystery\":0.2,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0.005,\"ob_a\":0.2,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_a\":1,\"mv_x\":32,\"mv_y\":24,\"mv_l\":0,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":23,\"additive\":1,\"num_inst\":128,\"rad\":0.01,\"tex_zoom\":4.57482,\"r\":0,\"g\":1,\"b\":1,\"g2\":0,\"border_r\":0.8,\"border_g\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"k1 = instance/num_inst*6.28;\\n\\noz = k1  +time*.1;\\noz = 1+int(oz)-oz;\\n\\nfov = .001;\\ntrel = time;\\n\\np1 = sin(trel);\\np2 = sin(trel/3);\\np3 = sin(trel/5);\\np4 = sin(trel/7);\\n\\n\\nang1 = 6.28*sin(k1*17);\\nrad1 = 4*pow(cos(k1*7),2)+1;\\n\\n\\nox = rad1*cos(ang1)+ oz*oz*.0/fov*(0*p1*oz + 5*p2*(1-oz));\\noy = rad1*sin(ang1)+ oz*oz*.0/fov*(0*p3*oz + 5*p4*(1-oz));\\n\\n//oz = oz*oz;\\n//oz = sqrt(oz);\\n\\nk2 = .002;\\nx = fov*ox/(oz+k2)+.5;\\ny = 0*fov*oy/(oz+k2)+.5;\\ny = 0;\\nrad = abs(fov/oz);\\na = above(oz,0) *(2-oz)/2*q23;\\na2 = 0;\\n\\n\"},{\"baseVals\":{\"sides\":24,\"additive\":1,\"y\":1,\"rad\":0.08277,\"tex_zoom\":0.49981,\"r\":0,\"g\":0.4,\"b\":1,\"g2\":0,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":32,\"textured\":1,\"rad\":0.73893,\"tex_zoom\":1.22384,\"g\":1,\"b\":1,\"g2\":0,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.54822,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"y = sample;\\nx = .0 + value1*.1;\"},{\"baseVals\":{\"samples\":232,\"usedots\":1,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"index2 = rand(8);\\npx = rand(100);\\npy = rand(100);\\npz = rand(100);\",\"frame_eqs_eel\":\"dec_med = pow (0.85, 30/fps);\\ndec_slow = pow (0.95, 30/fps);\\nbeat = mid;\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 1.2*avg) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nspb = min(t0-t0a + .01,2); t0a = t0;\\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\\nsdev = if(is_beat,sdev * .96 + .04*pow(mindev+.01,2),sdev);\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak+.01;\\nq24 = is_beat;\\nq27 = index;\\nq28 = index2;\\npuls = puls*dec_med + (1-dec_med)*q24*16*bnot(index%4);\\nq23 = min(1,puls);\\n\\ntest = test + above(beat,avg*1.2) * (beat-avg)/fps*30*4;\\ntic = q27/2;\\n\\nl1angz = tic*0+ test;\\nl1angy = (1+sin(2*test))*1.6/2;\\nsw1 = (q28%2) * above(avg,1);\\nl1angy = l1angy-1/q22*sw1+ (1-sw1)*q22/8;\\nl1angy = l1angy+above(avg,1.2)*2*sin(q22);\\nl1angz = l1angz+above(avg,1.2)*(q22)*above(q28,4);\\n\\nq10 = cos(l1angz)*sin(l1angy);\\nq11 = sin(l1angz)*sin(l1angy);\\nq12 = abs(cos(l1angy)*cos(l1angy));\\n\\ntrig = q24 * bnot(index%2);\\nran1 = if (trig,rand(100)/100-.5, ran1);\\nran2 = if (trig,rand(100)/100-.5, ran2);\\nq13 = ran1/2;\\nq14 = ran2/2;\\n\\npp =  4*avg*q13/fps;\\npp = 1/fps;\\ncrit= int(q27/8);\\npx = px + equal(crit,0)*pp;\\npy = py + equal(crit,1)*pp;\\npz = pz + equal(crit,2)*pp;\\n\\ntrel = trel + 1/spb_/fps;\\njump = int(trel) * below(sdev,.004*avg);\\n\\nq15 = px+jump;\\nq16 = py+jump;\\nq17 = pz+jump;\\n\\nq30 = above(q28,5);\\nmonitor = avg;\\n\\nq29 = q22/16*(above(q22,1.5)+.8-avg)+(sin(time/5)-.8)*.1;\\n\\nzoom = 1;\\nwarp = 0.0; rot = 0;\\ndx = 0;\\ndy = -.02;\",\"pixel_eqs_eel\":\"\",\"warp\":\"float clip1;\\nvec2 xlat_mutableKugel1;\\nvec3 xlat_mutablelight;\\nfloat xlat_mutablerad1;\\nfloat xlat_mutableray1;\\nvec2 xlat_mutablersk;\\nfloat xlat_mutablesun1;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\nvec2 xlat_mutableuv5;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q13;\\n  tmpvar_1.y = q14;\\n  clip1 = (float((rand_preset.x >= 0.5)) + 1.0);\\n  vec2 uv_2;\\n  uv_2 = uv;\\n  vec2 uv2_3;\\n  float ff_5;\\n  float k1_6;\\n  float ky_7;\\n  vec3 ret_8;\\n  xlat_mutableuv1 = ((uv - vec2(0.5, 0.5)) * aspect.xy);\\n  xlat_mutableuv3 = (58.0 * xlat_mutableuv1);\\n  ky_7 = clamp ((0.04 - (xlat_mutableuv3.y / 40.0)), 0.0, 1.0);\\n  k1_6 = (xlat_mutableuv3.x - (sign(xlat_mutableuv3.x) * 14.0));\\n  k1_6 = (k1_6 - ((\\n    sign(k1_6)\\n   * q28) * 2.0));\\n  k1_6 = (k1_6 - (sign(k1_6) * 8.0));\\n  ff_5 = (16.0 + (16.0 * rand_preset.z));\\n  for (int n_4 = 1; float(n_4) <= 6.0; n_4++) {\\n    k1_6 = (k1_6 + ((\\n      ((-(ff_5) * float(n_4)) * sign(k1_6))\\n     * ky_7) * ky_7));\\n    ky_7 = clamp ((ky_7 - 0.1), 0.0, 1.0);\\n  };\\n  float tmpvar_9;\\n  tmpvar_9 = clamp (k1_6, -1.57, 1.57);\\n  k1_6 = tmpvar_9;\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((cos(tmpvar_9) - 0.02), 0.0, 1.0);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = cos(q15);\\n  tmpvar_11.y = 0.0;\\n  xlat_mutablersk = (xlat_mutableuv1 + (0.3 * tmpvar_11));\\n  xlat_mutablerad1 = ((16.0 * sqrt(\\n    dot (xlat_mutablersk, xlat_mutablersk)\\n  )) * (2.0 + cos(q17)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((9.0 - \\n    (7.0 * xlat_mutablerad1)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_12;\\n  tmpvar_12 = (1.0 + slow_roam_sin);\\n  xlat_mutablelight = ((0.1 / xlat_mutablerad1) * pow (vec4(q23), tmpvar_12)).xyz;\\n  uv_2 = (uv + (xlat_mutableKugel1 * 0.1));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = 0.0;\\n  tmpvar_13.y = cos((q16 / 2.0));\\n  xlat_mutablersk = (xlat_mutableuv1 + (0.3 * tmpvar_13));\\n  xlat_mutablerad1 = ((16.0 * sqrt(\\n    dot (xlat_mutablersk, xlat_mutablersk)\\n  )) * (2.0 + cos(\\n    (q17 * 2.0)\\n  )));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((9.0 - \\n    (7.0 * xlat_mutablerad1)\\n  ), 0.0, 1.0));\\n  xlat_mutablelight = (xlat_mutablelight + ((0.1 / xlat_mutablerad1) * pow (vec4(q23), tmpvar_12)).xyz);\\n  uv_2 = (uv_2 + (xlat_mutableKugel1 * 0.1));\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = cos((q15 / 3.0));\\n  tmpvar_14.y = 0.0;\\n  xlat_mutablersk = (xlat_mutableuv1 + (0.3 * tmpvar_14));\\n  xlat_mutablerad1 = ((16.0 * sqrt(\\n    dot (xlat_mutablersk, xlat_mutablersk)\\n  )) * (2.0 + cos(\\n    (q17 * 3.0)\\n  )));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((9.0 - \\n    (7.0 * xlat_mutablerad1)\\n  ), 0.0, 1.0));\\n  xlat_mutablelight = (xlat_mutablelight + ((0.1 / xlat_mutablerad1) * pow (vec4(q23), tmpvar_12)).xyz);\\n  uv_2 = (uv_2 + (xlat_mutableKugel1 * 0.1));\\n  uv_2 = (uv_2 + (tmpvar_10 * 0.05));\\n  vec2 tmpvar_15;\\n  tmpvar_15 = ((uv_2.yx - 0.5) * (2.0 + tmpvar_10));\\n  float ex_16;\\n  ex_16 = (0.5 + ((0.3 * q28) / 8.0));\\n  float tmpvar_17;\\n  tmpvar_17 = sqrt(((tmpvar_15.x * tmpvar_15.x) + (tmpvar_15.y * tmpvar_15.y)));\\n  float tmpvar_18;\\n  float tmpvar_19;\\n  tmpvar_19 = (min (abs(\\n    (tmpvar_15.y / tmpvar_15.x)\\n  ), 1.0) / max (abs(\\n    (tmpvar_15.y / tmpvar_15.x)\\n  ), 1.0));\\n  float tmpvar_20;\\n  tmpvar_20 = (tmpvar_19 * tmpvar_19);\\n  tmpvar_20 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)\\n     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)\\n   * tmpvar_20) + 0.9999793) * tmpvar_19);\\n  tmpvar_20 = (tmpvar_20 + (float(\\n    (abs((tmpvar_15.y / tmpvar_15.x)) > 1.0)\\n  ) * (\\n    (tmpvar_20 * -2.0)\\n   + 1.570796)));\\n  tmpvar_18 = (tmpvar_20 * sign((tmpvar_15.y / tmpvar_15.x)));\\n  if ((abs(tmpvar_15.x) > (1e-08 * abs(tmpvar_15.y)))) {\\n    if ((tmpvar_15.x < 0.0)) {\\n      if ((tmpvar_15.y >= 0.0)) {\\n        tmpvar_18 += 3.141593;\\n      } else {\\n        tmpvar_18 = (tmpvar_18 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_18 = (sign(tmpvar_15.y) * 1.570796);\\n  };\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = (pow (tmpvar_17, ex_16) * cos((tmpvar_18 * ex_16)));\\n  tmpvar_21.y = (pow (tmpvar_17, ex_16) * sin((tmpvar_18 * ex_16)));\\n  uv2_3 = (0.5 + ((1.0 - \\n    abs(((fract(\\n      ((vec2(mod (tmpvar_21, clip1))) * 0.5)\\n    ) * 2.0) - 1.0))\\n  ) - 0.5));\\n  ret_8 = ((texture (sampler_main, uv2_3.yx).xyz + texture (sampler_main, uv_orig).xyz) / 2.0);\\n  xlat_mutableuv4 = (((uv_2 - 0.5) - tmpvar_1) + tmpvar_10);\\n  vec2 tmpvar_22;\\n  tmpvar_22.x = q10;\\n  tmpvar_22.y = q11;\\n  xlat_mutableuv5 = (normalize(xlat_mutableuv4) - tmpvar_22);\\n  vec2 x_23;\\n  x_23 = (xlat_mutableuv5 / q12);\\n  xlat_mutableray1 = (clamp ((1.0 - \\n    sqrt(dot (x_23, x_23))\\n  ), 0.0, 1.0) + ((0.001 / \\n    sqrt(dot (xlat_mutableuv5, xlat_mutableuv5))\\n  ) / sqrt(\\n    dot (xlat_mutableuv4, xlat_mutableuv4)\\n  )));\\n  xlat_mutablesun1 = (clamp ((0.002 / \\n    sqrt(dot (xlat_mutableuv4, xlat_mutableuv4))\\n  ), 0.0, 1.0) / (1.05 - q12));\\n  vec3 tmpvar_24;\\n  tmpvar_24.x = q27;\\n  tmpvar_24.y = (q27 + 3.0);\\n  tmpvar_24.z = (q27 + 6.0);\\n  ret_8 = (ret_8 + ((xlat_mutableray1 + xlat_mutablesun1) * fract(\\n    (tmpvar_24 / 16.0)\\n  )));\\n  vec2 tmpvar_25;\\n  tmpvar_25 = sin(((uv2_3 * 2.0) + (0.2 * \\n    ((float(mod (q27, 8.0))) - 4.0)\\n  )));\\n  ret_8 = (ret_8 + (0.015 / sqrt(\\n    dot (tmpvar_25, tmpvar_25)\\n  )));\\n  ret_8 = (ret_8 + ((\\n    pow (tmpvar_10, 3.0)\\n   * q29) * (1.0 + roam_sin)).xyz);\\n  ret_8 = (ret_8 + xlat_mutablelight);\\n  ret_8 = (ret_8 * ((1.0 - \\n    (3.3 / fps)\\n  ) - (0.02 * \\n    dot (((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29))\\n  )));\\n  vec4 tmpvar_26;\\n  tmpvar_26.w = 1.0;\\n  tmpvar_26.xyz = ret_8;\\n  ret = tmpvar_26.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 tmpvar_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = clamp ((pow (texture (sampler_main, uv).xyz, vec3(1.2, 1.2, 1.2)) / vec3(1.2, 1.2, 1.2)), 0.0, 1.0);\\n  tmpvar_1 = (tmpvar_2 * (tmpvar_2 * (3.0 - \\n    (2.0 * tmpvar_2)\\n  )));\\n  float tmpvar_3;\\n  tmpvar_3 = clamp (q20, 0.0, 1.0);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = mix (vec3(dot (tmpvar_1, vec3(0.32, 0.49, 0.29))), tmpvar_1, vec3((tmpvar_3 * (tmpvar_3 * \\n    (3.0 - (2.0 * tmpvar_3))\\n  ))));\\n  ret = tmpvar_4.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - crystal palace.json":
/*!********************************************************!*\
  !*** ./presets/converted/martin - crystal palace.json ***!
  \********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":5,\"wave_dots\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":5.552,\"wave_smoothing\":0.504,\"wave_mystery\":-1,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_g\":0,\"wave_b\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"textured\":1,\"x\":0.8,\"rad\":0.242435,\"tex_ang\":1.884956,\"tex_zoom\":1.728514,\"r\":0.8,\"g\":1,\"b\":0.5,\"a\":0.6,\"r2\":0.9,\"g2\":0.9,\"b2\":1,\"a2\":0.3,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"x\":0.13,\"y\":0.19,\"rad\":0.11045,\"tex_ang\":3.14159,\"tex_zoom\":1.711049,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":5,\"additive\":1,\"x\":0.9,\"rad\":0.22613,\"g\":0.2,\"b\":0.2,\"g2\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":36,\"additive\":1,\"rad\":0.18717,\"r\":0,\"g\":0.02,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":0.5033,\"g\":0.6,\"b\":0.4,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\\nx0 = .5 + .4 * sin(time/2);\\n\\nangle = rand(1000)/1000*6.28;\\nrad =  rand(1000)/1000;\\nrad = rad * rad;\\n\\nx = x0 + .1*rad*sin(angle);\\ny = .5 + .1*rad*cos(angle);\\n a = 1-rad;\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trel = q11-.0;\\nt1 = int(trel);\\nt2 = trel - int(trel);\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trel = q11-.33;\\nt1 = int(trel);\\nt2 = trel - int(trel);\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trel = q11-.66;\\nt1 = int(trel);\\nt2 = trel - int(trel);\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.98, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\n\\nvol = bass_att + treb_att;\\nv2 = v2 * dec_slow + vol * (1-dec_slow) ;\\nq26 = max(atan (vol - v2*.8),.3);\\n\\nq27 = index + 1;\\n\\nsw = sw*dec_med + (1-dec_med)*(index2%2);\\nq28 = sw;\\n\\nk1 =  is_beat*bnot(index);\\nk2 =  is_beat*bnot(index);\\n\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.1416/2;\\nmonitor = k1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/6);\\nq6 = -sin(time/6);\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1;\\nrot = -0;\\n\\nmovez = movez + .006*(q1+1.1)*30/fps;\\nq29 = movez;\\nrota = rota + .003*(2-q1)*30/fps;\\nq30 = rota;\\nq31 = 2 + 16*abs(cos(time/18));\\nq32 = cos(time/23)/4;\",\"pixel_eqs_eel\":\"\",\"warp\":\"vec2 xlat_mutablers;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv6;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 xlat_varmod_2;\\n  vec2 uv2_3;\\n  float ang2_4;\\n  float dist_5;\\n  float z_6;\\n  vec3 ret_7;\\n  uv_1 = uv_orig;\\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\\n  float tmpvar_8;\\n  tmpvar_8 = ((16.0 * sqrt(\\n    dot (xlat_mutableuv1, xlat_mutableuv1)\\n  )) + time);\\n  z_6 = tmpvar_8;\\n  xlat_mutablers = (clamp ((\\n    (sin(tmpvar_8) / cos(tmpvar_8))\\n   * \\n    normalize(xlat_mutableuv1)\\n  ), vec2(-5.0, -5.0), vec2(5.0, 5.0)) / 2.0);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = sin((xlat_mutableuv1 * q31));\\n  dist_5 = (sqrt(dot (tmpvar_9, tmpvar_9)) * ((\\n    abs(xlat_mutableuv1.x)\\n   + \\n    abs(xlat_mutableuv1.y)\\n  ) + q32));\\n  float tmpvar_10;\\n  float tmpvar_11;\\n  tmpvar_11 = (min (abs(\\n    (tmpvar_9.y / tmpvar_9.x)\\n  ), 1.0) / max (abs(\\n    (tmpvar_9.y / tmpvar_9.x)\\n  ), 1.0));\\n  float tmpvar_12;\\n  tmpvar_12 = (tmpvar_11 * tmpvar_11);\\n  tmpvar_12 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_12) + 0.05368138) * tmpvar_12) - 0.1173503)\\n     * tmpvar_12) + 0.1938925) * tmpvar_12) - 0.3326756)\\n   * tmpvar_12) + 0.9999793) * tmpvar_11);\\n  tmpvar_12 = (tmpvar_12 + (float(\\n    (abs((tmpvar_9.y / tmpvar_9.x)) > 1.0)\\n  ) * (\\n    (tmpvar_12 * -2.0)\\n   + 1.570796)));\\n  tmpvar_10 = (tmpvar_12 * sign((tmpvar_9.y / tmpvar_9.x)));\\n  if ((abs(tmpvar_9.x) > (1e-08 * abs(tmpvar_9.y)))) {\\n    if ((tmpvar_9.x < 0.0)) {\\n      if ((tmpvar_9.y >= 0.0)) {\\n        tmpvar_10 += 3.141593;\\n      } else {\\n        tmpvar_10 = (tmpvar_10 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_10 = (sign(tmpvar_9.y) * 1.570796);\\n  };\\n  ang2_4 = (0.1 * floor((16.0 * tmpvar_10)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = cos(ang2_4);\\n  tmpvar_13.y = sin(ang2_4);\\n  z_6 = (1.0 - cos((8.0 * dist_5)));\\n  float tmpvar_14;\\n  tmpvar_14 = clamp (z_6, 0.0, 1.0);\\n  z_6 = tmpvar_14;\\n  float tmpvar_15;\\n  tmpvar_15 = float((tmpvar_14 >= 0.5));\\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\\n  uv_1 = (uv_orig + ((\\n    ((1.0 - tmpvar_15) * 0.03)\\n   * xlat_mutablers.yx) + (\\n    ((0.5 * tmpvar_15) * tmpvar_14)\\n   * \\n    normalize(((0.5 * tmpvar_9) + tmpvar_13))\\n  )));\\n  mat2 tmpvar_16;\\n  tmpvar_16[uint(0)] = _qb.xy;\\n  tmpvar_16[1u] = _qb.zw;\\n  xlat_mutableuv6 = (xlat_mutableuv1 * tmpvar_16);\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = q5;\\n  tmpvar_17.y = q6;\\n  uv2_3 = (((0.7 * xlat_mutableuv1) + (0.3 * \\n    sin(((xlat_mutableuv1 * 16.0) + (4.0 * tmpvar_17)))\\n  )) * 0.2);\\n  vec4 tmpvar_18;\\n  tmpvar_18 = texture (sampler_main, uv_1);\\n  vec3 tmpvar_19;\\n  tmpvar_19 = ((tmpvar_18.xyz + vec3((\\n    abs((0.01 / (sqrt(xlat_mutableuv6.x) + 0.001)))\\n   * \\n    (rad + 0.2)\\n  ))) + vec3((q26 * clamp (\\n    (0.001 / sqrt(dot (uv2_3, uv2_3)))\\n  , 0.0, 1.0))));\\n  xlat_varmod_2 = (1.0 - ((texture (sampler_noise_lq, \\n    ((0.5 * uv_1) + (time * 0.01))\\n  ) - 0.2).xyz * (tmpvar_18.xyz - \\n    (0.5 * ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1))\\n  )));\\n  ret_7 = (((\\n    (1.0 - tmpvar_15)\\n   * tmpvar_19) * xlat_varmod_2) + ((tmpvar_15 * tmpvar_19) * xlat_varmod_2));\\n  ret_7 = ((ret_7 * 0.98) - 0.03);\\n  vec4 tmpvar_20;\\n  tmpvar_20.w = 1.0;\\n  tmpvar_20.xyz = ret_7;\\n  ret = tmpvar_20.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableblur;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  float ang2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = cos(q30);\\n  float tmpvar_6;\\n  tmpvar_6 = sin(q30);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_5) - (uv_1.y * tmpvar_6));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_6) + (uv_1.y * tmpvar_5));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract(q29));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (2.093333 + q30);\\n  float tmpvar_7;\\n  tmpvar_7 = cos(ang2_4);\\n  float tmpvar_8;\\n  tmpvar_8 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.3333333 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (4.186667 + q30);\\n  float tmpvar_9;\\n  tmpvar_9 = cos(ang2_4);\\n  float tmpvar_10;\\n  tmpvar_10 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.6666667 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  ang2_4 = (6.28 + q30);\\n  float tmpvar_11;\\n  tmpvar_11 = cos(ang2_4);\\n  float tmpvar_12;\\n  tmpvar_12 = sin(ang2_4);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q29)));\\n  inten_2 = ((4.0 * dist_3) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableuv3 = (((3.0 * xlat_mutableuv2) * dist_3) + 0.5);\\n  xlat_mutableblur = (((texture (sampler_blur1, \\n    fract(xlat_mutableuv3)\\n  ).xyz * scale1) + bias1) * vec3(0.8, 0.9, 1.0));\\n  xlat_mutableret1 = max (xlat_mutableret1, ((texture (sampler_main, xlat_mutableuv3).xyz + xlat_mutableblur) * inten_2));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (xlat_mutableret1 - 0.1);\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - elusive impressions mix2 - flacc mess proph nz+2.json":
/*!******************************************************************************************!*\
  !*** ./presets/converted/martin - elusive impressions mix2 - flacc mess proph nz+2.json ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":0.952,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":4,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken_center\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":2.107,\"wave_smoothing\":0,\"wave_mystery\":-0.22,\"modwavealphastart\":0.81,\"modwavealphaend\":1.4,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.6,\"wave_g\":0.5,\"wave_b\":0,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":16,\"textured\":1,\"num_inst\":5,\"x\":0.73,\"rad\":0.29466,\"tex_zoom\":2.79176,\"r\":0.7,\"g\":0.7,\"b\":1,\"g2\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trig = q25;\\na = trig*min(bass+treb,1); a2 = trig*0;\\n//a = min(bass+treb-1,1);\\nx0 = x0 *bnot(trig) + trig*int(rand(100))/100;\\ny0 = y0 *bnot(trig) + trig*int(rand(100))/100;\\n\\n\\nk1 = instance/num_inst*6.28;\\nampl = .1*q22+.1;\\n\\n\\nx0 = .5 +q15*ampl *cos(k1+q17); y0 = .5+ q16*ampl*sin(k1+q17);\\n\\n\\ntex_ang = int(rand(20))/3;\\n//tex_ang = time;\\nrad = .1 + int(rand(8))/12;\\n\\nx = x0; y = y0;\\nr = .7+.3*sin(time/12);\\nb = .7+.3*sin(time/15);\\ng = .7+.3*sin(time/8);\\nr2 = r; b2 = b; g2 = g;\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"num_inst\":37,\"rad\":0.0364,\"ang\":0.81681,\"tex_ang\":0.37699,\"tex_zoom\":1.02841,\"g\":1,\"b\":1,\"a\":0.05,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"k1 = instance/num_inst*6.28;\\ntmp = q17/32+time*.1;\\ntrel = tmp-int(tmp);\\n\\nyes = above(sin(time/9.5),0);\\n\\nbright = 6*q2*q2*yes+.1*min(q8,1);\\nborder_a = bright;\\n\\ntmp = 2*sin(time/12)-1;\\na = .5*yes*pow(2,-18*abs(k1-6.28*trel)) * above(tmp,0)*tmp*tmp;\\nampl = .1;\\nrad = .02+.0*sin(k1*4+time);\\nx = .5 +q15*ampl *cos(k1+q17); y = .5+ q16*ampl*sin(k1+q17);\\n\\nr0 = sin(time/7);\\ng0 = sin(time/5);\\nb0 = sin(time/9);\\n\\nborder_r = .8 + .2*r0;\\nborder_g = .8 + .2*g0;\\nborder_b = .8 + .2*b0;\\n\\n\\n//r = .5*r0; g = .5*g0; b = 0.5*b0; ;\\n\\n//r2 = 0; g2 = 0; b2 = 0;\\n\\na2 = 0;\\n\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"additive\":1,\"thickoutline\":1,\"num_inst\":33,\"r\":0,\"g\":0.5,\"g2\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = int(rand(int(q1)))/5+instance-instance;\\ntrans2 = int(rand(int(q1)))/5+instance-instance;\\ntrans3 = int(rand(int(q1)))/5+instance-instance;\\na = trans;\\n\\nx = (sin(q23)+1.57)*.3 + int(rand(15))*0.004*(bass_att+treb_att+mid_att)*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = (cos(q23)+1.57)*.3 + int(rand(15))*0.004*(bass_att+treb_att+mid_att)*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q1)))/15+instance-instance;\\nr=int(rand(q1))*.1+instance-instance;\\ng=int(rand(q1))*.1+instance-instance;\\nb=int(rand(q1))*.1+instance-instance;\\nr2=int(rand(q1))*.1+instance-instance;\\ng2=int(rand(q1))*.1+instance-instance;\\nb2=int(rand(q1))*.1+instance-instance;\\nborder_r=int(rand(q1))*.1+instance-instance;\\nborder_g=int(rand(q1))*.1+instance-instance;\\nborder_b=int(rand(q1))*.1+instance-instance;\"},{\"baseVals\":{\"enabled\":1,\"sides\":3,\"thickoutline\":1,\"textured\":1,\"num_inst\":311,\"rad\":0.01,\"tex_ang\":0.62832,\"r\":0,\"g2\":0,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"sep\":256,\"spectrum\":1,\"smoothing\":0.8,\"a\":0.04},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sw = (1-sw)*above(sample,0);\\n\\nosa = sample*above(sample,0);\\n\\nmod = pow(value1*2,2)*sign(value1)*.5;\\n\\nmod = value1;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample*.5+.25);\\ny = sample*.5+.25;\\ny = (y-0.5)/(q32) + 0.5;\\nx = 1 - mod*.5;\\n\\nosa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\nr = .5 + sin(q23*.9 +mo)*.5;\\ng = .5 + sin(q23*.89+mo + 1.5472)*.5;\\nb = .5 + sin(q23*.88+mo + 2.8944)*.5;\\n\\n//a = 3 - abs(mod)*12;\\n//a = 3-sw;\\n//a = max(0,min(a,1));\"},{\"baseVals\":{\"enabled\":1,\"sep\":256,\"spectrum\":1,\"smoothing\":0.8,\"a\":0.04},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sw = (1-sw)*below(sample,1);\\n\\nosa = sample*above(sample,0);\\n\\nmod = pow(value2*2,2)*sign(value2)*.5;\\n\\nmod = value2;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample*.5+.25);\\ny = sample*.5+.25;\\ny = (y-0.5)/(q32) + 0.5;\\nx = 0+ mod*.5;\\n\\nosa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\nr = .5 + sin(q23*.95+mo)*.5;\\ng = .5 + sin(q23*.96+mo + 1.5472)*.5;\\nb = .5 + sin(q23*.97+mo + 2.8944)*.5;\\n\\n//a = 3 - abs(mod)*12;\\n//a = 3-sw;\\n//a = max(0,min(a,1));\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"avg = 1;\\nindex = int(rand(8));\\nindex2 = int(rand(8));\\nran = 1;\\nspb_=.3;\\nsdev = .1;\\ntrel2 = rand (100)/100;\",\"frame_eqs_eel\":\"vol=bass+treb+mid;\\nq1=max(1,min(5.5,vol*1.15));\\natime=atime+vol;\\nq23=atime*.02;\\ndec_med = pow (0.9, 30/fps); dec_slow = pow (0.98, 30/fps);\\nbeat = bass+mid+treb;\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%12;\\n\\nspb = min(t0-t0a + .01,2); t0a = t0;\\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\\nsdev = if(is_beat,sdev * .9 + .1*pow(mindev+.02,2),sdev);\\n\\nq20 = avg; q21 = beat;\\nq22 = peak+.1; \\nq24 = is_beat;\\nq27 = index; q28 = index2;\\n\\ntrel = trel + 1/fps/spb_*4; itrel = int(trel);\\nq25 =  above(itrel, itrel_);\\nq30 = itrel%2;\\nitrel_ = itrel;\\nq31 = itrel;\\n\\nma = ma + peak/fps ;\\nmx=mx*dec_med+(1-dec_med)*cos(ma);\\nmy=my*dec_med+(1-dec_med)*sin(ma+trel/16);\\nq15 = mx ; q16 = my ; q17 = ma;\\n\\n//first par: off; second: on\\nsw1 = if(sw1,bnot(q24*bnot(int(rand(20)))),q24*bnot(int(rand(20))));\\nsw2 = if(sw2,bnot(q24*bnot(int(rand(10)))),q24*bnot(int(rand(80))));\\nsw3 = if(sw3,bnot(q24*bnot(int(rand(10)))),q24*bnot(int(rand(100+10000*sdev))));\\n\\n//********* variation parameters warp shader\\nq6 = sin(time/15)*sin(time/27)*.2; //zz weighting\\nq10 = sin(time/8); //ring\\nq10 = q10*q10*.1; \\nq11 = 1.5+sin(time/7.8); //zoom uv2\\nq12 = if(below(sdev,.015)*bnot(q8),q25,1); //go\\nq13 = .5+sin(time/17); //pow noise warp s\\nq19 = sin(time/5.3)*.2; //sunpos\\n\\n//********* variation parameters comp shader\\nq3 = sw1;//mirror \\nq4 = .02/sdev; //unused ###\\nq5 = max(min(4*sin(trel/64)-3,1),0)*.4; //water\\nq7 = below(sdev,.004)*(index2%2); //flash\\nq2 = abs(q19)*sqrt(q15*q15+q16*q16); //avoid black - frame eq2\\n\\ntrel2 = trel2+.003*q22*q22/fps;\\ntmp = sin(trel2);\\ntmp = 20*tmp-19;\\nq8 =  tmp*above(tmp,0)*(4/max(q22-4,0.2)+4); // dyn zoom\\nq26 = above(q22,12)*(q22-12)*2; //# ok???\\n\\ntmp = index2/6;\\nq14 = abs((tmp-int(tmp))-.5)*6+1; //ang multi\\n\\ntmp =sin(trel/4*3.14); //sym rot\\njmp = jmp + above(tmp,.5)*tmp/fps*8*sw2;\\nq9 = jmp*equal(q14,1)*below(sdev,0.04)+time*above(sin(q17/23),.9);\\nq18 = tmp * bnot(q8) * sw3; //waber\\n\\nmonitor = sw1;\\nrot = .003;\\nwarp = .0;\\nzoom = 1+(avg-log(sdev))/200;\\n//dx = tmp*.01*above(abs(tmp),.95);\\nq32=aspecty;monitor=vol;\\nchng=sin(time*.5);\\ncthr=.99;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\\n\\nmonitor=mq1;\",\"pixel_eqs_eel\":\"\",\"warp\":\"mat2 ofs;\\nfloat xlat_mutablenoise;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablezv;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = q15;\\n  tmpvar_1.y = q16;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)].x = texsize.z;\\n  tmpvar_2[uint(0)].y = 0.0;\\n  tmpvar_2[1u].x = 0.0;\\n  tmpvar_2[1u].y = texsize.w;\\n  ofs = (tmpvar_2 * 2.0);\\n  vec3 ret_3;\\n  xlat_mutableuv1 = (uv - 0.5);\\n  vec2 v_4;\\n  v_4.x = ofs[0].x;\\n  v_4.y = ofs[1].x;\\n  vec2 v_5;\\n  v_5.x = ofs[0].x;\\n  v_5.y = ofs[1].x;\\n  vec2 v_6;\\n  v_6.x = ofs[0].y;\\n  v_6.y = ofs[1].y;\\n  vec2 v_7;\\n  v_7.x = ofs[0].y;\\n  v_7.y = ofs[1].y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (texture (sampler_main, (uv + v_4)) - texture (sampler_main, (uv - v_5))).z;\\n  tmpvar_8.y = (texture (sampler_main, (uv + v_6)) - texture (sampler_main, (uv - v_7))).z;\\n  xlat_mutablezv = (time * 0.1);\\n  xlat_mutableuv2 = ((q11 * xlat_mutableuv1) + (0.04 * time));\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = xlat_mutableuv2;\\n  tmpvar_9.z = xlat_mutablezv;\\n  vec3 tmpvar_10;\\n  tmpvar_10.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_10.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_11.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_12;\\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_12.z = (xlat_mutablezv * 7.0);\\n  xlat_mutablenoise = (((\\n    (texture (sampler_noisevol_hq, tmpvar_9).z + (texture (sampler_noisevol_hq, tmpvar_10).z / 2.0))\\n   + \\n    (texture (sampler_noisevol_hq, tmpvar_11).z / 4.0)\\n  ) + (texture (sampler_noisevol_hq, tmpvar_12).z / 8.0)) - 1.0);\\n  float tmpvar_13;\\n  tmpvar_13 = pow (xlat_mutablenoise, q13);\\n  xlat_mutablenoise = tmpvar_13;\\n  xlat_mutableuv2 = ((xlat_mutableuv1 * (1.0 + \\n    (0.5 * q2)\\n  )) + (tmpvar_13 * 0.1));\\n  float tmpvar_14;\\n  tmpvar_14 = (((texture (sampler_blur3, \\n    ((xlat_mutableuv1 / 4.0) + 0.5)\\n  ).xyz * scale3) + bias3) + 0.2).x;\\n  vec2 x_15;\\n  x_15 = (xlat_mutableuv2 - (tmpvar_1 * q19));\\n  ret_3 = ((q12 * (\\n    ((((\\n      clamp ((0.0005 / abs((\\n        sqrt(dot (x_15, x_15))\\n       - \\n        (q10 / q22)\\n      ))), 0.0, 1.0)\\n     * \\n      (0.5 + normalize(roam_cos))\\n    .xyz) / tmpvar_14) + (texture (sampler_main, (\\n      (xlat_mutableuv1 + 0.5)\\n     + \\n      (q6 * tmpvar_8)\\n    )) * 0.98).xyz) - 0.01)\\n   - \\n    (tmpvar_14 * 0.1)\\n  )) + ((1.0 - q12) * texture (sampler_main, uv).xyz));\\n  vec4 tmpvar_16;\\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_3.x > (q21 * roam_cos.y)) && (ret_3.x <= (q24 * roam_sin.x)))) {\\n    ret_3.y = (ret_3.y - (tmpvar_16.x * 0.5));\\n  };\\n  if (((ret_3.y > (q22 * roam_sin.x)) && (ret_3.y <= (q25 * roam_cos.x)))) {\\n    ret_3.z = (ret_3.z - (tmpvar_16.y * 0.5));\\n  };\\n  if (((ret_3.z > (q23 * roam_cos.x)) && (ret_3.z <= (q26 * roam_sin.y)))) {\\n    ret_3.x = (ret_3.x - (tmpvar_16.z * 0.5));\\n  };\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_3;\\n  ret = tmpvar_17.xyz;\\n }\",\"comp\":\"float xlat_mutableang2;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = ((0.1 / rad) * q15);\\n  tmpvar_3.y = ((ang * 0.2) * q22);\\n  uv_1 = (uv_1 / (1.0 + (q8 * \\n    sqrt(dot (uv_1, uv_1))\\n  )));\\n  uv_1 = (uv_1 * (1.0 - (\\n    (float(mod (q28, 2.0)))\\n   / 4.0)));\\n  uv_1 = (uv_1 * (1.0 + (\\n    (q5 * texture (sampler_noise_mq, tmpvar_3).x)\\n   * rad)));\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  xlat_mutableang2 = ((1.57 * q14) + ((q28 * 3.14) / 4.0));\\n  float tmpvar_4;\\n  tmpvar_4 = cos(xlat_mutableang2);\\n  float tmpvar_5;\\n  tmpvar_5 = sin(xlat_mutableang2);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_4) - (uv_1.y * tmpvar_5));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_5) + (uv_1.y * tmpvar_4));\\n  xlat_mutableuv2 = (xlat_mutableuv2 / (1.0 + (q26 * \\n    sqrt(dot (uv_1, uv_1))\\n  )));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (0.5 * q18)));\\n  if ((q3 == 1.0)) {\\n    xlat_mutableuv2 = xlat_mutableuv2.yx;\\n  };\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\\n  float tmpvar_6;\\n  tmpvar_6 = (q28 * 3.14);\\n  xlat_mutableang2 = ((3.14 * q14) + (tmpvar_6 / 4.0));\\n  float tmpvar_7;\\n  tmpvar_7 = cos(xlat_mutableang2);\\n  float tmpvar_8;\\n  tmpvar_8 = sin(xlat_mutableang2);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (-0.5 * q18)));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\\n  xlat_mutableang2 = ((4.71 * q14) + (tmpvar_6 / 4.0));\\n  float tmpvar_9;\\n  tmpvar_9 = cos(xlat_mutableang2);\\n  float tmpvar_10;\\n  tmpvar_10 = sin(xlat_mutableang2);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_9) - (uv_1.y * tmpvar_10));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_10) + (uv_1.y * tmpvar_9));\\n  xlat_mutableuv2 = (xlat_mutableuv2 / (1.0 + (q26 * \\n    sqrt(dot (uv_1, uv_1))\\n  )));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (0.5 * q18)));\\n  if ((q3 == 1.0)) {\\n    xlat_mutableuv2 = xlat_mutableuv2.yx;\\n  };\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\\n  xlat_mutableang2 = ((6.28 * q14) + ((q28 * 3.14) / 4.0));\\n  float tmpvar_11;\\n  tmpvar_11 = cos(xlat_mutableang2);\\n  float tmpvar_12;\\n  tmpvar_12 = sin(xlat_mutableang2);\\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_11) - (uv_1.y * tmpvar_12));\\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_12) + (uv_1.y * tmpvar_11));\\n  xlat_mutableuv2 = (xlat_mutableuv2 * (1.0 + (-0.5 * q18)));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz);\\n  xlat_mutableret1 = (xlat_mutableret1 * ((1.0 - q7) + (\\n    (q7 * q25)\\n   / 2.0)));\\n  ret_2 = (1.0 - exp((\\n    -(xlat_mutableret1)\\n   * 4.0)));\\n  vec3 tmpvar_13;\\n  tmpvar_13 = pow (ret_2, vec3(1.5, 1.5, 1.5));\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (vec3(dot (tmpvar_13, vec3(0.32, 0.49, 0.29))), tmpvar_13, vec3(clamp ((q20 / 3.0), 0.0, 1.0)));\\n  ret_2 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\\n  if (((tmpvar_14.x > (q26 * roam_cos.y)) && (tmpvar_14.x <= (q23 * roam_sin.x)))) {\\n    ret_2.z = (tmpvar_14.z - (tmpvar_15.x * 0.5));\\n  };\\n  if (((tmpvar_14.y > (q25 * roam_sin.x)) && (tmpvar_14.y <= (q22 * roam_cos.x)))) {\\n    ret_2.x = (tmpvar_14.x - (tmpvar_15.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * roam_cos.x)) && (ret_2.z <= (q21 * roam_sin.y)))) {\\n    ret_2.y = (tmpvar_14.y - (tmpvar_15.z * 0.5));\\n  };\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_2;\\n  ret = tmpvar_16.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - gate to moria.json":
/*!*******************************************************!*\
  !*** ./presets/converted/martin - gate to moria.json ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":2,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":20.944651,\"wave_smoothing\":0,\"wave_mystery\":0.08,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0.99,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0,\"ib_a\":0.3,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":0.47,\"rad\":0.24057,\"tex_zoom\":0.14057,\"g2\":0,\"b2\":0.3,\"a2\":1,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\nx = .5; y = .5;\\na = q24; \\na2 = q24;\\n//a = 1;\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"thickoutline\":1,\"rad\":0.05134,\"tex_zoom\":0.12288,\"r\":0.5,\"g2\":0,\"a2\":0.3,\"border_r\":0,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"x\":0.503,\"rad\":0.01,\"tex_zoom\":0.609857,\"r\":0,\"a\":0,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\ndy = .1 * sin(time*14);;\\ndx = q1*dy;\\n\\nx = .5 + dx;\\ny = .5 + dy;\\n\\na = q25; a2 = q25;\\nrad = q21/110;\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.548217,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":100,\"thick\":1,\"scaling\":0.045052,\"smoothing\":0.1,\"a\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t2 = .45 + rand(10)/100;\",\"point_eqs_eel\":\"k1 = bnot((sample*100+time)%2);\\n\\ndy = .015*above(sin(sample*11),0) \\n    +.008*above(sin(time+sample*74),0)\\n    +.008*above(sin(time+sample*128),0);\\n \\ndx = .01*above(sin(sample*27),0) + \\n      +.01*above(sin(time+sample*134),0);\\n\\nx = .2*(sample-.5) + .5 + dx;\\ny = t2 + dy;\\n\\na = q24 * k1 * bnot(q27%4);\\n\\nr = .6; g = 0; b = .6;\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.02,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nhld = hld * dec_med + q24;\\nq25 = min(hld,1);\\nmonitor = q25;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nrota = rota * dec_med + q1 * bnot(index2) * (1-dec_med);\\nq5 = .2*rota;\",\"pixel_eqs_eel\":\"rot = q5*(sin(q22*4*(1-rad)));\\nzoom = 1.08 ;\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (((0.99 * vec3(\\n    dot ((texture (sampler_main, uv).xyz + 0.03), vec3(0.32, 0.49, 0.29))\\n  )) - 0.02) - ((0.02 / \\n    (rad + (0.002 * q27))\\n  ) * (\\n    (texture (sampler_blur1, (uv * (1.0 + (0.01 * q1)))).xyz * scale1)\\n   + bias1)));\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - ghost city.json":
/*!****************************************************!*\
  !*** ./presets/converted/martin - ghost city.json ***!
  \****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.159809,\"wave_smoothing\":0.45,\"wave_mystery\":0.08,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"wave_y\":0.9,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1x\":0.6999,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"x\":0.48,\"y\":0.4,\"rad\":0.21778,\"tex_zoom\":1.140166,\"g\":1,\"b\":1,\"r2\":1,\"g2\":0.6,\"a2\":1,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"thickoutline\":1,\"x\":0.4,\"rad\":2.366958,\"tex_ang\":3.455753,\"tex_zoom\":0.993053,\"r\":0.5,\"b\":1,\"a\":0.2,\"r2\":0.7,\"g2\":0.4,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a2 =0;a = 0;\\na = q24/2;\"},{\"baseVals\":{\"x\":0.503,\"rad\":0.038857,\"tex_zoom\":0.609857,\"g\":0.1,\"a\":0.9,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = .3+rand(10)/30;\\ny = .3+rand(10)/30;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\n\\nis_beat = above(time, t0+.03);\\nt0 = is_beat*time + (1-is_beat)*t0;\\n\\n\\na = min(q21/2 ,.9) * is_beat;\\nrad = a*a/3 ;\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.548217,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"sep\":120,\"additive\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;\",\"point_eqs_eel\":\"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.1416/4;\\nq27 = index + 1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0;\\nrot = -0.00 * index;\\n\\nq32 = pow(0.996, 30/fps); //fade\\nq5 = (sin(time/11)+1)/5;\\n\\nmovez = movez + .06/fps*(1.1+q1);\\nq6 = movez;\\n\\nq7 = .005*sin(time/15);\",\"pixel_eqs_eel\":\"\",\"warp\":\"vec3 xlat_mutablenoise;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  vec3 copy_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.5;\\n  tmpvar_2.y = q5;\\n  xlat_mutableuv1 = (uv - tmpvar_2);\\n  float tmpvar_3;\\n  tmpvar_3 = (1.0/(xlat_mutableuv1.y));\\n  xlat_mutablers0.x = (xlat_mutableuv1.x * tmpvar_3);\\n  xlat_mutablers0.y = tmpvar_3;\\n  xlat_mutablers.x = xlat_mutablers0.x;\\n  xlat_mutablers.y = (tmpvar_3 + (time * 0.3));\\n  xlat_mutablenoise = (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 63.0)), vec4(0.32, 0.49, 0.29, 0.0))) * (dot (texture (sampler_pw_noise_lq, \\n    (xlat_mutablers / 12.0)\\n  ), vec4(0.32, 0.49, 0.29, 0.0)) + 0.5));\\n  xlat_mutablenoise = (xlat_mutablenoise * (clamp (\\n    ((10.0 * xlat_mutablenoise) - 8.0)\\n  , 0.0, 1.0) * clamp (\\n    (2.0 / tmpvar_3)\\n  , 0.0, 1.0)));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = uv.x;\\n  tmpvar_4.y = (uv.y - (0.024 / tmpvar_3));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = uv.x;\\n  tmpvar_5.y = (uv.y - (0.012 / tmpvar_3));\\n  copy_1 = (texture (sampler_main, tmpvar_4).xyz + texture (sampler_main, tmpvar_5).xyz);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = uv.x;\\n  tmpvar_6.y = (uv.y - (0.006 / tmpvar_3));\\n  copy_1 = (copy_1 + texture (sampler_main, tmpvar_6).xyz);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((xlat_mutablenoise + (\\n    (((copy_1 / 3.0) * (1.0 + slow_roam_cos).xyz) / 2.0)\\n   * 0.99)) - 0.005);\\n  ret = tmpvar_7.xyz;\\n }\",\"comp\":\"vec3 xlat_mutablecont;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers2;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  dist_3 = (1.0 - fract(q6));\\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = fract(((uv_1 * dist_3) + 0.55));\\n  xlat_mutableneu = texture (sampler_main, tmpvar_4).xyz;\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\\n  xlat_mutablecont = max (vec3(0.0, 0.0, 0.0), ((\\n    -(texture (sampler_main, tmpvar_4).xyz)\\n   + \\n    ((texture (sampler_blur1, (tmpvar_4 + q7)).xyz * scale1) + bias1)\\n  ) * inten_2));\\n  dist_3 = (1.0 - fract((0.5 + q6)));\\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = fract(((uv_1 * dist_3) + 0.55));\\n  xlat_mutableneu = texture (sampler_main, tmpvar_5).xyz;\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  xlat_mutablecont = max (xlat_mutablecont, ((\\n    -(texture (sampler_main, tmpvar_5).xyz)\\n   + \\n    ((texture (sampler_blur1, (tmpvar_5 + q7)).xyz * scale1) + bias1)\\n  ) * inten_2));\\n  dist_3 = (1.0 - fract((1.0 + q6)));\\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = fract(((uv_1 * dist_3) + 0.55));\\n  xlat_mutableneu = texture (sampler_main, tmpvar_6).xyz;\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  xlat_mutablecont = max (xlat_mutablecont, ((\\n    -(texture (sampler_main, tmpvar_6).xyz)\\n   + \\n    ((texture (sampler_blur1, (tmpvar_6 + q7)).xyz * scale1) + bias1)\\n  ) * inten_2));\\n  vec2 tmpvar_7;\\n  tmpvar_7.y = 5.0;\\n  tmpvar_7.x = (time / 12.0);\\n  xlat_mutablers2 = ((0.1 * cos(\\n    ((uv_1 * 3.0) + tmpvar_7)\\n  )) + (0.1 * xlat_mutableret1).xy);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (((-0.1 * xlat_mutableret1) + (\\n    (clamp ((0.005 / sqrt(\\n      dot (xlat_mutablers2, xlat_mutablers2)\\n    )), 0.0, 1.0) * vec3(18.0, 16.2, 10.8))\\n   * \\n    (0.2 + (0.3 * xlat_mutableret1))\\n  )) + ((\\n    dot (xlat_mutablecont, vec3(0.32, 0.49, 0.29))\\n   * \\n    (1.0 + slow_roam_cos)\\n  ) / 2.0).xyz);\\n  ret = tmpvar_8.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - glassball dance.json":
/*!*********************************************************!*\
  !*** ./presets/converted/martin - glassball dance.json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":4,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.5274,\"wave_smoothing\":0.45,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":0.442,\"warpscale\":0.498,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.8,\"wave_g\":0.49,\"ob_size\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ob_a\":0.05,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"additive\":1,\"rad\":0.048958,\"tex_ang\":1.00531,\"tex_zoom\":1.531168,\"r\":0,\"g\":1,\"b\":1,\"r2\":0.83,\"g2\":0.93,\"b2\":0.8,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\n\\nrad = .1;\\na = .8;\"},{\"baseVals\":{\"thickoutline\":1,\"textured\":1,\"x\":0.26,\"y\":0.2,\"rad\":0.393173,\"tex_zoom\":0.9355,\"r\":0,\"g\":0.55,\"b\":0.5,\"g2\":0.4,\"b2\":0.4,\"a2\":0.07,\"border_r\":0.3,\"border_g\":0.7,\"border_b\":0.8,\"border_a\":0.4,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_zoom = q27;\"},{\"baseVals\":{\"sides\":44,\"x\":0.503,\"rad\":0.038857,\"tex_zoom\":0.609857,\"g\":0.1,\"a\":0.9,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = rand(50)/50;\\ny = .5;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na2 = min(q21/2 ,1)/2;\\n\\na = 0;\\n\\nrad = a2 * (.1+abs(x-.5))/2 ;\"},{\"baseVals\":{\"thickoutline\":1,\"textured\":1,\"x\":0.26,\"y\":0.76,\"rad\":0.39478,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":0.8,\"border_r\":0.2,\"border_g\":0.7,\"border_b\":0.5,\"border_a\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_zoom = q27/2;\"}],\"waves\":[{\"baseVals\":{\"samples\":282,\"sep\":20,\"thick\":1,\"additive\":1,\"scaling\":7.858,\"smoothing\":0.1,\"r\":0.2,\"g\":0.3,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"dirx = 1;\",\"frame_eqs_eel\":\"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq29 = 2 * (index2%2-.5);\\nq25 = min(1,q22/2);\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq27 = index;\\nq28 = index2;\\n\\nmov = mov*dec_med + (1-dec_med)*above(index%8,2);\\nmovez = movez + 1/fps*mov;\\nq30 = movez;\\n//**************************\\n\\nq8 = movex; q9 = movey;\\n\\ntrel1 = trel1 + (q1*q22*3)/fps;\\ntrel2 = trel2 + (q2*q22*2)/fps;\\ntrel3 = trel3 + 4*(1-mov)/fps;\\ntrel4 = trel4 + 1 * mov/fps;\\n\\nq11 = .3*sin(trel1); \\nq12 = .1*cos(trel2); \\nq13 = 8 + 6*sin(trel3);\\n\\nq14 = .3*sin(trel2); \\nq15 = .2*cos(trel3) ; \\nq16 = 6 + 3*sin(trel1);\\n\\nq17 = .3*sin(trel4); \\nq18 = .3*cos(trel2); \\nq19 = 3 + sin(trel3);\\n\\ntrot = trel1/2;\\ntrot = index2*6.28/4;\\nq5 = cos(trot);\\nq6 = sin(trot);\\nq7 = -q6;\\nq8 = q5;\",\"pixel_eqs_eel\":\"\",\"warp\":\"float xlat_mutableq25;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = ((2.0 * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 64.0)).x;\\n  uv_1 = (uv + ((\\n    clamp (((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3)), vec2(-2.0, -2.0), vec2(2.0, 2.0))\\n   / 20.0) * q29));\\n  uv6_2 = (0.4 * sin((tmpvar_3 * 32.0)));\\n  xlat_mutableq25 = (q24 + 0.01);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (((xlat_mutableq25 * \\n    (((texture (sampler_main, uv_1).xyz - (\\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\\n     * 0.04)) + (0.15 * (vec3(\\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_cos.xyz))) - 0.02)\\n  ) * 0.99) + ((0.995 * \\n    (1.0 - xlat_mutableq25)\\n  ) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_5.xyz;\\n }\",\"comp\":\"vec2 xlat_mutableKugel1;\\nvec2 xlat_mutableKugel2;\\nfloat xlat_mutablerad1;\\nfloat xlat_mutablerad2;\\nfloat xlat_mutablerad3;\\nvec3 xlat_mutableret1;\\nvec3 xlat_mutableret2;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablersk;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv1_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qb.xy;\\n  tmpvar_2[1u] = _qb.zw;\\n  uv1_1 = (((uv - 0.5) * aspect.xy) * tmpvar_2);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  xlat_mutablersk = (uv1_1 + tmpvar_3);\\n  xlat_mutablerad1 = ((8.0 * q13) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel1 = (((xlat_mutableuv4 * \\n    clamp ((10.0 - (7.0 * xlat_mutablerad1)), 0.0, 1.0)\\n  ) / (1.0 + \\n    (q13 * q13)\\n  )) * q13);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q14;\\n  tmpvar_4.y = q15;\\n  xlat_mutablersk = (uv1_1 + tmpvar_4);\\n  xlat_mutablerad2 = ((2.0 * (1.0 + q16)) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(xlat_mutablersk));\\n  xlat_mutableKugel2 = (((xlat_mutableuv4 * \\n    clamp ((10.0 - (7.0 * xlat_mutablerad2)), 0.0, 1.0)\\n  ) / (1.0 + \\n    (q16 * q16)\\n  )) * q16);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q17;\\n  tmpvar_5.y = q18;\\n  xlat_mutablersk = (uv1_1 + tmpvar_5);\\n  xlat_mutablerad3 = ((4.0 * (1.0 + q19)) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * normalize(xlat_mutablersk));\\n  float tmpvar_6;\\n  tmpvar_6 = (0.1 / abs((\\n    (uv1_1.y * rad)\\n   * rad)));\\n  xlat_mutablers0.y = tmpvar_6;\\n  xlat_mutablers0.x = ((uv1_1.x * tmpvar_6) * 4.0);\\n  mat2 tmpvar_7;\\n  tmpvar_7[uint(0)] = _qa.xy;\\n  tmpvar_7[1u] = _qa.zw;\\n  xlat_mutablers0 = (xlat_mutablers0 * tmpvar_7);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = 0.0;\\n  tmpvar_8.y = q30;\\n  xlat_mutableret2 = (((texture (sampler_blur1, \\n    fract((xlat_mutablers0 + tmpvar_8))\\n  ).xyz * scale1) + bias1) / tmpvar_6);\\n  uv1_1 = (uv1_1 + ((\\n    ((xlat_mutableKugel1 + xlat_mutableKugel2) + (((xlat_mutableuv4 * \\n      clamp ((10.0 - (7.0 * xlat_mutablerad3)), 0.0, 1.0)\\n    ) / (1.0 + \\n      (q19 * q19)\\n    )) * q19))\\n   * 0.25) + (xlat_mutableret2 / 4.0).xy));\\n  xlat_mutableret1 = (((\\n    (xlat_mutableret2 + texture (sampler_main, ((uv1_1 / 2.0) + 0.5)).xyz)\\n   + \\n    ((((0.4 / xlat_mutablerad1) * (0.5 - \\n      ((texture (sampler_blur1, vec2(0.1, 0.1)).xyz * scale1) + bias1)\\n    )) * q22) * (float(mod (q27, 4.0))))\\n  ) + (\\n    (((0.3 / xlat_mutablerad2) * (0.5 - (\\n      (texture (sampler_blur1, vec2(0.2, 0.2)).xyz * scale1)\\n     + bias1))) * q22)\\n   * \\n    (float(mod ((q27 + 1.0), 4.0)))\\n  )) + ((\\n    ((0.2 / xlat_mutablerad3) * (0.5 - ((texture (sampler_blur1, vec2(0.0, 0.0)).xyz * scale1) + bias1)))\\n   * q22) * (float(mod (\\n    (q27 + 2.0)\\n  , 4.0)))));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = clamp ((xlat_mutableret1 * (1.0 + xlat_mutableret1)), 0.0, 1.0);\\n  ret = tmpvar_9.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - ice flames.json":
/*!****************************************************!*\
  !*** ./presets/converted/martin - ice flames.json ***!
  \****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.002,\"wave_scale\":0.14,\"wave_smoothing\":0,\"wave_mystery\":-0.84,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_g\":0,\"wave_b\":0.6,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":23,\"textured\":1,\"rad\":0.72143,\"tex_ang\":0.62832,\"tex_zoom\":0.0402,\"g\":1,\"b\":1,\"a\":0.9,\"r2\":0.9,\"b2\":1,\"a2\":0.3,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vis = bnot(q27%8)*q22/2;\\nvis = min(vis,1);\\na = vis/2; a2 = vis/2;\\n//tex_ang = 3*(1-vis);\\n\\ntex_zoom = 1;\\nrad = vis*.3; \"},{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":4.77803,\"tex_zoom\":1.78051,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_g\":0.99,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang =sin(time/65) ;\\nrad = q24/8;\"},{\"baseVals\":{\"enabled\":1,\"sides\":5,\"additive\":1,\"num_inst\":4,\"x\":0.9,\"rad\":0.24732,\"tex_zoom\":0.40839,\"g\":0.6,\"a\":0.4,\"g2\":0,\"b2\":0.6,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"steps = q28+1;\\nsteps = 4;\\nampl = .2; //.2 bis .5 praktisch\\n\\nx = .5 + ampl*cos((q27/steps+instance/4)*6.28);\\ny = .5 + ampl*sin((q27/steps+instance/4)*6.28);\\n\\na = .4; a2 = .0;\\n\\n\\ntrig = q24 * bnot(q27%4);\\nred = bnot(trig)*red+ (rand(100)/100)*trig;\\ngreen = bnot(trig)*green+ (rand(100)/100)*trig;\\nblue = bnot(trig)*blue+ (rand(100)/100)*trig;\\n\\nk1 = instance / num_inst;\\n\\nr = red *k1;\\ng = green * (1-k1);\\nb = blue * 4*k1*(1-k1);\\n\\nr = red;\\ng = green;\\nb = blue;\\n\\n\\n\\nr2 = r; b2 = b; g2 = g;\"},{\"baseVals\":{\"sides\":36,\"additive\":1,\"rad\":0.01,\"r\":0,\"g\":0.12,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"additive\":1,\"scaling\":0.5033,\"r\":0.5,\"g\":0.1,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq27 = index + 1;\\nq28 = index2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq5 = q1*.01;\\n\\ndrot = (index%4-2) * 30/fps;\\np3 = p3*dec_slow + (1-dec_slow)*30/fps * drot;\\nq30 = p3 ;\\n\\nstag = (q27+index2*1);\\nstag = max(stag,1);\\np4 = dec_med*p4 + (1-dec_med)*stag;\\nq31 = p4;\\n\\nzoom = 1 + .05*q1;\\nrot = -0.007 * index;\\n\\nq32 = pow(0.996, 30/fps); //fade\\n\\nmonitor = index2;\",\"pixel_eqs_eel\":\"dy = -.005;\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  tmpvar_3.xyz = ((tmpvar_4.xyz * scale1) + bias1);\\n  float tmpvar_5;\\n  tmpvar_5 = (dot (tmpvar_3, roam_sin) * 8.0);\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\\n  tmpvar_6[uint(0)].y = -(sin(tmpvar_5));\\n  tmpvar_6[1u].x = sin(tmpvar_5);\\n  tmpvar_6[1u].y = cos(tmpvar_5);\\n  uv_1 = (((tmpvar_2 + \\n    ((0.2 * dot ((\\n      (tmpvar_4.xyz * scale1)\\n     + bias1), vec3(0.32, 0.49, 0.29))) * (tmpvar_2 * tmpvar_6))\\n  ) - 0.5) + q5);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv_1 * texsize.xy) * 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (cos((tmpvar_7.y * q1)) * sin(-(tmpvar_7.y)));\\n  tmpvar_8.y = (sin(tmpvar_7.x) * cos((tmpvar_7.y * q2)));\\n  uv_1 = (uv_1 - ((tmpvar_8 * texsize.zw) * 12.0));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((texture (sampler_main, uv_1).xyz * 0.99) - 0.01);\\n  ret = tmpvar_9.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutableuv1;\\nfloat xlat_mutablez;\\n shader_body { \\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  xlat_mutablez = (8.0 / pow (xlat_mutableuv1.y, 0.05));\\n  xlat_mutablers.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers.y = ((xlat_mutablez / 2.0) + time);\\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_noise_hq, xlat_mutablers);\\n  xlat_mutableret1 = ((tmpvar_1.xyz * vec3(\\n    greaterThanEqual (tmpvar_1.xyz, vec3(0.0, 0.0, 0.0))\\n  )) - 0.5);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = fract(((xlat_mutableuv1 - 0.5) - (\\n    (xlat_mutableret1 * 0.1)\\n   * \\n    clamp ((xlat_mutableuv1.y * 32.0), 0.0, 1.0)\\n  ).xy));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (1.0 - tmpvar_2.x);\\n  tmpvar_3.y = tmpvar_2.y;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (texture (sampler_main, tmpvar_2) + texture (sampler_main, tmpvar_3)).xyz;\\n  xlat_mutableret1 = tmpvar_4;\\n  xlat_mutableuv1 = (xlat_mutableuv1 * aspect.xy);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((tmpvar_4 * (1.0 + \\n    dot (tmpvar_4, vec3(0.32, 0.49, 0.29))\\n  )) / 3.0);\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - infinity (2010 update).json":
/*!****************************************************************!*\
  !*** ./presets/converted/martin - infinity (2010 update).json ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.002,\"wave_scale\":0.14,\"wave_smoothing\":0,\"wave_mystery\":-0.84,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_g\":0,\"wave_b\":0.6,\"ob_size\":0.015,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":23,\"textured\":1,\"rad\":0.72143,\"tex_ang\":0.62832,\"tex_zoom\":0.0402,\"g\":1,\"b\":1,\"a\":0.9,\"r2\":0.9,\"b2\":1,\"a2\":0.3,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vis = bnot(q27%8)*q22/2;\\nvis = min(vis,1);\\na = vis/2; a2 = vis/2;\\n//tex_ang = 3*(1-vis);\\n\\ntex_zoom = 1;\\nrad = vis*.3; \"},{\"baseVals\":{\"sides\":5,\"textured\":1,\"rad\":4.77803,\"tex_zoom\":1.78051,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_g\":0.99,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang =sin(time/65) ;\\nrad = q24/8;\"},{\"baseVals\":{\"enabled\":1,\"sides\":5,\"additive\":1,\"num_inst\":4,\"x\":0.9,\"rad\":0.24732,\"tex_zoom\":0.40839,\"g\":0.6,\"a\":0.4,\"g2\":0,\"b2\":0.6,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"steps = q28+1;\\nsteps = 4;\\nampl = .2; //.2 bis .5 praktisch\\n\\nx = .5 + ampl*cos((q27/steps+instance/4)*6.28);\\ny = .5 + ampl*sin((q27/steps+instance/4)*6.28);\\n\\na = .4; a2 = .0;\\n\\n\\ntrig = q24 * bnot(q27%4);\\nred = bnot(trig)*red+ (rand(100)/100)*trig;\\ngreen = bnot(trig)*green+ (rand(100)/100)*trig;\\nblue = bnot(trig)*blue+ (rand(100)/100)*trig;\\n\\nk1 = instance / num_inst;\\n\\nr = red *k1;\\ng = green * (1-k1);\\nb = blue * 4*k1*(1-k1);\\n\\nr = red;\\ng = green;\\nb = blue;\\n\\n\\n\\nr2 = r; b2 = b; g2 = g;\"},{\"baseVals\":{\"sides\":36,\"additive\":1,\"rad\":0.01,\"r\":0,\"g\":0.12,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"additive\":1,\"scaling\":0.5033,\"r\":0.5,\"g\":0.1,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = .5 + .5*sample*sin(sample*50);\\ny = .5 + .5*sample*cos(sample*50);\\n\\ntrel = time;\\n\\nx = .5 + .5*sample*sin(time); \\ny = .5 + .5*sample*cos(time); \\n\\nx = rand(100)/100;\\ny = rand(100)/100;\\n\\na=.2;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"speed_=1;vx = 0; vy = 0; vz = 0;\\ntrel = 0; p1 = 0; dir = 0;\\nang0 = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.5);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = bass_att + mid_att + treb_att;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 1;\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%8);\\nvx = vx*bnot(trig) + trig* (rand(100)/100-.5);\\nvy = vy*bnot(trig) + trig* (rand(100)/100-.5);\\nvz = vz*bnot(trig) + trig* (rand(100)/100-.5);\\n\\nq10 = 0.2+vy*vy*4;\\nq11 = cos(time/9)*.5+.3;\\n\\nspeed = min(vol_-vol__+.5,1);\\nspeed = max(speed,-.5);\\nspeed_ = bnot(trig)*speed_ + trig*speed;\\nmovz = movz + 1/fps*speed_;\\nq9 = movz;\\n\\nq12 = min(q22,6)*2;\\n//q13 = 1.5+sin(time/5);\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(rand(10)-5);\\n\\ntrel = trel + .2/fps*dir;\\n\\nq5 = cos(trel);\\nq6 = sin(trel+0*q27*(q28%2));\\nq7 = -q6;\\nq8 = q5;\\n\\npx = px * dec_med + (1-dec_med)*vx;\\npy = py * dec_med + (1-dec_med)*vy;\\nq15 = px/3;\\nq16 = py/3;\\n\\nq13 = min(2,1+abs(8*px*py));\\n\\nang0 = ang0*dec_med + vz*(1-dec_med);\\nq17 = ang0*2; \\n\\nzoom = 1.1;\\nrot = .2*sin(bnot(q28%2)*q28) ;\\ndx = .00;\\n\\nmonitor = q11;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 uv6_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (18.0 * sqrt((x_4 * x_4)));\\n  uv1_2 = (tmpvar_3 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\\n  , vec2(-3.0, -3.0), vec2(3.0, 3.0)) / 60.0));\\n  uv6_1 = (0.4 * cos((\\n    (uv1_2 * 4.0)\\n   * q28)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((texture (sampler_main, \\n    ((uv1_2 * (q11 + (q10 * tmpvar_5))) + 0.5)\\n  ).xyz + \\n    (vec3((0.006 / sqrt(dot (uv6_1, uv6_1)))) * (1.0 + roam_cos).xyz)\\n  ) * 0.99) - 0.025);\\n  ret = tmpvar_6.xyz;\\n }\",\"comp\":\"float xlat_mutableang2;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 ret1_3;\\n  uv_1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q15;\\n  tmpvar_4.y = q16;\\n  uv_1 = (uv_1 + tmpvar_4);\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)] = _qb.xy;\\n  tmpvar_5[1u] = _qb.zw;\\n  uv_1 = (uv_1 * tmpvar_5);\\n  float tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (min (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0) / max (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0));\\n  float tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\\n  tmpvar_8 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\\n  tmpvar_8 = (tmpvar_8 + (float(\\n    (abs((uv_1.y / uv_1.x)) > 1.0)\\n  ) * (\\n    (tmpvar_8 * -2.0)\\n   + 1.570796)));\\n  tmpvar_6 = (tmpvar_8 * sign((uv_1.y / uv_1.x)));\\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\\n    if ((uv_1.x < 0.0)) {\\n      if ((uv_1.y >= 0.0)) {\\n        tmpvar_6 += 3.141593;\\n      } else {\\n        tmpvar_6 = (tmpvar_6 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_6 = (sign(uv_1.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = ((tmpvar_6 / 3.1416) * 2.0);\\n  xlat_mutablers0.y = (0.03 / sqrt(dot (uv_1, uv_1)));\\n  ret1_3 = vec3(0.0, 0.0, 0.0);\\n  for (int n_2 = 0; n_2 <= 10; n_2++) {\\n    float tmpvar_9;\\n    tmpvar_9 = fract((-(q9) + (\\n      float(n_2)\\n     / 10.0)));\\n    xlat_mutableang2 = (((q1 * 3.14) * float(n_2)) / 10.0);\\n    float tmpvar_10;\\n    tmpvar_10 = cos(xlat_mutableang2);\\n    float tmpvar_11;\\n    tmpvar_11 = sin(xlat_mutableang2);\\n    mat2 tmpvar_12;\\n    tmpvar_12[uint(0)].x = tmpvar_10;\\n    tmpvar_12[uint(0)].y = -(tmpvar_11);\\n    tmpvar_12[1u].x = tmpvar_11;\\n    tmpvar_12[1u].y = tmpvar_10;\\n    xlat_mutableuv2 = (uv_1 * ((q13 * tmpvar_9) * tmpvar_12));\\n    ret1_3 = max (ret1_3, (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz * (1.0 - tmpvar_9)));\\n  };\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ((ret1_3 * 2.0) + ((\\n    (bass_att * xlat_mutablers0.y)\\n   * texture (sampler_main, \\n    ((uv_1 * q12) + vec2(0.5, 0.0))\\n  ).yzx) * clamp (\\n    (1.0 - (ret1_3 * 32.0))\\n  , 0.0, 1.0)));\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - into the fireworks.json":
/*!************************************************************!*\
  !*** ./presets/converted/martin - into the fireworks.json ***!
  \************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.312,\"wave_scale\":1.229,\"wave_smoothing\":0,\"wave_mystery\":0.2,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0,\"ob_b\":0.2,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":3.3,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1x\":0.7,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"thickoutline\":1,\"textured\":1,\"rad\":1.85483,\"ang\":1.5708,\"tex_zoom\":0.53907,\"g\":0.94,\"b\":0.89,\"r2\":0.84,\"g2\":0.93,\"b2\":1,\"a2\":1,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = .4998;\\ny = .5002;\\n\\nti = time*.3;\\nr = .925 + .05*sin(ti*1.721);\\ng = .925 + .05*sin(ti*1.838);\\nb = .925 + .05*sin(ti*1.968);\\n\\nr2 = 1.875 - r;\\ng2 = 1.875 - g;\\nb2 = 1.875 - b;\\n\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"rad\":1.99863,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"a\":0.1,\"r2\":1,\"b2\":1,\"a2\":0.6,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"x\":0.123,\"y\":0,\"rad\":0.27319,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.54822,\"tex_zoom\":0.49981,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":189,\"usedots\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ofs = 0;\\n\\nt1 = 2*sin(time/15-ofs);\\nt2 = 2*sin(time/11-ofs);\\nt3 = 2*sin(time/19-ofs);\\nmonitor = time;\",\"point_eqs_eel\":\"\\nmul = 10;\\nt_abs = (sample)*mul;\\nampl = 2;\\n\\nox = ampl*sin (t_abs*68);\\noy = ampl*cos (t_abs*28);\\noz = 2+ampl*cos (t_abs*128);\\n\\n\\nr = min(sin(t_abs*335)+1,1);\\ng = min(sin(t_abs*783)+1,1) ;\\nb = min(sin(t_abs*456)+1,1);\\n\\na=.5 + .02*(rand(10)-5);\\n\\nxang = t1;\\nyang = t2;\\nzang = t3;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\"},{\"baseVals\":{\"samples\":189,\"usedots\":1,\"additive\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nt3 = 2*sin(time/19);\\nmonitor = time;\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"fade = .1;\",\"frame_eqs_eel\":\"dec_med = pow (0.5, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .0+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq27 = index;\\nq28 = index2;\\nsb = sb*dec_med + q21*(1-dec_med);\\nq29 = sb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\np3 = dec_slow * p3+ (1-dec_slow)*p2;\\nrott =  rott +  .003*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel = time/10;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;\\nq8 = q5;\\n\\nq9 = .01*sin(time/7);\\nmovez = movez + .004*30/fps*(p3+4);\\nq10 = movez;\\nq30 = .3* (sin(time/45) + 1.5);\\n\\nmv_a = 0;\\n\\nq32 = pow(0.98, 30/fps); //fade\\n\\nq31 = equal(frame%10,0);\\n\\ntrig = q24*bnot(index%3);\\nfx = fx*bnot(trig) + trig*rand(100)/100;\\nfy = fy*bnot(trig) + trig*rand(100)/100;\\nq15 = fx-.5;\\nq16 = fy-.5;\\n\\nfade = fade * dec_slow;\\nq32 = 1-fade;\\nmonitor = q32;\",\"pixel_eqs_eel\":\"zoom = 1 + .01*sin(time/8);\\nwarp = .0 * (1-rad);\\nwarp = 0.05;\\nrot = .0;\\ndx = 0; dy = 0;\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = dot ((texture (sampler_main, (uv + vec2(0.002, 0.0))) - texture (sampler_main, (uv - vec2(0.002, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_1.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.002))) - texture (sampler_main, (uv - vec2(0.0, 0.002)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (((-0.1 * tmpvar_2) * tmpvar_2) + (0.47 * ((texture (sampler_main, \\n      (uv + (tmpvar_1 * 0.0003))\\n    ).xyz + texture (sampler_main, uv).xyz) + (tmpvar_2 / 8.0))))\\n   * q32) - (0.003 * q31)) - ((0.01 * q31) * (rad * rad)));\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\"float xlat_mutablem;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float maskn_2;\\n  float inten_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  mat2 tmpvar_4;\\n  tmpvar_4[uint(0)] = _qa.xy;\\n  tmpvar_4[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_4);\\n  int tmpvar_5;\\n  tmpvar_5 = int(q10);\\n  xlat_mutablem = (1.0 - float(tmpvar_5));\\n  float tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = -(q10);\\n  tmpvar_6 = fract((0.75 + (\\n    fract(tmpvar_7)\\n   / 4.0)));\\n  inten_3 = ((4.0 * (1.0 - tmpvar_6)) * pow (tmpvar_6, 0.2));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = fract(((\\n    ((3.0 * uv_1) * tmpvar_6)\\n   + \\n    (xlat_mutablem * 0.35)\\n  ) + (\\n    (q7 * tmpvar_6)\\n   * tmpvar_6)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1));\\n  xlat_mutableret1 = ((xlat_mutableneu * inten_3) * 0.7);\\n  xlat_mutablem = (2.0 - float(tmpvar_5));\\n  float tmpvar_9;\\n  tmpvar_9 = fract((0.5 + (\\n    fract(tmpvar_7)\\n   / 4.0)));\\n  inten_3 = ((4.0 * (1.0 - tmpvar_9)) * pow (tmpvar_9, 0.2));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = fract(((\\n    ((3.0 * uv_1) * tmpvar_9)\\n   + \\n    (xlat_mutablem * 0.35)\\n  ) + (\\n    (q7 * tmpvar_9)\\n   * tmpvar_9)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_10).xyz + ((texture (sampler_blur1, tmpvar_10).xyz * scale1) + bias1));\\n  maskn_2 = (1.0 - (pow (tmpvar_9, 0.1) * clamp (\\n    (8.0 * xlat_mutableneu)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\\n  xlat_mutablem = (3.0 - float(tmpvar_5));\\n  float tmpvar_11;\\n  tmpvar_11 = fract((0.25 + (\\n    fract(tmpvar_7)\\n   / 4.0)));\\n  inten_3 = ((4.0 * (1.0 - tmpvar_11)) * pow (tmpvar_11, 0.2));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = fract(((\\n    ((3.0 * uv_1) * tmpvar_11)\\n   + \\n    (xlat_mutablem * 0.35)\\n  ) + (\\n    (q7 * tmpvar_11)\\n   * tmpvar_11)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_12).xyz + ((texture (sampler_blur1, tmpvar_12).xyz * scale1) + bias1));\\n  maskn_2 = (1.0 - (pow (tmpvar_11, 0.1) * clamp (\\n    (8.0 * xlat_mutableneu)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\\n  xlat_mutablem = (4.0 - float(tmpvar_5));\\n  float tmpvar_13;\\n  tmpvar_13 = fract((fract(tmpvar_7) / 4.0));\\n  inten_3 = ((4.0 * (1.0 - tmpvar_13)) * pow (tmpvar_13, 0.2));\\n  vec2 tmpvar_14;\\n  tmpvar_14 = fract(((\\n    ((3.0 * uv_1) * tmpvar_13)\\n   + \\n    (xlat_mutablem * 0.35)\\n  ) + (\\n    (q7 * tmpvar_13)\\n   * tmpvar_13)));\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_14).xyz + ((texture (sampler_blur1, tmpvar_14).xyz * scale1) + bias1));\\n  maskn_2 = (1.0 - (pow (tmpvar_13, 0.1) * clamp (\\n    (8.0 * xlat_mutableneu)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = q15;\\n  tmpvar_15.y = q16;\\n  vec2 tmpvar_16;\\n  tmpvar_16 = sin(((tmpvar_15 + \\n    (2.0 * uv_1)\\n  ) + (0.2 * rand_frame).xy));\\n  float tmpvar_17;\\n  tmpvar_17 = ((dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29)) * (1.0 - \\n    dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29))\\n  )) * 4.0);\\n  vec4 tmpvar_18;\\n  tmpvar_18.w = 1.0;\\n  tmpvar_18.xyz = ((pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5)) + (\\n    clamp (((0.01 * (q21 - 2.0)) / sqrt(dot (tmpvar_16, tmpvar_16))), 0.0, 1.0)\\n   * \\n    clamp ((1.0 - (tmpvar_17 / 2.0)), 0.0, 1.0)\\n  )) + ((\\n    (clamp ((1.0 - tmpvar_17), 0.0, 1.0) * q29)\\n   * \\n    float((q27 == 2.0))\\n  ) * float(\\n    (q28 <= 2.0)\\n  )));\\n  ret = tmpvar_18.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - ludicrous speed.json":
/*!*********************************************************!*\
  !*** ./presets/converted/martin - ludicrous speed.json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.3116,\"wave_scale\":1.22891,\"wave_smoothing\":0,\"wave_mystery\":0.2,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0,\"ib_a\":0.5,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0.4999,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"x\":0.4999,\"rad\":0.143922,\"tex_zoom\":4.574821,\"g\":1,\"b\":1,\"a\":0.9,\"r2\":0.84,\"g2\":0.93,\"b2\":1,\"border_r\":0.8,\"border_g\":0,\"border_a\":0.4},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"textured = bnot(q24);\\nrad = .2*max(sin(time/9)-.6,0);\\nx = .5 + .01 * sin(time/2); //slightly off-center\\n\\nborder_r = .4 * (1.5+sin(time/18));\\nborder_g = .4 * (1.5+sin(time/38));\\nborder_b = .4 * (1.5+sin(time/28));\"},{\"baseVals\":{\"enabled\":1,\"sides\":63,\"additive\":1,\"rad\":1.998625,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"a\":0.1,\"r2\":1,\"b2\":1,\"a2\":0.6,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel);\\ny = .5+cos(trel*1.3 +q28/3);\\nrad = .03;\\na = q26/4+.2;  a2 = 0;\\na = 1;\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"x\":0.123,\"y\":0,\"rad\":0.273185,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.548217,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = 1*cos(time/3);\\nt2 = 1*sin(time/7);\\n\\nvol = mid_att + treb_att;\\nvol_m = vol_m*0.999+vol*0.001;\\nexc = above (vol, vol_m*1.1);\\n\\npulse = 0.95*pulse + 0.05*exc;\\nwinkel = winkel + pulse/3;\\nt3 = winkel;\\n\\n\\n\",\"point_eqs_eel\":\"  //Alle Funktionen muessen rel. zu t_rel sein\\n\\n\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = sin(t_abs*3)-0.0;\\n\\nox = 3*sin (time) + ampl*(sin (t_rel*267)) ;\\noy = 3*cos (time) + ampl*(cos (t_rel*277)) ;\\noz = 0*cos (t_rel*time/23)+t_abs*4 ;\\n\\n\\nr = sqr(sin(t_rel*3.4));\\ng = sqr(sin(t_rel*2.3));\\nb = sqr (cos(t_rel*.9));\\n\\na= 0.2*(cos(t_abs*1 )) + q26/16 ;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = 0.2;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"},{\"baseVals\":{\"enabled\":1,\"samples\":232,\"usedots\":1,\"additive\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;\",\"point_eqs_eel\":\"\\nt_abs = sample;\\nt_rel = sample-time/5;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = sin(t_abs*1335)+1;\\ng = sin(t_abs*1783)+1 ;\\nb = rand(5)/5 ;\\n\\na=0.5+0.25 * sin(t_rel*15);\\nxang = t1 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\"},{\"baseVals\":{\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ampl = time - int(time);\\naml = ampl/2;\\nx = .5 + ampl * sin(sample*230);\\ny = .5 + ampl * cos(sample*230);\\na = .03;\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"index4 = rand(12); p1 = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%8;\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index3;\\nq29 = index4;\\n\\nstop = equal (index,4);\\nstop2 = .9 * stop2 + .1 * stop;\\naccel = stop - stop2;\\n\\n//movez = movez + .01*(2+ q21)*30/fps;\\nmovez = movez + .01*4*30/fps;\\nq30 = movez;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0;\\nq32 = pow(0.996, 30/fps); //fade\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec2 zz_2;\\n  vec2 arg_3;\\n  int tmpvar_4;\\n  tmpvar_4 = int(q29);\\n  int tmpvar_5;\\n  tmpvar_5 = int((float(mod (float(tmpvar_4), 4.0))));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (0.03 * texture (sampler_noise_lq, ((uv * 0.3) + (0.01 * rand_frame).xy))).xyz;\\n  zz_2 = (((\\n    ((uv - 0.5) * texsize.xy)\\n   * 0.015) * q27) * aspect.zw);\\n  mat2 tmpvar_7;\\n  tmpvar_7[uint(0)] = _qa.xy;\\n  tmpvar_7[1u] = _qa.zw;\\n  zz_2 = (zz_2 * tmpvar_7);\\n  if ((tmpvar_5 == 0)) {\\n    arg_3 = clamp ((sin(zz_2) / cos(zz_2)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n  } else {\\n    if ((tmpvar_5 == 1)) {\\n      arg_3 = clamp (((\\n        sin(zz_2)\\n       / \\n        cos(zz_2)\\n      ) / cos(zz_2.yx)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n    } else {\\n      if ((tmpvar_5 == 2)) {\\n        arg_3 = clamp (exp(zz_2.yx), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n      } else {\\n        if ((tmpvar_5 == 3)) {\\n          arg_3 = clamp (sin((2.0 * zz_2.yx)), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n        };\\n      };\\n    };\\n  };\\n  if ((tmpvar_4 >= 4)) {\\n    arg_3 = (arg_3 - (sqrt(\\n      dot (zz_2, zz_2)\\n    ) / 4.0));\\n  };\\n  uv_1 = (uv + ((arg_3 * texsize.zw) * (1.0 + \\n    (4.0 * q28)\\n  )));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (((q32 * texture (sampler_main, uv_1).xyz) + (tmpvar_6 * 0.8)) - 0.03);\\n  ret = tmpvar_8.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableblur;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)] = _qa.xy;\\n  tmpvar_5[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_5);\\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.25 + q30)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2);\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_6).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.5 + q30)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2);\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_7).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.75 + q30)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_8).xyz * scale2) + bias2);\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q30)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableblur = ((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2);\\n  xlat_mutableneu = (texture (sampler_main, tmpvar_9).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = (xlat_mutableret1 + (vec3(0.0, 0.0, 0.15) * rad));\\n  ret = tmpvar_10.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - move this body.json":
/*!********************************************************!*\
  !*** ./presets/converted/martin - move this body.json ***!
  \********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.780001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.3116,\"wave_scale\":1.22891,\"wave_smoothing\":0,\"wave_mystery\":0.2,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_r\":0.3999,\"ob_b\":0.5,\"ib_size\":0,\"mv_x\":12.799999,\"mv_y\":9.600006,\"mv_l\":0.05,\"mv_b\":0.4999,\"mv_a\":0,\"b1x\":0.6999,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":100,\"x\":0.4999,\"rad\":0.143922,\"tex_zoom\":4.574821,\"g\":1,\"b\":1,\"a\":0.1,\"r2\":0.84,\"g2\":0.93,\"b2\":1,\"border_r\":0.8,\"border_g\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":63,\"additive\":1,\"rad\":1.998625,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"a\":0.1,\"r2\":1,\"b2\":1,\"a2\":0.6,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel);\\ny = .5+cos(trel*1.3 +q28/3);\\nrad = .03;\\na = q26/4+.2;  a2 = 0;\\na = .3;\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"x\":0.123,\"y\":0,\"rad\":0.273185,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.548217,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.6},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = 1*cos(time/3);\\nt2 = 1*sin(time/7);\\n\\nvol = mid_att + treb_att;\\nvol_m = vol_m*0.999+vol*0.001;\\nexc = above (vol, vol_m*1.1);\\n\\npulse = 0.95*pulse + 0.05*exc;\\nwinkel = winkel + pulse/3;\\nt3 = winkel;\\n\\n\\n\",\"point_eqs_eel\":\"  //Alle Funktionen muessen rel. zu t_rel sein\\n\\n\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = sin(t_abs*3)-0.0;\\n\\nox = 3*sin (time) + ampl*(sin (t_rel*267)) ;\\noy = 3*cos (time) + ampl*(cos (t_rel*277)) ;\\noz = 0*cos (t_rel*time/23)+t_abs*4 ;\\n\\n\\nr = (1+sqr(sin(t_rel*3.4)))/2;\\ng = (1+sqr(sin(t_rel*2.3)))/2;\\nb = (1+sqr (cos(t_rel*.9)))/2;\\n\\na = .1;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = 0.2;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"},{\"baseVals\":{\"samples\":232,\"usedots\":1,\"additive\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;\",\"point_eqs_eel\":\"\\nt_abs = sample;\\nt_rel = sample-time/5;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = sin(t_abs*1335)+1;\\ng = sin(t_abs*1783)+1 ;\\nb = rand(5)/5 ;\\n\\na=0.5+0.25 * sin(t_rel*15);\\nxang = t1 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\"},{\"baseVals\":{\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ampl = time - int(time);\\naml = ampl/2;\\nx = .5 + ampl * sin(sample*230);\\ny = .5 + ampl * cos(sample*230);\\na = .03;\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq11 = min(q22,3);\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nrota = rota*dec_med + (1-dec_med)*q22/2;\\n\\nzoom = 1.0 + .02*q1;\\nrot = .01*q2+rota/12*q2;\\ndx = .02*q1;\\ndy = .02*q2;\\n\\nwave_a = 0;\\n\\nmovex = movex + dx;\\nmovey = movey + dy;\\nmovez = movez + zoom-1;\\nq16 = rota;\\nq17 = movez;\\nq18 = movex; q19 = movey;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (0.1 * sin((12.0 * uv)));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((\\n    (0.0 / sqrt(dot (tmpvar_1, tmpvar_1)))\\n   * q24) + (texture (sampler_main, uv).xyz * 0.994)) - 0.004);\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (((uv - 0.5) * aspect.xy) + 0.5);\\n  vec2 tmpvar_5;\\n  tmpvar_5.y = 0.0;\\n  tmpvar_5.x = texsize.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv_1 + tmpvar_5)).xyz - texture (sampler_main, (uv_1 - tmpvar_5)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv_1 + tmpvar_6)).xyz - texture (sampler_main, (uv_1 - tmpvar_6)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_4 = (uv_1 - 0.5);\\n  dist_3 = (1.0 - fract(q17));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - \\n    (dist_3 * dist_3)\\n  )) * 4.0);\\n  xlat_mutableuv3 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableuv3 = (xlat_mutableuv3 * aspect.yx);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q18;\\n  tmpvar_7.y = q19;\\n  xlat_mutableuv3 = (cos((\\n    (42.0 * fract(xlat_mutableuv3))\\n   - \\n    (8.0 * tmpvar_7)\\n  )) + xlat_mutabledz);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((dist_3 * vec3(tmpvar_8)) + ((1.0 - dist_3) * dot (vec3(tmpvar_8), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\\n  dist_3 = (1.0 - fract((0.3333333 + q17)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - \\n    (dist_3 * dist_3)\\n  )) * 4.0);\\n  xlat_mutableuv3 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableuv3 = (xlat_mutableuv3 * aspect.yx);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q18;\\n  tmpvar_9.y = q19;\\n  xlat_mutableuv3 = (cos((\\n    (42.0 * fract(xlat_mutableuv3))\\n   - \\n    (8.0 * tmpvar_9)\\n  )) + xlat_mutabledz);\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((dist_3 * vec3(tmpvar_10)) + ((1.0 - dist_3) * dot (vec3(tmpvar_10), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  dist_3 = (1.0 - fract((0.6666667 + q17)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - \\n    (dist_3 * dist_3)\\n  )) * 4.0);\\n  xlat_mutableuv3 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableuv3 = (xlat_mutableuv3 * aspect.yx);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q18;\\n  tmpvar_11.y = q19;\\n  xlat_mutableuv3 = (cos((\\n    (42.0 * fract(xlat_mutableuv3))\\n   - \\n    (8.0 * tmpvar_11)\\n  )) + xlat_mutabledz);\\n  float tmpvar_12;\\n  tmpvar_12 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((dist_3 * vec3(tmpvar_12)) + ((1.0 - dist_3) * dot (vec3(tmpvar_12), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  dist_3 = (1.0 - fract((1.0 + q17)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - \\n    (dist_3 * dist_3)\\n  )) * 4.0);\\n  xlat_mutableuv3 = (((2.0 * uv2_4) * dist_3) + 0.5);\\n  xlat_mutableuv3 = (xlat_mutableuv3 * aspect.yx);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q18;\\n  tmpvar_13.y = q19;\\n  xlat_mutableuv3 = (cos((\\n    (42.0 * fract(xlat_mutableuv3))\\n   - \\n    (8.0 * tmpvar_13)\\n  )) + xlat_mutabledz);\\n  float tmpvar_14;\\n  tmpvar_14 = clamp ((0.01 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((dist_3 * vec3(tmpvar_14)) + ((1.0 - dist_3) * dot (vec3(tmpvar_14), vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ((xlat_mutableret1 * q22) + ((\\n    (texture (sampler_blur1, (uv_1 + (0.1 * xlat_mutabledz))).xyz * scale1)\\n   + bias1) * 2.0));\\n  ret = tmpvar_15.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - neon space ps2 (ati fix) - yaqui graph - flx food.json":
/*!*******************************************************************************************!*\
  !*** ./presets/converted/martin - neon space ps2 (ati fix) - yaqui graph - flx food.json ***!
  \*******************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0,\"ob_b\":0.2,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":25,\"additive\":1,\"num_inst\":4,\"rad\":0.02339,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"a\":0.5,\"g2\":0,\"a2\":0.5,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.002*cos(ma));\\nmy=my+(.002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.005;\\ny=my+instance*.005;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.2+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.2+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.2+vol-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"sides\":25,\"additive\":1,\"num_inst\":6,\"rad\":0.02248,\"a\":0.7,\"g2\":0,\"a2\":0.1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,.7)*3.1415*.03*bass);\\nma=ma-(above(treb,.7)*3.1415*.03*treb);\\n\\nmx=mx+(.0015*cos(ma));\\nmy=my+(.0015*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"sides\":25,\"additive\":1,\"num_inst\":4,\"rad\":0.0303,\"a\":0.7,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,.3)*3.1415*.05*bass);\\nma=ma-(above(treb,.3)*3.1415*.05*treb);\\n\\nmx=mx+(.0055*cos(ma));\\nmy=my+(.0055*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.5+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.8+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.25+vol-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"sides\":25,\"additive\":1,\"num_inst\":4,\"rad\":0.02248,\"r\":0,\"a\":0.7,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,.11)*3.1415*.07*bass);\\nma=ma-(above(treb,.11)*3.1415*.07*treb);\\n\\nmx=mx+(.0085*cos(ma));\\nmy=my+(.0085*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;\"}],\"init_eqs_eel\":\"p1 = 2000; p2 = 200; p3=50;\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq27 = index;\\nq28 = index2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott_ = p2 * 3.1416/4;\\n\\nrott =  rott +  .2*30/fps*q2;\\n\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nran = bnot(q24)*ran + q24 * (int(rand(50))-24);\\ntran = tan(ran);\\ntran = max(tran,-5);\\ntran = min(tran,5);\\n\\ntrel = trel + .02*30/fps*tran+q24;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;\\nq8 = q5;\\n\\nmovex = movex*dec_slow + .1*sin(rott)*30/fps;\\nq9 = movex;\\n\\nspd = spd*bnot(q24) + q26*q24;\\nmovez = movez + .005*30/fps*spd;\\nq30 = movez;\\n//q30 = .3* (sin(time/45) + 1.5);\\n\\nmv_x = 20;\\nmv_y = 15;\\nmv_a = .1;\\nmv_l = 0;\\n\\nq18 = sin(time/7);\\nq19 = sin(time/11);\\n\\nq32 = pow(0.98, 30/fps); //fade\",\"pixel_eqs_eel\":\"zoom = 1;\\nwarp = .1;\",\"warp\":\" shader_body { \\n  float dy_1;\\n  float dx_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_6.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_3.y = texture (sampler_fw_main, clamp ((uv + (\\n    (tmpvar_6 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_3.y = (ret_3.y + ((\\n    (ret_3 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.01));\\n  ret_3.y = (ret_3.y + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.02));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1) + bias1)\\n  )).z * 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dx_2;\\n  tmpvar_7.y = dy_1;\\n  ret_3.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_7 * texsize.zw) * 4.0)\\n  )).z - (ret_3.y * 0.01)) + 0.004);\\n  ret_3.z = (ret_3.z + ((texture (sampler_noise_lq, tmpvar_4).y - 0.5) * 0.01));\\n  dx_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(1.0, 0.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(-1.0, 0.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  dy_1 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, 1.0)))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv + (tmpvar_5 * vec2(0.0, -1.0)))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dx_2;\\n  tmpvar_8.y = dy_1;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (tmpvar_8 * texsize.zw);\\n  vec2 domain_10;\\n  domain_10 = (uv - (tmpvar_9 * 2.5));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 0.0;\\n  tmpvar_11.xyz = max (vec4(0.0, 0.0, 0.0, 0.0), texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(-1.0, 0.0))))).xyz;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 0.0;\\n  tmpvar_12.xyz = max (tmpvar_11, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, -1.0))))).xyz;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 0.0;\\n  tmpvar_13.xyz = max (tmpvar_12, texture (sampler_fc_main, domain_10)).xyz;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 0.0;\\n  tmpvar_14.xyz = max (tmpvar_13, texture (sampler_fc_main, (domain_10 + (texsize.zw * vec2(0.0, 1.0))))).xyz;\\n  ret_3.x = ((max (tmpvar_14, texture (sampler_fc_main, \\n    (domain_10 + (texsize.zw * vec2(1.0, 0.0)))\\n  )).x + (\\n    (texture (sampler_main, (uv + (tmpvar_9 * 4.0))).x - ((texture (sampler_blur1, (uv + \\n      (tmpvar_9 * 4.0)\\n    )).xyz * scale1) + bias1).x)\\n   * 0.206)) - 0.09);\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - resonant twister - steel spring.json":
/*!*************************************************************************!*\
  !*** ./presets/converted/martin - resonant twister - steel spring.json ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.005,\"wave_scale\":0.118,\"wave_smoothing\":0.9,\"wave_mystery\":-0.48,\"modwavealphastart\":0.4,\"modwavealphaend\":1.6,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0.15,\"ob_r\":0.2,\"ob_g\":0.2,\"ob_b\":0.2,\"ib_size\":0.1,\"ib_r\":0.6,\"ib_g\":0.6,\"ib_b\":0.6,\"mv_x\":64,\"mv_y\":48,\"mv_l\":2.5,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b3x\":0.7,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":34,\"additive\":1,\"thickoutline\":1,\"x\":0.9,\"rad\":0.10864,\"tex_ang\":1.00531,\"tex_zoom\":0.12726,\"g\":1,\"b\":1,\"a\":0,\"r2\":0.1,\"g2\":0,\"b2\":0.3,\"border_a\":0.4,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"num_inst\":100,\"x\":0.26,\"y\":0.2,\"rad\":0.02007,\"tex_zoom\":0.9355,\"r2\":0.4,\"g2\":0,\"a2\":1,\"border_g\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":14,\"num_inst\":400,\"x\":0.65,\"y\":0.38,\"rad\":0.01645,\"tex_zoom\":0.73678,\"r\":0.6,\"g\":0.4,\"b\":1,\"a\":0.2,\"g2\":0,\"a2\":0.4,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":10,\"thickoutline\":1,\"num_inst\":400,\"x\":0.8,\"y\":0.75,\"rad\":0.07316,\"tex_zoom\":1.04372,\"g\":1,\"b2\":1,\"a2\":1,\"border_g\":0.8,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":1.07408,\"smoothing\":0,\"r\":0,\"g\":0.5},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = 0;\\nt2 = 0;\\nt3 = 0;\",\"point_eqs_eel\":\"num_inst = reg00;\\ninstance = t1;\\n\\nrx1 = gmegabuf (instance*8+5);\\nrx2 = gmegabuf ((num_inst-instance-1)*8+5); //mirrored\\n\\nry1 = gmegabuf (instance*8+6);\\nry2 = gmegabuf ((num_inst-instance-1)*8+6);//mirrored\\n\\nkx = 0.1* q1;\\nky = 0.15 * q1;\\n\\n\\nx0 = (rx1 - rx2)*kx * (abs (sample-0.5)*2+0);;\\n\\ncx = 0.75 ;\\nx = x0+(1-cx)/2 + cx*sample + q13*q3 * (abs(sample-0.5)-0.);\\n\\n\\ny0 = (ry1+ry2)*ky + .0*q13*(abs(sample-0.5)-0.3);\\ny = y0+0.55;\\n\\n\\nang1 = atan2 (x0,y0);\\n\\na = 0.5 + sin(ang1)/3;\\n\\nr = 0.5 + 0.3*sin(rx1*12+sample*12+2);\\ng = 0.5 + 0.3*sin(rx2*12+sample*12+1);\\nb = 0.5 + 0.3*sin(ry1*12+sample*12);\\n\\n\\nt1 += 1;\"},{\"baseVals\":{\"samples\":128,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"samples\":32,\"scaling\":0.89152,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"additive\":1,\"scaling\":1.81669,\"smoothing\":0,\"r\":0.8,\"g\":0.4,\"b\":0.7,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"n = -10000; loop (20000, megabuf(n)=0; gmegabuf(n)=0; n +=1; );\\n\\nMINBPM = 35; MAXBPM = 220; num_res = 512; \\nindex = 0;\\nloop (num_res,\\n  n = index*8;\\n  BPM      = minbpm * pow(maxbpm/minbpm,index/(num_res-1));\\n  megabuf(n) = BPM;\\n  index += 1;\\n);\\n\\n\\n//structure of resonator data, starting at megabuf (0)\\n//size = 8\\n//0: BPM\\n//1: v\\n//2: y\\n//3: amplitude\\n//4: amplitude after harmonics post processing\\n//5: beatcos\\n//6: beatsin\\n\\n\\npi = 3.1416;\\nreg00 = num_res;\",\"frame_eqs_eel\":\"dt = min (1/fps,0.1) ; //Stability !\\ndec_m = 1 - 4*dt; dec_s = 1 - 1.25*dt;\\nvol =  (bass+mid+treb); \\n\\nvol_ = vol_*dec_m + (1-dec_m)*vol; exc = vol-vol_;\\nexcite = atan (exc*2)/1.6;\\n\\nindex=0; ratio = log(maxbpm/minbpm); maxquad = .5; meanquad = 0;\\nloop (num_res,\\n  n = index*8;\\n  omega      =   megabuf(n) * 6.2832/60;\\n  megabuf (n+1) *= 1-0.22*dt; //damping\\n  EC_Steps = int (10*omega*dt)+1; \\n  loop (EC_Steps, // Euler-Cauchy steps\\n    megabuf (n+1) += (excite - sqr(omega)*megabuf(n + 2)) * dt/EC_Steps;\\n    megabuf (n+2) += megabuf(n+1) * dt/EC_Steps);\\n  beatcos  = megabuf(n+1);  \\n  beatsin = megabuf(n+2)*omega; //2pi/60\\n  quad     = sqrt (pow(beatsin,2) + pow(beatcos,2)) ;\\n  if (maxquad < quad, maxquad = quad, 0);\\n  meanquad += quad / num_res;\\n  megabuf (n+3) = megabuf(n+3) *dec_s +  quad* (1-dec_s);\\n  megabuf (n+4) = megabuf(n+3);\\n  megabuf (n+5) = beatcos;\\n  megabuf (n+6) = beatsin ;\\n  index += 1;\\n);\\n\\nn = 0; maxind = 0;\\nloop (num_res,\\n  scale =  (1+megabuf(n+3)/2)/3; \\n  if (megabuf(n+3) > megabuf(maxind+3), maxind = n, 0);\\n  gmegabuf(n+5) = megabuf(n+5) * scale;\\n  gmegabuf(n+6) = megabuf(n+6) * scale;\\nn+=8;);\\n\\n\\nsig0 = sig;\\nsig = megabuf(maxind+6);\\ngp = (maxquad* (1+gp*0.3) > 3.5*meanquad );\\nprog += (sig*sig0 <0) * gp;\\nq27 = ((prog%8)/4-1);\\n\\ngp2 = (maxquad* (1+gp2*0.3) > 7*meanquad );\\nprog2 += (sig*sig0 <0) * gp2;\\nq28 = prog2/3;\\nflash = if ((sig*sig0 < 0)* (maxquad > 8.5*meanquad),4, flash * 0.5) ;\\nq29 = flash;\\nmaxind0 = maxind;\\n\\nn = 0; imax = 0;\\nloop (num_res,\\n  q12 += megabuf(n*8+1);\\n  q13 += megabuf(n*8+2);\\nn+=1;);\\n\\nmaxquad_ = maxquad_*dec_m + (1-dec_m)*maxquad;\\nq1 = sqrt(3/maxquad_);\\ntr2 += maxquad_/fps;\\nq2 = tr2*1.85; //vert. mov. muster\\n\\nq3 = 0.01; //scale x-shift shapes\\n\\nq32 = aspecty;\\n\\n\\nmonitor = q15;\",\"pixel_eqs_eel\":\"rot = 0; warp = 0; dy = -0.00;  dx = 0.00;\\n\\nzoom = 1.03;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\"float iter;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablez;\\n shader_body { \\n  iter = floor((10.0 * clamp (\\n    (texsize.x / 2048.0)\\n  , 0.0, 1.0)));\\n  vec2 uv_1;\\n  uv_1 = uv;\\n  float noise_3;\\n  vec3 ret_4;\\n  xlat_mutablez = (1.0/((uv.y - 0.2)));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (xlat_mutablez * (uv.x - 0.5));\\n  tmpvar_5.y = xlat_mutablez;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = q2;\\n  xlat_mutableuv2 = ((tmpvar_5 + q28) + tmpvar_6);\\n  noise_3 = (texture (sampler_noise_lq, xlat_mutableuv2).x - (texture (sampler_noise_lq, (xlat_mutableuv2 + \\n    (texsize.z * 8.0)\\n  )).x * 0.8));\\n  noise_3 = (noise_3 * (1.0 - (\\n    (float((texture (sampler_pw_noise_lq, (\\n      (noise_3 * 0.001)\\n     + \\n      (xlat_mutableuv2 * vec2(0.08, 0.008))\\n    )).x > 0.85)) * float((xlat_mutablez >= 0.0)))\\n   / xlat_mutablez)));\\n  noise_3 = (noise_3 * (float(\\n    (xlat_mutablez > 0.0)\\n  ) / xlat_mutablez));\\n  ret_4 = texture (sampler_main, uv).xyz;\\n  for (int n_2 = 1; float(n_2) < iter; n_2++) {\\n    vec2 tmpvar_7;\\n    tmpvar_7.y = 0.0;\\n    tmpvar_7.x = float(n_2);\\n    vec2 tmpvar_8;\\n    tmpvar_8.y = 0.0;\\n    tmpvar_8.x = float(-(n_2));\\n    ret_4 = max (max (ret_4, texture (sampler_main, (uv_1 + \\n      (texsize.zw * tmpvar_7)\\n    )).xyz), texture (sampler_main, (uv_1 + (texsize.zw * tmpvar_8))).xyz);\\n  };\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (16.0 * \\n    dot (ret_4, vec3(0.32, 0.49, 0.29))\\n  )), 0.0, 1.0);\\n  float x_10;\\n  x_10 = ((uv.y * 8.0) - (dot (ret_4, vec3(0.32, 0.49, 0.29)) * 5.0));\\n  ret_4 = (ret_4 * vec3((0.1 + (0.15 / \\n    sqrt((x_10 * x_10))\\n  ))));\\n  ret_4 = (ret_4 + ((noise_3 * tmpvar_9) / 5.0));\\n  vec2 tmpvar_11;\\n  tmpvar_11.y = -0.5;\\n  tmpvar_11.x = (q27 + 0.5);\\n  vec2 x_12;\\n  x_12 = (uv - tmpvar_11);\\n  float tmpvar_13;\\n  tmpvar_13 = (1.0 - uv.y);\\n  ret_4 = (ret_4 + ((\\n    (((rand_preset / 2.0) * 2.0) * (tmpvar_13 * tmpvar_13))\\n   / 4.0) * tmpvar_9).xyz);\\n  ret_4 = (ret_4 + ((\\n    (pow (sqrt(dot (x_12, x_12)), -2.0) * vec3(0.4, 0.8, 1.0))\\n   * \\n    (0.2 + noise_3)\\n  ) * tmpvar_9));\\n  ret_4 = (ret_4 + ((\\n    (64.0 * ((texture (sampler_blur3, (\\n      (tmpvar_5 * vec2(0.33, 0.16))\\n     + vec2(0.5, 0.1))).xyz * scale3) + bias3))\\n   * tmpvar_9) * clamp (noise_3, 0.0, 1.0)));\\n  vec2 tmpvar_14;\\n  tmpvar_14.y = -0.1;\\n  float tmpvar_15;\\n  tmpvar_15 = (q27 / 5.0);\\n  tmpvar_14.x = (0.5 + tmpvar_15);\\n  ret_4 = (ret_4 * (1.0 - (\\n    dot (vec3(greaterThan ((\\n      (texture (sampler_blur1, ((tmpvar_5 * vec2(0.5, 0.37)) + tmpvar_14)).xyz * scale1)\\n     + bias1), vec3(0.02, 0.02, 0.02))), vec3(0.32, 0.49, 0.29))\\n   * 0.2)));\\n  vec2 tmpvar_16;\\n  tmpvar_16.y = -0.1;\\n  tmpvar_16.x = (0.505 + tmpvar_15);\\n  ret_4 = (ret_4 * (1.0 - (\\n    dot (vec3(greaterThan ((\\n      (texture (sampler_blur1, ((tmpvar_5 * vec2(0.5, 0.37)) + tmpvar_16)).xyz * scale1)\\n     + bias1), vec3(0.02, 0.02, 0.02))), vec3(0.32, 0.49, 0.29))\\n   * 0.2)));\\n  vec2 tmpvar_17;\\n  tmpvar_17.y = -0.1;\\n  tmpvar_17.x = (0.51 + tmpvar_15);\\n  ret_4 = (ret_4 * (1.0 - (\\n    dot (vec3(greaterThan ((\\n      (texture (sampler_blur1, ((tmpvar_5 * vec2(0.5, 0.37)) + tmpvar_17)).xyz * scale1)\\n     + bias1), vec3(0.02, 0.02, 0.02))), vec3(0.32, 0.49, 0.29))\\n   * 0.2)));\\n  vec4 tmpvar_18;\\n  tmpvar_18.w = 1.0;\\n  tmpvar_18.xyz = ret_4;\\n  ret = tmpvar_18.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - rogue wave -ps3.json":
/*!*********************************************************!*\
  !*** ./presets/converted/martin - rogue wave -ps3.json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":1,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":2.232543,\"wave_smoothing\":0.81,\"wave_mystery\":-0.12,\"modwavealphastart\":0.47,\"modwavealphaend\":1.32,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0.3,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1ed\":0.7},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"y\":0.06,\"rad\":0.981146,\"ang\":0.753982,\"tex_zoom\":0.33105,\"r\":0,\"g\":0.7,\"b\":0.79,\"a\":0.08,\"g2\":0.5,\"b2\":0.69,\"a2\":0.03,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"rad\":0.476928,\"ang\":1.130974,\"tex_zoom\":1.02315,\"g\":1,\"b\":1,\"a\":0.97,\"r2\":1,\"b2\":1,\"a2\":0.1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0.81,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang = time;\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"x\":0.123,\"y\":0,\"rad\":0.273185,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.548217,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"scaling\":0.891519,\"smoothing\":0,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"t2 = t2 + bass_att;\",\"point_eqs_eel\":\"\\nx = .5 + sample*((100*sample)%2-.5);\\nk1 = (100*sample)%4;\\nx = sample ;\\n\\nval = value1;\\ny = val * (.25-(sample-.5)*(sample-.5)) + .45;\\n\\nk1 = (10*bass_att)%4;\\n\\n\\nr = .8; g = .8; b = 1;\\na = bnot(k1); a = .1;\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_slow * p2+ (1-dec_slow)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index3;\\nq29 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nwarp = .3 * sin((index+index2)/8*6.28);\",\"pixel_eqs_eel\":\"rot = -.04*q2*(1-rad);\\ndx = .0;\\nzoom = 1.002+.04*rad ;\",\"warp\":\" shader_body { \\n  vec2 dz_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.002, 0.0))) - texture (sampler_main, (uv - vec2(0.002, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.002))) - texture (sampler_main, (uv - vec2(0.0, 0.002)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  dz_1 = (sqrt(tmpvar_2) / 8.0);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (\\n    (uv - (dz_1 * 0.01))\\n   + \\n    ((((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 0.01) * q22)\\n  .xy)).xyz - (\\n    sqrt(dot (dz_1, dz_1))\\n   * 0.5)) + ((0.02 * vec3(\\n    (dot (texture (sampler_noise_lq, uv), vec4(0.32, 0.49, 0.29, 0.0)) - 0.2)\\n  )) * (1.0 - rad)));\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1.x = uv.x;\\n  float z_2;\\n  uv_1.y = (uv.y - 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  z_2 = (0.3 / tmpvar_3.y);\\n  xlat_mutablers0.x = (tmpvar_3.x * z_2);\\n  xlat_mutablers0.y = z_2;\\n  xlat_mutablers.x = (xlat_mutablers0.x + (time / 2.0));\\n  xlat_mutablers.y = (z_2 + time);\\n  float tmpvar_4;\\n  tmpvar_4 = clamp ((12.0 * tmpvar_3.y), 0.0, 1.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = fract(((tmpvar_3 + 0.5) - (\\n    ((vec3(dot (texture (sampler_noise_hq, (xlat_mutablers / 2.0)), vec4(0.32, 0.49, 0.29, 0.0))) - 0.55) * 0.1)\\n   * tmpvar_4).xy));\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  tmpvar_6.x = texsize.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.0;\\n  tmpvar_7.y = texsize.w;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_6)).xyz), vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot ((texture (sampler_main, (tmpvar_5 + tmpvar_7)).xyz - texture (sampler_main, (tmpvar_5 - tmpvar_7)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutableuv3 = (tmpvar_5 + (tmpvar_8 * (1.0 - tmpvar_4)));\\n  vec2 x_9;\\n  x_9 = ((tmpvar_3 + 0.45) + (tmpvar_8 * 16.0));\\n  xlat_mutableret1 = (texture (sampler_main, fract(xlat_mutableuv3)).xyz * (1.0 - (tmpvar_4 / 2.0)));\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((1.0 - dot (\\n    (xlat_mutableret1 * 4.0)\\n  , vec3(0.32, 0.49, 0.29))), 0.0, 1.0);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (max ((xlat_mutableret1 + \\n    ((vec3((0.02 / sqrt(\\n      dot (x_9, x_9)\\n    ))) * (1.0 - tmpvar_4)) * 2.0)\\n  ), vec3((\\n    (clamp ((1.0/((float(mod (\\n      ((uv.x * 3234224.0) * uv_1.y)\\n    , 22345.0))))), 0.0, 1.0) * (1.0 - tmpvar_4))\\n   * tmpvar_10))) + clamp ((\\n    (q22 * clamp (((\\n      (0.01 * abs((xlat_mutableuv3.x - 0.5)))\\n     / \\n      abs((xlat_mutableuv3.y - 0.55))\\n    ) - (tmpvar_8 * 4.0)), 0.0, 1.0).x)\\n   * tmpvar_10), 0.0, 1.0));\\n  ret = tmpvar_11.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - satellite view.json":
/*!********************************************************!*\
  !*** ./presets/converted/martin - satellite view.json ***!
  \********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":2.232543,\"wave_smoothing\":0.81,\"wave_mystery\":0.28,\"modwavealphastart\":0.47,\"modwavealphaend\":1.32,\"warpanimspeed\":0.01,\"warpscale\":0.01,\"zoom\":1.001832,\"dx\":1,\"warp\":0.01,\"sx\":0.999997,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":18,\"textured\":1,\"x\":0.57,\"rad\":0.099499,\"tex_zoom\":3.264423,\"g\":1,\"b\":1,\"a\":0.6,\"r2\":1,\"b2\":1,\"border_b\":0,\"border_a\":0.02,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"textured\":1,\"rad\":0.476928,\"ang\":1.130974,\"tex_zoom\":1.02315,\"g\":1,\"b\":1,\"a\":0.97,\"r2\":1,\"b2\":1,\"a2\":0.1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0.81,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"x\":0.123,\"y\":0,\"rad\":0.273185,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":63,\"textured\":1,\"y\":1,\"rad\":0.548217,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"additive\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.6,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"shift = 0;\\nstep = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index+1;\\nq28 = index2+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovex = movex +.002*30/fps;\\nq30 = movex;\\n\\nalt = alt * (1-dec_med) + q26*dec_med;\\nq26 = q26 - alt;\\nstep = step + 1*max(q26,0) + q24 -int(step);\\nq30 = step;\\nq30 = movex;\\n\\nlx = lx + .001*30/fps;\\nly = ly + .01*30/fps*q2;\\nq10 = lx;\\nq11 = 0;\\n\\n\\nzoom = (1.0  + .0*rad);\\ndx = .0;\\ndy = .00;\\nrot = .1*q1;\",\"pixel_eqs_eel\":\"\",\"warp\":\"vec3 xlat_mutablemus;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_4;\\n  tmpvar_4 = (((q28 - 1.0) * sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )) + (rand_frame * 86.0)).x;\\n  uv_1 = (uv + ((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .xy * vec2(0.0, 1.0)) + (0.01 * \\n    clamp (((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3)), vec2(-18.0, -18.0), vec2(18.0, 18.0))\\n  )));\\n  uv6_2 = (0.4 * sin((\\n    ((tmpvar_3 * 2.0) * q28)\\n   + rand_frame.xy)));\\n  xlat_mutablemus = (vec3((0.06 / sqrt(\\n    dot (uv6_2, uv6_2)\\n  ))) * roam_sin.xyz);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix (xlat_mutablemus, vec3(dot (xlat_mutablemus, vec3(0.32, 0.49, 0.29))), vec3(clamp ((0.2 * \\n    dot (xlat_mutablemus, vec3(0.32, 0.49, 0.29))\\n  ), 0.0, 1.0)));\\n  xlat_mutablemus = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((q24 * (\\n    (((texture (sampler_main, (\\n      ((uv_1 - 0.5) * 1.01)\\n     + 0.48)).xyz - (\\n      ((texture (sampler_blur2, fract(uv_1)).xyz * scale2) + bias2)\\n     * 0.03)) + (0.15 * tmpvar_5)) * 0.97)\\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_6.xyz;\\n }\",\"comp\":\"vec2 xlat_mutabledz;\\nvec3 xlat_mutablemus;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutablemus = (texture (sampler_main, (0.1 * xlat_mutabledz)).xyz + 0.01);\\n  uv2_1 = (uv - 0.5);\\n  xlat_mutabledz = vec2(0.0, 0.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q30;\\n  float tmpvar_5;\\n  tmpvar_5 = (q30 / 2.0);\\n  tmpvar_4.y = tmpvar_5;\\n  xlat_mutableuv3 = (((0.01999998 * uv2_1) + 0.5) + tmpvar_4);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\\n  xlat_mutableneu = ((0.00999999 * tmpvar_6) + (0.99 * dot (tmpvar_6, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), xlat_mutableneu);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q30;\\n  tmpvar_7.y = tmpvar_5;\\n  xlat_mutableuv3 = (((1.353333 * uv2_1) + 0.5) + tmpvar_7);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\\n  xlat_mutableneu = ((0.6766666 * tmpvar_8) + (0.3233334 * dot (tmpvar_8, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, xlat_mutableneu);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q30;\\n  tmpvar_9.y = tmpvar_5;\\n  xlat_mutableuv3 = (((0.6866666 * uv2_1) + 0.5) + tmpvar_9);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\\n  vec3 tmpvar_10;\\n  tmpvar_10 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\\n  xlat_mutableneu = ((0.3433333 * tmpvar_10) + (0.6566667 * dot (tmpvar_10, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, xlat_mutableneu);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q30;\\n  tmpvar_11.y = tmpvar_5;\\n  xlat_mutableuv3 = (((0.01999998 * uv2_1) + 0.5) + tmpvar_11);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.xy);\\n  xlat_mutableuv3 = (0.4 * cos((16.0 * xlat_mutableuv3)));\\n  vec3 tmpvar_12;\\n  tmpvar_12 = vec3((0.03 / sqrt(dot (xlat_mutableuv3, xlat_mutableuv3))));\\n  xlat_mutableneu = ((0.00999999 * tmpvar_12) + (0.99 * dot (tmpvar_12, vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, xlat_mutableneu);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ((texture (sampler_main, (uv_orig * 0.8)).xyz + (xlat_mutablemus * 6.0)) + (32.0 * (xlat_mutableret1 * xlat_mutablemus)));\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - the bridge of khazad-dum [flexi's growth raised to the power of transcendence mix].json":
/*!****************************************************************************************************************************!*\
  !*** ./presets/converted/martin - the bridge of khazad-dum [flexi's growth raised to the power of transcendence mix].json ***!
  \****************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":0.952,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":4,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.527,\"wave_smoothing\":0.45,\"modwavealphastart\":0,\"modwavealphaend\":1.32,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.8,\"wave_g\":0.49,\"ob_size\":0.015,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":33,\"additive\":1,\"num_inst\":81,\"rad\":0.04896,\"tex_ang\":1.00531,\"tex_zoom\":1.53117,\"g\":1,\"b\":1,\"a\":0,\"g2\":0,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\ntrel = time/8;\\nk1 = instance/num_inst;\\nk2 = k1 + trel - int(k1+trel);\\n\\ny0 = k2+.01 ;\\n\\nxwidth = .1*(cos(6*k1)+3); //breite\\nxofs = .1*cos(k2*6+trel)*y0;\\nx = .5 + .4*xwidth*(.2+y0)*sin(k1*1383*xwidth) + xofs;\\n//xwidth in der letzten Klammer : Test\\n\\ny = y0;\\n\\nbright = 1-sqr(y0); \\na = max(bright,0); a2 = 0;\\nrad = .4*y0+.1 - .0*sin(k1*954);\\n\\nr = .0; g = 0; b = .0;\\nr2 = 0; g2 = 0; b2= .48; //## rot mit ampl. mod !\\nadditive = 1; ///sonst andere farben im warp-s gestoert\"},{\"baseVals\":{\"enabled\":1,\"sides\":12,\"additive\":1,\"num_inst\":571,\"x\":0.26,\"y\":0.2,\"rad\":0.39317,\"tex_zoom\":0.9355,\"g2\":0,\"a2\":0.2,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"mov1 = q1;\\nRotMode = q3;\\nburst = q10;\\ncopies = q14;\\ncopy = (instance%copies)/copies;\\nk1 = int(instance/copies)*copies/num_inst;\\nk1 = int(k1*burst)/burst+k1/burst;\\n\\nmov1 = mov1 + k1 -copy*q2;//dt\\nmov1 = mov1 - int(mov1);\\n\\nRotMode = RotMode - copy*q4;\\nrota = mov1 * RotMode*q5*2 ;\\nmov1 = mov1*(1-RotMode) + RotMode*(.5+.025*k1);\\n\\nmov1 = pow(mov1,.9); //Schneller bei t=0;\\n\\nTht = sin(k1*k1*123.2)*(.2 + RotMode*.0);\\nPhi = k1*1613.3+rota;\\nv0 = (1.0 + .3*cos(k1*13234.7))*q5;\\n\\nz0 = q18/q5; //proximity\\n\\nt0 = .4;\\nspur = (mov1-t0) * above(mov1-t0,0)*q15 ;\\npy = spur*sin(copy*6.28);\\npx = spur*cos(copy*6.28);\\n\\nfov = z0*2; //kein vol hier, sonst y-skal daneben\\nox = (mov1-q19)*v0*sin(Tht) * cos(Phi); //### -.5 bis .5\\noy = mov1*v0*(1-mov1)*cos(2*Tht) -.25;\\noz = mov1*v0*sin(Tht)*sin(Phi); \\n\\nox = ox +  (k1-.5)*q17 +px; \\noy = oy -py;\\noz = oz +py*3;\\n\\n//flim = below(((ox+oy+oz)*800)%32,q13-.1); //ctrl\\n//flim = q13/(((ox+oy+oz)*600)%16+1); //ctrl\\nrad = .025*z0/(oz+z0)*(1-mov1*.5);\\n\\nx = .5 + fov*ox/(oz+z0);\\ny = .5 + fov*oy/(oz+z0);\\nvis = above(mov1,q11)*below(mov1,q12)*above(oz,-z0);\\n\\na = vis*.7/sqrt(copies)*(1+above(spur,0));\\na2 = 0.;\\ng = flim;\"},{\"baseVals\":{\"enabled\":1,\"sides\":13,\"additive\":1,\"num_inst\":212,\"x\":0.65,\"y\":0.38,\"rad\":1.26467,\"tex_zoom\":0.73678,\"g\":1,\"a\":0.3,\"r2\":1,\"g2\":0,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//q25 = time/4;\\n//trel = 2* (q25/2-int(q25/2));\\ntrel = q25;\\ncopies = 1;\\ncopy = (instance%copies)/copies;\\nk1 = int(instance/copies)*copies/num_inst;\\nk2 = k1 + .5;\\ntrel = trel ;\\nt0 = .5; //do not change\\n\\nphase = above(trel,t0);\\nmov1 = bnot(phase)* (t0-trel + .01*k1);\\nmov2 = phase * (trel-t0); //####\\n//mov2 = pow(mov2,.8);\\nstray = 1.2-phase;\\n\\nTht = 3.14*sin(1234.2*k1+time*bnot(phase)) * stray ;\\nPhi = 3245.1*k1;\\n\\nsize0 = .02;\\nox = mov1*q27 + sin(Tht)*cos(phi)* (size0+mov2*(2+k1));\\noy = mov1*8 + cos(Tht)* (size0+4*mov2*k2)*(1-mov2*k2)/2;\\noz = mov1*8 + sin(Tht)*sin(phi)* (size0+mov2*2*(2+k1));\\n\\nz0 = 1;\\nrad = .03 / (oz+z0)/(1+trel*int(rand(100))/50);\\n\\nx = .5 + ox/(oz+z0);\\ny = q29+.2+ oy/(oz+z0);\\n\\na = .1*bnot(phase)+phase*max(0,1-mov2*0)*above(oz+z0,0)*.8; \"},{\"baseVals\":{\"sides\":14,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"num_inst\":31,\"x\":0.75,\"y\":0.6,\"rad\":0.01,\"tex_zoom\":0.3357,\"g\":1,\"a\":0.5,\"r2\":1,\"g2\":0,\"border_r\":0.2,\"border_g\":0.7,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"samples\":75,\"sep\":20,\"usedots\":1,\"additive\":1,\"scaling\":7.858,\"smoothing\":0.1,\"g\":0,\"b\":0,\"a\":0.2,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"usedots\":1,\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.89152,\"smoothing\":0.82,\"r\":0,\"g\":0.2,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"t0a = time; t0 = time+.5;\\nspb_ = .5; ;\\nvolb = .5; volx = .5;\\nvol_= 1; index = 0; mov1 = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.85, 30/fps); dec_slow = pow (0.95, 30/fps);\\nvol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;\\n\\nis_beat = above(vol, .1+vol_+2*peak) * above (time, t0+spb_*.45);\\nt0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);\\npeak = if(is_beat,vol,peak*dec_med);\\nindex = (index + is_beat) %128;\\nspb_ = if(is_beat,spb_ *.9 +.1*min(t0-t0a + .01,2), spb_);\\n\\nq20 = vol_;\\nq21 = above(vol,2.7*vol_);\\nq22 = max(0,peak-.0)+.01;\\nhpeak = hpeak*dec_med + (1-dec_med)*q21;\\nq23 = hpeak * (1+int(rand(8)));\\nq24 = is_beat;\\nvolb = bnot(q24)*volb + q24*vol_; //# vol oder vol_ ?\\nvolx = volx + .2/fps*max(min(volb-volx,1),-1)*bnot(RotMode);\\n\\n// *********** CENTRAL TIMELINE **************\\nrotmode = max(min(sin(mov1/2.4-1.5)*4-2,1),0); //####\\nstop = if(bnot(stop),bnot(index%32),below(lo,1))*bnot(rotmode);\\n//tmp = status%16;\\nspread = if (below(lo,1),spread,int(rand(2))*int(rand(12))/20);\\ncopies = if (below(lo,1),copies,3+int(rand(2))*int(rand(8)));\\nspur  = if (below(lo,1),spur, above(copies,7)*.1);\\nbursts = if (below(lo,1),bursts,1+int(rand(2))*int(rand(6)));\\nxbase = if (below(lo,1),xbase,int(rand(2))*(int(rand(10))/10-.5));\\nvs0 = if (is_beat * bnot(index%77),int(rand(100))/100-.7,vs0);\\nvshift = vshift + 6/fps*max(min((vs0-vshift),.02),-.02);\\n//*********** SMOOTH MOVEMENTS q1 - q8 for SHAPE2 ********\\n//FONTAENE\\nspeed = .15/fps/spb_;\\ntmp = mov1; mov1 = mov1+speed; q2 = mov1-tmp; q1 = mov1;\\n\\n//ROTATION\\n//evtl q5 mit rotmode fixieren statt volx blockieren\\ntmp = RotMode; q3 = RotMode; q4 = RotMode-tmp;\\n\\n//VOLUME\\ntmp = volx; q5 = volx; q6 = q5-tmp; //nicht aendern waehrend Rotation\\n\\n//********* SWITCHES SHAPE2 *************\\nq10 = bursts; //num bursts\\nlo = if(stop,lo+speed,0); //ident. wie bei mov 1!!\\nhi = if(above(lo,1),0,hi+speed); //ident. wie bei mov 1!!\\nq11 = lo; //fade out\\nq12 = hi;\\nq13 = sqrt(q22)*0; //blink effect, ca. 0..16\\nq14 = copies; //copies - noch implementieren\\nq15 = spur*(1-RotMode); //Ampl. multiple spurs; nur mit >8 copies !\\nq16 = 0; //reserved for spur start\\nq17 = spread * (1-rotmode); //hor. spread, max. ca. 0.4\\nq18 = 1/min(max(sin(mov1/2)*10,1),4); //proximity - smaller values: closer;\\nq19 = xbase;\\n//********* CONTROL PARAMETERS SHAPE3 *************\\nxtime = if (stop*q21*above(xtime,2),0,xtime+.3/fps); //impact\\nq25 = xtime;\\nq26 = if (below(xtime,.55),pow(32,-sqr(xtime-.55)*512),pow(2,-sqr(xtime-.55)*3));\\nq27 = sin(time/29)*4; //x-direction impact\\n\\n//********* GENERAL CONTROL PARAMETERS ***************\\nwind = wind+.5/fps * (volx-1.5);\\nq28 = wind;//wind direction - warp shader\\nq29 = sigmoid(sin(mov1/4)*18,1)*.6-.6; //vshift, in warp+comp+impact shape\\nq29 = vshift;\\nq30 = max(sin(mov1/2.2)*sin(time/7),0)+q26;// front cloud dens. - comp.\\nq31 = q5*2-2 + sin(time/17); //back cloud lighting - comp shader\\nq32 = 3+2*sin(time/27); //back cloud density - comp shader\\n\\nmonitor = vshift;;\",\"pixel_eqs_eel\":\"zoom = 1;\\ndy = -.00;\\nwarp =.0;\",\"warp\":\"mat2 ofs;\\nfloat xlat_mutablegreen;\\nfloat xlat_mutablek1;\\nfloat xlat_mutablered;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablewave;\\nfloat xlat_mutablezv;\\n shader_body { \\n  mat2 tmpvar_1;\\n  tmpvar_1[uint(0)].x = texsize.z;\\n  tmpvar_1[uint(0)].y = 0.0;\\n  tmpvar_1[1u].x = 0.0;\\n  tmpvar_1[1u].y = texsize.w;\\n  ofs = (tmpvar_1 * 4.0);\\n  float delta_2;\\n  float ky_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (uv.x - 0.5);\\n  tmpvar_4.y = ((uv.y - 0.5) + q29);\\n  vec2 v_5;\\n  v_5.x = ofs[0].x;\\n  v_5.y = ofs[1].x;\\n  vec2 v_6;\\n  v_6.x = ofs[0].x;\\n  v_6.y = ofs[1].x;\\n  vec2 v_7;\\n  v_7.x = ofs[0].y;\\n  v_7.y = ofs[1].y;\\n  vec2 v_8;\\n  v_8.x = ofs[0].y;\\n  v_8.y = ofs[1].y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).x;\\n  tmpvar_9.y = (texture (sampler_main, (uv + v_7)) - texture (sampler_main, (uv - v_8))).x;\\n  xlat_mutablered = (0.5 * texture (sampler_main, (uv - (0.004 * tmpvar_9))).x);\\n  xlat_mutablered = (xlat_mutablered + (0.5 * texture (sampler_main, uv).x));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = (0.0078125 * (float(\\n    int((tmpvar_4.y * 128.0))\\n  ) + abs(\\n    (fract((tmpvar_4.y * 128.0)) - 0.5)\\n  )));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (tmpvar_10 * 4.0);\\n  ky_3 = clamp ((-0.5 - tmpvar_11.y), 0.0, 1.0);\\n  xlat_mutablek1 = (abs((\\n    fract((tmpvar_11.x * 2.0))\\n   - 0.5)) * 8.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - sign(xlat_mutablek1));\\n  delta_2 = (0.1 + (rand_preset * 0.05)).x;\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (4.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (8.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (12.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  xlat_mutablek1 = (xlat_mutablek1 - ((\\n    (16.0 * sign(xlat_mutablek1))\\n   * ky_3) * ky_3));\\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\\n  float tmpvar_12;\\n  tmpvar_12 = clamp (xlat_mutablek1, -1.6, 1.6);\\n  xlat_mutablek1 = tmpvar_12;\\n  xlat_mutablegreen = (cos((tmpvar_12 * 2.0)) - 0.1);\\n  xlat_mutablewave = ((sin(\\n    ((q1 * 8.0) - (uv.x * 6.0))\\n  ) / 2.0) * q3);\\n  xlat_mutablewave = ((xlat_mutablewave * float(\\n    (xlat_mutablewave >= 0.0)\\n  )) + (q30 * 0.02));\\n  xlat_mutablered = (xlat_mutablered + ((\\n    (xlat_mutablewave / abs(sin((\\n      (1.0/(tmpvar_12))\\n     + \\n      (q1 / 8.0)\\n    ))))\\n   * xlat_mutablegreen) * ky_3));\\n  xlat_mutablezv = ((time * 0.08) + (0.2 * sin(\\n    ((uv * 16.0) + time)\\n  ))).x;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q28;\\n  tmpvar_13.y = (0.2 * time);\\n  xlat_mutableuv2 = ((tmpvar_4 * 2.0) + tmpvar_13);\\n  vec3 tmpvar_14;\\n  tmpvar_14.xy = xlat_mutableuv2;\\n  tmpvar_14.z = xlat_mutablezv;\\n  vec3 tmpvar_15;\\n  tmpvar_15.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_15.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_16;\\n  tmpvar_16.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_16.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_17;\\n  tmpvar_17.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_17.z = (xlat_mutablezv * 7.0);\\n  xlat_mutableuv2 = (tmpvar_4 + ((\\n    ((texture (sampler_noisevol_hq, tmpvar_14).z + (texture (sampler_noisevol_hq, tmpvar_15).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_16).z / 4.0))\\n   + \\n    (texture (sampler_noisevol_hq, tmpvar_17).z / 8.0)\\n  ) * 0.1));\\n  vec3 tmpvar_18;\\n  tmpvar_18.x = xlat_mutablered;\\n  tmpvar_18.y = xlat_mutablegreen;\\n  tmpvar_18.z = ((1.0 + xlat_mutableuv2.y) * sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)));\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = ((tmpvar_18 * 0.8) - 0.005);\\n  ret = tmpvar_19.xyz;\\n }\",\"comp\":\"float trel;\\nfloat vshift;\\nvec2 sunpos;\\nvec3 xlat_mutablelava;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nfloat xlat_mutablesmoke;\\nfloat xlat_mutablesmoke2;\\nfloat xlat_mutablesun;\\nvec2 xlat_mutableuv_l;\\nvec3 xlat_mutableuv_vol;\\nvec2 xlat_mutableuvc;\\nfloat xlat_mutablew;\\nfloat xlat_mutablez;\\n shader_body { \\n  trel = (time / 2.0);\\n  vshift = (0.5 - q29);\\n  vec2 tmpvar_1;\\n  tmpvar_1.x = rand_preset.x;\\n  tmpvar_1.y = ((-0.1 - (rand_preset.y / 2.0)) + vshift);\\n  sunpos = (tmpvar_1 * aspect.xy);\\n  float tmpvar_2;\\n  tmpvar_2 = (time * 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.wz);\\n  float tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = (min (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\\n  tmpvar_6 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\\n  tmpvar_6 = (tmpvar_6 + (float(\\n    (abs((tmpvar_3.x / tmpvar_3.y)) > 1.0)\\n  ) * (\\n    (tmpvar_6 * -2.0)\\n   + 1.570796)));\\n  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.x / tmpvar_3.y)));\\n  if ((abs(tmpvar_3.y) > (1e-08 * abs(tmpvar_3.x)))) {\\n    if ((tmpvar_3.y < 0.0)) {\\n      if ((tmpvar_3.x >= 0.0)) {\\n        tmpvar_4 += 3.141593;\\n      } else {\\n        tmpvar_4 = (tmpvar_4 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_4 = (sign(tmpvar_3.x) * 1.570796);\\n  };\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((0.3183098 * tmpvar_4) + tmpvar_2);\\n  tmpvar_7.y = (((\\n    (aspect.w * log(sqrt(dot (tmpvar_3, tmpvar_3))))\\n   * 0.6) + (0.3183098 * tmpvar_4)) - (tmpvar_2 * 4.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_7 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  xlat_mutableuvc = (((tmpvar_8 - 0.5) * aspect.xy) + 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = (0.005 * time);\\n  xlat_mutableuv_l = (tmpvar_8 + tmpvar_9);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = sin((xlat_mutableuvc - sunpos));\\n  xlat_mutablesun = (0.1 / sqrt(dot (tmpvar_10, tmpvar_10)));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(tmpvar_8);\\n  vec3 tmpvar_12;\\n  tmpvar_12 = vec3((texture (sampler_fc_main, tmpvar_11).x + (2.0 * (\\n    (texture (sampler_blur2, tmpvar_11).xyz * scale2)\\n   + bias2).x)));\\n  vec3 tmpvar_13;\\n  tmpvar_13.x = tmpvar_12.x;\\n  tmpvar_13.y = pow (tmpvar_12.x, 2.1);\\n  tmpvar_13.z = pow (tmpvar_12.x, 4.0);\\n  xlat_mutablew = ((tmpvar_8.y - (\\n    ((dot (texture (sampler_noise_hq, vec2((xlat_mutableuv_l.x / 6.0))), vec4(0.32, 0.49, 0.29, 0.0)) + tmpvar_8.x) - 0.5)\\n   / 4.0)) - vshift);\\n  xlat_mutablez = (0.2 / xlat_mutablew);\\n  float tmpvar_14;\\n  tmpvar_14 = clamp ((-0.2 - (\\n    (8.0 * q5)\\n   * xlat_mutablew)), 0.0, 1.0);\\n  xlat_mutablers0.x = (((tmpvar_8.x - 0.5) * (1.0 + \\n    abs(xlat_mutablez)\\n  )) * 2.0);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  xlat_mutablers0 = (xlat_mutablers0 * ((4.0 * \\n    float((xlat_mutablez <= 0.0))\\n  ) + 1.0));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = (1.5 + xlat_mutablew);\\n  vec2 x_16;\\n  x_16 = (xlat_mutablers0 - tmpvar_15);\\n  float tmpvar_17;\\n  tmpvar_17 = ((q26 / sqrt(\\n    dot (x_16, x_16)\\n  )) / 4.0);\\n  xlat_mutablers0 = (xlat_mutablers0 * (1.0 + (tmpvar_17 * tmpvar_17)));\\n  xlat_mutablers.x = (xlat_mutablers0 * 2.0).x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (trel * 0.5));\\n  float tmpvar_18;\\n  tmpvar_18 = (texture (sampler_main, tmpvar_8).y * tmpvar_14);\\n  vec3 tmpvar_19;\\n  tmpvar_19.xy = (xlat_mutablers * 2.0);\\n  tmpvar_19.z = (0.2 * trel);\\n  xlat_mutableuv_vol = (tmpvar_19 * float((xlat_mutablez >= 0.0)));\\n  xlat_mutablelava = (((\\n    (2.0 * clamp ((texture (sampler_noisevol_hq, xlat_mutableuv_vol) - 0.2), 0.0, 1.0))\\n  .xyz * \\n    clamp ((texture (sampler_noise_hq, (xlat_mutablers / 16.0)) - 0.5), 0.0, 1.0)\\n  .x) / sqrt(\\n    abs(xlat_mutablez)\\n  )) + tmpvar_17);\\n  float tmpvar_20;\\n  tmpvar_20 = dot (xlat_mutablelava, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_21;\\n  tmpvar_21.x = tmpvar_20;\\n  tmpvar_21.y = pow (tmpvar_20, 2.1);\\n  tmpvar_21.z = pow (tmpvar_20, 6.0);\\n  xlat_mutableret1 = (((\\n    ((tmpvar_8.y * (1.0 + q23)) + xlat_mutablesun)\\n   * vec3(0.1, 0.1, 0.2)) * tmpvar_14) + (clamp (tmpvar_21, 0.0, 1.0) * (1.0 - \\n    clamp ((-1.0 - (12.0 * xlat_mutablew)), 0.0, 1.0)\\n  )));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \\n    (tmpvar_18 * 8.0)\\n  ), 0.0, 1.0));\\n  xlat_mutablesmoke = texture (sampler_main, fract(((tmpvar_8 - 0.5) + 0.5))).z;\\n  xlat_mutablesmoke = (xlat_mutablesmoke * (xlat_mutablesmoke * q5));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \\n    ((xlat_mutablesmoke * q32) * tmpvar_14)\\n  ), 0.0, 1.0));\\n  xlat_mutablesmoke2 = (texture (sampler_main, ((\\n    (tmpvar_8 - 0.5)\\n   / 2.0) + 0.5)).z * q30);\\n  xlat_mutableret1 = (xlat_mutableret1 + (clamp (tmpvar_13, 0.0, 1.0) - (\\n    ((xlat_mutablez * clamp ((xlat_mutablesmoke + \\n      (xlat_mutablew * q31)\\n    ), 0.0, 1.0)) * vec3(1.0, 0.4, 0.1))\\n   * tmpvar_14)));\\n  float tmpvar_22;\\n  tmpvar_22 = clamp (((\\n    (tmpvar_18 * xlat_mutablez)\\n   * xlat_mutablez) / 16.0), 0.0, 1.0);\\n  vec3 tmpvar_23;\\n  tmpvar_23.x = tmpvar_22;\\n  tmpvar_23.y = pow (tmpvar_22, 2.1);\\n  tmpvar_23.z = pow (tmpvar_22, 6.0);\\n  xlat_mutableret1 = (xlat_mutableret1 + clamp (tmpvar_23, 0.0, 1.0));\\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((\\n    (((dot (texture (sampler_noise_mq, vec2(\\n      ((xlat_mutableuv_l.x / 4.0) + (0.02 * trel))\\n    )), vec4(0.32, 0.49, 0.29, 0.0)) / 6.0) - tmpvar_8.y) + 0.8)\\n   * 32.0), 0.0, 1.0));\\n  vec3 tmpvar_24;\\n  tmpvar_24.x = xlat_mutablesmoke2;\\n  tmpvar_24.y = pow (xlat_mutablesmoke2, 2.1);\\n  tmpvar_24.z = pow (xlat_mutablesmoke2, 6.0);\\n  xlat_mutableret1 = ((xlat_mutableret1 * clamp (\\n    (1.0 - xlat_mutablesmoke2)\\n  , 0.0, 1.0)) + clamp (tmpvar_24, 0.0, 1.0));\\n  vec4 tmpvar_25;\\n  tmpvar_25.w = 1.0;\\n  tmpvar_25.xyz = (1.0 - exp((\\n    -(xlat_mutableret1)\\n   * 2.0)));\\n  ret = tmpvar_25.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin - tunnel race.json":
/*!*****************************************************!*\
  !*** ./presets/converted/martin - tunnel race.json ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.980001,\"decay\":0.5,\"echo_zoom\":0.999998,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"additivewave\":1,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":2.103075,\"wave_smoothing\":0.54,\"wave_mystery\":0.38,\"modwavealphastart\":0.81,\"modwavealphaend\":1.4,\"warpanimspeed\":1.4595,\"warpscale\":2.0067,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0,\"ob_b\":1,\"ob_a\":0.3,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.85,\"mv_r\":0.4999,\"mv_g\":0.4999,\"mv_b\":0.4999,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"sides\":18,\"textured\":1,\"rad\":0.154155,\"tex_ang\":3.769911,\"tex_zoom\":5.277839,\"g\":1,\"b\":1,\"a\":0.7,\"r2\":1,\"b2\":1,\"border_b\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_ang = 3+2*q1;\"},{\"baseVals\":{\"sides\":32,\"rad\":0.06892,\"tex_zoom\":1.831505,\"g\":1,\"b\":1,\"a\":0.9,\"g2\":0,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"a = q24/2; a2 = 0;\\n\\nr = rand(10)/10;\\ng = rand(10)/10;\\nb = rand(10)/10;\\n\\nrad = .06*q22;\"},{\"baseVals\":{\"sides\":63,\"x\":0.123,\"y\":0,\"rad\":0.273185,\"tex_zoom\":0.499805,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = .5 + .1* sin (time*73);\\ny = .5 + .1* sin (time*23);\\n\\nr = 0; g = 0; b = 0;\\nr2 = 1; g2 = 1; b2 = 1;\\n\\nrad = mid_att/100;\\na = .7;\\na2 = a;\"},{\"baseVals\":{\"y\":0.51,\"rad\":0.198688,\"tex_ang\":1.00531,\"tex_zoom\":0.499805,\"g\":0.4,\"a\":0.7,\"r2\":1,\"b2\":1,\"border_r\":0.5,\"border_g\":0.5,\"border_b\":0.5,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\n\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":128,\"additive\":1,\"scaling\":0.891519,\"smoothing\":0,\"g\":0,\"b\":0},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = sample ;\\ny = .5+ value2*.01;\\n\\na = 1*q24*((q27+1)%2);\\n\\nr = .5+.5*sin(time/5);\\ng = .5+.5*sin(time/6);\\nb = .5+.5*sin(time/13);\"},{\"baseVals\":{\"enabled\":1,\"samples\":128,\"thick\":1,\"scaling\":0.891519,\"smoothing\":0,\"r\":0,\"g\":0,\"a\":0.1},\"init_eqs_eel\":\"t\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"y = sample ;\\nx = .5+ value2*0.01;\\n\\na = 1*q24*(q27%2);\\n\\nr = .5+.5*sin(time/7);\\ng = .5+.5*sin(time/9);\\nb = .5+.5*sin(time/11);\"},{\"baseVals\":{\"thick\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"a\":0.1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\"}],\"init_eqs_eel\":\"prox = 1;\",\"frame_eqs_eel\":\"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.95, 30/fps);\\n//dec_xlow = pow (0.999, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq22 = peak;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nvol = vol*dec_med + (1-dec_med)*q26;\\nq27 = index + 1;\\nq28 = index2 +1;\\n\\np2 = .3*sin(time) + .3*cos(time/3);\\n//*****tunnel tilting\\nq1 = cos(p2 * 3.1416/4);\\nq2 = sin(p2 * 3.1416/4);\\nq3 = -q2;\\nq4 = q1;\\n\\n//****tunnel viewpoint x,y\\nvtrig = is_beat * bnot(index%2);\\nvx = vx * bnot(vtrig) + vtrig * (rand(100)/100-.5);\\nvy = vy * bnot(vtrig) + vtrig * (rand(100)/100-.5);\\nvx = vx* below(index%15,5); //###\\nvy = vy* below(index%15,5);\\nq5 = vx*10;\\nq6 = vy*12;\\n\\n//***tunnel width\\nq21 = (1+sin(time/12))/8+.01;\\n\\n//**floor proximity\\nprox = prox - above(vy,.3)*prox*2;\\nq32 = .5 + .2*prox;\\nmonitor = prox;\\n\\n//****tunnel rotation\\nrota = rota +.01*below(index%16,8)/fps*30;\\nrota1 = rota1*dec_med + (1-dec_med)*rota;\\nq7 = rota1;\\n\\n//****tunnel speed\\nmovez = movez + 1.2/(1+abs(vx)+abs(vy))/fps;\\nq8 = movez * (1+q21/4);\\n//dyn. Aenderung von q21 bewirkt auch Richt.wechsel\\n\\n//***********************\\ntrig1= q24*bnot(index%12);\\ntrig2= q24*bnot((index+4)%12);\\ntrig3= q24*bnot((index+8)%12);\\ntrel = trel + vol/fps;\\nz0 = 1;\\nspeed = vol/2;\\nhx = sin(trel);\\nhy = cos(trel);\\n\\np1z = bnot(trig1)* (p1z + (5+p1z)*speed/fps)+trig1*z0;\\np1z = max(p1z,.1);\\nq9 = hx/(p1z);\\nq10 = hy/(p1z);\\nq11 = p1z;\\nq12 = .1+.02*q26*bnot((index+2)%3)*p1z*exp(-p1z/100);\\n\\np2z = bnot(trig2)* (p2z + (5+p2z)*speed/fps)+trig2*z0;\\np2z = max(p2z,.1);\\nq13 = 2*hx/(p2z);\\nq14 = -.5*hy/(p2z);\\nq15 = p2z;\\nq16 = .1+.02*q26*bnot((index+2)%3)*p2z*exp(-p2z/100);\\n\\n\\np3z = bnot(trig3)* (p3z + (5+p3z)*speed/fps)+trig3*z0;\\np3z = max(p3z,.1);\\nq17 = -1.4*hx/(p3z);\\nq18 = 2*hy/(p3z);\\nq19 = p3z;\\nq20 = .1+.02*q26*bnot((index+2)%3)*p3z*exp(-p3z/100);\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 uv6_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (14.0 * sqrt((x_4 * x_4)));\\n  uv1_2 = (tmpvar_3 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 40.0));\\n  uv6_1 = (0.4 * cos((uv1_2 * 4.0)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((texture (sampler_main, \\n    ((uv1_2 * ((0.95 - \\n      (q28 / 16.0)\\n    ) + (0.4 * tmpvar_5))) + 0.5)\\n  ).xyz + \\n    (vec3((0.003 / sqrt(dot (uv6_1, uv6_1)))) * (1.0 + roam_cos).xyz)\\n  ) * 0.99) - 0.025);\\n  ret = tmpvar_6.xyz;\\n }\",\"comp\":\"vec2 xlat_mutableKugel1;\\nvec2 xlat_mutableKugel2;\\nfloat xlat_mutablerad1;\\nfloat xlat_mutablerad2;\\nfloat xlat_mutablerad3;\\nvec3 xlat_mutableret2;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablersk;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutablerss0;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv_1;\\n  float z_2;\\n  vec3 dots_3;\\n  vec2 uv1_4;\\n  vec3 ret_5;\\n  mat2 tmpvar_6;\\n  tmpvar_6[uint(0)] = _qa.xy;\\n  tmpvar_6[1u] = _qa.zw;\\n  uv_1 = ((uv * aspect.xy) * tmpvar_6);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q5;\\n  tmpvar_7.y = q6;\\n  uv_1 = (uv_1 - (0.1 * tmpvar_7));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv_1 - 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q9;\\n  tmpvar_9.y = q10;\\n  xlat_mutablersk = (tmpvar_8 + tmpvar_9);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = normalize(xlat_mutablersk);\\n  xlat_mutablerad1 = (q11 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * tmpvar_10);\\n  xlat_mutableKugel1 = (xlat_mutableuv4 * clamp ((8.0 - \\n    (8.0 * xlat_mutablerad1)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q13;\\n  tmpvar_11.y = q14;\\n  xlat_mutablersk = (tmpvar_8 + tmpvar_11);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = normalize(xlat_mutablersk);\\n  xlat_mutablerad2 = (q15 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * tmpvar_12);\\n  xlat_mutableKugel2 = (xlat_mutableuv4 * clamp ((8.0 - \\n    (8.0 * xlat_mutablerad2)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q17;\\n  tmpvar_13.y = q18;\\n  xlat_mutablersk = (tmpvar_8 + tmpvar_13);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = normalize(xlat_mutablersk);\\n  xlat_mutablerad3 = (q19 * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * tmpvar_14);\\n  uv1_4 = (tmpvar_8 + ((\\n    (xlat_mutableKugel2 + xlat_mutableKugel1)\\n   + \\n    (xlat_mutableuv4 * clamp ((8.0 - (8.0 * xlat_mutablerad3)), 0.0, 1.0))\\n  ) * 0.2));\\n  float tmpvar_15;\\n  float tmpvar_16;\\n  tmpvar_16 = (min (abs(\\n    (uv1_4.x / uv1_4.y)\\n  ), 1.0) / max (abs(\\n    (uv1_4.x / uv1_4.y)\\n  ), 1.0));\\n  float tmpvar_17;\\n  tmpvar_17 = (tmpvar_16 * tmpvar_16);\\n  tmpvar_17 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_17) + 0.05368138) * tmpvar_17) - 0.1173503)\\n     * tmpvar_17) + 0.1938925) * tmpvar_17) - 0.3326756)\\n   * tmpvar_17) + 0.9999793) * tmpvar_16);\\n  tmpvar_17 = (tmpvar_17 + (float(\\n    (abs((uv1_4.x / uv1_4.y)) > 1.0)\\n  ) * (\\n    (tmpvar_17 * -2.0)\\n   + 1.570796)));\\n  tmpvar_15 = (tmpvar_17 * sign((uv1_4.x / uv1_4.y)));\\n  if ((abs(uv1_4.y) > (1e-08 * abs(uv1_4.x)))) {\\n    if ((uv1_4.y < 0.0)) {\\n      if ((uv1_4.x >= 0.0)) {\\n        tmpvar_15 += 3.141593;\\n      } else {\\n        tmpvar_15 = (tmpvar_15 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_15 = (sign(uv1_4.x) * 1.570796);\\n  };\\n  xlat_mutablerss0.x = (tmpvar_15 / 3.1416);\\n  xlat_mutablerss0.y = ((0.1 * q21) / sqrt(dot (uv1_4, uv1_4)));\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = xlat_mutablerss0.x;\\n  tmpvar_18.y = (xlat_mutablerss0.y + time);\\n  xlat_mutablerss = (tmpvar_18 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_19;\\n  tmpvar_19 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.5), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_20;\\n  tmpvar_20 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = xlat_mutablerss0.x;\\n  tmpvar_21.y = (xlat_mutablerss0.y + (time / 4.0));\\n  xlat_mutablerss = (tmpvar_21 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec2 tmpvar_22;\\n  tmpvar_22 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  dots_3 = (vec3((clamp (\\n    (0.04 / sqrt(dot (tmpvar_20, tmpvar_20)))\\n  , 0.0, 1.0) * tmpvar_19.x)) + (clamp (\\n    (0.02 / sqrt(dot (tmpvar_22, tmpvar_22)))\\n  , 0.0, 1.0) * vec4(\\n    greaterThanEqual ((texture (sampler_pw_noise_lq, (xlat_mutablerss / 32.0)) - 0.5), vec4(0.0, 0.0, 0.0, 0.0))\\n  ).x));\\n  dots_3 = (dots_3 * clamp ((0.2 / \\n    abs(xlat_mutablerss0.y)\\n  ), 0.0, 1.0));\\n  dots_3 = (dots_3 * (dots_3 * 0.6));\\n  float tmpvar_23;\\n  tmpvar_23 = (q32 / (uv1_4.y - 0.02));\\n  float tmpvar_24;\\n  tmpvar_24 = clamp ((4.0 / tmpvar_23), 0.0, 1.0);\\n  xlat_mutablers0.x = (uv1_4.x * tmpvar_23);\\n  xlat_mutablers0.y = (tmpvar_23 / 4.0);\\n  xlat_mutablers.x = xlat_mutablers0.x;\\n  xlat_mutablers.y = (xlat_mutablers0.y + (q8 * 3.0));\\n  vec3 tmpvar_25;\\n  tmpvar_25 = vec3((dot (texture (sampler_pw_noise_lq, (0.02 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5));\\n  z_2 = (0.2 / (sqrt(\\n    dot (uv1_4, uv1_4)\\n  ) - q21));\\n  xlat_mutableuv2.y = (z_2 + q8);\\n  xlat_mutableuv2.x = (xlat_mutablerss0.x + q7);\\n  ret_5 = (max ((\\n    (texture (sampler_main, fract(xlat_mutableuv2)) / z_2)\\n  .xyz * \\n    (1.0 - (0.5 * tmpvar_24))\\n  ), (tmpvar_25 * tmpvar_24)) + dots_3);\\n  ret_5 = (ret_5 + ((\\n    abs((((\\n      (inversesqrt(xlat_mutablerad1) * tmpvar_10.x)\\n     * roam_sin).xyz + (\\n      (inversesqrt(xlat_mutablerad2) * tmpvar_12.y)\\n     * roam_sin.xzy)) + ((\\n      inversesqrt(xlat_mutablerad3)\\n     * tmpvar_14.x) * roam_sin.zyx)))\\n   * \\n    (0.2 + (tmpvar_25 * tmpvar_24))\\n  ) * (q22 * 2.0)));\\n  xlat_mutableret2 = (vec3(clamp ((\\n    (((0.02 * q22) * q21) / sqrt(dot (uv1_4, uv1_4)))\\n   * \\n    dot (texture (sampler_main, (uv1_4 + 0.5)), vec4(0.32, 0.49, 0.29, 0.0))\\n  ), 0.0, 1.0)) / (sqrt(\\n    dot (uv1_4, uv1_4)\\n  ) + 0.02));\\n  float tmpvar_26;\\n  tmpvar_26 = dot (xlat_mutableret2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_27;\\n  tmpvar_27.x = 1.0;\\n  tmpvar_27.y = tmpvar_26;\\n  tmpvar_27.z = (tmpvar_26 / 2.0);\\n  ret_5 = (ret_5 + (tmpvar_26 * tmpvar_27));\\n  vec4 tmpvar_28;\\n  tmpvar_28.w = 1.0;\\n  tmpvar_28.xyz = ret_5;\\n  ret = tmpvar_28.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/martin, fishbrain + flexi - mandelbox explorer v1 Eo.S. optimize [bipolar witchcraft mix].json":
/*!**************************************************************************************************************************!*\
  !*** ./presets/converted/martin, fishbrain + flexi - mandelbox explorer v1 Eo.S. optimize [bipolar witchcraft mix].json ***!
  \**************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":6,\"wave_thick\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.55,\"wave_scale\":0.273,\"wave_smoothing\":0.63,\"wave_mystery\":1,\"modwavealphastart\":1.6,\"modwavealphaend\":2,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.5,\"wave_g\":0,\"wave_b\":0,\"wave_y\":0,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"rad\":1.79142,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"a\":0,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.1;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"r\":0,\"g\":0,\"b\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":2.0231,\"smoothing\":0,\"r\":0.72,\"g\":0,\"b\":0.25},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;\",\"frame_eqs_eel\":\"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n//a = beat;\",\"point_eqs_eel\":\"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;\"}],\"init_eqs_eel\":\"//******** INITIALIZATION *********\\nn = 0; loop (10000, gmegabuf(n)=0; n=n+1; ); \\nn = 0; loop (10000,  megabuf(n)=0; n=n+1; ); \\ntrelx = 0;  trely = 0; trelz = 0;\\nreg20 = 1; reg21 = 0; reg22 = 0; reg23 = 0; reg24 = 1; reg25 = 0; reg26 = 0; reg27 = 0; reg28 = 1;\\n\\n//Find random starting point\\nwhile (exec2(\\n  ran1 = rand(800)/100;  ran2 = rand(800)/100;  ran3 = rand(800)/100;\\n  PosX = rand(10)-5;   PosY = rand(10)-5;   PosZ = rand(10)-5; \\n  c1 = cos(ran1); c2 = cos(ran2); c3 = cos(ran3); \\n  s1 = sin(ran1); s2 = sin(ran2); s3 = sin(ran3);\\n\\n  reg20 = c2*c1; reg21 = c2*s1; reg22 = -s2;\\n  reg23 = s3*s2*c1 - c3*s1; reg24 = s3*s2*s1 + c3*c1; reg25 = s3*c2;\\n  reg26 = c3*s2*c1 + s3*s1; reg27 = c3*s2*s1 - s3*c1; reg28 = c3*c2;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.001;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.05;\\n  ,(dist < 0.6)*(len > 30)));\\n,(dist < .2))); //end while\\n\\n\\n//---------- some global vars, do not change -------------\\nq7 = .1; //MyZoom\\nq30 = 1; //logarithmic Z-Dist storage; unused\\nq3 = 1.0/q30; //store inverse so shaders don't need to do inverse for division\\nq31 = 128;\\nq29 = 1.0/q31;//store the inverse of q31 so the shaders don't need to do inverse for division\\nstart = 1; travel = 0; RotZ = 0; look = 0; slow = 0;\\ncran0 = rand(1);\\ncran1 = rand(1);\",\"frame_eqs_eel\":\"wave_a = 0;\\nfps_ = .9 * fps_ + .1*if(fps<=25,fps,25+.5*(fps-25)); \\ndec_s = 1-.03*30/fps_;\\n\\nbeat = (time >  t0+2);\\nt0 = if(beat, time, t0);\\n\\nspeed = min(0.2,dist_-.0) * (1+avg) *(1-slow*.7);\\nds = ds * dec_s + (1-dec_s)*speed*.2/fps_ ; \\n\\nRotZ = if (RotZ==0,beat*(rand(100)<10)*(rand(10)/10-.5),\\n                   bnot(beat*(rand(100)<30))*RotZ);\\n\\nslow = if (bnot(slow), beat*(rand(1000*avg)<6), bnot(beat*(rand(100)<50)));\\nlook = if (bnot(look), beat*(rand(1000*speed)<5), bnot(beat));\\n\\n//Lamp View\\nlx = if (beat,rand(150)/200+.15,lx);\\nly = if (beat,rand(150)/200+.15,ly);\\nlampx = lampx * dec_s + (1-dec_s)*if (look,lx,0.5);\\nlampy = lampy * dec_s + (1-dec_s)*if (look,ly,0.5);\\nq1 = lampx; q2 = lampy;\\n\\n//Position \\nDirX= reg26; DirY= reg27; DirZ = reg28;\\nPosX = PosX + ds*DirX ; PosY = PosY + ds*DirY; PosZ = PosZ + ds*DirZ; \\nq4 = PosX; q5 = PosY; q6 = PosZ;\\n\\nangchg = (.15-dist_)*(dist_ < .15)/2;\\ntravel = if (angchg > 0,0,travel+ds);\\nv1 = v1 * dec_s + (1-dec_s)* RotZ * .05/fps_;\\nv2 = v2 *dec_s + (1-dec_s)*angchg *xslope/fps_;\\nv3 = v3 *dec_s + (1-dec_s)*(angchg *yslope/fps_ + v1/2 * (travel>1));\\n\\n//push old RotMat\\nreg30 =reg20; reg31 =reg21; reg32 =reg22; \\nreg33 =reg23; reg34 =reg24; reg35 =reg25; \\nreg36 =reg26; reg37 =reg27; reg38 =reg28; \\n\\nn = 0; avg = 0;\\nloop (5,\\n  n = n+1;\\n  //new Rot. Mat for infinitesimal angles\\n  ran1 = rand(100)/100;\\n  ran2 = rand(100)/200-.25;\\n  tx = cos(n*1.57+ran2) * (n <= 4)*ran1; ty = sin(n*1.57+ran2) * (n <= 4)*ran1;\\n  c1 = cos(v1); c2 = cos(v2+ty); c3 = cos(v3+tx); \\n  s1 = sin(v1); s2 = sin(v2+ty); s3 = sin(v3+tx);\\n  reg10 = c2*c1; reg11 = c2*s1; reg12 = -s2;\\n  reg13 = s3*s2*c1 - c3*s1; reg14 = s3*s2*s1 + c3*c1; reg15 = s3*c2;\\n  reg16 = c3*s2*c1 + s3*s1; reg17 = c3*s2*s1 - s3*c1; reg18 = c3*c2;\\n\\n  //pop old RotMat\\n  reg20 =reg30; reg21 =reg31; reg22 =reg32; \\n  reg23 =reg33; reg24 =reg34; reg25 =reg35; \\n  reg26 =reg36; reg27 =reg37; reg28 =reg38; \\n\\n  //Multiply new RotMat by old one\\n  q20 = reg10*reg20 + reg11*reg23 + reg12*reg26;\\n  q21 = reg10*reg21 + reg11*reg24 + reg12*reg27;\\n  q22 = reg10*reg22 + reg11*reg25 + reg12*reg28;\\n  q23 = reg13*reg20 + reg14*reg23 + reg15*reg26;\\n  q24 = reg13*reg21 + reg14*reg24 + reg15*reg27;\\n  q25 = reg13*reg22 + reg14*reg25 + reg15*reg28;\\n  q26 = reg16*reg20 + reg17*reg23 + reg18*reg26;\\n  q27 = reg16*reg21 + reg17*reg24 + reg18*reg27;\\n  q28 = reg16*reg22 + reg17*reg25 + reg18*reg28;\\n\\n  reg20 =q20; reg21 =q21; reg22 =q22;\\n  reg23 =q23; reg24 =q24; reg25 =q25;\\n  reg26 =q26; reg27 =q27; reg28 =q28;\\n\\n  //***********BOT*************\\n  //Coord. Trans. must exactly match def in warp S. !!!!\\n  dist = 0.002;\\n  while (exec2(\\n    uvx = reg26*dist/q7; uvy = reg27*dist/q7; uvz = reg28*dist/q7;\\n    uvx += PosX; uvy += PosY; uvz += PosZ;\\n    uvx = 8.0*((uvx/8+30.5 - int(uvx/8+30.5))-.5);\\n    uvy = 8.0*((uvy/8+30.5 - int(uvy/8+30.5))-.5);\\n    uvz = 8.0*((uvz/8+30.5 - int(uvz/8+30.5))-.5);\\n    uvx0 = uvx; uvy0 = uvy; uvz0 = uvz;\\n    loop (7+1,\\n      uvx = if (uvx > 1, 2-uvx, if(uvx < -1, -2-uvx, uvx));\\n      uvy = if (uvy > 1, 2-uvy, if(uvy < -1, -2-uvy, uvy));\\n      uvz = if (uvz > 1, 2-uvz, if(uvz < -1, -2-uvz, uvz));\\n      slen = uvx*uvx + uvy*uvy + uvz*uvz;\\n      uvx = if (slen < 0.25, uvx*4, if (slen < 1, uvx/slen, uvx)) *2.6 + uvx0; \\n      uvy = if (slen < 0.25, uvy*4, if (slen < 1, uvy/slen, uvy)) *2.6 + uvy0; \\n      uvz = if (slen < 0.25, uvz*4, if (slen < 1, uvz/slen, uvz)) *2.6 + uvz0; \\n    );\\n    len = sqrt(uvx*uvx + uvy*uvy + uvz*uvz);\\n    dist *= 1.1;\\n  ,(dist < 0.6)*(len > 30)));\\n  megabuf(n) = megabuf(n)*dec_s + (1-dec_s)*dist; //stores the 4 trial points\\n  avg = avg+abs(megabuf(n)/5);\\n); //end loop 5\\n\\nn = 0; avg = 0; loop (5, n=n+1; avg = avg+abs(megabuf(n)/5));\\n\\nxslope = 1/avg*(megabuf(1)-megabuf(3));\\nyslope =  1/avg*(megabuf(4)-megabuf(2));\\nmonitor = avg;\\ndist_ = dist_*dec_s + (1-dec_s)*dist;\\n\\n//sustain\\nq13 = 1-ds; //warp zoom uv \\nq14 = 4*abs(ds) + 6*(abs(v1) + 2*abs(v2) + 2*abs(v3)) + 1.0/255 + start*.1; \\nq18 = cran1; //brightness balance back/front\\nq19 = .5 + .5*sin(time*.02+cran0*6); //brightness backgd\\nstart = start * .9;\\n\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.1333/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm*2;\\nq3 = sin(w);\\nq9 = cos(w);\\n\\n\\nq17 = bm;\\nq18 = mt;\\nq19 = bt;\",\"pixel_eqs_eel\":\"warp = 0; dx = .00; zoom = 1; dy = 0;\",\"warp\":\"float sustain;\\nfloat xlat_mutabledist;\\nfloat xlat_mutablestruc;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  mat3 tmpvar_1;\\n  tmpvar_1[uint(0)].x = q20;\\n  tmpvar_1[uint(0)].y = q23;\\n  tmpvar_1[uint(0)].z = q26;\\n  tmpvar_1[1u].x = q21;\\n  tmpvar_1[1u].y = q24;\\n  tmpvar_1[1u].z = q27;\\n  tmpvar_1[2u].x = q22;\\n  tmpvar_1[2u].y = q25;\\n  tmpvar_1[2u].z = q28;\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = q4;\\n  tmpvar_2.y = q5;\\n  tmpvar_2.z = q6;\\n  sustain = (0.98 - (q14 * 2.0));\\n  vec2 uv_3;\\n  vec3 uv2_4;\\n  vec3 ret_5;\\n  uv_3 = (((uv - 0.5) * q13) + 0.5);\\n  xlat_mutableuv1 = ((uv_3 - 0.5) * aspect.xy);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\\n  xlat_mutabledist = tmpvar_6.x;\\n  if ((tmpvar_6.y > 0.2)) {\\n    vec3 tmpvar_7;\\n    tmpvar_7 = (tmpvar_6.xyz - vec3(0.4, 0.5, 0.5));\\n    vec2 uvi_8;\\n    uvi_8 = ((tmpvar_7.zy * 0.003) + uv_3);\\n    vec2 pix_9;\\n    vec4 nb2_10;\\n    vec4 nb_11;\\n    vec2 x_12;\\n    x_12 = (uvi_8 - 0.5);\\n    pix_9 = (texsize.zw * (1.0 + (\\n      sqrt(dot (x_12, x_12))\\n     * 3.0)));\\n    vec2 tmpvar_13;\\n    tmpvar_13 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 - pix_9)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_11.x = (1.0 - ((0.015625 * \\n      (tmpvar_13.x - 0.505)\\n    ) + tmpvar_13.y));\\n    vec2 tmpvar_14;\\n    tmpvar_14 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(1.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_11.y = (1.0 - ((0.015625 * \\n      (tmpvar_14.x - 0.505)\\n    ) + tmpvar_14.y));\\n    vec2 tmpvar_15;\\n    tmpvar_15 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + pix_9)).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_11.z = (1.0 - ((0.015625 * \\n      (tmpvar_15.x - 0.505)\\n    ) + tmpvar_15.y));\\n    vec2 tmpvar_16;\\n    tmpvar_16 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(-1.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb_11.w = (1.0 - ((0.015625 * \\n      (tmpvar_16.x - 0.505)\\n    ) + tmpvar_16.y));\\n    vec2 tmpvar_17;\\n    tmpvar_17 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(0.0, -1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_10.x = (1.0 - ((0.015625 * \\n      (tmpvar_17.x - 0.505)\\n    ) + tmpvar_17.y));\\n    vec2 tmpvar_18;\\n    tmpvar_18 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_10.y = (1.0 - ((0.015625 * \\n      (tmpvar_18.x - 0.505)\\n    ) + tmpvar_18.y));\\n    vec2 tmpvar_19;\\n    tmpvar_19 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(0.0, 1.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_10.z = (1.0 - ((0.015625 * \\n      (tmpvar_19.x - 0.505)\\n    ) + tmpvar_19.y));\\n    vec2 tmpvar_20;\\n    tmpvar_20 = (q29 * floor((\\n      (q31 * texture (sampler_pw_main, (uvi_8 + (pix_9 * vec2(-1.0, 0.0)))).yz)\\n     + vec2(0.5, 0.5))));\\n    nb2_10.w = (1.0 - ((0.015625 * \\n      (tmpvar_20.x - 0.505)\\n    ) + tmpvar_20.y));\\n    vec4 tmpvar_21;\\n    tmpvar_21 = min (nb_11, nb2_10);\\n    nb_11.zw = tmpvar_21.zw;\\n    nb_11.xy = min (tmpvar_21.xy, tmpvar_21.zw);\\n    xlat_mutabledist = (min (nb_11.x, nb_11.y) + ((0.005 * tmpvar_7.x) * abs(tmpvar_7.y)));\\n  };\\n  vec2 tmpvar_22;\\n  tmpvar_22 = (q29 * floor((\\n    (q31 * texture (sampler_pw_main, uv_3).yz)\\n   + vec2(0.5, 0.5))));\\n  float tmpvar_23;\\n  tmpvar_23 = min (xlat_mutabledist, (1.0 - (\\n    (0.015625 * (tmpvar_22.x - 0.505))\\n   + tmpvar_22.y)));\\n  xlat_mutabledist = tmpvar_23;\\n  vec3 tmpvar_24;\\n  tmpvar_24.xy = (xlat_mutableuv1 * tmpvar_23);\\n  tmpvar_24.z = (tmpvar_23 - 0.02);\\n  uv2_4 = ((fract(\\n    ((((\\n      (tmpvar_24 / q7)\\n     * tmpvar_1) + tmpvar_2) / 8.0) + 0.5)\\n  ) - 0.5) * 8.0);\\n  vec3 zz_25;\\n  zz_25 = ((2.0 * clamp (uv2_4, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - uv2_4);\\n  float tmpvar_26;\\n  tmpvar_26 = dot (zz_25, zz_25);\\n  if ((tmpvar_26 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_26 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_26);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_27;\\n  tmpvar_27 = dot (zz_25, zz_25);\\n  if ((tmpvar_27 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_27 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_27);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_28;\\n  tmpvar_28 = dot (zz_25, zz_25);\\n  if ((tmpvar_28 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_28 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_28);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_29;\\n  tmpvar_29 = dot (zz_25, zz_25);\\n  if ((tmpvar_29 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_29 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_29);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_30;\\n  tmpvar_30 = dot (zz_25, zz_25);\\n  if ((tmpvar_30 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_30 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_30);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_31;\\n  tmpvar_31 = dot (zz_25, zz_25);\\n  if ((tmpvar_31 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_31 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_31);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_32;\\n  tmpvar_32 = dot (zz_25, zz_25);\\n  if ((tmpvar_32 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_32 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_32);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\\n  float tmpvar_33;\\n  tmpvar_33 = dot (zz_25, zz_25);\\n  if ((tmpvar_33 <= 0.25)) {\\n    zz_25 = (zz_25 * 4.0);\\n  } else {\\n    if ((tmpvar_33 <= 1.0)) {\\n      zz_25 = (zz_25 / tmpvar_33);\\n    };\\n  };\\n  zz_25 = ((2.6 * zz_25) + uv2_4);\\n  float tmpvar_34;\\n  tmpvar_34 = sqrt(dot (zz_25, zz_25));\\n  xlat_mutablestruc = (sqrt(dot (zz_25.zy, zz_25.zy)) / 20.0);\\n  float tmpvar_35;\\n  vec2 tmpvar_36;\\n  tmpvar_36 = (q29 * floor((\\n    (q31 * texture (sampler_pw_main, uv_3).yz)\\n   + vec2(0.5, 0.5))));\\n  tmpvar_35 = (1.0 - ((0.015625 * \\n    (tmpvar_36.x - 0.505)\\n  ) + tmpvar_36.y));\\n  if ((((tmpvar_23 <= tmpvar_35) && (tmpvar_34 < 20.0)) && (tmpvar_23 > 0.005))) {\\n    ret_5.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \\n      ((((texture (sampler_blur1, uv_3).xyz * scale1) + bias1) * 3.0) / 3.0)\\n    , vec3(\\n      (q14 * 4.0)\\n    )).x));\\n    float tmpvar_37;\\n    tmpvar_37 = pow (tmpvar_23, q30);\\n    vec2 tmpvar_38;\\n    tmpvar_38 = (q29 * floor((\\n      (q31 * vec2((1.0 - tmpvar_37)))\\n     + vec2(0.5, 0.5))));\\n    vec2 tmpvar_39;\\n    tmpvar_39.x = ((64.0 * (\\n      (1.0 - tmpvar_37)\\n     - tmpvar_38.x)) + 0.495);\\n    tmpvar_39.y = tmpvar_38.x;\\n    ret_5.yz = tmpvar_39;\\n  } else {\\n    vec3 tmpvar_40;\\n    tmpvar_40.yz = vec2(1.0, 1.0);\\n    tmpvar_40.x = sustain;\\n    vec3 tmpvar_41;\\n    tmpvar_41.xy = vec2(0.0, 0.0);\\n    tmpvar_41.z = q14;\\n    ret_5 = ((texture (sampler_pc_main, uv_orig).xyz * tmpvar_40) - tmpvar_41);\\n  };\\n  vec4 tmpvar_42;\\n  tmpvar_42.w = 1.0;\\n  tmpvar_42.xyz = ret_5;\\n  ret = tmpvar_42.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1.x = q4;\\n  tmpvar_1.y = q5;\\n  tmpvar_1.z = q6;\\n  mat3 tmpvar_2;\\n  tmpvar_2[uint(0)].x = q20;\\n  tmpvar_2[uint(0)].y = q23;\\n  tmpvar_2[uint(0)].z = q26;\\n  tmpvar_2[1u].x = q21;\\n  tmpvar_2[1u].y = q24;\\n  tmpvar_2[1u].z = q27;\\n  tmpvar_2[2u].x = q22;\\n  tmpvar_2[2u].y = q25;\\n  tmpvar_2[2u].z = q28;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q1;\\n  tmpvar_3.y = q2;\\n  vec2 uv_4;\\n  uv_4 = uv;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((q9 * tmpvar_6.x) - (q3 * tmpvar_6.y));\\n  tmpvar_7.y = ((q3 * tmpvar_6.x) + (q9 * tmpvar_6.y));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (0.5 - (tmpvar_7 * 2.0));\\n  vec2 numerator_9;\\n  numerator_9 = (tmpvar_8 - vec2(0.0, 0.5));\\n  vec2 denominator_10;\\n  denominator_10 = (tmpvar_8 - vec2(1.0, 0.5));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = ((numerator_9.x * denominator_10.x) + (numerator_9.y * denominator_10.y));\\n  tmpvar_11.y = ((numerator_9.y * denominator_10.x) - (numerator_9.x * denominator_10.y));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = (((tmpvar_11 / \\n    ((denominator_10.x * denominator_10.x) + (denominator_10.y * denominator_10.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_13;\\n  tmpvar_13 = sqrt(dot (tmpvar_12, tmpvar_12));\\n  float tmpvar_14;\\n  float tmpvar_15;\\n  tmpvar_15 = (min (abs(\\n    (tmpvar_12.x / tmpvar_12.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_12.x / tmpvar_12.y)\\n  ), 1.0));\\n  float tmpvar_16;\\n  tmpvar_16 = (tmpvar_15 * tmpvar_15);\\n  tmpvar_16 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\\n     * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\\n   * tmpvar_16) + 0.9999793) * tmpvar_15);\\n  tmpvar_16 = (tmpvar_16 + (float(\\n    (abs((tmpvar_12.x / tmpvar_12.y)) > 1.0)\\n  ) * (\\n    (tmpvar_16 * -2.0)\\n   + 1.570796)));\\n  tmpvar_14 = (tmpvar_16 * sign((tmpvar_12.x / tmpvar_12.y)));\\n  if ((abs(tmpvar_12.y) > (1e-08 * abs(tmpvar_12.x)))) {\\n    if ((tmpvar_12.y < 0.0)) {\\n      if ((tmpvar_12.x >= 0.0)) {\\n        tmpvar_14 += 3.141593;\\n      } else {\\n        tmpvar_14 = (tmpvar_14 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_14 = (sign(tmpvar_12.x) * 1.570796);\\n  };\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = (tmpvar_14 * 0.1591549);\\n  tmpvar_17.y = tmpvar_13;\\n  vec2 tmpvar_18;\\n  tmpvar_18.x = ((tmpvar_17.x * 2.0) + q18);\\n  tmpvar_18.y = ((0.5 * log(tmpvar_13)) + q19);\\n  uv_4 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_18 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  vec3 tmpvar_19;\\n  tmpvar_19.xy = ((uv_4 - 0.5) * min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n    ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n  .z)));\\n  tmpvar_19.z = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\\n    (texture (sampler_blur2, uv_4).xyz * scale2)\\n   + bias2).z));\\n  float tmpvar_20;\\n  tmpvar_20 = clamp ((abs(\\n    ((1.0 - ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2).z) - clamp ((1.0 - (\\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\\n     + bias2).z), 0.1, 0.4))\\n  ) + 0.2), 0.0, 1.0);\\n  float tmpvar_21;\\n  tmpvar_21 = clamp (((1.0 - \\n    exp(-(((texture (sampler_blur1, uv_4).xyz * scale1) + bias1).x))\\n  ) - 0.2), 0.0, 1.0);\\n  ret_5 = ((mix (texture (sampler_main, uv_4).xyz, \\n    ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1)\\n  , vec3(tmpvar_20)).x * (0.2 + \\n    ((1.0 - tmpvar_20) * (1.0 - min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \\n      ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\\n    .z))))\\n  )) * (1.0 + (0.5 * \\n    sin((((tmpvar_19 / q7) * tmpvar_2) + tmpvar_1))\\n  )));\\n  vec3 tmpvar_22;\\n  tmpvar_22.xy = vec2(0.0, 1.0);\\n  tmpvar_22.z = (tmpvar_21 * 3.0);\\n  ret_5 = (mix (ret_5, tmpvar_22, vec3(tmpvar_21)) + ((\\n    pow ((1.0 - mix (texture (sampler_main, uv_4).xyz, (\\n      (texture (sampler_blur1, uv_4).xyz * scale1)\\n     + bias1), vec3(0.8, 0.8, 0.8)).z), 3.0)\\n   * \\n    (0.5 + (0.5 * slow_roam_cos))\\n  ) * q19).xyz);\\n  ret_5 = (1.0 - exp((-2.0 * ret_5)));\\n  vec4 tmpvar_23;\\n  tmpvar_23.w = 1.0;\\n  tmpvar_23.xyz = ret_5;\\n  ret = tmpvar_23.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/one-sided infinite-dimensional shape - helenisch.json":
/*!*********************************************************************************!*\
  !*** ./presets/converted/one-sided infinite-dimensional shape - helenisch.json ***!
  \*********************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1,\"decay\":0.975,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"brighten\":1,\"solarize\":1,\"invert\":1,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_r\":0.4,\"ob_a\":0.2,\"ib_size\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":3,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"num_inst\":311,\"rad\":0.0334,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"r2\":1,\"g2\":0,\"b2\":1,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;\\nr=(sin(time*.3+t1-0*pi23)+1)*.5;\\ng=(sin(time*.3+t1-1*pi23)+1)*.5;\\nb=(sin(time*.3+t1-2*pi23)+1)*.5;\\nr2=(sin(time*.3+t1-0*pi23)+1)*.5;\\ng2=(sin(time*.3+t1-1*pi23)+1)*.5;\\nb2=(sin(time*.3+t1-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"sides\":3,\"thickoutline\":1,\"num_inst\":281,\"rad\":0.03347,\"g\":1,\"b\":1,\"r2\":1,\"g2\":0,\"b2\":1,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*tan(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.30)+1)*3.3;\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt2=0;//bass+mid+treb;\\nr=(sin(time*.3+t2-0*pi23)+1)*.5;\\ng=(sin(time*.3+t2-1*pi23)+1)*.5;\\nb=(sin(time*.3+t2-2*pi23)+1)*.5;\\nr2=(sin(time*.3+t2-0*pi23)+1)*.5;\\ng2=(sin(time*.3+t2-1*pi23)+1)*.5;\\nb2=(sin(time*.3+t2-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;\\nr=(sin(time*.3+t1-0*pi23)+1)*.5;\\ng=(sin(time*.3+t1-1*pi23)+1)*.5;\\nb=(sin(time*.3+t1-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*tan(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;\\nr=(sin(time*.3+t1-0*pi23)+1)*.5;\\ng=(sin(time*.3+t1-1*pi23)+1)*.5;\\nb=(sin(time*.3+t1-2*pi23)+1)*.5;\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\"},{\"baseVals\":{\"thick\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq11 = min(q22,3);\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nzoom = 1.0 + .02*q1;\\nrot = .01*q2;\\ndx = .0*index;\\n\\nwave_a = 0;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.006).xyz) + -0.0006);\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret2_2;\\n  vec2 uv2_3;\\n  vec3 ret_4;\\n  uv2_3.y = uv.y;\\n  uv2_3.x = (1.0 - uv.x);\\n  uv2_3 = (0.5 + ((uv2_3 - 0.5) * 0.98));\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 4.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_8;\\n  tmpvar_8.z = 0.0;\\n  tmpvar_8.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_8 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (tmpvar_6, vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (tmpvar_7, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_10 * 0.04));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dot (((\\n    (texture (sampler_blur1, (uv2_3 + (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv2_3 - (vec2(1.0, 0.0) * tmpvar_5))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_11.y = dot (((\\n    (texture (sampler_blur1, (uv2_3 + (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv2_3 - (vec2(0.0, 1.0) * tmpvar_5))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv2_3 = (uv2_3 - (tmpvar_11 * 0.04));\\n  ret_4 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret2_2 = (abs((\\n    ((texture (sampler_main, uv2_3).xyz + ((texture (sampler_blur1, uv2_3).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv2_3).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv2_3).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_9, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret2_2 = (0.5 - pow (ret2_2, vec3(0.5, 0.5, 0.5)));\\n  ret_4 = (pow (ret_4, vec3(0.5, 0.5, 0.5)) - (0.3 - ret2_2));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_4;\\n  ret = tmpvar_12.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/orb - toxic goo.json":
/*!************************************************!*\
  !*** ./presets/converted/orb - toxic goo.json ***!
  \************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"decay\":0.9,\"echo_zoom\":1.007,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":1,\"wrap\":0,\"brighten\":1,\"wave_a\":0.001,\"zoom\":0.96,\"rot\":-18.84024,\"warp\":0.01,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":0.3,\"mv_x\":64,\"mv_y\":48,\"mv_l\":4.95,\"mv_r\":0.5,\"mv_g\":0.4,\"mv_b\":0.3,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"rad\":2.66718,\"tex_zoom\":0.45112,\"g\":1,\"a\":0.15,\"g2\":0,\"a2\":0.05,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);\"},{\"baseVals\":{\"sides\":100,\"x\":0.35,\"y\":0,\"rad\":0.09959,\"tex_zoom\":0.42497,\"r\":0,\"b\":1,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.09878);\\nb = 0.1 + 0.5*sin(q1*0.0897);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.035);\\ng2 = 0.1 + 0.5*sin(q1*0.09878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);\"},{\"baseVals\":{\"sides\":100,\"y\":0,\"rad\":0.10201,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.03878);\\nb = 0.1 + 0.5*sin(q1*0.0497);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0597);\"},{\"baseVals\":{\"sides\":100,\"x\":0.65,\"y\":0,\"g\":1,\"b\":1,\"r2\":1,\"g2\":0,\"b2\":1,\"a2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//x = 0.5 + 0.02*sin(time*0.5 + 1.68);\\n//y = 0.5 + 0.02*cos(time*0.5 + 1.68);\\n\\n\\nr = 0.1 + 0.5*sin(q1*0.0144);\\ng = 0.1 + 0.5*sin(q1*0.05878);\\nb = 0.1 + 0.5*sin(q1*0.0797);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"r\":0,\"g\":0,\"b\":0,\"a\":0.03,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.03;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);\\n\\n\\nr = 1 + 0.5*sin(time*0.22) + 0.1;\\ng = 1 + 0.4*sin(time*0.307) + x;\\nb = 1 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),rand(100)*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),rand(10),burstspeed);\\nxdrift = if(equal(state,0),rand(20),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);\"}],\"init_eqs_eel\":\"state = 0;\",\"frame_eqs_eel\":\"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nq9 = basstime * 0.000005;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\n\\nmonitor = q1;\\n\\nmv_a = diff - 2;\\n\\nmv_r = 0.5 + 0.5*sin(basstime*0.389);\\nmv_g = 0.5 + 0.5*sin(basstime*0.478);\\nmv_b = 0.5 + 0.5*sin(basstime*0.535);\",\"pixel_eqs_eel\":\"zoom = 0.99;\\nrot = 0;\",\"warp\":\" shader_body { \\n  vec3 color_1;\\n  vec2 uv2_2;\\n  uv2_2 = (uv + (q3 * (bass * 100.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_noise_mq, uv2_2);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = (min (abs(tmpvar_3), 1.0) / max (abs(tmpvar_3), 1.0));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = (tmpvar_4 * tmpvar_4);\\n  tmpvar_5 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_5) + 0.05368138) * tmpvar_5) - 0.1173503)\\n     * tmpvar_5) + 0.1938925) * tmpvar_5) - 0.3326756)\\n   * tmpvar_5) + 0.9999793) * tmpvar_4);\\n  tmpvar_5 = (tmpvar_5 + (vec4(\\n    greaterThan (abs(tmpvar_3), vec4(1.0, 1.0, 1.0, 1.0))\\n  ) * (\\n    (tmpvar_5 * -2.0)\\n   + 1.570796)));\\n  color_1 = ((texture (sampler_noise_lq, uv2_2) - 0.5).xyz + ((tmpvar_5 * \\n    sign(tmpvar_3)\\n  ) - 0.5).xyz);\\n  color_1 = (color_1 + (texture (sampler_noise_hq, uv2_2) - 0.5).xyz);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (texture (sampler_main, ((\\n    ((tmpvar_6 * (0.98 + (rad * 0.02))) + 0.5)\\n   + \\n    (((texture (sampler_blur3, (\\n      (tmpvar_6 * 0.9)\\n     + 0.5)).xyz * scale3) + bias3) * 0.1)\\n  .xy) - 0.01)).xyz + (color_1 * 0.01));\\n  ret = tmpvar_7.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = q10;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  float tmpvar_3;\\n  tmpvar_3 = -(q10);\\n  tmpvar_2.x = tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = q10;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = 0.0;\\n  tmpvar_5.y = tmpvar_3;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((texture (sampler_main, uv) * 4.0).xyz * (\\n    (texture (sampler_blur1, mix (((texture (sampler_main, \\n      (uv + (tmpvar_1 * texsize.z))\\n    ).xyz + texture (sampler_main, \\n      (uv + (tmpvar_2 * texsize.z))\\n    ).xyz) * 0.5), ((texture (sampler_main, \\n      (uv + (tmpvar_4 * texsize.z))\\n    ).xyz + texture (sampler_main, \\n      (uv + (tmpvar_5 * texsize.z))\\n    ).xyz) * 0.5), vec3(0.5, 0.5, 0.5)).xy).xyz * scale1)\\n   + bias1)) * 5.0);\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/raron - a grayish blob - mash0000 - pungent gastric automata cloud fumes.json":
/*!*********************************************************************************************************!*\
  !*** ./presets/converted/raron - a grayish blob - mash0000 - pungent gastric automata cloud fumes.json ***!
  \*********************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"echo_zoom\":1.007,\"echo_orient\":3,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":0.99951,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"x\":0.18,\"rad\":0.63016,\"tex_zoom\":2.00676,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0.8,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"usedots\":1,\"thick\":1,\"scaling\":0.3442},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\",\"point_eqs_eel\":\"width = 32;height = 16;\\n\\ngruff = sample * 512;\\nxp = gruff%width;\\nyp = int(gruff/width);\\nyp = if(equal(sample,1),yp-1,yp);\\n\\n\\ndist1 = 0.3 * sqrt(sqr(xp-t3)+sqr(yp-t4));\\ndist2 = 0.3 * sqrt(sqr(xp-t5)+sqr(yp-t6));\\nval1 = 0.5 + bass * sin(dist1-time - bass);\\nval2 = 0.5 + bass * sin(dist2-time - bass);\\nval = (val1 + val2) * 0.5;\\n\\n\\nr = val1;\\ng = val;\\nb = val2;\\n\\n\\n\\n\\nx = t1 + xp / 256;\\ny = t2 + yp / 256;\"},{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"usedots\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2 + 1 / 16;\\nt3 = q3;\\nt4 = q4 - 16;\\nt5 = q5;\\nt6 = q6 - 16;\",\"point_eqs_eel\":\"width = 32;height = 16;\\n\\ngruff = sample * 512;\\nxp = gruff%width;\\nyp = int(gruff/width);\\nyp = if(equal(sample,1),yp-1,yp);\\n\\n\\ndist1 = 0.3 * sqrt(sqr(xp-t3)+sqr(yp-t4));\\ndist2 = 0.3 * sqrt(sqr(xp-t5)+sqr(yp-t6));\\nval1 = 0.5 + bass * sin(dist1-time - bass);\\nval2 = 0.5 + bass * sin(dist2-time - bass);\\nval = (val1 + val2) * 0.5;\\n\\n\\nr = val1;\\ng = val;\\nb = val2;\\n\\n\\n\\nx = t1 + xp / 256;\\ny = t2 + yp / 256;\"},{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"usedots\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1 + 2 / 16;\\nt2 = q2;\\nt3 = q3 - 32;\\nt4 = q4;\\nt5 = q5 - 32;\\nt6 = q6;\",\"point_eqs_eel\":\"width = 32;height = 16;\\n\\ngruff = sample * 512;\\nxp = gruff%width;\\nyp = int(gruff/width);\\nyp = if(equal(sample,1),yp-1,yp);\\n\\n\\ndist1 = 0.3 * sqrt(sqr(xp-t3)+sqr(yp-t4));\\ndist2 = 0.3 * sqrt(sqr(xp-t5)+sqr(yp-t6));\\nval1 = 0.5 + bass * sin(dist1-time - bass);\\nval2 = 0.5 + bass * sin(dist2-time - bass);\\nval = (val1 + val2) * 0.5;\\n\\n\\nr = val1;\\ng = val;\\nb = val2;\\n\\n\\n\\n\\n\\nx = t1 + xp / 256;\\ny = t2 + yp / 256;\\n\"},{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"usedots\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1 + 2 / 16;\\nt2 = q2 + 1 / 16;\\nt3 = q3 - 32;\\nt4 = q4 - 16;\\nt5 = q5 - 32;\\nt6 = q6 - 16;\",\"point_eqs_eel\":\"width = 32;height = 16;\\n\\ngruff = sample * 512;\\nxp = gruff%width;\\nyp = int(gruff/width);\\nyp = if(equal(sample,1),yp-1,yp);\\n\\n\\ndist1 = 0.3 * sqrt(sqr(xp-t3)+sqr(yp-t4));\\ndist2 = 0.3 * sqrt(sqr(xp-t5)+sqr(yp-t6));\\nval1 = 0.5 + bass * sin(dist1-time - bass);\\nval2 = 0.5 + bass * sin(dist2-time - bass);\\nval = (val1 + val2) * 0.5;\\n\\n\\nr = val1;\\ng = val;\\nb = val2;\\n\\n\\n\\n\\n\\nx = t1 + xp / 256;\\ny = t2 + yp / 256;\\n\"}],\"init_eqs_eel\":\"// A grayish blob\\n// 2007.02.01 - raron\\n\\nq1 = 0.4;\\nq2 = 0.4;\",\"frame_eqs_eel\":\"q3 = 32 + 32 * cos(time * 4);\\nq4 = 2 + 24 * sin(time* 1.4);\\nq5 = 32 - 32 * sin(time * 2.1);\\nq6 = 24 + 24 * cos(time * 1.3);\\n\\nzoom = 0.96 + bass * 0.05;\\nrot = 0.2 - 0.2 * bass;\",\"pixel_eqs_eel\":\"zoom = zoom + rad * 0.1;\",\"warp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\\n   * \\n    (0.005 + (0.025 * clamp ((treb - 1.0), 0.0, 1.0)))\\n  ))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/rce-ordinary + flexi - far away distance (custom beat detection + bipolar colour ghost mix).json":
/*!****************************************************************************************************************************!*\
  !*** ./presets/converted/rce-ordinary + flexi - far away distance (custom beat detection + bipolar colour ghost mix).json ***!
  \****************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"echo_orient\":1,\"wave_mode\":5,\"additivewave\":1,\"wave_a\":0,\"wave_scale\":0.9,\"wave_smoothing\":0.63,\"wave_mystery\":1,\"modwavealphastart\":2,\"modwavealphaend\":2,\"warpscale\":2.853,\"rot\":0.006,\"warp\":0,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"mv_x\":0,\"mv_y\":48,\"mv_dx\":-0.941,\"mv_dy\":0.426,\"mv_l\":5,\"mv_r\":0.316,\"mv_g\":0.078,\"mv_b\":0.942,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"c_x = 0.5;\\nc_y = 0.5;\\nv=0.05\",\"frame_eqs_eel\":\"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\nnum0=beat*(abs(num-num_att)+pump)+bnot(beat)*num0;\\npump=beat*(sin(t)*.1+.1)+bnot(beat)*pump;\\npump=pump*.98;\\n\\nnum_b0=num_b;\\nnum=abs((bass-bass_att)+(mid-mid_att)+(treb-treb_att));\\nnum_att=num_att*.95+num*.05;\\nnum_b=above(num,1-pump)*above(abs(num-num_att),num0);\\nbeat=bnot(equal(num_b0,num_b));\\n\\nt=t+num*.1;\\n\\nr = if(beat, 0.02*(int(rand(200))-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(int(rand(200))-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(int(rand(200))-100)*0.01, c_y);\\nv = if(beat,0.035 + 0.025*(int(rand(200))-100)*0.01, v);\\n\\n\\nq3 = c_x;\\nq4 = c_y;\\nq5 = v;\\nq6 = beat;\\n\\nbb = bb*0.98 + bass*0.5;\\nmm = mm*0.98 + mid*0.5;\\ntt = tt*0.98 + treb*0.5;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\nv = 0.2/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\nw = bm;\\nq3 = sin(w);\\nq4 = cos(w);\\n\\n\\nq10 = bm;\\nq11 = mt;\\nq12 = bt;\",\"pixel_eqs_eel\":\"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),0.5)-0);\\nv = q5;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = mix (uv_orig, uv, vec2(0.35, 0.35));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_6 - ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.z;\\n  tmpvar_9.y = tmpvar_5.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (tmpvar_6 - ((tmpvar_9 * texsize.zw) * 4.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_main, uv_orig);\\n  ret_1.y = (((\\n    (texture (sampler_main, tmpvar_8).y - (((\\n      (tmpvar_11.xyz * scale1)\\n     + bias1).y - texture (sampler_main, tmpvar_8).y) * 0.024))\\n   - 0.009) + (\\n    (1.0 - tmpvar_12.x)\\n   * 0.014)) + (tmpvar_2 * 0.02)).x;\\n  ret_1.z = (((\\n    (texture (sampler_main, tmpvar_10).z - (((\\n      (tmpvar_11.xyz * scale1)\\n     + bias1).z - texture (sampler_main, tmpvar_10).z) * 0.024))\\n   - 0.009) + (tmpvar_12.x * 0.014)) + (tmpvar_2 * 0.02)).x;\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.4) + (tmpvar_2 * 0.0052)).x);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_1;\\n  ret = tmpvar_13.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 1.5));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((q4 * tmpvar_3.x) - (q3 * tmpvar_3.y));\\n  tmpvar_4.y = ((q3 * tmpvar_3.x) + (q4 * tmpvar_3.y));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (0.5 + (tmpvar_4 * 2.0));\\n  vec2 numerator_6;\\n  numerator_6 = (tmpvar_5 - vec2(0.0, 0.5));\\n  vec2 denominator_7;\\n  denominator_7 = (tmpvar_5 - vec2(1.0, 0.5));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = ((numerator_6.x * denominator_7.x) + (numerator_6.y * denominator_7.y));\\n  tmpvar_8.y = ((numerator_6.y * denominator_7.x) - (numerator_6.x * denominator_7.y));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (((tmpvar_8 / \\n    ((denominator_7.x * denominator_7.x) + (denominator_7.y * denominator_7.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = (min (abs(\\n    (tmpvar_9.x / tmpvar_9.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_9.x / tmpvar_9.y)\\n  ), 1.0));\\n  float tmpvar_13;\\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\\n  tmpvar_13 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\\n  tmpvar_13 = (tmpvar_13 + (float(\\n    (abs((tmpvar_9.x / tmpvar_9.y)) > 1.0)\\n  ) * (\\n    (tmpvar_13 * -2.0)\\n   + 1.570796)));\\n  tmpvar_11 = (tmpvar_13 * sign((tmpvar_9.x / tmpvar_9.y)));\\n  if ((abs(tmpvar_9.y) > (1e-08 * abs(tmpvar_9.x)))) {\\n    if ((tmpvar_9.y < 0.0)) {\\n      if ((tmpvar_9.x >= 0.0)) {\\n        tmpvar_11 += 3.141593;\\n      } else {\\n        tmpvar_11 = (tmpvar_11 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_11 = (sign(tmpvar_9.x) * 1.570796);\\n  };\\n  vec2 tmpvar_14;\\n  tmpvar_14.x = (tmpvar_11 * 0.1591549);\\n  tmpvar_14.y = tmpvar_10;\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = ((tmpvar_14.x * 2.0) + q11);\\n  tmpvar_15.y = ((0.35 * log(tmpvar_10)) + q12);\\n  vec2 tmpvar_16;\\n  tmpvar_16 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_15 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  uv_1 = tmpvar_16;\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = sin(((tmpvar_16.y * 31.0) + (0.59 * time)));\\n  tmpvar_17.y = sin(((tmpvar_16.x * 26.0) + (0.37 * time)));\\n  vec2 tmpvar_18;\\n  tmpvar_18 = (tmpvar_16 + (0.03 * tmpvar_17));\\n  ret_2 = (max (texture (sampler_main, tmpvar_16).xyz, texture (sampler_main, tmpvar_18).xyz) * 1.33);\\n  ret_2 = (pow (vec3(dot (ret_2, vec3(0.32, 0.49, 0.29))), vec3(2.5, 2.5, 2.5)) + ((texture (sampler_blur1, \\n    ((tmpvar_16 + tmpvar_18) / 2.0)\\n  ).xyz * scale1) + bias1));\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = ret_2;\\n  ret = tmpvar_19.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/sawtooth grin nz+ m10 w4.json":
/*!*********************************************************!*\
  !*** ./presets/converted/sawtooth grin nz+ m10 w4.json ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.49,\"decay\":0.5,\"echo_zoom\":1.002,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":1,\"additivewave\":1,\"wave_brighten\":0,\"wave_a\":1.028,\"wave_scale\":0.625,\"wave_smoothing\":0,\"wave_mystery\":0.2,\"modwavealphastart\":0.95,\"modwavealphaend\":0.75,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"fshader\":1,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0.06,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0.26,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"index4 = int(rand(2));\\nindex3 = int(rand(4));\",\"frame_eqs_eel\":\"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%2;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index+1;\\nq28 = index2+1;\\nq29 = index3*4+1;\\nq30 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nsp0 = dec_slow*sp0 + (q24+.05)*(1-dec_slow);\\ngo = go * dec_med + (1-dec_med)*(1-bnot(index2+index3));\\nmovez = movez + .015*30/fps * go ;\\nq31 = movez;\\nq32 = .5 + .02*sin(time/5);\\n\\nq5 = index4%2;\\n\\nzoom = 1.0; rot = 0;\\n\\ndx = .05*max(sin(time/9.7)-.95,0);\\ndy = .002*(1-go);\\nrot = 50*(dx-dy);\\n\\nchng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq30=if(above(chng,cthr),rand(1)*.3,mq30);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q30=mq30;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq1=.4+sin(atime*.006        )*.4;\\nq2=.4+cos(atime*.00613828348)*.4;\\nq3=.4+sin(atime*.00598593455)*.4;\\nmonitor=q3;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = mix (uv_orig, uv, vec2(0.3, 0.3));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 3.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = (tmpvar_3 + ((tmpvar_5 * texsize.zw) * 9.0));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (texture (sampler_fc_main, uv_1) - 0.01).xyz;\\n  ret_2 = tmpvar_6;\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((tmpvar_6.x > (q21 * q3)) && (tmpvar_6.x <= (q24 * q1)))) {\\n    ret_2.y = (tmpvar_6.y + (tmpvar_7.x * 0.2));\\n  };\\n  if (((ret_2.y > (q22 * q1)) && (ret_2.y <= (q25 * q2)))) {\\n    ret_2.z = (tmpvar_6.z + (tmpvar_7.y * 0.2));\\n  };\\n  if (((ret_2.z > (q23 * q2)) && (ret_2.z <= (q26 * q3)))) {\\n    ret_2.x = (tmpvar_6.x + (tmpvar_7.z * 0.2));\\n  };\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret3_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = abs(((texture (sampler_main, uv).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, uv).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  ) - (texture (sampler_main, tmpvar_4).xyz * \\n    clamp ((((\\n      (texture (sampler_blur2, tmpvar_4).xyz * scale2)\\n     + bias2) * 2.8) - 0.13), 0.0, 1.0)\\n  )));\\n  ret3_2 = (tmpvar_5 * sqrt(tmpvar_5));\\n  ret3_2 = (ret3_2 * vec3(0.9, 1.6, 2.3));\\n  ret3_2 = (ret3_2 * 3.0);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = pow (ret3_2, (1.0 - ret3_2));\\n  ret3_2 = tmpvar_6;\\n  uv_1 = (uv * 2.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = floor((fract(\\n    (uv_1 * 0.5)\\n  ) * 2.0));\\n  uv_1 = ((fract(uv_1) * (1.0 - tmpvar_7)) + (tmpvar_7 * fract(\\n    (1.0 - uv_1)\\n  )));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = rad;\\n  tmpvar_8.y = uv_1.y;\\n  uv_1 = tmpvar_8;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((0.5 - tmpvar_8.yx) + 0.5);\\n  ret_3 = (texture (sampler_main, tmpvar_8.yx).xyz * clamp ((\\n    (((texture (sampler_blur2, tmpvar_8.yx).xyz * scale2) + bias2) * 2.8)\\n   - 0.13), 0.0, 1.0));\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret_3, (texture (sampler_main, tmpvar_9).xyz * clamp (\\n    ((((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2) * 2.8) - 0.13)\\n  , 0.0, 1.0)), vec3(0.5, 0.5, 0.5));\\n  ret_3 = (tmpvar_10 * tmpvar_10);\\n  ret_3 = (ret_3 * vec3(0.9, 1.6, 2.3));\\n  ret_3 = (ret_3 * 3.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11 = vec3((0.5 * dot (ret_3, vec3(0.32, 0.49, 0.29))));\\n  ret_3 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_8.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\\n  if (((tmpvar_11.x > (q26 * q3)) && (tmpvar_11.x <= (q23 * q1)))) {\\n    ret_3.z = (tmpvar_11.z - (tmpvar_12.x * 0.5));\\n  };\\n  if (((tmpvar_11.y > (q25 * q1)) && (tmpvar_11.y <= (q22 * q2)))) {\\n    ret_3.x = (tmpvar_11.x - (tmpvar_12.y * 0.5));\\n  };\\n  if (((ret_3.z > (q24 * q2)) && (ret_3.z <= (q21 * q3)))) {\\n    ret_3.y = (tmpvar_11.y - (tmpvar_12.z * 0.5));\\n  };\\n  vec3 tmpvar_13;\\n  tmpvar_13 = max (tmpvar_6, (0.8 * ret_3.zxy));\\n  ret_3 = tmpvar_13;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = tmpvar_13;\\n  ret = tmpvar_14.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/shifter + flexi - american oblivion pie.json":
/*!************************************************************************!*\
  !*** ./presets/converted/shifter + flexi - american oblivion pie.json ***!
  \************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"wave_mode\":6,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.005,\"wave_scale\":0.167,\"wave_smoothing\":0,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpanimspeed\":0.304,\"warpscale\":6.988,\"zoomexp\":1.3724,\"warp\":1.02198,\"wave_x\":0.95,\"wave_y\":1,\"ob_size\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0,\"ib_r\":1,\"ib_g\":1,\"ib_b\":1,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"thickoutline\":1,\"x\":1,\"rad\":0.03772,\"tex_zoom\":0.5033,\"r2\":1,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"mx = rand(1001)*.001;\\nmy = rand(1001)*.001;\\n\\nmx = mx*6.283;\\nmy = pow(my,4);\\n\\nx = .5 + my*sin(mx);\\ny = .5 + my*cos(mx);\\n\\n\\nr = x;\\ng = 1-y;\\nb = 1;\\nr2=r;\\ng2=g;\\nb2=b;\\n\\n\\na = above(bass*mid*treb,rand(1001)*.001*2);\\n\\na2 = a;\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"rad\":0.05615,\"tex_zoom\":0.5033,\"r\":0,\"b\":1,\"g2\":0,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"thickoutline\":1,\"x\":1,\"rad\":1.00591,\"tex_zoom\":0.5033,\"r\":0,\"b\":1,\"g2\":0,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"x = 1.2;\\ny = q3- 0.4;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"samples\":52,\"usedots\":1,\"thick\":1,\"scaling\":0.01,\"smoothing\":0,\"g\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"t8 = 1;\\nt1 = q5;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = rand(1001)/1000;\\ny = rand(1001)/1000;\\nr = x;\\ng = 1-y;\\nb = 1;\\n\\na = below(rand(100),2);\"},{\"baseVals\":{\"samples\":12,\"usedots\":1,\"thick\":1,\"scaling\":0.0124,\"smoothing\":0,\"r\":0.5,\"g\":0.6,\"enabled\":0},\"init_eqs_eel\":\"t8 = 1;\\nt1 = q5;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ti = q2*.9 - sample*5;\\n\\nx = (sin(ti*.95) + sin(ti*1.35));\\ny = (sin(ti*1.12) + sin(ti*.45));\\n\\nx = max(x,-x);\\ny = max(y,-y);\\n\\nx = x-int(x);\\ny = y-int(y);\\n\\nr = x;\\ng = 1-y;\\n\\ny = (y-.5)/q20+.5;\\n\\nx = x + .005*(rand(1001)*.001*1 -.5);\\ny = y + .005*(rand(1001)*.001*1 -.5);\\n\\na = below(rand(5),2);\"},{\"baseVals\":{\"samples\":12,\"usedots\":1,\"scaling\":0.01303,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t8 = 1;\\nt1 = q5;\",\"frame_eqs_eel\":\"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\",\"point_eqs_eel\":\"ti = q3*.9 - sample*0;\\n\\nx = .5 + (sin(ti*1.05) + sin(ti*.785))*.25;\\ny = .5 + (sin(ti*.882) + sin(ti*1.45))*.25;\\n\\nr = x;\\ng = 1-y;\\n\\ny = (y-.5)/q20+.5;\\n\\nx = x + .005*(rand(1001)*.001*1 -.5);\\ny = y + .005*(rand(1001)*.001*1 -.5);\\n\\na = below(rand(50),2);\"},{\"baseVals\":{\"samples\":511,\"sep\":4,\"usedots\":1,\"scaling\":0.02345,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;\",\"frame_eqs_eel\":\"t1 = q4*0.75;\\nt2 = q5*0.75;\\nt3 = q6*0.75;\\nt4 = q4*0.75;\\nt5 = q5*0.75;\\nt6 = q6*0.75;\\nt8 = 1;\",\"point_eqs_eel\":\"ti = q4*.9 - sample*0;\\n\\nx = .5 + (sin(ti*.545) + sin(ti*1.156))*.25;\\ny = .5 + (sin(ti*.4782) + sin(ti*1.068))*.25;\\n\\nr = x;\\ng = 1-y;\\n\\ny = (y-.5)/q20+.5;\\n\\nx = x + .005*(rand(1001)*.001*1 -.5);\\ny = y + .005*(rand(1001)*.001*1 -.5);\\n\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//wave_a = 0;\\n\\n//decay = 0.1;\\n\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nti = ti + tic*24;\\nq1 = above(ti,1);\\nti = ti*below(ti,1);\\n\\n\\n\\nt2 = t2 + tic*bass*bass;\\nt2 = t2*below(t2,.01);\\nq5 = equal(t2,0);\\nq5 = 1-tic*(.5 + .1*bass*bass);\\n\\n//t2 = 1-t2;\\n//q5 = t2;\\n\\n\\nvt = vt + bass*mid*treb*tic*.2;\\n\\nbt = bt + bass*tic*.4;\\nmt = mt + mid*tic*.4;\\ntt = tt + treb*tic*.4;\\nq2=bt;\\nq3=mt;\\nq4=tt;\\n\\nq10 = vt;\\n\\nq11 = .5 + .25*sin(bt*1.12);\\nq12 = .5 + .25*sin(bt*0.98);\\n\\nmonitor = above(bass*mid*treb,rand(1001)*.001*2);\\n\\nq20=aspecty;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_pw_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 2.0)\\n  )) + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.005)) + -0.002).xyz;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   * 2.0) + (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = fract((0.5 + (uv - 0.5)));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dx_3.y;\\n  tmpvar_11.y = dy_2.y;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = ((mix (ret_5, vec3(3.0, 2.0, 1.0), \\n    ((texture (sampler_blur3, (tmpvar_10 - tmpvar_11)).xyz * scale3) + bias3)\\n  .xxx) * (vec3(1.0, 1.0, 1.0) - \\n    ((texture (sampler_blur2, (tmpvar_10 - dz_1)).xyz * scale2) + bias2)\\n  .xxx)) * (vec3(1.0, 1.0, 1.0) - vec3((1.5 * texture (sampler_main, tmpvar_10).x))));\\n  ret_5 = tmpvar_12;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = tmpvar_12;\\n  ret = tmpvar_13.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/shifter - dark tides bdrv mix.json":
/*!**************************************************************!*\
  !*** ./presets/converted/shifter - dark tides bdrv mix.json ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.35,\"decay\":1,\"echo_zoom\":2.144269,\"echo_alpha\":0.31,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":1.285751,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":0.999514,\"cx\":-1,\"warp\":0.72142,\"sy\":0.980296,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.5,\"ob_r\":1,\"ib_size\":0.5,\"ib_r\":1,\"ib_g\":0,\"ib_b\":0,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"rad\":1.791418,\"tex_ang\":0.628319,\"g\":1,\"b\":1,\"a\":0,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = sample;\\ny = 0.01;\\na = value1*2;\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = sample;\\ny = 0.99;\\na = value2*2;\"},{\"baseVals\":{\"samples\":62,\"usedots\":1,\"thick\":1,\"additive\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = 1 - sample;\\ny = .5 + value1;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":0.891519,\"smoothing\":0.82,\"r\":0.380001,\"g\":0.72,\"a\":0.1},\"init_eqs_eel\":\"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n\",\"frame_eqs_eel\":\"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .3;\\nra = .1;\\nlen = if(above(q6,0),if(below(len,sz),len + ra*sz*tic,min(sz,len)),if(above(len,0),len - ra*sz*tic,max(0,len)));\\nt4 = len;\",\"point_eqs_eel\":\"ang = 0;\\nlen = t4;\\nmad = .6;\\n\\nit = if(above(sample,0),(it+equal(lev,7)),1);\\nita = (ita + 1)*above(sample,0);\\n\\nmod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));\\n\\nsw = sw - 1;\\nsw = if(equal(lev,7),mod,sw)*above(sample,0);\\n\\nlev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);\\n\\na = equal(lev,7);\\n\\nar = if(above(sample,0),ar,1);\\nar = if(equal(lev,0),ar*-1,ar);\\nbr = if(above(sample,0),br,1);\\nbr = if(equal(lev,1),br*-1,br);\\ncr = if(above(sample,0),cr,1);\\ncr = if(equal(lev,2),cr*-1,cr);\\ndr = if(above(sample,0),dr,1);\\ndr = if(equal(lev,3),dr*-1,dr);\\ner = if(above(sample,0),er,1);\\ner = if(equal(lev,4),er*-1,er);\\nfr = if(above(sample,0),fr,1);\\nfr = if(equal(lev,5),fr*-1,fr);\\ngr = if(above(sample,0),gr,1);\\ngr = if(equal(lev,6),gr*-1,gr);\\n\\nmlev = lev*above(sample,0);\\n\\nswi = equal(q4,0)*equal(sample,0);\\n\\nha = if(swi,1-2*rand(2),ha);\\nhb = if(swi,1-2*rand(2),hb);\\nhc = if(swi,1-2*rand(2),hc);\\nhd = if(swi,1-2*rand(2),hd);\\nhe = if(swi,1-2*rand(2),he);\\nhf = if(swi,1-2*rand(2),hf);\\nhg = if(swi,1-2*rand(2),hg);\\n\\naang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);\\nbang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);\\ncang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);\\ndang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);\\neang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);\\nfang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);\\ngang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);\\n\\naang = 1.57;\\n\\nlen = len*mad;\\nx = .5 + above(lev,0)*sin(aang)*len*ar;\\ny = .5 + above(lev,0)*cos(aang)*len;\\n\\nan = (ar*aang + br*bang)*br;\\nlen = len*mad;\\nx = x + above(lev,1)*sin(an)*len*br;\\ny = y + above(lev,1)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang)*cr;\\nlen = len*mad;\\nx = x + above(lev,2)*sin(an)*len*cr;\\ny = y + above(lev,2)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang + dr*dang)*dr;\\nlen = len*mad;\\nx = x + above(lev,3)*sin(an)*len*dr;\\ny = y + above(lev,3)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang)*er;\\nlen = len*mad;\\nx = x + above(lev,4)*sin(an)*len*er;\\ny = y + above(lev,4)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang)*fr;\\nlen = len*mad;\\nx = x + above(lev,5)*sin(an)*len*fr;\\ny = y + above(lev,5)*cos(an)*len;\\n\\nan = (ar*aang + br*bang + cr*cang + dr*dang + er*eang + fr*fang + gr*gang)*gr;\\nlen = len*mad;\\nx = x + above(lev,6)*sin(an)*len*gr;\\ny = y + above(lev,6)*cos(an)*len;\\n\\nx = (x-.5)*.75 + .5;\\n\\na=0.1\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"bl = 3.8;\\nul = 7.9;\\nrate = 11.9;\\ncha = .01;\\n\\ngv = if(above(gv,bl),  if(below(gv,ul),  if(above(fps,rate),gv + cha,gv - cha),  ul-.1),bl+.1);\\n\\n\\n\\nmonitor = gv;\\n\\nwave_a = 0;\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\nra = 10;\\n\\n\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\n\\nrb = 1;\\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\\nq1 = treb_avg;\\nq2 = mid_avg;\\nq3 = bass_avg;\\n\\ndb = bass - bass_avg;\\n\\nit = (it + tic)*below(it,1);\\n\\nrb = .5*(1/tic);\\nbvb = tic*(bass*rb + (1/tic-rb)*bvb);\\nbd = bass - bvb;\\n\\nvm = vm - tic + swi;\\nswi = above(bd - vm,0);\\n\\nq4 = 1-swi;\\n\\ncm = if(above(iter,30) + equal(time,0),rand(3) + 1,cm);\\niter = (iter + tic)*(1-above(iter,30));\\nq5 = if(equal(cm,0),3,cm);\\n\\ncma = if(above(itar,5) + equal(time,0),int(vav*5),cma);\\nitar = (itar + tic)*(1-above(itar,5));\\n\\nq6 = int(vav*5);\\n\\n\\ndecay=0.97;\\nzoom=1.01;\\nsx=1;sy=1;\",\"pixel_eqs_eel\":\"warp = bass;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = ((texture (sampler_main, uv_orig).xyz * vec3(0.97, 1.0, 0.97)) - vec3(0.03, 0.0, 0.03));\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv_orig);\\n  ret_1.z = (ret_1.z + ((\\n    (tmpvar_2.xyz * scale1)\\n   + bias1).z * 0.45));\\n  ret_1.x = (ret_1.x + ((\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .z * 0.05) + (\\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n  .z * 0.05)));\\n  ret_1.z = (ret_1.z - ret_1.x);\\n  ret_1.y = clamp (texture (sampler_pw_main, uv_orig).y, 0.0, 1.0);\\n  ret_1 = (ret_1 * 0.98);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 * 1.3);\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.75);\\n  ret_1 = (ret_1 + (vec3(3.0, 2.1, 0.9) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 + (vec3(0.6, 1.5, 2.1) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (pow (ret_1, vec3(1.2, 1.2, 1.2)) * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/shifter - escape the worm - Eo.S. + Phat - Before_It_Eats_Your_Brain_Mix_v2.json":
/*!************************************************************************************************************!*\
  !*** ./presets/converted/shifter - escape the worm - Eo.S. + Phat - Before_It_Eats_Your_Brain_Mix_v2.json ***!
  \************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1.999894,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"brighten\":1,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":1.285751,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoomexp\":0.9999,\"zoom\":0.999514,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.005,\"ob_a\":0.3,\"ib_size\":0.26,\"mv_x\":6.399996,\"mv_y\":4.800006,\"mv_l\":1,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":20,\"rad\":0.275918,\"r\":0,\"a\":0.08,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q1;\\ny = 1-q2;\\n//a2=.05+(below(q1,.5)*.1);\\n//sides=10-(below(tan(time),.9)*6);\"},{\"baseVals\":{\"enabled\":1,\"sides\":3,\"textured\":1,\"rad\":0.59958,\"tex_ang\":1.256637,\"tex_zoom\":0.01,\"g\":1,\"a\":0,\"r2\":1,\"b2\":1,\"a2\":0.85,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q1;\\ny = 1-q2;\\nang = .785398 - q6*50 - time*8;\\nrad = max(0.2 - q7*.1,0)*2*rad;\\n\\n\\nflux = sin(time*2.1);\\nflux = flux*above(flux,0.95);\\nflux = (flux-0.95) * 20; //normalize to 0-1;\\nflux = max(flux,0);\\nflux=pow(flux,1.3);\\n\\nrad = rad + flux*0.2\"},{\"baseVals\":{\"enabled\":1,\"sides\":3,\"additive\":1,\"textured\":1,\"rad\":0.542619,\"tex_zoom\":0.01,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q1;\\ny = 1-q2;\\nang = -.261799 - q6*50 - time*8;\\nrad = max(0.2 - q7*.1,0)*2*rad;\\n\\nflux = sin(time*2.1);\\nflux = flux*above(flux,0.95);\\nflux = (flux-0.95) * 20; //normalize to 0-1;\\nflux = max(flux,0);\\nflux=pow(flux,1.3);\\n\\nrad = rad + flux*0.2\\n\\n\\n\"},{\"baseVals\":{\"enabled\":1,\"sides\":6,\"thickoutline\":1,\"textured\":1,\"rad\":0.090529,\"tex_zoom\":0.819542,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = q1;\\ny = 1-q2;\\nang = .261799 - q6*50;\\nrad = max(0.2 - q7*.1,0)*.7;\\n\\ntex_ang = time*8;\\n\\n\\nflux = sin(time*2.1);\\nflux = flux*above(flux,0.95);\\nflux = (flux-0.95) * 20; //normalize to 0-1;\\nflux = max(flux,0);\\nflux=pow(flux,1.3);\\n\\nrad = rad + flux*0.2\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sp = sample*6.283185;\\nx = .5 + sin(sp)*.45;\\ny = .5 + cos(sp)*.45;\\n\\ntm = time*.5 + sp;\\n\\nr = .75 + .25*sin(tm*1.178);\\ng = .75 + .25*sin(tm*1.152);\\nb = .75 + .25*sin(tm*1.102);\\n\"},{\"baseVals\":{\"sep\":51,\"usedots\":1,\"thick\":1,\"scaling\":1.32735,\"smoothing\":0.82,\"b\":3,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time*0.236)*0.5 + 0.5\",\"point_eqs_eel\":\"it = (it+1)*below(it,5);\\nsw = if(equal(it,0),rand(2),sw);\\nrx = if(sw,rand(1001)*.001,rand(2));\\nry = if(sw,rand(2),rand(1001)*.001);\\n\\ntm = time*.5 + sample*2;\\n\\nvx = if(equal(it,0),rx,vx + sw*.002);\\nvy = if(equal(it,0),ry,vy +(1-sw)*.002);\\n\\nx = vx;\\ny = vy;\\n\\ntm= 1.11 + sample + t1*2;\\n\\nflux=sin(time)*0.5;\\nfluy=cos(time)*0.5;\\n\\nxfade = max(-abs(x-0.5 + flux) + 1 , 0);\\nxfade2= max(-abs(y-0.5 + fluy) + 1 , 0);\\nxfade = (xfade2+xfade)*0.5;\\n\\n\\nr1 = .5 + .5*sin(tm + 0.0);\\ng1 = .5 + .5*sin(tm + 2.1);\\nb1 = .5 + .5*sin(tm + 4.2);\\n\\nr=r1*xfade + g1*(1-xfade);\\ng=g1*xfade + b1*(1-xfade);\\nb=b1*xfade + r1*(1-xfade);\\n\\n\\n//r=xfade;g=xfade;b=xfade;\\n\\n\"},{\"baseVals\":{\"enabled\":1,\"sep\":51,\"usedots\":1,\"thick\":1,\"scaling\":1.32735,\"smoothing\":0.82,\"b\":3},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=sin(time*0.236)*0.5 + 0.5\",\"point_eqs_eel\":\"it = (it+1)*below(it,25);\\nsw = if(equal(it,0),rand(2),sw);\\nrx = if(sw,rand(1001)*.001,rand(2));\\nry = if(sw,rand(2),rand(1001)*.001);\\n\\ntm = time*.5 + sample*2;\\n\\nvx = if(equal(it,0),rx,vx + sw*.002);\\nvy = if(equal(it,0),ry,vy +(1-sw)*.002);\\n\\nx = vx;\\ny = vy;\\n\\ntm= 1.11 + sample + t1*2.0;\\n\\nflux=sin(time)*0.5;\\nfluy=cos(time)*0.5;\\n\\nxfade = max(-abs(x-0.5 + flux) + 1 , 0);\\nxfade2= max(-abs(y-0.5 + fluy) + 1 , 0);\\nxfade = (xfade2+xfade)*0.5;\\n\\n\\nr1 = .5 + .5*sin(tm + 0.0);\\ng1 = .5 + .5*sin(tm + 2.1);\\nb1 = .5 + .5*sin(tm + 4.2);\\n\\nr=r1*xfade + g1*(1-xfade);\\ng=g1*xfade + b1*(1-xfade);\\nb=b1*xfade + r1*(1-xfade);\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tic = min(time-tir,.1);\\ntir = time;\\nt2 = tic;\",\"point_eqs_eel\":\"sam = rand(1001)*.001;\\nsam = sample;\\nit = (it+1)*above(sam,0);\\nset = int(sam*6);\\nsp = sam*6 - int(sam*6) + equal(it,511);\\noff = .866025403;\\n\\nmx = equal(set,0)*(-.5 + sp) + equal(set,1)*(.5 + .5*sp) + equal(set,2)*(1-.5*sp) + equal(set,3)*(.5-sp) + equal(set,4)*(-.5 - sp*.5) + above(set,4)*(-1 + sp*.5);\\nmy = equal(set,0)*off + equal(set,1)*(1-sp)*off + equal(set,2)*-sp*off + equal(set,3)*-off + equal(set,4)*(-off + sp*off) + above(set,4)*(sp*off);\\n\\nzang = q6*50;\\nox = mx*cos(zang) - my*sin(zang);\\noy = mx*sin(zang) + my*cos(zang);\\nmx = ox;\\nmy = oy;\\n\\nrad = max(0.2 - q7*.1,0)*.5;\\nvol = max(1-(value1+value2)*.2,0.5);\\nrad = if(equal(it%2,0),rad*vol,rad);\\na = max(-.9 + vol,0);\\n\\nx = mx*rad;\\ny = my*rad;\\n\\nx = x*.75 + q1;\\ny = y + (1-q2);\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp = 0;\\ndecay=.999;\\n//q1 = .1*tan(time);\\n//q1 = min(0.5,max(0.0,q1));\\n//q1 = q1+0.5;\\n\\nq1=sin(time);\\nq1sgn = sign(q1);\\nq1=abs(q1);\\nq1=pow(q1,6);\\nq1=q1*q1sgn;\\nq1=q1*0.4 + 0.5;\\n\\n\\n\\nq2 = .5 + .1*sin(time*.548);\\n\\ntic = min(time - tin,.1);\\ntin = time;\\n\\nra = 1;\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\n\\nrb = 1;\\nvav = tic*(vav*(1/tic - rb) + rb*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb_avg;\\nmt = mt + tic*mid_avg;\\nbt = bt + tic*bass_avg;\\nvt = vt + tic*(treb_avg+mid_avg+bass_avg)*.33333;\\n\\nsp = abs(vav - slide)*.1;\\nslide = if(above(slide,vav),slide-tic*sp,slide+tic*sp) + (1-toc)*vav;\\ntoc = 1;\\n\\nq3 = (treb + bass + mid)*.3333;\\nq3 = q3*q3*0.5 + 0.1;\\nq3 = min(q3,1.0);\\n//q3=1.25;\\nmonitor = int(q3*4)/4;\\n\\nq4 = mt;\\nq5 = bt;\\n\\ncx = q1;\\ncy = q2;\\n\\nrmod = ((treb_avg + mid_avg)*.5 - bass_avg*0.5)*.01;\\nrmod = 0.02 * pow(rmod/0.02 , 2)*7;\\nrmod = min(0.001 , max(rmod, -0.001));\\nrmod=rmod*pow(sin(time)*1.1,2);\\nrot = 0.02 * pow(rmod/0.02 , 2) *40;\\n\\nq6 = rmod;\\n\\nq7 = slide - below(q3,.5)*(6 + 2*sin(time*24))*pow(min(1,(.5 - q3)*2),5);\\n\\nq8=if( above(sin(time*0.5),0) , -1 , 1);\\n\\n//echo_zoom=1+(above(treb,.8)+treb);\",\"pixel_eqs_eel\":\"tm=time/rad;\\na = q1;\\nb = q2;\\n\\n//testcode\\n//a=0.0;b=0.5;\\n\\nmx = x-a;\\nmy = y-b;\\nzm = -.45;\\nzm= if( above(sin(time*2.1),0.95) , 0.45 * max(1-q3*.5,0) , zm);\\n\\n//test code\\n//zm= -0.5;\\n\\ndis = pow(mx*mx + my*my,.5)*.70710678;\\n\\nrot = rot*(1-dis);\\nrot=rot*20*q8 ;\\n\\n//testcode\\n//q3=3.1;\\n\\nlimit=0.05;\\n\\ndx = zm*mx*dis*cos(my*3.14)*q3;\\ndsign=sign(dx);\\ndx = dx -  ( max(abs(dx)-limit,0) )*dsign;\\n\\ndy = zm*my*dis*cos(mx*3.14)*q3;\\ndsign=sign(dy);\\ndy = dy -  ( max(abs(dy)-limit,0) )*dsign;\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/shifter - feathers (angel wings)_phat_remix relief 2.json":
/*!*************************************************************************************!*\
  !*** ./presets/converted/shifter - feathers (angel wings)_phat_remix relief 2.json ***!
  \*************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.35,\"decay\":0.95,\"echo_zoom\":0.999608,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"darken\":1,\"invert\":1,\"wave_a\":4.099998,\"wave_scale\":1.285751,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":0.999514,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"x\":0.9,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(mid_att,1.8),mid_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.672;\\naxang = 0;\\nyang = time*-1.351;\\nayang = 0;\\nzang = time*-0.401;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nr = 1 - sin(sp);\\nb = 0.5 - 0.5*sin(sample*1.57);\\ng = 0.5 - 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;\"},{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(bass_att,1.8),bass_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*-0.321;\\naxang = 0;\\nyang = time*1.531;\\nayang = 0;\\nzang = time*-0.101;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\ng = 1 - sin(sp);\\nr = 0.5 - 0.5*sin(sample*1.57);\\nb = 0.5 - 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;\"},{\"baseVals\":{\"enabled\":1,\"spectrum\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sp = sample*6.28*8*8*4;\\nvol = (bass_att + mid_att + treb_att)*0.33;\\nvol = 0.2 + 0.5*(value1 + value2);\\nvol = .2;\\n\\nmod = if(below(treb_att,1.8),treb_att+.2,2);\\n\\nox = 0.5*sin(sp)*sin(sample*3.14)*vol;\\noy = (sample - 0)*mod;\\noz = 0.5*cos(sp)*sin(sample*3.14)*vol;\\n\\nxang = time*0.221;\\naxang = 0;\\nyang = time*-0.411;\\nayang = 0;\\nzang = time*1.201;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = abs(oz) - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nb = 1-sin(sp);\\ng = 0.5 - 0.5*sin(sample*1.57);\\nr = 0.5 - 0.5*cos(sample*1.57);\\na = 0.5 + (oz + 2)*0.25;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_a = 0;\\ndecay=.995;\",\"pixel_eqs_eel\":\"it = 0.3*sin(time*0.2);\\nradm = rad*0.5;\\nrot = 0.02*sin((radm+it)*30)*rad;\\nmod = sin(ang*5);\\nmod = mod*mod*mod*mod*mod;\\nzoom = 1 + abs(0.01*mod);\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.97);\\n  ret_1 = (ret_1 - 0.004);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 d_1;\\n  vec3 ret_2;\\n  ret_2 = (texture (sampler_main, uv).xyz + 0.15);\\n  vec3 tmpvar_3;\\n  tmpvar_3.z = 0.0;\\n  tmpvar_3.xy = texsize.zw;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * 1.3);\\n  ret_2 = (ret_2 * 0.5);\\n  ret_2 = (ret_2 + (vec3(3.0, 2.1, 0.9) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_4.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_4.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_2 = (ret_2 + (vec3(0.6, 1.5, 2.1) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_4.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_4.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (1.0 - uv.x);\\n  tmpvar_5.y = uv.y;\\n  ret_2 = (ret_2 + texture (sampler_main, tmpvar_5).xyz);\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.xy = texsize.zw;\\n  d_1 = (tmpvar_6 * 1.3);\\n  ret_2 = (ret_2 * 0.5);\\n  ret_2 = (ret_2 + (vec3(3.0, 2.1, 0.9) * (\\n    dot (((texture (sampler_blur1, (tmpvar_5 - d_1.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (tmpvar_5 + d_1.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_2 = (ret_2 + (vec3(0.6, 1.5, 2.1) * (\\n    dot (((texture (sampler_blur1, (tmpvar_5 + d_1.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (tmpvar_5 - d_1.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_2 = (ret_2 * 1.5);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_2;\\n  ret = tmpvar_7.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/shifter - fire and brimstone.json":
/*!*************************************************************!*\
  !*** ./presets/converted/shifter - fire and brimstone.json ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_alpha\":0.5,\"wave_mode\":7,\"wave_brighten\":0,\"wave_a\":0.005,\"wave_scale\":0.167,\"wave_smoothing\":0,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpscale\":0.107,\"zoomexp\":4.10046,\"warp\":0.01,\"wave_x\":0.95,\"wave_y\":1,\"ob_size\":0.005,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0,\"ib_r\":1,\"ib_g\":1,\"ib_b\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0,\"mv_a\":0,\"b1ed\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":34,\"thickoutline\":1,\"x\":0.75,\"rad\":0.30478,\"tex_ang\":1.5708,\"tex_zoom\":0.82773,\"a\":0.03,\"r2\":1,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"x = rand(1001)/1000;\\n//x = \\ny = -.5;\\n\\nrad = rand(1001)/1000;\\nrad = .5 + rad*2;\"},{\"baseVals\":{\"sides\":74,\"thickoutline\":1,\"textured\":1,\"x\":0.25,\"rad\":0.45378,\"tex_zoom\":0.5033,\"g\":1,\"b\":1,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"rad = .3;\\ntex_zoom = .3;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time)*.15;\"},{\"baseVals\":{\"enabled\":1,\"sides\":84,\"additive\":1,\"thickoutline\":1,\"num_inst\":3,\"rad\":0.01,\"tex_zoom\":0.5033,\"r\":0,\"b\":0.2,\"a\":0.6,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"ti = q2 + instance*2.45;\\n\\nx = .5 + (.26*sin(ti*.95) + .14*sin(ti*2.80))*1.3;\\n//y = .5 + (.26*cos(ti*1.05) + .14*cos(ti*2.13))*.5;\\ny = .5;\\n\\nym = (q3 + instance*1.33)*.5;\\nym = ym-int(ym);\\n\\ny = y - (ym-.5)*2;\\n\\nrad = bass*bass*.25;\\nrad = q1*(.5+max(0,1-y)*.3);\"},{\"baseVals\":{\"sides\":74,\"additive\":1,\"rad\":0.16777,\"r2\":1,\"g2\":0,\"a2\":1,\"border_b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ti = -time*.3;\\nx = .5 + .3*sin(ti);\\ny = .5 + .3*cos(ti);\\n\\nti = -time*2.3;\\nx = x + .2*sin(ti);\\ny = y + .2*cos(ti);\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":41,\"usedots\":1,\"additive\":1,\"scaling\":0.01,\"smoothing\":0,\"g\":0},\"init_eqs_eel\":\"t8 = 1;\\nt1 = q5;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = rand(1001)*.001;\\ny = rand(1001)*.001;\\n\\n//r = rand(1001)*.001;\\ng=above(rand(1001)*.001,.9)*.5;\\nb = 0;\\nr = 0;\\n\"},{\"baseVals\":{\"samples\":61,\"additive\":1,\"scaling\":0.0124,\"smoothing\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"t8 = 1;\\nt1 = q5;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = (sample-.5)*.02 + .2;\\ny = .5;\\nr = 1;\\ng = 1;\\nb = 1;\"},{\"baseVals\":{\"samples\":31,\"usedots\":1,\"thick\":1,\"scaling\":0.01303,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t8 = 1;\\nt1 = q5;\",\"frame_eqs_eel\":\"t1 = q5;\\nt2 = q4;\\nt3 = q6;\",\"point_eqs_eel\":\"t8 = -t8;\\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\\ndir1 = t2;\\ndir2 = t2*0.5 + t1*3/2 - t3*3;\\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\\n\\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\\ny = (y-0.5)*1.2 + 0.5;\"},{\"baseVals\":{\"samples\":511,\"sep\":4,\"thick\":1,\"additive\":1,\"scaling\":0.02345,\"smoothing\":0,\"a\":0.99,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;\",\"frame_eqs_eel\":\"t1 = q4*0.75;\\nt2 = q5*0.75;\\nt3 = q6*0.75;\\nt4 = q4*0.75;\\nt5 = q5*0.75;\\nt6 = q6*0.75;\\nt8 = 1;\",\"point_eqs_eel\":\"\\npi = asin(1);\\nn = 80;\\nt8 = -t8;\\nrd = 0.075+0.02*(t8+1)/2;\\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\n\\n\\n\\nw1 = d*t4;\\nw2 = d*t5;\\nw3 = d*t6;\\n\\ns1 = sin(t1*1+w1);\\ns2 = sin(t2*1+w2);\\ns3 = sin(t3*1+w3);\\nc1 = cos(t1*1+w1);\\nc2 = cos(t2*1+w2);\\nc3 = cos(t3*1+w3);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.5;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\\nc=2;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = sigmoid(-z,7)+0.;\\n\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"zoom = 1;\\ndecay = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\ntb = tb + tic*bass*bass*.1 + tic*.2;\\nq2 = tb;\\n\\nt2 = t2 + tic*bass*bass*.2 + tic*.1;\\nq3 = t2;\\n\\nbav = bav + (bass-bav)*tic*.01;\\n\\nq1 = bass-bav;\\nq1 = pow(q1,2);\\nq1 = bass*bass;\\nq1 = min(q1*.5,2);\\n\\nmonitor = bass - bav;\",\"pixel_eqs_eel\":\"//zoom = pow(rad,2)+.01;\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = clamp (((texture (sampler_pw_main, uv_orig).xyz * vec3(1.0, 1.0, 0.97)) - vec3(0.0, 0.0, 0.001)), 0.0, 1.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_pw_main, (uv_orig + ((\\n    (texture (sampler_noise_hq, (((\\n      (uv_orig * texsize.xy)\\n     * texsize_noise_hq.zw) + rand_frame.xy) * 8.0)).xy - 0.5)\\n   * 6.0) * texsize.zw)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = tmpvar_2.xyz;\\n  float tmpvar_4;\\n  vec2 x_5;\\n  x_5 = (ret_1.xy - uv_orig);\\n  tmpvar_4 = sqrt(dot (x_5, x_5));\\n  float tmpvar_6;\\n  vec2 x_7;\\n  x_7 = (tmpvar_2.xy - uv_orig);\\n  tmpvar_6 = sqrt(dot (x_7, x_7));\\n  if ((tmpvar_4 > tmpvar_6)) {\\n    ret_1.xy = tmpvar_3.xy;\\n    ret_1.z = tmpvar_3.z;\\n  };\\n  ret_1.xy = (ret_1.xy * pow (ret_1.z, 0.01));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).zzz;\\n  ret_1 = ((pow (\\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).z)), tmpvar_2, tmpvar_2)\\n  , vec3(0.8, 2.0, 8.0)) * 1.25) - 0.25);\\n  ret_1 = (ret_1 * ((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2).y * 1.2));\\n  ret_1 = (ret_1 * 2.0);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/shut down all survival paradigms.json":
/*!*****************************************************************!*\
  !*** ./presets/converted/shut down all survival paradigms.json ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.7,\"decay\":1,\"echo_zoom\":1.104,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_mode\":7,\"wave_brighten\":0,\"brighten\":1,\"darken\":1,\"invert\":1,\"wave_a\":0.005,\"wave_scale\":0.167,\"wave_smoothing\":0,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpanimspeed\":0.01,\"warpscale\":0.01,\"dx\":0.005,\"warp\":0.01,\"sx\":0.9999,\"sy\":1.0018,\"wave_x\":0.95,\"wave_y\":1,\"ob_size\":0,\"ob_g\":0.8,\"ob_b\":0.7,\"ib_size\":0.005,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0.3,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":34,\"thickoutline\":1,\"textured\":1,\"x\":0.75,\"rad\":0.30478,\"tex_ang\":1.5708,\"tex_zoom\":0.82773,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"rad = .3;\\ntex_zoom = .28;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time*.957)*.1;\"},{\"baseVals\":{\"sides\":74,\"thickoutline\":1,\"textured\":1,\"x\":0.25,\"rad\":0.45378,\"tex_zoom\":0.5033,\"g\":1,\"b\":1,\"b2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"rad = .3;\\ntex_zoom = .3;\\ntex_zoom = 1/rad*tex_zoom;\\n\\nx = .5 + sin(time)*.15;\"},{\"baseVals\":{\"enabled\":1,\"sides\":84,\"additive\":1,\"thickoutline\":1,\"rad\":0.16777,\"tex_zoom\":0.5033,\"r\":0,\"b\":0.2,\"a\":0.6,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"vx = 0;\\nvy = 0;\",\"frame_eqs_eel\":\"ti = time*.3;\\nx = .5 + .34*sin(ti);\\ny = .5 + .34*cos(ti);\\n\\nrad = rad + bass;\\n\\nti = time*2.3;\\nx = x + .1*sin(ti);\\ny = y + .1*cos(ti);\"},{\"baseVals\":{\"sides\":74,\"additive\":1,\"rad\":0.16777,\"r2\":1,\"g2\":0,\"a2\":1,\"border_b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ti = -time*.3;\\nx = .5 + .3*sin(ti);\\ny = .5 + .3*cos(ti);\\n\\nti = -time*2.3;\\nx = x + .2*sin(ti);\\ny = y + .2*cos(ti);\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":41,\"usedots\":1,\"additive\":1,\"scaling\":0.01,\"smoothing\":0,\"g\":0},\"init_eqs_eel\":\"t8 = 1;\\nt1 = q5;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = int(rand(1001))*.001;\\ny = int(rand(1001))*.001;\\n\\n//r = int(rand(1001))*.001;\\ng=above(int(rand(1001))*.001,.9)*.5;\\nb = 0;\\nr = 0;\\n\"},{\"baseVals\":{\"samples\":61,\"additive\":1,\"scaling\":0.0124,\"smoothing\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"t8 = 1;\\nt1 = q5;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"x = (sample-.5)*.02 + .2;\\ny = .5;\\nr = 1;\\ng = 1;\\nb = 1;\"},{\"baseVals\":{\"samples\":31,\"usedots\":1,\"thick\":1,\"scaling\":0.01303,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t8 = 1;\\nt1 = q5;\",\"frame_eqs_eel\":\"t1 = q5;\\nt2 = q4;\\nt3 = q6;\",\"point_eqs_eel\":\"t8 = -t8;\\nd1 = 0.15 + t8*0.01 - value1*0.1*(t8+1);\\ndir1 = t2;\\ndir2 = t2*0.5 + t1*3/2 - t3*3;\\ndir3 = sample*asin(1)*4 + t3 - t2*5/6 + t1*3/2;\\n\\nx = 0.5 + sin(dir1)*0.1 + sin(dir2)*0.05 + sin(dir3)*d1;\\ny = 0.5 + cos(dir1)*0.1 + cos(dir2)*0.05 + cos(dir3)*d1;\\ny = (y-0.5)*1.2 + 0.5;\"},{\"baseVals\":{\"samples\":511,\"sep\":4,\"thick\":1,\"additive\":1,\"scaling\":0.02345,\"smoothing\":0,\"a\":0.99,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;\",\"frame_eqs_eel\":\"t1 = q4*0.75;\\nt2 = q5*0.75;\\nt3 = q6*0.75;\\nt4 = q4*0.75;\\nt5 = q5*0.75;\\nt6 = q6*0.75;\\nt8 = 1;\",\"point_eqs_eel\":\"\\npi = asin(1);\\nn = 80;\\nt8 = -t8;\\nrd = 0.075+0.02*(t8+1)/2;\\nxx = sin(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz)*0.004;\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\n\\n\\n\\nw1 = d*t4;\\nw2 = d*t5;\\nw3 = d*t6;\\n\\ns1 = sin(t1*1+w1);\\ns2 = sin(t2*1+w2);\\ns3 = sin(t3*1+w3);\\nc1 = cos(t1*1+w1);\\nc2 = cos(t2*1+w2);\\nc3 = cos(t3*1+w3);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.5;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*2 - time*0.8;//sample*pi*4-0*time +t4*3;\\nc=2;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = sigmoid(-z,7)+0.;\\n\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0\",\"frame_eqs_eel\":\"decay=1.0;\\nzoom=1.00;\\ndx=0;dy=0;sx=1.000001;sy=0.999999;\\n\\nmv_r=.360+(((cos(time/5)*0.3)+0.5*0.5)*0.1);\\nmv_g=.390+(((sin(time/7)*0.3)+0.5*0.5)*0.1);\\nmv_b=.500+((sin((time/7)+0.9)+0.5*0.5)*0.1);\\n\\n\\ncx=-1;cy=2;rot=-treb*0.002;\\n\\ncx=cos(time*0.1)*1.5 + 0.5;\\ncy=cos(time*0.2)*1.5 + 0.5\",\"pixel_eqs_eel\":\"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nsx = sx + 0.25*(1.2*sin(6*time)*0.25*cos(3*ang)*(0.5+0.25*cos(time)-rad));\\nsy = sy + 0.25*(1.2*cos(6*time)*0.25*sin(3*ang)*(0.5+0.25*sin(time)-rad));\\nzoom=1+((1-rad)*bass*2-1)*.01*q4*(ang*ang);\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.007))) - texture (sampler_main, (uv - vec2(0.005, 0.007)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(-0.007, 0.005))) - texture (sampler_main, (uv - vec2(-0.007, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  ret_1 = (((\\n    -(tmpvar_3)\\n   * 0.1) + (\\n    (texture (sampler_main, (uv - ((tmpvar_2 * \\n      (1.0 - tmpvar_3)\\n    .xy) * 0.02))).xyz + ((vec3(dot (texture (sampler_noise_lq, \\n      ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.5) + (0.1 * rand_frame).xy)\\n    ), vec4(0.32, 0.49, 0.29, 0.0))) * 0.12) - (0.01 * pow (\\n      (1.0 - rad)\\n    , 4.0))))\\n   * 1.1)) * 0.97);\\n  ret_1 = (ret_1 - 0.05);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/stahlregen & geiss + rovastar - fields of flowers (mashup 9 - space flower rmx) - mash0001 - pack em in, we got a long haul + flashlight.json":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./presets/converted/stahlregen & geiss + rovastar - fields of flowers (mashup 9 - space flower rmx) - mash0001 - pack em in, we got a long haul + flashlight.json ***!
  \*************************************************************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":0,\"gammaadj\":1.9,\"echo_zoom\":1.169,\"wave_brighten\":0,\"wave_a\":4.1,\"wave_scale\":0.443,\"wave_smoothing\":0.63,\"wave_mystery\":-0.4,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"zoom\":1.135,\"warp\":0.01605,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.02,\"ob_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.5,\"mv_r\":0.35,\"mv_g\":0.35,\"mv_b\":0.35,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"samples\":42,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":81.95444,\"smoothing\":1,\"g\":0.4,\"b\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_x=1;\\nr = q2;\\ng = q3;\\nb = q1;\",\"point_eqs_eel\":\"x=rand(1000)*0.001;\\ny=rand(1000)*0.001;\\n//r=0.9;\\n//g=1;\\n//b=1\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//wave_g = wave_g + 0.100*( 0.90*sin(0.583*time) + 0.10*sin(1.006*time) );\\n//wave_b = wave_b + 0.100*( 0.90*sin(0.993*time) + 0.10*sin(0.933*time) );\\nzoom = 0.935*zoom + 0.04*( 0.60*sin(0.339*bass_att) + 0.10*sin(0.276*bass_att) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.003*( 0.60*sin(0.471*treb_att) + 0.40*sin(0.297*treb_att) );\\ncy = cy + 0.003*( 0.60*sin(0.379*mid_att) + 0.40*sin(0.351*mid_att) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\nrot=rot+0.02*(sin(time*2.134)+sin(time*1.7134)+sin(time*2.834));\\ndx=dx+0.01*(sin(time*1.134)+sin(time*0.7134)+sin(time*2.334));\\ndy=dy+0.01*(sin(time*1.8834)+sin(time*1.0144)+sin(time*1.334));\\n\\nq1 = q1 + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\\nq2 = q2 + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\\nq3 = q3 + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\\nwave_r = q1;\\nwave_g = q2;\\nwave_b = q3;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_4 * texsize.zw) * 2.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \\n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.004) + ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.12)).x;\\n  ret_1.y = (texture (sampler_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5).xy * texsize.zw)\\n   * 3.0))).y - 0.004);\\n  ret_1.z = texture (sampler_main, uv).z;\\n  ret_1.z = (ret_1.z + ((\\n    (ret_1.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\\n   * 0.1) - 0.015));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur1, uv_1).xyz * scale1)\\n   + bias1) * 3.0));\\n  ret_2 = (ret_2 * (1.0 + (0.12 * \\n    ((texture (sampler_noise_lq, (rand_frame.xy + (\\n      (uv_1 * texsize.xy)\\n     * texsize_noise_lq.zw))).xxx * 2.0) - 1.0)\\n  )));\\n  ret_2 = ((pow (ret_2, vec3(0.5, 0.5, 0.7)) - 0.1) * 1.1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/stahlregen - dots (layered) - suksma world humanvirus replication killphreqs mix.json":
/*!*****************************************************************************************************************!*\
  !*** ./presets/converted/stahlregen - dots (layered) - suksma world humanvirus replication killphreqs mix.json ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"wrap\":0,\"wave_a\":0.001,\"warpanimspeed\":5.278,\"warpscale\":0.01,\"zoomexp\":1.47412,\"fshader\":10,\"zoom\":1.0303,\"warp\":0.01,\"ob_size\":0.005,\"ob_a\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":32,\"additive\":1,\"thickoutline\":1,\"num_inst\":33,\"r\":0,\"g\":0.5,\"g2\":0.5,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = int(rand(int(q30)))/15+instance-instance;\\ntrans2 = int(rand(int(q30)))/15+instance-instance;\\ntrans3 = int(rand(int(q30)))/15+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"thickoutline\":1,\"textured\":1,\"num_inst\":7,\"r\":0,\"b\":0.5,\"g2\":0,\"b2\":0.5,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = int(rand(int(q30)))/15+instance-instance;\\ntrans2 = int(rand(int(q30)))/15+instance-instance;\\ntrans3 = int(rand(int(q30)))/15+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;\\n\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"thickoutline\":1,\"num_inst\":33,\"r\":0.5,\"r2\":0.5,\"g2\":0,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = int(rand(int(q30)))/15+instance-instance;\\ntrans2 = int(rand(int(q30)))/15+instance-instance;\\ntrans3 = int(rand(int(q30)))/15+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*treb_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;\\n\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"count = if(below(count,9),count+1,0);\\n\\nq1 = 0.5;\\nq2 = 0.5;\\nq3 = count;\\n\\nzoom = 1 + 0.065*bass_att+0.05*bass;\\nmonitor=q3;\\nq30=bass+mid+treb;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1.x = texture (sampler_main, uv).x;\\n  ret_1.y = texture (sampler_main, mix (uv_orig, uv, vec2(0.1, 0.1))).y;\\n  ret_1.z = texture (sampler_main, mix (uv_orig, uv, vec2(0.2, 0.2))).z;\\n  ret_1 = (ret_1 * 0.98);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = ((hue_shader * 8.0) - 6.65);\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2 * tmpvar_3.y);\\n  ret_1 = (mix (mix (ret_1, tmpvar_2.yzx, tmpvar_3.xxx), tmpvar_2.zxy, tmpvar_3.zzz) * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/suksma - ed geining hateops - flx i want you, i'm sick with you.json":
/*!************************************************************************************************!*\
  !*** ./presets/converted/suksma - ed geining hateops - flx i want you, i'm sick with you.json ***!
  \************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1.7,\"decay\":1,\"echo_zoom\":2.221,\"echo_alpha\":0.6,\"wave_mode\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0,\"wave_scale\":1.616,\"wave_smoothing\":0,\"wave_mystery\":0.2,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpscale\":1.331,\"fshader\":1,\"zoom\":0.99951,\"warp\":0.01,\"wave_g\":0,\"wave_b\":0.65,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_x\":1,\"mv_y\":1,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":23,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"num_inst\":64,\"rad\":0.1661,\"tex_zoom\":0.9997,\"a\":0.15,\"r2\":0.2,\"g2\":0,\"b2\":0.7,\"a2\":0.2,\"border_g\":0.5,\"border_b\":0.15,\"border_a\":0.5,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"num_inst\":7,\"rad\":0.03333,\"r\":0,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = int(rand(100))*.01+instance-instance;\\ny = int(rand(100))*.01+instance-instance;\\n\\na =1;\\nvol=bass+mid+treb;\\nrad = int(rand(int(vol)))/7+instance-instance;\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"rad\":0.03333,\"r\":0,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = int(rand(100))*.01;\\ny = int(rand(100))*.01;\\n\\na = if(above(frame%7,0),0,1);\\n\\nvol=bass+mid+treb;\\nrad = vol*.1;\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"rad\":0.03333,\"r\":0,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = int(rand(100))*.01;\\ny = int(rand(100))*.01;\\n\\na = if(above(frame%7,0),0,1);\\n\\nvol=bass+mid+treb;\\nrad = vol*.1;\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"sep\":256,\"spectrum\":1,\"smoothing\":0.8,\"a\":0.3},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sw = (1-sw)*above(sample,0);\\n\\nosa = sample*above(sample,0);\\n\\nmod = pow(value1*2,2)*sign(value1)*.5;\\n\\nmod = value1;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample*.5+.25);\\ny = sample*.5+.25;\\ny = (y-0.5)/(q32) + 0.5;\\nx = .5 - mod*.5;\\n\\nosa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\nr = .5 + sin(q8*.9 +mo)*.5;\\ng = .5 + sin(q8*.89+mo + 1.5472)*.5;\\nb = .5 + sin(q8*.88+mo + 2.8944)*.5;\\n\\n//a = 3 - abs(mod)*12;\\n//a = 3-sw;\\n//a = max(0,min(a,1));\"},{\"baseVals\":{\"enabled\":1,\"sep\":256,\"spectrum\":1,\"smoothing\":0.8,\"a\":0.3},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sw = (1-sw)*below(sample,1);\\n\\nosa = sample*above(sample,0);\\n\\nmod = pow(value2*2,2)*sign(value2)*.5;\\n\\nmod = value2;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample*.5+.25);\\ny = sample*.5+.25;\\ny = (y-0.5)/(q32) + 0.5;\\nx = .5 + mod*.5;\\n\\nosa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\nr = .5 + sin(q8*.95+mo)*.5;\\ng = .5 + sin(q8*.96+mo + 1.5472)*.5;\\nb = .5 + sin(q8*.97+mo + 2.8944)*.5;\\n\\n//a = 3 - abs(mod)*12;\\n//a = 3-sw;\\n//a = max(0,min(a,1));\"},{\"baseVals\":{\"sep\":256,\"spectrum\":1,\"smoothing\":0.8,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sw = (1-sw)*below(sample,1);\\n\\nosa = sample*above(sample,0);\\n\\n//mod = pow((value1-value2)*2,2)*sign(value1-value2)*.5;\\n\\nmod = value2-value1;\\nmod = mod*sw;\\n\\ny = if(sw,osa,sample);\\ny = (1-sample*1.6)*.4+.42;\\nx = 0 + mod*4+.5;\\n\\n//osa = sample;\\n\\nmo = 3.7 + mod*6 + q1;\\n\\npi23 = 4*asin(-1)*.3333333;\\nrunbass = bass*.01+runbass;\\nruntreb = treb*.01+runtreb;\\nrunmid  = mid *.01+runmid ;\\nvol = (runbass+runtreb+runmid)*.01;\\n\\nr = (sin(mo*.01 + vol - 0*pi23)+1)*.5;\\ng = (sin(mo*.01 + vol - 1*pi23)+1)*.5;\\nb = (sin(mo*.01 + vol - 2*pi23)+1)*.5;\\n\\na = 1 - abs(mod)*12;\\na = 1-sw;\\na = max(0,min(a,1));\"},{\"baseVals\":{\"sep\":144,\"spectrum\":1,\"thick\":1,\"additive\":1,\"scaling\":100,\"smoothing\":1,\"r\":0.2,\"g\":0.11,\"a\":0.51,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"beatb=above(bass,bass_att);\\nbeatbhard=if(beatb,bass-bass_att*.9,beatbhard);\\n\\nbeatm=above(mid,mid_att);\\nbeatmhard=if(beatm,mid-mid_att*.9,beatmhard);\\n\\nbeatt=above(treb,treb_att);\\nbeatthard=if(beatt,treb-treb_att*.9,beatthard);\\n\\nvol=bass+mid+treb;\\nvol_att=bass_att+mid_att+treb_att;\\n\\n\\nq1=beatb;\\nq2=beatbhard;\\nq3=beatm;\\nq4=beatmhard;\\nq5=beatt;\\nq6=beatthard;\\n\\ndecay=.999;\\nwrap=1;\\natime=atime+vol;\\nq8=atime*.01;\\nq32=aspecty;\",\"pixel_eqs_eel\":\"cx=(x*20*q2)%(20*q6);\\ncy=(y*20*q4)%(20*q6);\\n\\nrot=.02*q1+.002*q3-.02*q6;\\nzoom=1-(.1*q2*q1)+.2*q6*q5-.1*q4*q3;\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur1, mix (uv_orig, uv, vec2(-8.0, -8.0))).xyz * scale1) + bias1)\\n    , vec3(0.32, 0.49, 0.29))) * 8.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.3)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.004).xyz) + -0.001);\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\"vec2 xlat_mutabledz;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = 0.0;\\n  tmpvar_3.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  uv2_1 = (uv - 0.5);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 8.0);\\n  tmpvar_4.x = tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (q27 * 2.0);\\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_4);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_7;\\n  tmpvar_7 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = (1.0 + roam_cos);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_7)) + ((0.45 * \\n    dot (vec3(tmpvar_7), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_8).xyz);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = tmpvar_5;\\n  xlat_mutableuv3 = (((tmpvar_6 * uv2_1) * 0.1) + tmpvar_9);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_10)) + ((0.45 * \\n    dot (vec3(tmpvar_10), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_8).xyz);\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = (xlat_mutableret1 + clamp ((\\n    (texture (sampler_main, uv).xyz * 4.0)\\n   * \\n    (0.2 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_11.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/suksma - feign shoulder concern when i should be executed - everything is eternally shrinking.json":
/*!******************************************************************************************************************************!*\
  !*** ./presets/converted/suksma - feign shoulder concern when i should be executed - everything is eternally shrinking.json ***!
  \******************************************************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1,\"decay\":0,\"echo_zoom\":1,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoomexp\":0.69972,\"zoom\":0.99455,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0,\"ob_r\":0.01,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0.4,\"ib_g\":0.4,\"ib_b\":0.6,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"rad\":1.79142,\"tex_ang\":0.62832,\"g\":1,\"b\":1,\"a\":0,\"g2\":0,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_y = wave_y + 0.150*(0.60*sin(1.742*bass) + 0.35*sin(1.921*time));\\nwave_x = wave_x + 0.150*(0.60*sin(2.111*time) + 0.35*sin(1.111*time));\\nwave_mystery = wave_mystery +0.05*sin(5.1*time) + 0.04*sin(4.5*time);\\nwave_r = wave_r + 0.5*sin(1.11*time);\\nwave_b = wave_b + 0.5*sin(1.3*time);\\nwave_g = wave_g + 0.5*sin(1.2*time);\\ndx = dx + 0.01*sin(5*time);\\ndy = dy + 0.01*sin(10*time);\\nzoom = zoom - 0.05*sin(0.2*mid);\\nrot = rot + 0.005*sin(bass);\\ncx = cx + 0.25*sin(0.5*bass);\\ncy = cy + 0.25*cos(0.5*treb);\\ndx = dx + 0.01*sin(0.25*time);\\ndy = dy + 0.01*sin(0.25*time);\\nwave_mystery = wave_mystery + above(sin(frame%3),0)*1;\",\"pixel_eqs_eel\":\"sim = 1.5*sin(1.5*bass);\\nzoom = zoom - if(above(sim,0.75), (1-rad)*0.2, 0);\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.006).xyz) + -0.0006);\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_1 - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - \\n    mix (texture (sampler_main, uv_1).xyz, texture (sampler_main, tmpvar_3).xyz, vec3(0.5, 0.5, 0.5))\\n  )) * 6.0);\\n  ret_2 = (ret_2 * (0.1 + abs(\\n    max (sin(bass_att), sin(treb_att))\\n  )));\\n  ret_2 = (ret_2 * max ((\\n    (texture (sampler_blur3, uv_1).xyz * scale3)\\n   + bias3), (\\n    (texture (sampler_blur3, tmpvar_3).xyz * scale3)\\n   + bias3)));\\n  ret_2 = (ret_2 * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/suksma - gaeomaentaec - log smell 2 - steaming wienies2.json":
/*!****************************************************************************************!*\
  !*** ./presets/converted/suksma - gaeomaentaec - log smell 2 - steaming wienies2.json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":3,\"gammaadj\":1.98,\"decay\":0.5,\"echo_zoom\":1,\"echo_alpha\":0.5,\"echo_orient\":3,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.401,\"wave_scale\":3.177,\"wave_smoothing\":0,\"wave_mystery\":-0.4,\"modwavealphastart\":1,\"modwavealphaend\":1,\"warpanimspeed\":2.289,\"warpscale\":5.472,\"zoomexp\":0.01,\"zoom\":0.9901,\"warp\":1.8566,\"ob_size\":0.005,\"ob_a\":1,\"ib_size\":0,\"ib_r\":1,\"ib_g\":0,\"ib_b\":0,\"ib_a\":1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"additive\":1,\"num_inst\":512,\"y\":0.55,\"rad\":0.06689,\"tex_zoom\":0.78748,\"g\":1,\"b\":1,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.7;\\n\\n\\n// Kardan angles\\n\\nw1 = q3; // first rotation: clockwise in the desktop pane\\nw2 = q4; // rotation around vertical axis\\nw3 = q5; // rotation around horizontal axis\\n\\n\\n// definition of the 3D shape\\n\\ni = instance;\\n\\nmy_x = (i % 8)/8 - 0.5;\\nmy_y = (i % 64 - (i % 8))/64 - 0.5;\\nmy_z = (i - (i % 64 - (i % 8))/64)/512 - 0.5;\\n\\n\\n// 3D rotations\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nrad = rad/d;\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.52,\"y\":0.41,\"rad\":0.5216,\"ang\":0.1885,\"tex_zoom\":0.73458,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":0.75,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"textured\":1,\"x\":0.48,\"y\":0.41,\"rad\":0.61162,\"ang\":5.96903,\"tex_zoom\":0.73458,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":0.75,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":100,\"additive\":1,\"thickoutline\":1,\"y\":0.75,\"rad\":0.07059,\"tex_zoom\":0.73458,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"vx = 0\",\"frame_eqs_eel\":\"x = q1;\\ny = q5;\"}],\"waves\":[{\"baseVals\":{\"additive\":1,\"r\":0.2,\"g\":0,\"b\":0,\"a\":0.3,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=time*0.4 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n//a=(1-sample)*flip;\\n\\n//b=b+pow(1-sample,2)*0.3;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2 + 0.1;\"},{\"baseVals\":{\"additive\":1,\"r\":0.2,\"g\":0,\"b\":0,\"a\":0.3,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=time*0.4 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n//a=(1-sample)*flip;\\n\\n\\n//b=b+pow(1-sample,2)*0.3;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2 + 0.1;\\n\"},{\"baseVals\":{\"samples\":61,\"thick\":1,\"scaling\":2.44415,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\"},{\"baseVals\":{\"samples\":61,\"scaling\":2.44415,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"t2 = 0\",\"frame_eqs_eel\":\"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;\",\"point_eqs_eel\":\"x = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*10;//0.5 + vb - vvb;\\nq2 = vvm*10;//0.5 + vm - vvm;\\nq3 = vvt*10;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\n\\nwave_a = 0;\\n//q1 =aspectx;\\n//q2 = aspecty;\\n\\n\\nb = b + bass*bass*0.5;\\nm = m + mid*mid*0.5;\\nt = t + treb*treb*0.5;\\n\\nq3 = b*0.012;\\nq4 = m*0.012;\\nq5 = t*0.012;\\nq20=bass+treb+mid;\",\"pixel_eqs_eel\":\"\",\"warp\":\"vec3 xlat_mutablemus;\\n shader_body { \\n  vec3 crisp_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float tmpvar_4;\\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\\n  tmpvar_5[1u].y = cos(tmpvar_4);\\n  uv6_2 = (tmpvar_3 * tmpvar_5);\\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\\n  xlat_mutablemus = (vec3((0.2 / (\\n    sqrt(uv6_2.x)\\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\\n  crisp_1 = (crisp_1 * 0.67);\\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\\n    sqrt(dot (tmpvar_7, tmpvar_7))\\n   * tmpvar_6)));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (((crisp_1 - \\n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\\n  ) * 0.99) - 0.04);\\n  ret = tmpvar_8.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (vec3((0.25 * dot (\\n    clamp ((2.0 * ((tmpvar_6.xyz * scale3) + bias3)), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29)))) - (0.8 * dot (\\n    clamp (((20.0 * (\\n      (0.6 * ((texture (sampler_blur2, uv).xyz * scale2) + bias2))\\n     - 0.01)) - 2.0), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = ((ret_2 + dot (\\n    clamp (((30.0 * (\\n      (texture (sampler_main, uv).xyz + (((tmpvar_7.xyz * scale1) + bias1) * 0.15))\\n     - 0.01)) - 2.0), 0.0, 1.0)\\n  , vec3(0.32, 0.49, 0.29))) - 0.1);\\n  ret_2 = (ret_2 + 0.55);\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (ret_2, (ret_2 * (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n   - \\n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\\n  )), pow (hue_shader, (ret_2 + q20)));\\n  ret2_1 = ((tmpvar_8 - (0.9 * texture (sampler_main, tmpvar_5).xyz)) - 0.1);\\n  ret2_1 = (ret2_1 - 0.75);\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (ret2_1, ((1.2 * ret2_1) * (\\n    ((tmpvar_6.xyz * scale3) + bias3)\\n   - \\n    ((tmpvar_7.xyz * scale1) + bias1)\\n  )), pow (hue_shader.zxy, tmpvar_8));\\n  ret2_1 = tmpvar_9;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = abs((tmpvar_8 - (1.2 * tmpvar_9)));\\n  ret_2 = (tmpvar_10 * tmpvar_10);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/suksma - grainery clock mortis.json":
/*!***************************************************************!*\
  !*** ./presets/converted/suksma - grainery clock mortis.json ***!
  \***************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":1,\"gammaadj\":1.45,\"decay\":0.99,\"echo_zoom\":1.008,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_thick\":1,\"wave_brighten\":0,\"darken\":1,\"wave_a\":0.625,\"wave_scale\":1.187,\"wave_smoothing\":0,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpanimspeed\":1.459,\"warpscale\":2.007,\"fshader\":0.19,\"zoom\":0.9999,\"warp\":0.01,\"sx\":0.9999,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_r\":1,\"ob_g\":1,\"ob_b\":1,\"ib_size\":0.26,\"mv_x\":64,\"mv_y\":48,\"mv_l\":0.85,\"mv_r\":0.5,\"mv_g\":0.5,\"mv_b\":0.5,\"mv_a\":0.5},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":9,\"thickoutline\":1,\"textured\":1,\"rad\":0.12566,\"ang\":3.39292,\"tex_ang\":0.3768,\"tex_zoom\":0.32473,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"a2\":1,\"border_r\":0.03,\"border_g\":0.67,\"border_b\":0.79,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x=x+sin(time*0.9)*.13;\\ny=y+sin(time*0.5)*.16;\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;\"},{\"baseVals\":{\"enabled\":1,\"sides\":3,\"thickoutline\":1,\"rad\":0.12572,\"a2\":1,\"border_g\":0,\"border_b\":0,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//: Aderrasi was here too\\nrad = rad -0.2 + 0.2*bass_att;;\\nr = r + 0.25*sin(1.1*time) + 0.2*sin(0.25*time);\\ng = g + 0.25*cos(1.5*time) + 0.22*cos(0.24*time);\\nb = b + 0.25*sin(0.6*time) + 0.27*cos(0.7*time);\\nr2 = 1-abs(r);\\ng2 = 1-abs(g);\\nb2 = 1-abs(b);\\nang = ang + 3*abs(tan(1*time));\\nx = x + 0.14*cos(time) + 0.2*sin(0.42*time);\\ny = y + 0.16*sin(1.2*time) + 0.15*sin(0.8*time) + 0.21*cos(0.45*time);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;\"},{\"baseVals\":{\"enabled\":1,\"ang\":0.03,\"r\":0.21,\"g\":0.44,\"b\":0.23,\"r2\":0.18,\"b2\":0.11,\"a2\":1,\"border_r\":0.15,\"border_g\":0.4,\"border_b\":0.48,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang = time*2.4;\\nx = 0.5 + 0.22*cos(time*3.3) + 0.14*cos(time*1.2);\\ny = 0.5 + 0.26*sin(time*3.1) + 0.13*sin(time*1.7);\\nr = 0.5 + 0.5*sin(time*1.013 + 5);\\ng = 0.5 + 0.5*sin(time*1.063 + 2);\\nb = 0.5 + 0.5*sin(time*1.054 + 1);\\nr2 = 0.5 + 0.5*sin(time*1.085 + 3);\\ng2 = 0.5 + 0.5*sin(time*1.056+ 1);\\nb2 = 0.5 + 0.5*sin(time*1.038 + 4);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;\"},{\"baseVals\":{\"enabled\":1,\"sides\":5,\"x\":0.51,\"y\":0.49,\"rad\":0.09986,\"ang\":0.06283,\"a2\":1,\"border_r\":0.46,\"border_g\":0.28,\"border_b\":0.54,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"x = 0.5 + 0.07*cos(q4*0.5) + 0.31*sin(time*3.5);\\ny = 0.5 + 0.07*sin(q4*0.5) + 0.31*cos(time*3.5);\\nr = 0.5 + 0.5*sin(time*1.013 + 2);\\ng = 0.5 + 0.5*sin(time*0.863 + 3);\\nb = 0.5 + 0.5*sin(time*1.054 + 1);\\nr2 = 0.5 + 0.5*sin(time*1.185 + 3);\\ng2 = 0.5 + 0.5*sin(time*1.356+ 2);\\nb2 = 0.5 + 0.5*sin(time*0.738 + 4);\\nborder_r = q1;\\nborder_b = q2;\\nborder_g = q3;\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;\",\"frame_eqs_eel\":\"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.999, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\nindex3 = (index3 + is_beat*bnot(index) * bnot(index2))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\n\\nvol = bass_att + treb_att;\\nv2 = v2 * dec_med + vol * (1-dec_med) ;\\nq26 = max(atan (vol - v2),0);\\nq27 = index + 1;\\n\\nsw = sw*dec_med + (1-dec_med)*(index2%2);\\nq28 = sw;\\nkiss = kiss*dec_med \\n      +(1-dec_med)*bnot(index2)*below(index,4);\\nq29 = kiss;\\n\\nk1 =  is_beat*bnot(index);\\nk2 =  is_beat*bnot(index);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/2;\\nmonitor = k1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq5 = cos(time/4);\\nq6 = -sin(time/4);\\nq7 = -q6;\\nq8 = q5;\\n\\nzoom = 1;\\nrot = -0;\\n\\n\\n//KUGEL-POS\\ndt = .1*30/fps;\\nm = 1; //Masse\\n//Gravitationszentrum\\nx0 = .0; y0 = 0;\\n\\nax = -(xk-x0)/m + sign(vx+.001)*dt*bass/40; \\nay = -(yk-y0)/m + sign(vy+.001)*dt*treb/40;\\nmonitor = index3;\\nvx = vx*dec_slow + ax * dt; \\nvy = vy*dec_slow + ay * dt;\\n\\nxk = xk + vx*dt; \\nyk = yk + vy*dt;\\n\\nq9 = xk; q10 = yk;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\"vec3 xlat_mutableblur;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_4.x = ((uv_1.x * 0.0007962743) - (uv_1.y * 0.9999997));\\n  uv2_4.y = ((uv_1.x * 0.9999997) + (uv_1.y * 0.0007962743));\\n  dist_3 = (1.0 - fract((0.25 + time)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + 0.54)).xyz * scale1) + bias1);\\n  xlat_mutableneu = (texture (sampler_main, ((\\n    (2.0 * uv2_4)\\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = (xlat_mutableneu * inten_2);\\n  uv2_4.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  uv2_4.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  dist_3 = (1.0 - fract((0.5 + time)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + 0.54)).xyz * scale1) + bias1);\\n  xlat_mutableneu = (texture (sampler_main, ((\\n    (2.0 * uv2_4)\\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.00238894) - (uv_1.y * -0.9999971));\\n  uv2_4.y = ((uv_1.x * -0.9999971) + (uv_1.y * -0.00238894));\\n  dist_3 = (1.0 - fract((0.75 + time)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + 0.54)).xyz * scale1) + bias1);\\n  xlat_mutableneu = (texture (sampler_main, ((\\n    (2.0 * uv2_4)\\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  uv2_4.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_4.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  dist_3 = (1.0 - fract((1.0 + time)));\\n  inten_2 = ((pow (dist_3, 0.3) * (1.0 - dist_3)) * 2.0);\\n  xlat_mutableblur = ((texture (sampler_blur1, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + 0.54)).xyz * scale1) + bias1);\\n  xlat_mutableneu = (texture (sampler_main, ((\\n    (2.0 * uv2_4)\\n   * dist_3) + 0.5)).xyz + xlat_mutableblur);\\n  xlat_mutableret1 = ((xlat_mutableret1 * 0.9) + (xlat_mutableneu * inten_2));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = xlat_mutableret1;\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/suksma - nip tuck.json":
/*!**************************************************!*\
  !*** ./presets/converted/suksma - nip tuck.json ***!
  \**************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":4,\"gammaadj\":1.63,\"decay\":0.96,\"echo_zoom\":0.997,\"echo_alpha\":0.5,\"echo_orient\":1,\"wave_mode\":2,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"darken\":1,\"wave_a\":0.001,\"wave_scale\":0.012,\"wave_smoothing\":0.9,\"warpanimspeed\":0.01,\"warpscale\":0.01,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.4,\"wave_b\":0.3,\"ob_r\":0.11,\"ob_g\":0.4,\"ob_b\":0.6,\"ob_a\":0.4,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_x\":3,\"mv_y\":2,\"mv_dx\":0.02,\"mv_dy\":-0.02,\"mv_l\":0.15,\"mv_r\":0.49,\"mv_g\":0.48,\"mv_b\":0.3,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":13,\"textured\":1,\"rad\":0.46753,\"tex_zoom\":1.17258,\"g\":1,\"b\":1,\"r2\":0.99,\"g2\":0.99,\"b2\":0.99,\"border_r\":0.82,\"border_g\":0.72,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm=q6;\\n\\nx=0.5 + sin(tm)*0.3;\\ny=0.5 + cos(tm*0.5)*0.4;\\n\\nang=sin(tm*0.36)*3\\n\"},{\"baseVals\":{\"enabled\":1,\"sides\":8,\"additive\":1,\"textured\":1,\"rad\":0.35738,\"tex_zoom\":0.55045,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm=q6;\\n\\nx=0.5 + sin(tm + 0.5)*0.3;\\ny=0.5 + cos(tm*0.5)*0.4;\\n\\nang=sin(tm*0.36)*3\"},{\"baseVals\":{\"enabled\":1,\"sides\":8,\"additive\":1,\"rad\":0.4629,\"g\":0.5,\"a\":0.04,\"r2\":1,\"g2\":0.3,\"border_r\":0,\"border_g\":0,\"border_b\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm=q6;\\n\\nx=0.5 + sin(tm + 1.4)*0.3;\\ny=0.5 + cos(tm*0.5 + 0.3)*0.4;\\n\\nang=sin(tm*0.36)*3\"},{\"baseVals\":{\"enabled\":1,\"sides\":29,\"textured\":1,\"rad\":0.46753,\"tex_zoom\":2.13022,\"g\":1,\"b\":1,\"r2\":0.99,\"g2\":0.99,\"b2\":0.99,\"a2\":0.65,\"border_r\":0.8,\"border_g\":0.5,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tm=q6;\\n\\nx=0.5 + sin(tm)*0.001;\\ny=0.5 + cos(tm*0.5)*0.001;\\n\\na=0.5 + min(q8,1)*0.5\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"r\":0.6,\"g\":0.3},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"n=sample*6.283 + q7*0.0015;\\ntm=time*0.1;\\n\\nphs=sin(n*50);\\n\\nxp=sin(n+phs);\\nyp=cos(n+phs);\\n\\nz=sin(n*3 + tm) * sin(n*7-tm);\\n\\nxp=xp*z;\\nyp=yp*z;\\n\\nx=xp*0.3 + 0.5;\\ny=yp*0.3*1.3 + 0.5;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0\",\"frame_eqs_eel\":\"decay=0.98;\\nzoom=1.003;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nq7=vol;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq8=vol;\\n\\nmtime=mtime+vol*0.02;\\nq6=mtime;\\n\\n\\nob_a = min(vol,1);\",\"pixel_eqs_eel\":\"zoom=1.001 + sin(ang*3 + time*0.5)*0.005\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, (uv - (\\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \\n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((mix (tmpvar_2, \\n    (1.0 - tmpvar_2.zyx)\\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\\n    (1.0 - rad)\\n  , 18.0)));\\n  ret = tmpvar_3.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 uvw_1;\\n  vec3 ret_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3.z = 0.3;\\n  tmpvar_3.xy = (uv * 3.3);\\n  uvw_1.xy = tmpvar_3.xy;\\n  uvw_1.z = (0.3 + (time * 0.3));\\n  ret_2 = (texture (sampler_main, (uv + (\\n    (((texture (sampler_noisevol_hq, uvw_1).xy * 2.0) - 1.0) * texsize.zw)\\n   * 13.0))).xyz + ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.4));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = pow (ret_2, vec3(0.5, 0.8, 1.7));\\n  ret_2 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/suksma - pus on my cat - j4+ - cubby.json":
/*!*********************************************************************!*\
  !*** ./presets/converted/suksma - pus on my cat - j4+ - cubby.json ***!
  \*********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"echo_orient\":1,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":4.1,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"zoom\":0.99951,\"warp\":0.01,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0,\"ob_r\":0.01,\"ib_size\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"x\":0.83,\"rad\":0.54278,\"tex_ang\":1.5708,\"tex_zoom\":1.8566,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"x\":0.17,\"rad\":0.54278,\"tex_ang\":4.71239,\"tex_zoom\":1.8566,\"g\":1,\"b\":1,\"r2\":1,\"b2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"textured\":1,\"rad\":0.98609,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r=if(above(treb,.4),1,.8);\\ng=if(above(mid,.4),1,.8);\\nb=if(above(bass,.4),1,.8);\\nr2=r;\\ng2=g;\\nb2=b;\\nz=if(above(bass,1.2),z*.95,3.14);\\nz=if(above(mid,1.2),-z,z);\\ntex_ang=z;\\nzz=above(treb,1.3)+zz*.95;\\na=zz*.07+.2;\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\n//t1 = if(above(vg,1.8),1.8,vg);\\nt1=time*.3;\\nt5=time*.2;\\n//t2=sin(time)*1.5+2;\\n//t3=.25;\\n//t2=2;\\nt4=0;\\na=1;\\nt2=2.9;\",\"point_eqs_eel\":\"tm=if(above(yp,0.98),t1,tm);\\ntm2=if(above(yp,0.98),t5,tm2);\\nex=if(above(yp,0.98),t2,ex);\\n//ex=2;\\nsp=.01;\\nyp=if(above(xp,0.9998),yp+sp,yp);\\nxp=if(above(xp,0.9998),0,xp+sp);\\nyp=if(above(yp,0.9998),0,yp);\\nx=((xp*ex)*.1+.5)-(.05*ex)-t3;\\ny=((yp*ex)*.1+.5)-(.05*ex)-t4;\\n\\n//g=sin(xp*yp*1.506+tm);\\n//b=sin(xp*yp*3.142+tm);\\n//r=cos(xp*yp*1.506+tm);\\n\\ng=sin(xp*3.14+tm)*sin(yp*3.14+tm2);\\nb=sin(xp*3.14+tm2)*sin(yp*6.28+tm);\\nr=1-b;\\n\\n\\n\\n\\n\\n\\n\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\n//t1 = if(above(vg,1.8),1.8,vg);\\nt1=time*.3;\\n//t2=sin(time)*1.5+2;\\n//t3=.25;\\n//t2=sin(time*.071)*1.2+4.1;\\nt2=2;\\nt3=0;\\nt4=0;\",\"point_eqs_eel\":\"tm=if(above(yp,0.98),t1,tm);\\nex=if(above(yp,0.98),t2,ex);\\n//ex=2;\\nsp=.01;\\nyp=if(above(xp,0.9998),yp+sp,yp);\\nxp=if(above(xp,0.9998),0,xp+sp);\\nyp=if(above(yp,0.9998),0,yp);\\nx=((xp*ex)*.1+.5)-(.05*ex)-t3+.001;\\ny=((yp*ex)*.1+.5)-(.05*ex)-t4+.001;\\n\\n//g=sin(xp*yp*1.506+tm);\\n//b=sin(xp*yp*3.142+tm);\\n//r=cos(xp*yp*1.506+tm);\\n\\nr=sin(xp*3.14+tm)*sin(yp*3.14+tm);\\ng=sin(xp*6.28+tm)*sin(yp*6.28+tm);\\nb=.4;\\n\\n\\n\\n\\n\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\n//t1 = if(above(vg,1.8),1.8,vg);\\nt1=time*.3;\\n//t2=sin(time)*1.5+2;\\n//t3=.25;\\n//t2=sin(time*.071)*1.2+4.1;\\nt2=2;\\nt3=0;\\nt4=0;\",\"point_eqs_eel\":\"tm=if(above(yp,0.98),t1,tm);\\nex=if(above(yp,0.98),t2,ex);\\n//ex=2;\\nsp=.01;\\nyp=if(above(xp,0.9998),yp+sp,yp);\\nxp=if(above(xp,0.9998),0,xp+sp);\\nyp=if(above(yp,0.9998),0,yp);\\nx=((xp*ex)*.1+.5)-(.05*ex)-t3;\\ny=((yp*ex)*.1+.5)-(.05*ex)-t4;\\n\\n//g=sin(xp*yp*1.506+tm);\\n//b=sin(xp*yp*3.142+tm);\\n//r=cos(xp*yp*1.506+tm);\\n\\nr=sin(xp*3.14+tm)*sin(yp*3.14+tm);\\ng=sin(xp*6.28+tm)*sin(yp*6.28+tm);\\nb=.4;\\n\\n\\n\\n\\n\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);\",\"point_eqs_eel\":\"tm = q1;\\nsp = sample*6.28*8*6;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\nrad = .5 + vol;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = tm*.132;\\nsxang = 0;\\nyang = tm*.153;\\nayang = 0;\\nzang = tm*.110;\\nazang = 0;\\nfov = 0.6 + 0.2*sin(tm);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n\\nr = 1;\\ng = .25+.25*sin(sp);\\nb = 0;\\na = .5 + (oz+2)*.5;\\na = a*below(z,2);\\nminrgb = min(r,min(g,b));\\nmaxrgb = max(r,max(g,b));\\nl = (maxrgb-minrgb)*.5;\\ndiff = maxrgb-minrgb;\\nsum = maxrgb+minrgb;\\ns = if(above(l,0.5),diff/(2-sum),diff/sum)*(1-equal(l,0));\\nh = if(equal(r,maxrgb),(g-b)/diff,if(equal(g,maxrgb),2+(b-r)/diff,4+(r-g)/diff));\\nh = h*0.1666666;\\nh = if(below(h,0),0,if(above(h,1),1,h));\\n\\nh = h + time*0.05*1.324;\\nh = h - int(h);\\n\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\n\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));\"}],\"init_eqs_eel\":\"batr=bass_att+treb_att;\\nnatr=batr;\",\"frame_eqs_eel\":\"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*5;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\n\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nnatr=bass_att+thresh*treb_att;\\ncha=abs(batr-natr);\\nspik=above(abs(cha-addict),addict);\\naddict=(addict+cha)/2;\\n\\n//effects here\\nzoom=zoom+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;\\n\\n\\n//added the rotation effect with the same code just to offer some possibilities, activate it if you dare - goody\\n//rot=rot+if((above(bass*2,treb)-1),-1,1)*above(cha*thresh,2)*0.1;\\n\\n//zoomexp=2/zoom;\\nmv_r=log(thresh)*spik;\\nmv_b=abs(spik*cha-1);\\nmv_g=sin(time+thresh);\\nmv_a=spik*.75;\\n\\n//end.\\nbatr=natr;\\nmonitor=log(thresh);\\n\\n\\nwave_r = wave_r + 0.35*sin(3*time) + 0.15*sin(2.5*time);\\nwave_g = wave_g + 0.35*sin(2.7*time) + 0.15*sin(2.11*time);\\nwave_b = wave_b + 0.35*sin(2.84*time) + 0.15*sin(2.3*time);\\n\\nwave_mystery=wave_mystery*(addict);\\n\\n\\ncog = ocog+0.005*(bass+bass_att+(bass*bass_att)-2);\\nocog = below(cog,30000)*cog;\\n\\n\\nq1=batr;\\nq2=spik;\\n\\n\\n\\n\\n\\n\\n//Hai guiz, you found the secret message. What are you gonna do now?\",\"pixel_eqs_eel\":\"//Tiles- \\n//movement first:\\ndxm=.01*sin(time*.41);\\ndym=.01*sin(time*.36);\\n\\n//Now the tiles themselves:\\ndx=dxm+.01*sin(x*80+sin(time))+.005*sin(q1*(y*sin(time*.94)));\\ndy=dym+.01*sin(y*80+sin(time))+.005*sin(q1*(x*sin(time*.97)));\\n//end tiles\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  ) * 0.35));\\n  ret_1 = (ret_1 - 0.004);\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.18));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.5 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * (\\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n   - \\n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\\n  )), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.5 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret2_1, (ret2_1 * (\\n    ((tmpvar_6.xyz * scale3) + bias3)\\n   - \\n    ((tmpvar_7.xyz * scale1) + bias1)\\n  )), pow (hue_shader, tmpvar_9));\\n  ret2_1 = tmpvar_10;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = abs((tmpvar_9 - (2.0 * tmpvar_10)));\\n  ret_2 = (tmpvar_11 - (0.25 * sqrt(tmpvar_11)));\\n  ret_2 = (ret_2 * (ret_2 + (\\n    ((bass + mid) + treb)\\n   * 0.4)));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/suksma - water cooled red uranium vs dotes - freeenergynow.net.json":
/*!***********************************************************************************************!*\
  !*** ./presets/converted/suksma - water cooled red uranium vs dotes - freeenergynow.net.json ***!
  \***********************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"decay\":0.96,\"echo_zoom\":1.905,\"wave_brighten\":0,\"wrap\":0,\"darken_center\":1,\"wave_a\":0.009,\"wave_scale\":0.01,\"wave_smoothing\":0.63,\"wave_mystery\":-0.8,\"fshader\":10,\"sx\":0.9803,\"wave_r\":0,\"wave_g\":0,\"ib_size\":0,\"ib_r\":1,\"ib_g\":0,\"ib_b\":0,\"ib_a\":0.47,\"mv_x\":64,\"mv_y\":48,\"mv_dx\":-0.28,\"mv_l\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0.8},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":20,\"num_inst\":1024,\"rad\":0.01,\"r\":0,\"b\":1,\"g2\":0,\"a2\":0.1,\"border_a\":0.006},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"pigtemp=int(pow(4,bass+treb+mid));\\nnum_inst=if(above(pigtemp,1024),1024,pigtemp);\\n\\nt1 = time/5;\\nt2 = time/6;\\nrad = 0.005+bass/100;\\nt3 = bass_att/70;\\nb2 = treb*0.7-bass/2;\\nr = instance/num_inst;\\ng = abs(treb_att/5-bass);\\n//b = abs(treb_att/5-bass);\\nsize = 0.3+bass_att/300;\\n\\nnc = sqrt(num_inst);\\nxs=sin(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\\nys=cos(6.28*(instance%nc)/nc)*sin(3.14*int(instance/nc)/nc);\\nzs=cos(3.14*int(instance/nc)/nc);\\n\\n//modulate to allow rotation\\ny1 = ys*cos(t1)-zs*sin(t1);\\nz1 = ys*sin(t1)+zs*cos(t1);\\nx1 = z1*sin(t2)+xs*cos(t2);\\nz2 = z1*cos(t2)-xs*sin(t2);\\nx2 = x1*cos(t3)-y1*sin(t3);\\ny2 = y1*cos(t3)+x1*sin(t3);\\n\\n//translate shape\\nx3 = x2;\\ny3 = y2;\\nz3 = z2;\\n\\nx = 0.5 + size*(x3/(1+z3*size));\\ny = 0.5 + size*(y3/(1+z3*size));\\na=below(z3,0);\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"additive\":1,\"thickoutline\":1,\"num_inst\":33,\"r\":0,\"g\":0.5,\"g2\":0.5,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = int(rand(int(q30)))/5+instance-instance;\\ntrans2 = int(rand(int(q30)))/5+instance-instance;\\ntrans3 = int(rand(int(q30)))/5+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;\"},{\"baseVals\":{\"enabled\":1,\"sides\":32,\"thickoutline\":1,\"textured\":1,\"num_inst\":7,\"r\":0,\"b\":0.5,\"g2\":0,\"b2\":0.5,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"trans = int(rand(int(q30)))/5+instance-instance;\\ntrans2 = int(rand(int(q30)))/5+instance-instance;\\ntrans3 = int(rand(int(q30)))/5+instance-instance;\\na = trans;\\na2 = trans2;\\nborder_a = trans3;\\n\\nx = q1 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = q2 + int(rand(15))*0.01*mid_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + int(rand(int(q30)))/15+instance-instance;\\nr=int(rand(q3))*.1+instance-instance;\\ng=int(rand(q3))*.1+instance-instance;\\nb=int(rand(q3))*.1+instance-instance;\\nr2=int(rand(q3))*.1+instance-instance;\\ng2=int(rand(q3))*.1+instance-instance;\\nb2=int(rand(q3))*.1+instance-instance;\\nborder_r=int(rand(q3))*.1+instance-instance;\\nborder_g=int(rand(q3))*.1+instance-instance;\\nborder_b=int(rand(q3))*.1+instance-instance;\\n\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"//wave_mystery = 1;\\nbassrun=bass+bassrun;\\ntrebrun=treb+trebrun;\\nmidrun=mid+midrun;\\nvol=(bassrun+midrun+trebrun)*.03;\\nvol2=vol*.001;\\nwarp = 0;\\nzoom = 1.4 +0.15*cos(vol*0.42);\\nrot = 0.01*sin(1.34*vol);\\ndx = 0.005*sin(vol*0.646);\\ndy=0.005*sin(vol*0.314);\\ncx = 0.5 + 0.05*sin(0.497*vol);\\ncy = 0.5 +0.05*sin(0.413*vol);\\n\\npi23=4*asin(-1)*.33333333333333;\\nq6= (sin(vol-0*pi23)+1)*.5;\\nq7= (sin(vol-1*pi23)+1)*.5;\\nq8=(sin(vol-2*pi23)+1)*.5;\\nmv_r=q6;\\nmv_g=q7;\\nmv_b=q8;\\nq9=q6+1;\\nvol3=(bass+mid+treb)*.3;\\nq26=vol3;\\nq20=vol3;\\nq1=.5;//q6*.3;\\nq2=.5;//q7*.3;\\nq3=q8*.3;\\nq4=q8/q6*2;\\nq30=vol3*2.5;\\nq3=q30*1.33;\",\"pixel_eqs_eel\":\"\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 8.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 8.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 8.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.2) - 0.06));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/undulate harque - shit broo.json":
/*!************************************************************!*\
  !*** ./presets/converted/undulate harque - shit broo.json ***!
  \************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":5,\"gammaadj\":2.63,\"decay\":0.91,\"echo_zoom\":1.007,\"echo_orient\":3,\"wave_mode\":7,\"additivewave\":1,\"modwavealphabyvolume\":1,\"wave_brighten\":0,\"brighten\":1,\"invert\":1,\"wave_a\":0.001,\"wave_scale\":1.286,\"wave_smoothing\":0.63,\"modwavealphastart\":0.71,\"modwavealphaend\":1.3,\"warpscale\":1.331,\"fshader\":0.18,\"zoom\":0.99951,\"warp\":0.00909,\"wave_r\":0.65,\"wave_g\":0.65,\"wave_b\":0.65,\"ob_size\":0.5,\"ob_r\":0.01,\"ib_size\":0.26,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"textured\":1,\"rad\":5.3898,\"tex_ang\":1.19381,\"tex_zoom\":0.18923,\"g\":0.97,\"b\":1,\"a\":0.94,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"textured\":1,\"rad\":3.99882,\"tex_zoom\":0.25005,\"g\":1,\"b\":1,\"a\":0.6,\"r2\":1,\"b2\":1,\"a2\":0.6,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":18,\"textured\":1,\"num_inst\":10,\"x\":0.463,\"rad\":1.60089,\"tex_zoom\":0.67634,\"g\":1,\"b\":1,\"r2\":0.7,\"g2\":0.8,\"b2\":0.8,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":16,\"num_inst\":353,\"x\":0.503,\"rad\":0.0376,\"tex_zoom\":1.11234,\"g\":1,\"b\":1,\"g2\":0,\"border_a\":0.06},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"sample=instance/num_inst;\\nrad=.05+.04*sin(sample);\\n\\n/////  Knot\\n\\nq10=250*sample;\\nmy_x = -.22*cos(q10)-1.28*sin(q10)-.44*cos(3*q10)-.78*sin(3*q10);\\nmy_y= -.1*cos(2*q10)-.27*sin(2*q10)+.38*cos(4*q10)+.46*sin(4*q10);\\nmy_z=.7*cos(3*q10)-.4*sin(3*q10);\\n\\n\\n/////// rotations... by flexi\\n\\nd = .2; \\nzoom = 1;\\n\\nw3 = q1;\\nw2 = q2;\\nw1 = q3;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\np1 = .2*sin(sample*50);\\np2 = .2*sin(sample*80);\\n\\nx = .5+my_x*p1;\\ny = .5+my_y*p2;\\n\\nr = .4*sin(sample*80);\\nb = .8*sin(sample*66);\\ng = .6*sin(sample*120);\"}],\"waves\":[{\"baseVals\":{\"spectrum\":1,\"additive\":1,\"smoothing\":0,\"r\":0.4,\"g\":0.4,\"b\":0.4,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"spectrum\":1,\"smoothing\":0,\"r\":0,\"g\":0,\"b\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"thick\":1,\"r\":0,\"g\":0,\"b\":0,\"a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"x1 = 2;\\ny1= 2;\\nz1 = 2;\",\"frame_eqs_eel\":\"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1   = (vvb+vvm+vvt)*10;\\nq2   = (vvb+vvm+vvt)*10;\\nq3   = (vvb+vvm+vvt)*10;\\nq4   = (vvb+vvm+vvt)*10;\\nq5   = (vvb+vvm+vvt)*10;\\nq6   = (vvb+vvm+vvt)*10;\\nq7   = (vvb+vvm+vvt)*10;\\nq8   = (vvb+vvm+vvt)*10;\\nq9   = (vvb+vvm+vvt)*10;\\nq10  = (vvb+vvm+vvt)*10;\\nq11  = (vvb+vvm+vvt)*10;\\nq12  = (vvb+vvm+vvt)*10;\\nq13  = (vvb+vvm+vvt)*10;\\nq14  = (vvb+vvm+vvt)*10;\\nq15  = (vvb+vvm+vvt)*10;\\nq16  = (vvb+vvm+vvt)*10;\\nq17  = (vvb+vvm+vvt)*10;\\nq18  = (vvb+vvm+vvt)*10;\\nq19  = (vvb+vvm+vvt)*10;\\nq20  = (vvb+vvm+vvt)*10;\\nq21  = (vvb+vvm+vvt)*10;\\nq22  = (vvb+vvm+vvt)*10;\\nq23  = (vvb+vvm+vvt)*10;\\nq24  = (vvb+vvm+vvt)*10;\\nq25  = (vvb+vvm+vvt)*10;\\nq26  = (vvb+vvm+vvt)*10;\\nq27  = (vvb+vvm+vvt)*10;\\nq28  = (vvb+vvm+vvt)*10;\\nq29  = (vvb+vvm+vvt)*10;\\nq30  = (vvb+vvm+vvt)*10;\\nq31  = (vvb+vvm+vvt)*10;\\nq32  = (vvb+vvm+vvt)*10;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nwave_a = 0;\\nv = 0.5;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n\\nq3 = n*0.01; // passing the 3 room angles\\nq4 = n1*0.01;\\nq5 = n2*0.01;\\n\\n\\n// lorenz-attractor calc\\na = 10;\\nb = 28;\\nc = 8/3;\\ndx1 = a*(y1-x1);\\ndy1 = x1*(b-z1)-y1;\\ndz1 = x1*y1-c*z1;\\nd = 1;\\ndd = sqrt(dx1*dx1 + dy1*dy1 + dz1*dz1);\\nx1 = x1 + d*dx1/dd;\\ny1 = y1 + d*dy1/dd;\\nz1 = z1 + d*dz1/dd;\\n\\nq11 = x1;\\nq12 = y1;\\nq13 = z1;\\nq14 = a;\\nq15 = b;\\nq16 = c;\\nq17 = d;\",\"pixel_eqs_eel\":\"cx1 = 0.5+sin(time*0.618)*0.2;\\ncy1 = 0.5+cos(time*1.618)*0.2;\\n\\ndir = bass;\\n\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\n\\nx1 = if( above(d,0.3),0,  sin(y-cy1)*0.05*dir);\\ny1 = if( above(d,0.3),0, -sin(x-cx1)*0.05*dir);\\n\\n\\ncx1 = 0.5+sin(time*2.618)*0.3;\\ncy1 = 0.5+cos(time*3.14)*0.3;\\n\\ndir = -mid*2;\\n\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\n\\nx2 = if( above(d,0.2),0,  sin(y-cy1)*0.05*dir);\\ny2 = if( above(d,0.2),0, -sin(x-cx1)*0.05*dir);\\n\\ncx1 = 0.5+sin(-time*2.618)*0.4;\\ncy1 = 0.5+cos(-time*1.14)*0.4;\\n\\ndir = treb*3;\\n\\nd = sqrt((x-cx1)*(x-cx1)+(y-cy1)*(y-cy1));\\n\\nx3 = if( above(d,0.1),0,  sin(y-cy1)*0.05*dir);\\ny3 = if( above(d,0.1),0, -sin(x-cx1)*0.05*dir);\\n\\n\\ndx = dx+x1+x2+x3;\\ndy = dy+y1+y2+y3;\",\"warp\":\" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(((dot (texture (sampler_main, \\n      mix (uv_orig, uv, vec2(4.0, 4.0))\\n    ).xyz, vec3(0.32, 0.49, 0.29)) - dot (\\n      ((texture (sampler_blur2, mix (uv_orig, uv, vec2(-12.0, -12.0))).xyz * scale2) + bias2)\\n    , vec3(0.32, 0.49, 0.29))) * 12.0)))\\n   + \\n    (((texture (sampler_noise_lq, tmpvar_1) - 0.5).xy * texsize.zw) * 0.5)\\n  )).xyz + (\\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\\n   * 0.006).xyz) + -0.0006);\\n  ret = tmpvar_2.xyz;\\n }\",\"comp\":\"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec3 ret_4;\\n  uv_1 = (uv - 0.5);\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 4.0);\\n  dist_3 = (1.0 - fract(tmpvar_5));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  float tmpvar_7;\\n  tmpvar_7 = (time / 8.0);\\n  tmpvar_6.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_6);\\n  vec2 tmpvar_8;\\n  tmpvar_8.y = 0.0;\\n  tmpvar_8.x = texsize.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = texsize.z;\\n  xlat_mutabledz.x = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_8)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_9)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = 0.0;\\n  tmpvar_10.y = texsize.w;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.0;\\n  tmpvar_11.y = texsize.w;\\n  xlat_mutabledz.y = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_10)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_11)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.2 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.y = 0.0;\\n  tmpvar_12.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_12);\\n  vec2 tmpvar_13;\\n  tmpvar_13.y = 0.0;\\n  tmpvar_13.x = texsize.z;\\n  vec2 tmpvar_14;\\n  tmpvar_14.y = 0.0;\\n  tmpvar_14.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_13)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_14)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = texsize.w;\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = 0.0;\\n  tmpvar_16.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_15)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_16)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.4 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_17;\\n  tmpvar_17.y = 0.0;\\n  tmpvar_17.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_17);\\n  vec2 tmpvar_18;\\n  tmpvar_18.y = 0.0;\\n  tmpvar_18.x = texsize.z;\\n  vec2 tmpvar_19;\\n  tmpvar_19.y = 0.0;\\n  tmpvar_19.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_18)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_19)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = 0.0;\\n  tmpvar_20.y = texsize.w;\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = 0.0;\\n  tmpvar_21.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_20)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_21)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.6 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_22;\\n  tmpvar_22.y = 0.0;\\n  tmpvar_22.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_22);\\n  vec2 tmpvar_23;\\n  tmpvar_23.y = 0.0;\\n  tmpvar_23.x = texsize.z;\\n  vec2 tmpvar_24;\\n  tmpvar_24.y = 0.0;\\n  tmpvar_24.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_23)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_24)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = 0.0;\\n  tmpvar_25.y = texsize.w;\\n  vec2 tmpvar_26;\\n  tmpvar_26.x = 0.0;\\n  tmpvar_26.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_25)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_26)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  uv_1 = (uv_1 + (xlat_mutabledz * 14.0));\\n  xlat_mutableuv4 = (uv_1 - vec2(0.2, -0.1));\\n  float tmpvar_27;\\n  tmpvar_27 = (0.5 * clamp ((1.0/(\\n    (abs(uv_1.y) + 0.1)\\n  )), 0.0, 12.0));\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = (uv_1.x * tmpvar_27);\\n  tmpvar_28.y = tmpvar_27;\\n  vec3 tmpvar_29;\\n  tmpvar_29.xy = vec2(0.0, 0.0);\\n  tmpvar_29.z = clamp ((1.0 - (3.0 * uv_1.y)), 0.0, 1.0);\\n  ret_4 = (vec3(0.0, 0.1, 0.1) + (0.1 * tmpvar_29));\\n  ret_4 = (ret_4 + (vec3(dot (texture (sampler_noise_hq, \\n    (tmpvar_28 + (0.04 * time))\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) * (\\n    (clamp ((1.0 - (12.0 * uv_1.y)), 0.0, 1.0) * 0.1)\\n   / \\n    (0.03 + sqrt(dot (xlat_mutableuv4, xlat_mutableuv4)))\\n  )));\\n  ret_4 = (ret_4 + ((0.4 * xlat_mutableret1) + (xlat_mutableret1 * q22)));\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = ret_4;\\n  ret = tmpvar_30.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/va ultramix - 154 [chaos].json":
/*!**********************************************************!*\
  !*** ./presets/converted/va ultramix - 154 [chaos].json ***!
  \**********************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":2,\"baseVals\":{\"rating\":2,\"gammaadj\":1,\"decay\":1,\"echo_zoom\":1,\"wave_mode\":7,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":0.01,\"wave_smoothing\":0.9,\"wave_mystery\":1,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpanimspeed\":0.01,\"warpscale\":1.766,\"zoomexp\":1.00016,\"dx\":0.00001,\"dy\":0.00001,\"warp\":0.01,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"wave_y\":0.6,\"ob_size\":0,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":0.1,\"mv_x\":64,\"mv_y\":48,\"mv_l\":1.5,\"mv_r\":0,\"mv_g\":0,\"mv_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":1.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":1.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"textured\":1,\"y\":1.8},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);\\nwave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);\\nwave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);\\nwarp = 0;\\n\\nob_r = wave_g;\\nob_b = wave_r;\\nob_g = wave_b;\\nib_r = wave_r;\\nib_b = wave_g;\\nib_g = wave_r;\",\"pixel_eqs_eel\":\"sx=1- .01;\\nrot=.02;\\nkdx=dx;\\nkdy=dy;\\nksx=sx;\\nksy=sy;\\nkrt=rot;\\nkzm=zoom;\\nkcx=cx;\\nkcy=cy;\\nkwp=warp;\\n\\ndx=0;\\ndy=0;\\nsx=1;\\nsy=1;\\nrot=0;\\nzoom=1;\\ncx=.5;\\ncy=.5;\\nwarp=0;\\n\\ndx = 0.01*sin(100*y+q8/y);\\ndy = 0.01*sin(100*x+q8/x);\\ncr1=0*.01;\\ncr2=99*.01;;\\ncrx=cr2-cr1;\\nci=rad;\\nci=x*4-1+sin(time/3)*6  ;\\ncrs=2;\\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\\nkx1=crr;\\njx1=1-crr;\\n\\njdx=dx;\\njdy=dy;\\njsx=sx;\\njsy=sy;\\njrt=rot;\\njzm=zoom;\\njcx=cx;\\njcy=cy;\\njwp=warp;\\n\\ndx=(jx1*jdx+kx1*kdx);\\ndy=(jx1*jdy+kx1*kdy);\\nsx=(jx1*jsx+kx1*ksx);\\nsy=(jx1*jsy+kx1*ksy);\\nrot=(jx1*jrt+kx1*krt);\\nzoom=(jx1*jzm+kx1*kzm);\\ncx=(jx1*jcx+kx1*kcx);\\ncy=(jx1*jcy+kx1*kcy);\\nwarp=(jx1*jwp+kx1*kwp);\\n\\ngkdx=dx;//////////////////////////////////////////\\ngkdy=dy;\\ngksx=sx;\\ngksy=sy;\\ngkrt=rot;\\ngkzm=zoom;\\ngkcx=cx;\\ngkcy=cy;\\ngkwp=warp;\\n\\ndx=0;\\ndy=0;\\nsx=1;\\nsy=1;\\nrot=0;\\nzoom=1;\\ncx=.5;\\ncy=.5;\\nwarp=0;/////////////////////////////////////////////////////\\n\\nw=sin(ang*22+sin(time/8) )/2+.5;\\ncc=w*w*w*w*w*w*w*w*w*w*w*w;\\nzoom=cc/22+1;\\n///////////////////////////////////////\\ncr1=(int(sin(time*2)/2+.5+.2));\\ncr2=cr1;\\ncrx=cr2-cr1;\\nci=rad;\\ncb=.25  ;\\ncrs=2;\\ncr=pow(sin(ci*6.3-(cb*6.3))/2+.5,crs)*crx+cr1;\\ncqr=if( above (ci,.25+cb),cr,crx+cr1);crr=if( below(ci,1.5),cqr,crx+cr1);\\njx1=crr;\\nkx1=1-crr;\\n\\ngjdx=dx;\\ngjdy=dy;\\ngjsx=sx;\\ngjsy=sy;\\ngjrt=rot;\\ngjzm=zoom;\\ngjcx=cx;\\ngjcy=cy;\\ngjwp=warp;\\n\\ndx=(jx1*gjdx+kx1*gkdx);\\ndy=(jx1*gjdy+kx1*gkdy);\\nsx=(jx1*gjsx+kx1*gksx);\\nsy=(jx1*gjsy+kx1*gksy);\\nrot=(jx1*gjrt+kx1*gkrt);\\nzoom=(jx1*gjzm+kx1*gkzm);\\ncx=(jx1*gjcx+kx1*gkcx);\\ncy=(jx1*gjcy+kx1*gkcy);\\nwarp=(jx1*gjwp+kx1*gkwp);////////////////////////////////////////////////////\",\"warp\":\" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 12.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur3, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale3) + bias3)).y;\\n  tmpvar_3.y = (((texture (sampler_blur3, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale3) + bias3)).y;\\n  ret_1.y = texture (sampler_fw_main, fract((uv + (\\n    (tmpvar_3 * texsize.zw)\\n   * 48.0)))).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur3, (uv - \\n      floor(uv)\\n    )).xyz * scale3) + bias3))\\n  .y * 0.01) - 0.004));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\\n  ).y - 0.5) * 0.06));\\n  ret_1.x = texture (sampler_main, uv).x;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }\",\"comp\":\" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).yyy;\\n  ret = tmpvar_1.xyz;\\n }\"}");

/***/ }),

/***/ "./presets/converted/yin - 190 - Temporal fluctuations.json":
/*!******************************************************************!*\
  !*** ./presets/converted/yin - 190 - Temporal fluctuations.json ***!
  \******************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":4.990001,\"decay\":1,\"echo_zoom\":0.999988,\"wave_mode\":7,\"additivewave\":1,\"wave_dots\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.997938,\"wave_scale\":1.990516,\"wave_smoothing\":0,\"wave_mystery\":1,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpscale\":0.999998,\"zoomexp\":0.999987,\"fshader\":1,\"zoom\":0.9999,\"dy\":0.00001,\"warp\":0.01,\"wave_r\":0.400001,\"wave_g\":0.4,\"wave_y\":1,\"ob_size\":0,\"ob_r\":0.300001,\"ob_g\":1,\"ob_b\":0.3,\"ob_a\":0.100001,\"ib_size\":0.005,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"ib_a\":0.5,\"mv_x\":8.960042,\"mv_y\":12.960033,\"mv_dx\":-0.26,\"mv_dy\":0.44,\"mv_l\":5,\"mv_a\":0},\"shapes\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"}],\"waves\":[{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"},{\"baseVals\":{},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"warp=0;decay=1;wave_mystery=0;\\nvol = ((bass_att+mid_att+treb_att)/3+prevVol)/2;\\n\\n// -------------------------------- Beat Detective 007 ----------------------------------\\nsure=if(equal(sure,0),.6,sure);\\ninterval=if(equal(interval,0),40,interval);\\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\\ndbass=(bass-pbass)/FPS;\\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\\nsure=max(.5,sure);\\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\\nbeat=if(cheat,1,beat);\\nsure=if(cheat,.95*sure,sure);\\nmaxdbass=max(maxdbass*.999,dbass);\\nmaxdbass=max(.012,maxdbass);\\nmaxdbass=min(.02,maxdbass);\\ninterval=if(beat, frame-lastbeat,interval);\\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\\ncheat=0;\\npbass=bass;\\n// ----------------------------------------------------------------------------------------------\\nob_size = below(frame-lastBeat,FPS/8)*.08*(frame-lastBeat)/FPS;\\nf=abs(cos(time/8+.54+sin(time/3+1.075)));\\nob_r=1*f + 1*(1-f);\\nob_g=.3*f + 1*(1-f);\\nob_b=.3*f + .3*(1-f);\\n\\nq1= 3.1416*(wave_mystery+1)/2;\\nq2=.25*cos(time+abs(2*sin(time*2+2.311)*( vol-amt))*sin(time*7.45+.876));\\namt=amt+ .05*(vol-amt);\\nprevVol=vol;\",\"pixel_eqs_eel\":\"x=x-.5;\\ny=-(y-.5);\\nttan1 = tan(q1+1.5708)*x-y+q2;\\nttan2 = tan(q1+1.5708);\\nIsLeftYtonosY = above(ttan1*(sign(3.1416-q1)),0);\\n\\ndist = abs(ttan1)/sqrt(ttan2*ttan2 + 1);\\ntotX=.5*cos(q1)*sign(IsLeftYtonosY-.5)*sqr(dist)/(.5-q2);\\ntotY=-.5*sin(q1)*sign(IsLeftYtonosY-.5)*sqr(dist)/(.5-q2);\\n\\ndx=dx+totX;\\ndy=dy+totY;\\nprevRot=q1;\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/yin - 250 - Artificial poles of the continuum_Phat′s_Orbit_mix.json":
/*!***********************************************************************************************!*\
  !*** ./presets/converted/yin - 250 - Artificial poles of the continuum_Phat′s_Orbit_mix.json ***!
  \***********************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"gammaadj\":1.28,\"decay\":0.8,\"echo_zoom\":1,\"echo_orient\":3,\"wave_brighten\":0,\"brighten\":1,\"wave_a\":0.001,\"wave_scale\":1.001775,\"wave_smoothing\":0.9,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpanimspeed\":1.321288,\"warpscale\":1.986883,\"zoomexp\":0.8802,\"zoom\":0.9998,\"warp\":0.01,\"sx\":0.9999,\"sy\":0.9998,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":0.5,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0.3,\"ib_b\":0,\"mv_x\":0,\"mv_y\":0.000001,\"mv_l\":1,\"mv_g\":0.91,\"mv_b\":0.71,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":60,\"additive\":1,\"thickoutline\":1,\"rad\":0.398722,\"g\":1,\"b\":0.7,\"r2\":1,\"g2\":0.8,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ax=0; ay=0; az=-30;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\na=below(vz,0);\"},{\"baseVals\":{\"enabled\":1,\"sides\":60,\"additive\":1,\"textured\":1,\"rad\":0.559237,\"ang\":1.884956,\"tex_ang\":0.69115,\"tex_zoom\":2.348658,\"g\":0.1,\"b\":1,\"a\":0.2,\"r2\":1,\"g2\":0.05,\"b2\":0.4,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":60,\"additive\":1,\"textured\":1,\"rad\":1.54304,\"ang\":6.283185,\"tex_ang\":6.283185,\"tex_zoom\":0.305462,\"r\":0,\"g\":0.5,\"b\":0.6,\"a\":0.4,\"g2\":0,\"a2\":0.8,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"tex_ang=bass;\"},{\"baseVals\":{\"sides\":6,\"additive\":1,\"rad\":0.1149,\"g\":1,\"b\":0.7,\"r2\":1,\"g2\":0.8,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q8=-q8+1;\\nt=(frame%6+4);\\nsides=if(equal(t%2,0),6,60);\\n\\nr=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\\ng=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\\nb=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\\n\\nr2=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\\ng2=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\\nb2=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\\n\\nr=r+equal(t%2,1);\\ng=g+equal(t%2,1);\\nb=b+equal(t%2,1)*.7;\\n\\nr2=r2+equal(t%2,1);\\ng2=g2+equal(t%2,1)*.8;\\n\\nrad=equal(t,4)*.1+equal(t,5)*.14+equal(t,6)*.14+equal(t,7)*.18 +equal(t,8)*.12+equal(t,9)*.2;\\n\\nan=atan2(q8-.5,q7-.5);\\nang=0+equal(t%2,0)*2*an;\\nang=if(equal(t,6),-ang,ang);\\n\\nd=sqrt(sqr(q7-.5)+sqr(q8-.5));\\na=above(1-d,0)*sqrt(1-d);\\n\\nx=t*(.5-q7)*.1617+q7;\\ny=t*(.5-q8)*.1617+q8;\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"additive\":1,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"advance=advance+ 0.005;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance\",\"point_eqs_eel\":\"s=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nr=1;\\ng=1;\\nb=1;\\n\"},{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ax = 10*.5*(sin(100*sample+1.865)+1)*sin(300*6.2831*sample+3.14*sample);\\nay = 10*.5*(sin(100*sample+5.23)+1)*cos(200*6.2831*sample+ 3.14*sample+.1454);\\naz = 5*(sin(100*sample+.234)+1)*sin(400*6.2831*sample+3.14*sample+1.84);\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\na=above(vz,0)*(.05*(5-abs(az)))\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"smoothing\":0,\"g\":0.500001,\"b\":0.100001},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"t=above(sin(20*6.2831*sample+time*16),0);\\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\\nay = 1.3*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\\naz = 0;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=above(cos(q3+1.57)*cos(q2)*vx+sin(q3+1.57)*sin(q1)*vy+sin(q2)*vz,0);\\na=t*(.07*(1-as)+as);\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"smoothing\":0,\"g\":0.5,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"t=above(sin(20*6.2831*sample+time*16),0);\\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\\nay = 0;\\naz = 1.2*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=above(cos(q3-1.57)*cos(q2)*vx+sin(q3-1.57)*sin(q1)*vy+sin(q2)*vz,0);\\na=t*(.07*(1-as)+as);\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"st=if(equal(st,0),time-131,st);\\nmytime=time-st;\\n\\nphi=6.2831*(mytime+4.564)*.02;\\ntheta=6.2831*(mytime*.03+1.54);\\nrho=6.2831*abs(sin(mytime*0));\\n\\nq1=phi;\\nq2=theta;\\nq3=rho;\\n\\nax=0; ay=0; az=-30;\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\nvx=bx; vy=by; vz=bz;\\n\\nq7=vx/abs(vz-10)+.5;\\nvy=-vy+1;\\nq8=vy/abs(vz-10)+.5;\\nq7=if(1-below(vz,0), -100,q7);\\nq8=if(1-below(vz,0), -100,q8);\\n//ob_size=1;\\n//ob_a=min(.005/(sqr(q7-.5)+sqr(q8-.5)),.8);\\nmonitor=mytime;\",\"pixel_eqs_eel\":\"\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/yin - 253 - Artificial poles of the continuum (remix \u0000#3).json":
/*!******************************************************************************************!*\
  !*** ./presets/converted/yin - 253 - Artificial poles of the continuum (remix  #3).json ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":0,\"gammaadj\":1.63,\"decay\":0.85,\"echo_zoom\":0.999999,\"echo_orient\":3,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":1.001775,\"wave_smoothing\":0.9,\"modwavealphastart\":0.5,\"modwavealphaend\":1,\"warpanimspeed\":1.321288,\"warpscale\":1.986883,\"zoomexp\":0.8802,\"fshader\":1,\"zoom\":0.9998,\"warp\":0.01,\"sx\":0.9999,\"sy\":0.9998,\"wave_r\":0.5,\"wave_g\":0.5,\"wave_b\":0.5,\"ob_size\":0,\"ob_r\":1,\"ob_g\":1,\"ob_b\":0.5,\"ob_a\":1,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0.3,\"ib_b\":0,\"mv_x\":4.586357,\"mv_y\":3.233833,\"mv_dx\":0.12204,\"mv_dy\":0.156041,\"mv_l\":0.211692,\"mv_r\":0.455835,\"mv_g\":0.481765,\"mv_b\":0.328534,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":60,\"additive\":1,\"thickoutline\":1,\"rad\":0.398722,\"g\":1,\"b\":0.7,\"r2\":1,\"g2\":0.8,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ax=0; ay=0; az=-30;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\n//a=below(vz,0);\\nx=.5;\\ny=.5;\\nrad=.1;\"},{\"baseVals\":{\"enabled\":1,\"sides\":60,\"additive\":1,\"textured\":1,\"rad\":0.298682,\"tex_ang\":0.69115,\"tex_zoom\":1.500923,\"r\":0.2,\"g\":0.1,\"b\":1,\"a\":0,\"r2\":0.04,\"g2\":0.05,\"b2\":0.4,\"a2\":1,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":60,\"additive\":1,\"textured\":1,\"rad\":1.54304,\"tex_ang\":1.5707,\"tex_zoom\":1.50099,\"r\":0,\"g\":0.5,\"b\":0.6,\"a\":0,\"g2\":0,\"a2\":0.7,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"r=abs(cos(time*3.243+.434+sin(time*1.23+4.324)));\\ng=abs(cos(time*2.03+1.546+cos(time*3.01+1.98)));\\nb=.75*abs(sin(time*2.54+.65+sin(time*3.77+8)));\"},{\"baseVals\":{\"enabled\":1,\"sides\":6,\"additive\":1,\"rad\":0.1149,\"g\":1,\"b\":0.7,\"r2\":1,\"g2\":0.8,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"q8=-q8+1;\\nt=(frame%6+4);\\nsides=if(equal(t%2,0),6,60);\\n\\nr=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\\ng=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\\nb=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\\n\\nr2=equal(t,4)*.3+equal(t,6)*.1+equal(t,8)*.3;\\ng2=equal(t,4)*.1+equal(t,6)*.5+equal(t,8)*.15;\\nb2=equal(t,4)*.6+equal(t,6)*.3+equal(t,8)*.0;\\n\\nr=r+equal(t%2,1);\\ng=g+equal(t%2,1);\\nb=b+equal(t%2,1)*.7;\\n\\nr2=r2+equal(t%2,1);\\ng2=g2+equal(t%2,1)*.8;\\n\\nrad=equal(t,4)*.1+equal(t,5)*.14+equal(t,6)*.14+equal(t,7)*.18 +equal(t,8)*.12+equal(t,9)*.2;\\n\\nan=atan2(q8-.5,q7-.5);\\nang=0+equal(t%2,0)*2*an;\\nang=if(equal(t,6),-ang,ang);\\n\\nd=sqrt(sqr(q7-.5)+sqr(q8-.5));\\na=above(1-d,0)*sqrt(1-d);\\n\\nx=t*(.5-q7)*.1617+q7;\\ny=t*(.5-q8)*.1617+q8;\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":0.999998,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"ax=cos(100*sample+43.35+sin(231.54*sample+.543));\\nay=sin(431*sample+2.34+cos(443.54*sample+4.23));\\naz=sin(546*sample+74.24+sin(524.54*sample+23.987))+2*(q4+.2*time-int(q4+.2*time));\\naz=if(above(az,1),az-2,az);\\n\\nfx = .5+.5*ax/(1-az);\\nfy = .5+.5*ay/(1-az);\\n\\nx=fx;\\ny=fy;\\n\\n\\nr=1-.5*rand(100)/100;\\ng=1-.5*rand(100)/100;\\nb=1-.5*rand(100)/100;\\n\\na=pow((az+1)/2,3);\"},{\"baseVals\":{\"spectrum\":1,\"usedots\":1,\"thick\":1,\"additive\":1,\"scaling\":0.999998,\"smoothing\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"sw1=below(sample,.5);\\nsample=2*(sw1*sample+(1-sw1)*(sample-.5));\\n\\nax = 1-3.58*sample*sw1;\\nay = 0;//2*sin(sample*6.2831);\\naz = 0;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=above(cos(q3+1.57)*cos(q2)*vx+sin(q3+1.57)*sin(q1)*vy+sin(q2)*vz,0);\\nas=1;\\na=1;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"smoothing\":0,\"g\":0.500001,\"b\":0.100001},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"t=above(sin(20*6.2831*sample+time*16),0);\\nt=1;\\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\\nay = 1.38*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\\naz = 0;\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=pow(sqrt(sqr(x-.5)+sqr(y-.5))*4,4);\\na=t*(.07*(1-as)+as);\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"smoothing\":0,\"g\":0.5,\"b\":0.1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"t=above(sin(20*6.2831*sample+time*16),0);\\nt=1;\\nax = (1.58+1.5*t*abs(value1))*cos(6.2831*sample);\\nay = 0;\\naz = 1.38*(1.58+1.5*t*abs(value2))*sin(6.2831*sample);\\n\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\n\\nvx=bx; vy=by; vz=bz;\\n\\nx=vx/abs(vz-10)+.5;\\ny=vy/abs(vz-10)+.5;\\n\\nas=pow(sqrt(sqr(x-.5)+sqr(y-.5))*4,4);\\na=t*(.07*(1-as)+as);\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"st=if(equal(st,0),time-131,st);\\nmytime=time-st;\\n\\nphi=6.2831*(mytime+4.564)*.02;\\ntheta=6.2831*(mytime*.03+1.54);\\nrho=6.2831*abs(sin(mytime*0));\\n\\nq1=phi;\\nq2=theta;\\nq3=rho;\\n\\nax=0; ay=0; az=-30;\\nbx = ax;\\nby = ay*cos(q1) - az*sin(q1);\\nbz = ay*sin(q1) + az*cos(q1);\\n\\nax = bx*cos(q2) - bz*sin(q2);\\nay = by;\\naz = bx*sin(q2) + bz*cos(q2);\\n\\nbx = ax*cos(q3) - ay*sin(q3);\\nby = ax*sin(q3) + ay*cos(q3);\\nbz = az;\\nvx=bx; vy=by; vz=bz;\\n\\nq7=vx/abs(vz-10)+.5;\\nvy=-vy+1;\\nq8=vy/abs(vz-10)+.5;\\nq7=if(1-below(vz,0), -100,q7);\\nq8=if(1-below(vz,0), -100,q8);\\nob_size=1;\\nob_a=min(.005/(sqr(q7-.5)+sqr(q8-.5)),.8);\\nmonitor=mytime;\\nzoom=1+.015*85/FPS;\",\"pixel_eqs_eel\":\"\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/yin - 315 - Ocean of Light (yo im peakin yo Eo.S.-Phat).json":
/*!****************************************************************************************!*\
  !*** ./presets/converted/yin - 315 - Ocean of Light (yo im peakin yo Eo.S.-Phat).json ***!
  \****************************************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":3,\"gammaadj\":1.84,\"decay\":0.95,\"echo_zoom\":0.999993,\"wave_thick\":1,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":0.01,\"wave_smoothing\":0.9,\"wave_mystery\":0.3,\"zoomexp\":4.90483,\"fshader\":1,\"zoom\":0.999999,\"warp\":0.01,\"ob_size\":0,\"ob_a\":0.92,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"sides\":30,\"additive\":1,\"rad\":0.042497,\"r\":0.8,\"g\":0.1,\"b\":0.8,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"sides\":30,\"rad\":0.12202,\"tex_zoom\":0.999998,\"g\":0.3,\"b\":0.1,\"a\":0,\"g2\":0,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\"},{\"baseVals\":{\"enabled\":1,\"sides\":30,\"additive\":1,\"textured\":1,\"rad\":0.244862,\"g2\":0,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"ang=.45*cos(.6*time+.34+sin(2.54*time+1.02));\\nadditive=below(frame%5,4);\\n\\n\\n\\n\\nr2=.3*abs(cos(time*.543+7.34+sin(time*.123+1.75)));\\ng2=.3*abs(sin(time*.543+7.34+sin(time*.123+1.75)));\\nb2=.3*abs(cos(time*.543+7.34+cos(time*.123+1.75)));\\n\\n\\nhue=.1*time; // change this\\nh=6*(hue-int(hue));\\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\\nr=sw1+sw2*(2-h)+sw5*(h-4)+sw6;\\ng=sw1*h+sw2+sw3+sw4*(4-h);\\nb=sw3*(h-2)+sw4+sw5+sw6*(6-h);\"},{\"baseVals\":{\"textured\":1,\"rad\":1.97879,\"ang\":3.1415,\"tex_ang\":4.209734,\"tex_zoom\":0.670417,\"r\":0,\"a\":0,\"r2\":1,\"b2\":1,\"a2\":1,\"border_a\":0,\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"additive=above(frame%10,0);\\nr2=1-.3*abs(cos(time*.543+7.34+sin(time*.123+1.75)));\\ng2=1-.3*abs(sin(time*.543+7.34+sin(time*.123+1.75)));\\nb2=1-.3*abs(sin(time*.543+7.34+cos(time*.123+1.75)));\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":0.999998,\"smoothing\":0,\"r\":0.4,\"g\":0.4,\"b\":0.65},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=32;  // double num of rays\\nt2=.02*q4;  // size;\\n\\n\\nt5=6.2831*(.08*time-int(.08*time)); //speed\\nt8=0;\\n\\n\\nt3=-1+q7*.3333+.1667;\\nt4=-1+q8*.3333+.1667;\\n\\nt6=pow( q1,3);  // interpolation parameter\",\"point_eqs_eel\":\"sample=.5*(0+sample);\\n\\nns=equal(t8%t1,0);\\n\\nccx = .85*sin(5.234+100*sample+t5)*cos(200*6.2831*sample+ 3.14*sample+2.45+t5);\\nccy = 1.5*sin(100*sample+0.456+t5)*sin(100*6.2831*sample+ 3.14*sample+1.12+t5);\\nccz = .85*sin(3.12+100*sample+t5)*cos(300*6.2831*sample +3.14*sample+.95+t5);\\n\\nrr=.075+.067*abs(sin(6.2831*ccy));\\nccx=ccx*(1-t6)+ (t3+rr*cos(sample*6.2831+6*time))*t6;\\nccz=ccz*(1-t6)+ (t4+rr*sin(sample*6.2831+6*time))*t6;\\n\\ncenx=(1-ns)*cenx+ns*(q4*ccx);\\nceny=(1-ns)*ceny+ns*(q2+q4*abs(ccy));\\ncenz=(1-ns)*cenz+ns*(q3+q4*ccz);\\ncentral=equal(t8%2,0);\\nangle=6.2831*(t8-1)/t1;\\n\\nax=cenx+(1-central)*q4*t2*cos(angle+.12*ceny);\\nay=ceny+(1-central)*q4*t2*sin(angle+.12*ceny);\\naz=cenz;\\na=central*above(t8,0)*.07*above(ceny,q2);\\n\\ninvz=1/(az+100);\\nx=.5+5*ax*invz;\\ny=.5+5*ay*invz;\\n\\nt8=(t8+1)%t1;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":0.999998,\"smoothing\":0,\"r\":0.4,\"g\":0.4,\"b\":0.65},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=32;  // double num of rays\\nt2=.02*q4;  // size;\\n\\n\\nt5=6.2831*(.08*time-int(.08*time)); //speed\\nt8=0;\\n\\n\\nt3=-1+q7*.3333+.1667;\\nt4=-1+q8*.3333+.1667;\\n\\nt6=pow( q1,3);  // interpolation parameter\",\"point_eqs_eel\":\"sample=.5*(0+sample);\\n\\nns=equal(t8%t1,0);\\n\\nccx = .85*sin(5.234+100*sample+t5)*cos(200*6.2831*sample+ 3.14*sample+2.45+t5);\\nccy = 1.5*sin(100*sample+0.456+t5)*sin(100*6.2831*sample+ 3.14*sample+1.12+t5);\\nccz = .85*sin(3.12+100*sample+t5)*cos(300*6.2831*sample +3.14*sample+.95+t5);\\n\\nrr=.075+.067*abs(sin(6.2831*ccy));\\nccx=ccx*(1-t6)+ (t3+rr*cos(sample*6.2831+6*time))*t6;\\nccz=ccz*(1-t6)+ (t4+rr*sin(sample*6.2831+6*time))*t6;\\n\\ncenx=(1-ns)*cenx+ns*(q4*ccx);\\nceny=(1-ns)*ceny+ns*(q2+q4*abs(ccy));\\ncenz=(1-ns)*cenz+ns*(q3+q4*ccz);\\ncentral=equal(t8%2,0);\\nangle=6.2831*(t8-1)/t1;\\n\\nax=cenx+(1-central)*q4*t2*cos(angle+.12*ceny);\\nay=ceny+(1-central)*q4*t2*sin(angle+.12*ceny);\\naz=cenz;\\na=central*above(t8,0)*.07*above(ceny,q2);\\n\\ninvz=1/(az+100);\\nx=.5+5*ax*invz;\\ny=.5+5*ay*invz;\\n\\nt8=(t8+1)%t1;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":0.999998,\"smoothing\":0,\"r\":0.4,\"g\":0.4,\"b\":0.65},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=32;  // double num of rays\\nt2=.02*q4;  // size;\\n\\n\\nt5=6.2831*(.08*time-int(.08*time)); //speed\\nt8=0;\\n\\n\\nt3=-1+q7*.3333+.1667;\\nt4=-1+q8*.3333+.1667;\\n\\nt6=pow( q1,3);  // interpolation parameter\",\"point_eqs_eel\":\"sample=.5*(1+sample);\\n\\nns=equal(t8%t1,0);\\n\\nccx = .85*sin(5.234+100*sample+t5)*cos(200*6.2831*sample+ 3.14*sample+2.45+t5);\\nccy = 1.5*sin(100*sample+0.456+t5)*sin(100*6.2831*sample+ 3.14*sample+1.12+t5);\\nccz = .85*sin(3.12+100*sample+t5)*cos(300*6.2831*sample +3.14*sample+.95+t5);\\n\\nrr=.075+.067*abs(sin(6.2831*ccy));\\nccx=ccx*(1-t6)+ (t3+rr*cos(sample*6.2831+6*time))*t6;\\nccz=ccz*(1-t6)+ (t4+rr*sin(sample*6.2831+6*time))*t6;\\n\\ncenx=(1-ns)*cenx+ns*(q4*ccx);\\nceny=(1-ns)*ceny+ns*(q2+q4*abs(ccy));\\ncenz=(1-ns)*cenz+ns*(q3+q4*ccz);\\ncentral=equal(t8%2,0);\\nangle=6.2831*(t8-1)/t1;\\n\\nax=cenx+(1-central)*q4*t2*cos(angle+.12*ceny);\\nay=ceny+(1-central)*q4*t2*sin(angle+.12*ceny);\\naz=cenz;\\na=central*above(t8,0)*.07*above(ceny,q2);\\n\\ninvz=1/(az+100);\\nx=.5+5*ax*invz;\\ny=.5+5*ay*invz;\\n\\nt8=(t8+1)%t1;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"scaling\":0.999998,\"smoothing\":0,\"r\":0.4,\"g\":0.4,\"b\":0.65},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=32;  // double num of rays\\nt2=.02*q4;  // size;\\n\\n\\nt5=6.2831*(.08*time-int(.08*time)); //speed\\nt8=0;\\n\\n\\nt3=-1+q7*.3333+.1667;\\nt4=-1+q8*.3333+.1667;\\n\\nt6=pow( q1,3);  // interpolation parameter\",\"point_eqs_eel\":\"sample=.5*(1+sample);\\n\\nns=equal(t8%t1,0);\\n\\nccx = .85*sin(5.234+100*sample+t5)*cos(200*6.2831*sample+ 3.14*sample+2.45+t5);\\nccy = 1.5*sin(100*sample+0.456+t5)*sin(100*6.2831*sample+ 3.14*sample+1.12+t5);\\nccz = .85*sin(3.12+100*sample+t5)*cos(300*6.2831*sample +3.14*sample+.95+t5);\\n\\nrr=.075+.067*abs(sin(6.2831*ccy));\\nccx=ccx*(1-t6)+ (t3+rr*cos(sample*6.2831+6*time))*t6;\\nccz=ccz*(1-t6)+ (t4+rr*sin(sample*6.2831+6*time))*t6;\\n\\ncenx=(1-ns)*cenx+ns*(q4*ccx);\\nceny=(1-ns)*ceny+ns*(q2+q4*abs(ccy));\\ncenz=(1-ns)*cenz+ns*(q3+q4*ccz);\\ncentral=equal(t8%2,0);\\nangle=6.2831*(t8-1)/t1;\\n\\nax=cenx+(1-central)*q4*t2*cos(angle+.12*ceny);\\nay=ceny+(1-central)*q4*t2*sin(angle+.12*ceny);\\naz=cenz;\\na=central*above(t8,0)*.07*above(ceny,q2);\\n\\ninvz=1/(az+100);\\nx=.5+5*ax*invz;\\ny=.5+5*ay*invz;\\n\\nt8=(t8+1)%t1;\"}],\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"// -------------------------------- Beat Detective v0.07 ----------------------------------\\nsure=if(equal(sure,0),.6,sure);\\ninterval=if(equal(interval,0),40,interval);\\nlastbeat=if(equal(lastbeat,0),frame-FPS,lastbeat);\\ndbass=(bass-pbass)/FPS;\\nbeat=above(dbass,.6*maxdbass)*above(frame-lastbeat,FPS/3);\\nsure=if(beat*below(abs(frame-(interval+lastbeat)),FPS/5),\\nmin(.095+sure,1),beat*(sure-.095)+(1-beat)*sure*.9996);\\nsure=max(.5,sure);\\ncheat=if(above(frame,lastbeat+interval+ int(FPS/10))*above(sure,.91),1,cheat);\\nbeat=if(cheat,1,beat);\\nsure=if(cheat,.95*sure,sure);\\nmaxdbass=max(maxdbass*.999,dbass);\\nmaxdbass=max(.012,maxdbass);\\nmaxdbass=min(.02,maxdbass);\\ninterval=if(beat, frame-lastbeat,interval);\\nlastbeat=if(beat,frame-cheat*int(FPS/10),lastbeat);\\ncheat=0;\\npbass=bass;\\n// ----------------------------------------------------------------------------------------------\\n\\nwarp=0;\\nzoom=1.04;\\n\\nrnd=equal(frame%400,0);\\noffy=(1-rnd)*offy+rnd*(-3+rand(600)/100);\\noffz=(1-rnd)*offz+rnd*(-80-0*rand(1000)/1000);\\nsc=(1-rnd)*sc+rnd*(1+rand(500)/100);\\noffx=0;\\noffy=-3.1;\\noffz=-300+160*pow(contVol,.25);\\nsc=4;\\n\\nq2=offy; // y-offset\\nq3=offz; // z-offset\\nq4=sc; // scale\\n\\nq5=3.1415*cos(.05*time+.84+sin(time*.1+6.43)); // rot-y;\\nq6=.2;//.6-.45*abs(sin(time*.15+2.43+cos(time*.09+1.87))); // rot-x;\\n\\nq5=0;q6=0;\\n\\n\\nstime=if(equal(stime,0),time,stime );\\nmytime=time-stime;\\nphase = .1*mytime - int(.1*mytime);\\ntilex=if(below(phase,.025),1 + rand(4),tilex );\\ntilez=if(below(phase,.025),1 + rand(4),tilez );\\nq7=tilex;\\n\\ncontVol=((bass+mid+att)*.3333)*.02+contVol*.98;\\ncontVol=min(1,contVol);\\nzoom=1.01+.05*contVol;\\n\\ndarken=above(frame%3,0);\\n\\nc1=above(contvol,.7)*min(contvol-.7,.3);\\ndx=c1*.05*(-10+rand(20));\\ndy=c1*.05*(-10+rand(20));\\n\\nsolarize=0;\\ndarken=frame%2;\\nbrighten=1-darken;\\n//invert=beat;\\n//gamma=gamma+.5*sqrt(1-(frame-lastbeat)/interval);\\nmonitor=gamma;\\n\\nq8=min((frame-lastbeat)/interval,1);\\nq1=.05*cos(1.943*time+2.43+sin(1.83*time+2.01) );\\n\\nsx=1-2*beat*above(contVol,.8);\\nsy=1-2*beat*above(contVol,.8);\\ninvert=beat*above(contVol,.8);\",\"pixel_eqs_eel\":\"//rot = q1*(2*rad-1);\",\"warp\":\"\",\"comp\":\"\"}");

/***/ }),

/***/ "./presets/converted/yin - 352 - Chromatron (warped).json":
/*!****************************************************************!*\
  !*** ./presets/converted/yin - 352 - Chromatron (warped).json ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = JSON.parse("{\"version\":1,\"baseVals\":{\"rating\":5,\"gammaadj\":1,\"decay\":0.898999,\"echo_zoom\":0.999993,\"wave_brighten\":0,\"wrap\":0,\"wave_a\":0.001,\"wave_scale\":0.370543,\"wave_smoothing\":0.9,\"wave_mystery\":-0.18,\"warpanimspeed\":0.842832,\"warpscale\":0.132664,\"zoomexp\":5.995782,\"zoom\":0.999999,\"warp\":0.01,\"wave_r\":0,\"wave_g\":0,\"wave_b\":0,\"ob_size\":0.005,\"ob_a\":0.92,\"ib_size\":0,\"ib_r\":0,\"ib_g\":0,\"ib_b\":0,\"mv_a\":0},\"shapes\":[{\"baseVals\":{\"enabled\":1,\"sides\":100,\"textured\":1,\"tex_ang\":3.141593,\"tex_zoom\":1.0081,\"r\":0,\"g2\":0,\"a2\":1,\"border_a\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"rad=q2*2.6667;\\n\\nr=1;g=r;b=r;r2=r;g2=g;b2=b;\\n\\nx=.5+(q1-q2)*cos(q8);\\ny=.5+1.333*(q1-q2)*sin(q8);\\n\\nang=.6*q8;\\n\\n\"},{\"baseVals\":{\"enabled\":1,\"sides\":100,\"additive\":1,\"rad\":0.496295,\"tex_ang\":1.570796,\"tex_zoom\":1.0081,\"g\":1,\"b\":1,\"r2\":0.3,\"g2\":0.3,\"b2\":0.6,\"border_a\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t=frame%4;\\n\\nx=below(t,2)*.1+above(t,1)*.9;\\ny=(t%2)*.1+(1-t%2)*.9;\\n\\na=pow(q6,20);\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t=fram\"},{\"baseVals\":{\"enabled\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t=fram\"}],\"waves\":[{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\\nt8=1; // scale\",\"point_eqs_eel\":\"x=q1*cos(6.2831*sample);\\ny=q1*sin(6.2831*sample);\\n\\nx=x*t8+.5;\\ny=y*t8*1.333+.5;\\n\\nhue=.1*q8+2*sample; // change this\\nh=6*(hue-int(hue));\\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\\nr=sw1+sw2*(2-h)+sw5*(h-4)+sw6;\\ng=sw1*h+sw2+sw3+sw4*(4-h);\\nb=sw3*(h-2)+sw4+sw5+sw6*(6-h);\\n\\nrr=.1;\\nd1=below(sample,.025)+above(sample,.975);\\nd1=d1+below(sample,.275)*above(sample,.225);\\nd1=d1+below(sample,.525)*above(sample,.475);\\nd1=d1+below(sample,.775)*above(sample,.725);\\nr=(1-d1)*r;\\ng=(1-d1)*g;\\nb=(1-d1)*b;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t1=(q1-q2)*cos(q8);\\nt2=(q1-q2)*sin(q8);\\n\\nt8=1; //  scale\\n\\nt7=min(.2+.8*abs(tan(q8/6.2831)),1);\\n\\n\",\"point_eqs_eel\":\"x=q2*cos(6.2831*sample);\\ny=q2*sin(6.2831*sample);\\n\\nx=x+t1;\\ny=y+t2;\\n\\nx=x*t8+.5;\\ny=y*t8*1.333+.5;\\n\\nn=2;\\n\\nhue=.1*q8+n*sample+0*cos(2*q8); // change this\\nh=6*(hue-int(hue));\\nsw1=below(h,1); sw2=(1-sw1)*below(h,2); sw3=(1-sw1)*(1-sw2)*below(h,3); sw4=(1-sw1)*(1-sw2)*(1-sw3)*below(h,4);\\nsw6=above(h,5); sw5=(1-sw1)*(1-sw2)*(1-sw3)*(1-sw4)*(1-sw6);\\nr=sw1+sw2*(2-h)+sw5*(h-4)+sw6;\\ng=sw1*h+sw2+sw3+sw4*(4-h);\\nb=sw3*(h-2)+sw4+sw5+sw6*(6-h);\\nr=t7*r;\\ng=t7*g;\\nb=t7*b;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"\",\"point_eqs_eel\":\"t1=below(sample,.5);\\na = below(sample,.47)+above(sample,.53);\\nsample=t1*2*sample+(1-t1)*2*(sample-.5);\\n\\nx=sample*.18;\\ny=.5+.2*(value1+value2);\\n\\nx=t1*(x+0)+(1-t1)*(x+.82);\\n\\nr=1;g=.2;b=0;\"},{\"baseVals\":{\"enabled\":1,\"thick\":1,\"additive\":1,\"smoothing\":0},\"init_eqs_eel\":\"\",\"frame_eqs_eel\":\"t5=-q8\",\"point_eqs_eel\":\"t1=below(sample,.5);\\na = below(sample,.47)+above(sample,.53);\\nsample=t1*2*sample+(1-t1)*2*(sample-.5);\\n\\nx=.5+.2*(value1+value2);\\ny=sample*.18;\\n\\ny=t1*(y-.11)+(1-t1)*(y+.93);\\n\\nr=1;g=.2;b=0;\"}],\"init_eqs_eel\":\"contbass=.7;\",\"frame_eqs_eel\":\"decay=.99; zoom=1; warp=0;\\n\\ncoef=1/FPS;\\ncontbass=(1-.1*coef)*contbass+.1*coef*bass;\\naddtime=above(contbass-pcontbass,0);\\naddtime=min(10*addtime*(contbass-pcontbass)*FPS,1);\\nmytime=mytime+(1/FPS)*(1+addtime);\\n\\nq1=.34641-.015;\\n\\n\\nq6=min(contbass/1.2,1);\\nq2=.278182*.5+.18*q6;\\n\\nq8=mytime;\\n\\npcontbass=contbass;\\nmonitor=contbass;\\n\\nzoom=1.002;\\n\\nmonitor=q6;\",\"pixel_eqs_eel\":\"t=(below(x,.2)+above(x,.8))*below( abs(y-.5),.1);\\nt=t+below( abs(x-.5),.1)*(above(y,.9)+below(y,.1));\\n\\nwarp=above(rad,.65)*below(rad,.75)*(1-t);\",\"warp\":\"\",\"comp\":\"\"}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./extra.js");
/******/ })()
;
});
//# sourceMappingURL=extra.js.map