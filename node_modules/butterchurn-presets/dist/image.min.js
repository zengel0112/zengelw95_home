!function(e,a){"object"==typeof exports&&"object"==typeof module?module.exports=a():"function"==typeof define&&define.amd?define("image",[],a):"object"==typeof exports?exports.image=a():e.image=a()}(self,(function(){return(()=>{"use strict";var e={5443:(e,a,n)=>{n.r(a),n.d(a,{default:()=>s});var t={};t["_Geiss - Brain Zoom 3 (Color Emboss Mix)"]=n(9088),t["_Geiss - Explosion Mod 2b"]=n(7828),t._Mig_009=n(4716),t._Mig_014_version2=n(2585),t._Mig_039=n(7472),t._Mig_056=n(4654),t["_Vovan + Geiss - Bass With Flover (Feedback Mix) 2"]=n(7185),t["$$$ Royal - Mashup (157)"]=n(2417),t["$$$ Royal - Mashup (160)"]=n(2147),t["$$$ Royal - Mashup (253)"]=n(9051),t["$$$ Royal - Mashup (337)"]=n(9252),t[11]=n(4792),t[158]=n(4789),t[444]=n(712),t["A Tribute to Martin - bombyx mori - Ft Flexi - AdamFX - StahlRegen - Krash - Rovastar -  Hd in Milk T"]=n(5830),t["adam eatit fx 2 martin - disco mix, lodus, geiss, ludicrous speed,flexi, aderrasi n hexcollie"]=n(6246),t["Adam Eatit Mashup FX 2 martin - disco mix + Lodus + Geiss + Ludicrous speed + Aderrasi 2_1"]=n(9935),t["Adam Eatit Mashup FX 2 martin - disco mix + Lodus + Geiss + Ludicrous speed + Baked Ft another AdamFX Mashup 7_1"]=n(6545),t["Adam Eatit Mashup FX 2 martin - disco mix + Lodus + Geiss + Ludicrous speed + Eos Ft Flexi n Hexocollie + Baked + Santa Fucking Claus"]=n(7077),t["AdamFx 2 Aderrasi - Airhandler (Last Breath - Calm)Ilusional Discontent2"]=n(1007),t["AdamFx 2 Geiss -Somewhat Distort Me 3_1"]=n(4477),t["AdamFx 2 Geiss, Zylot and Flexi - Reaction Diffusion 3 (Overload Mix 2) EATIT4 (BCCNJ4)"]=n(5713),t["AdamFX Enterz Tha Mash With Martin + stahlregen - AdamFX - In Tha Mash Effectz E"]=n(9313),t["Aderrasi - Agitator"]=n(6075),t["Aderrasi - Airhandler (Principle of Sharing)"]=n(2998),t["Aderrasi - Contortion (Escher′s Tunnel Mix)"]=n(2339),t["Aderrasi - Curse of the Mirror Emu"]=n(7059),t["Aderrasi - Graft (First Rate Heart)"]=n(4301),t["Aderrasi + Geiss - Airhandler (Square Mix)"]=n(7050),t["afro-legionican"]=n(1886),t["amandio c - salty bits - 5 nz+ jealiousea"]=n(7469),t["baked - River of Illusion Dillusion [Bubble]"]=n(4338),t["beta106at shape - mash0000 - hulk spirit cum"]=n(82),t["beta106i - Brilliance (Space-Time Breaking) - mash0000 - it′s 2009 and you haven′t replaced your analog tv with digital"]=n(998),t["beta106i - Inhuman Emotion (Regret) - mash0000 - genetic mutant incubators in the hands of toddlers"]=n(5573),t["beta106i - Potion of Ink"]=n(1846),t["cope - alternative energy (antimatter mod_1)4z"]=n(5218),t["cope - digital sea"]=n(7652),t["cope - soar (v2.0)"]=n(2834),t["cope + flexi - mother-of-whirl [no fnords were hurt]"]=n(2279),t["ech0 - liquid firesticks I"]=n(92),t["Eo.S. - spark C_Phat_Jester_Mix_v2"]=n(3128),t["Eo.S. + Geiss - glowsticks v2 02 (Relief Mix)"]=n(4997),t["Eo.S. + Phat - cubetrace - v2"]=n(9645),t["Eo.S. + Phat - Emergent factors"]=n(4167),t["Eo.S. + Phat cubetrace (cybercity madness remix) - mash0000 - evaporating crystal pharma"]=n(3507),t["ethical rotterdamasm"]=n(7958),t["fed - glowing 5 - fingers rmx nz+ round squarishness"]=n(1490),t["fed - slowfast 1.1"]=n(5737),t["fiShbRaiN - breakfast cruiser"]=n(9024),t["fiShbRaiN - the adventures of prismo jenkins"]=n(6753),t["fiShbRaiN - witchcraft (necromancer remix)_phat_edit_v3"]=n(4542),t["fiShbRaiN + flexi - witchcraft 2.0 - mash0000 - no one cares about mi, the note (major third)"]=n(3863),t["Flexi - blame hexcollie twice"]=n(3057),t["flexi - borderline imagery"]=n(4143),t["flexi - bouncing balls [illumination mix]"]=n(2030),t["flexi - bouncing balls [mindblob terraforming] flx roams domikleasing undergraeduhate"]=n(6998),t["flexi - color strike"]=n(1229),t["flexi - grind my glitch up [190]"]=n(8685),t["flexi - meta4free"]=n(9450),t["Flexi - mindblob 2.0"]=n(4629),t["Flexi - reality tunnel"]=n(331),t["flexi - splatter effects 17 the wave, a google love story written in decay roam3-2 "]=n(7425),t["Flexi - the distant point between derivative"]=n(933),t["Flexi - wild at range"]=n(3397),t["flexi + fishbrain - warpcraft [random mashup]"]=n(7296),t["flexi + fishbrain - witchcraft [complex terraforming]"]=n(9146),t["flexi + geiss - infused with the spiral (Heavy Oil Mix) nz+ rapery"]=n(9867),t["flexi + geiss - pogo-cubes on tokamak matter (bccn Jelly V4)"]=n(4559),t["flexi + geiss - pogo-cubes on tokamak matter [mind over matter remix]2"]=n(1705),t["Flexi + Geiss + Demon Lord - unholy tokamak clot-plot"]=n(8766),t["Flexi + Martin - dive"]=n(6643),t["Flexi + Martin - tunnel of supraschismatika"]=n(4495),t["flexi + nitorami - beat explorer (cn bc jelly 4)"]=n(7027),t["Flexi + Rovastar - Fractopia [lovecraft]"]=n(6110),t["flexi + stahlregen - jelly strike"]=n(699),t["flexi, geiss and rovastar - chaos layered sinewsed tokamak 2"]=n(7687),t["Flexi, Martin, Phat, Zylot + Eo.S - one way trip trap proof of concept [epileptic zoom tunnel edit]"]=n(4636),t["Flexi, Rovastar + Geiss - Fractopia vs bas relief"]=n(3286),t["Geiss - Feedback 2"]=n(9864),t["Geiss - Reaction Diffusion (Relief Mix)"]=n(5212),t["Geiss - Skin Dots 9"]=n(4571),t["Hexcollie - Cell division"]=n(6028),t["Hexcollie - Nautalisk - mash0000 - but officer, my fingerprint always changes"]=n(6743),t["Ishan - Anuera"]=n(1723),t["Krash - War Machine (Shifting Complexity Mix)"]=n(9309),t["Krash & Rovastar - A Million Miles from Earth (Ripple Mix)"]=n(8465),t["Krash + Illusion + Geiss - Spiral Movement (Reaction Diffusion mix)"]=n(7602),t["LuxXx - Fuck Your Code ii"]=n(7653),t["LuxXx - GrindFace  225 mg dose  "]=n(6913),t["LuxXx - iWhat Happened Right After I Ate That Toxic Waste beta ii"]=n(1392),t["LuxXx - Subtle HipHopFlake"]=n(6104),t["martin - amandio c - a different view of the green machine"]=n(5768),t["martin - attack of the beast"]=n(9006),t["martin - basal ganglion"]=n(9442),t["martin - carpet weaver"]=n(2714),t["Martin - cool morning"]=n(75),t["martin - crystal alley"]=n(4431),t["martin - dark galaxy"]=n(7122),t["martin - glass corridor nz2 incline"]=n(159),t["martin - shifter - armorial bearings of robotopia"]=n(3324),t["martin - skywards"]=n(3496),t["martin - soma in pink"]=n(5584),t["martin - sparky caleidoscope"]=n(3785),t["martin - starfield sectors"]=n(340),t["martin - sunset over the river"]=n(9069),t["martin - the forge of Isengard"]=n(1656),t["martin - unholy amulet 2"]=n(5677),t["martin - violet flash"]=n(2571),t["Martin N AdamFX Infusion = Phat+Yin+Eo.S_Mandala Chaser Ft AdamFX n Martin - The Beast Mandala Chaser FX H"]=n(6790),t["MilkDrop2077.R037"]=n(8074),t["never suggest things roam glance at sun for galactic upgrade"]=n(1148),t["NeW Adam Master Mashup FX 2 Geiss - Reaction Diffusion 34 + Swelling Spiral  + Liquid Fire  + Geiss an46"]=n(4999),t["NeW Adam Master Mashup FX 2 Geiss and Zylot - Reaction Diffusion 3 (Overload Mix 2) AMAZING MASUP Various + Hurricane Nightmare"]=n(4839),t["orb - acid cycle [flexi shader mix] - yaqui graph"]=n(1128),t["ORB - Blue Emotion"]=n(3261),t["ORB - Depth Charge 2"]=n(3237),t["ORB - Fire and Fumes 2"]=n(5072),t["ORB - Lazer Ride"]=n(9880),t["ORB - Planetary Alignment Acid Burn"]=n(4381),t["ORB - Sandblade"]=n(707),t["ORB - Solar Radiation"]=n(3571),t["Phat + Zylot + Eo.S. - work with lines"]=n(262),t["Phat_Zylot_Eo.S. spiral_Movements_Beatle"]=n(5254),t["repressed americans - massive cheese lard nz+ redkneck treads"]=n(4931),t["Rovastar - A Million Miles From Earth (Wormhole Mix)"]=n(7294),t["Rovastar - Harlequin′s Fractal Encounter - cancer of saints"]=n(9190),t["Rovastar - Torrid Tales"]=n(358),t["Rovastar + Fvese - Mosaic Waves"]=n(2458),t["Rovastar + Geiss - Hurricane Nightmare (Gold Chrome Mix)"]=n(2119),t["Rovastar + Geiss - Hyperspace - kaleidoscope"]=n(554),t["Rozzor & Shreyas - Deeper Aesthetics"]=n(4467),t["shifter - fuzzball 3d (glasses) false auralary2 undre thee bottom qoaguluste"]=n(9111),t["Stahlregen - Dots (Pixels - Blocky) (Jelly V2)"]=n(609),t["stahlregen - old school, baby (spiral ornament)"]=n(8954),t["Stahlregen & flexi + Geiss + Rovastar + Shifter - Fractal Feedback (for Hexcollie)"]=n(2726),t["stahlregen + geiss + shifter - babylon"]=n(1049),t["suksma - barium titanate"]=n(9119),t["suksma - coal drapes - mrt fsh gordo dog crap in my bed cuz i sleep wid my shoes on"]=n(8051),t["suksma - diploautomatic autoimmunity vs passivematic aggpressive - troll"]=n(7614),t["suksma - youtube PQsWLhvuKk8 - waving goodbye to earth"]=n(6323),t["Telek - City Helix Lattice"]=n(7001),t["Telek - Sine Wave"]=n(5899),t["Unchained - All You Can Eat"]=n(772),t["Unchained - Fuzzy Sciences"]=n(6278),t["various artists - 1200774354134 - mash0000 - what the writer′s guild is doing with the extra money"]=n(4745),t["Waltra - Heaven Liquid"]=n(6457),t["xtramartin (849)"]=n(8805),t["Zylot - Crossing Over (Paint Spatter mix)"]=n(794),t["Zylot - In death there is life (Geiss Layered Mix) (Jelly)"]=n(7598),t["Zylot - True Visionary"]=n(629);const s=t},2417:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"modwavealphabyvolume":1,"wave_a":0.207,"wave_scale":0.397,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpscale":2.853,"zoomexp":0.99983,"zoom":0.99752,"warp":0.01565,"ob_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);\\nq2 = oldq2 + 0.05*(pow(1+1.2*treb+0.4*treb_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n\\n//q2 = oldq2 +q1;\\noldq2 = q2 ;\\nmonitor = q2;","pixel_eqs_eel":"zoom = zoom + rad*0.1*q1;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec2 xlat_mutabled_uv;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1)).x;\\n  xlat_mutabled_uv = (uv + (tmpvar_2 * 0.03));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (((texture (sampler_blur2, xlat_mutabled_uv).xyz * scale2) + bias2), texture (sampler_main, xlat_mutabled_uv).xyz, vec3(0.4, 0.4, 0.4));\\n  ret_1 = (((tmpvar_3.y - \\n    (tmpvar_3.x * 0.5)\\n  ) * mix (vec3(1.5, 0.6, 0.0), vec3(1.0, 1.0, 1.0), tmpvar_3.xxx)) * 1.4);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix ((ret_1 * (vec3(1.0, 1.0, 1.0) - vec3(\\n    (((texture (sampler_blur1, (xlat_mutabled_uv - \\n      (texsize.zw * 32.0)\\n    )).xyz * scale1) + bias1).z * 0.6)\\n  ))), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_main, uv).z * 0.36)));\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},2147:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"modwavealphabyvolume":1,"wave_a":0.207,"wave_scale":0.397,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpscale":2.853,"zoomexp":0.99983,"zoom":0.99752,"warp":0.01565,"ob_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);\\nq2 = oldq2 + 0.05*(pow(1+1.2*treb+0.4*treb_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n\\n//q2 = oldq2 +q1;\\noldq2 = q2 ;\\nmonitor = q2;","pixel_eqs_eel":"zoom = zoom + rad*0.1*q1;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  float ang2_1;\\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\\n  ang2_1 = (cos((50.26548 * ang2_1)) * 0.023);\\n  ang2_1 = (ang2_1 * 6.283185);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = cos(ang2_1);\\n  tmpvar_2.y = sin(ang2_1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = texture (sampler_main, (0.5 + ((\\n    (0.375 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_2) * texsize.zw))).xyz;\\n  ret = tmpvar_3.xyz;\\n }"}')},9051:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":0.952,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"tex_zoom":1.00015,"border_a":0},"init_eqs_eel":"t1 = .7 + rand(101)*.01*.6;\\nt2 = .7 + rand(101)*.01*.6;","frame_eqs_eel":"x = .5 + q1*sin(q2*t1);\\ny = .5 + q1*cos(q3*t2);\\n\\nrad = q5;\\n\\nang = -time;\\nsides = q6;\\n\\nh = q4;\\nh = h - int(h);\\nl = .5;\\ns = 1;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));\\nr2=r;g2=g;b2=b;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"border_a":0},"init_eqs_eel":"t1 = .7 + rand(101)*.01*.6;\\nt2 = .7 + rand(101)*.01*.6;","frame_eqs_eel":"x = .5 + q1*sin(q2*t1);\\ny = .5 + q1*cos(q3*t2);\\n\\nrad = q5;\\n\\nang = -time;\\nsides = q6;\\n\\nh = q4 + .01;\\nh = h - int(h);\\nl = .5;\\ns = 1;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));\\nr2=r;g2=g;b2=b;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"border_a":0},"init_eqs_eel":"t1 = .7 + rand(101)*.01*.6;\\nt2 = .7 + rand(101)*.01*.6;","frame_eqs_eel":"x = .5 + q1*sin(q2*t1);\\ny = .5 + q1*cos(q3*t2);\\n\\nrad = q5;\\n\\nang = -time;\\nsides = q6;\\n\\nh = q4 + .02;\\nh = h - int(h);\\nl = .5;\\ns = 1;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));\\nr2=r;g2=g;b2=b;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"border_a":0},"init_eqs_eel":"t1 = .7 + rand(101)*.01*.6;\\nt2 = .7 + rand(101)*.01*.6;","frame_eqs_eel":"x = .5 + q1*sin(q2*t1);\\ny = .5 + q1*cos(q3*t2);\\n\\nrad = q5;\\n\\nang = -time;\\nsides = q6;\\n\\nh = q4 + .03;\\nh = h - int(h);\\nl = .5;\\ns = 1;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));\\nr2=r;g2=g;b2=b;"}],"waves":[{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"t1 = .7 + rand(100)*.01*.6;\\nt2 = .7 + rand(100)*.01*.6;\\nt3 = .7 + rand(100)*.01*.6;\\nt4 = .7 + rand(100)*.01*.6;\\nt5 = .7 + rand(100)*.01*.6;\\nt6 = .7 + rand(100)*.01*.6;\\nt7 = .7 + rand(100)*.01*.6;\\nt8 = .7 + rand(100)*.01*.6;","frame_eqs_eel":"","point_eqs_eel":"\\nit = (it+1)*above(sample,0);\\n\\nmod = equal(it,0)*t1 + equal(it,1)*t2 + equal(it,2)*t3 + equal(it,3)*t4 + equal(it,4)*t5 + equal(it,5)*t6 + equal(it,6)*t7;\\nmod = mod + equal(mod,0)*t8;\\n\\nx = .5 + q1*sin(q2*mod);\\ny = .5 + q1*cos(q3*mod);\\n\\nh = q4 + .1*sample;\\nh = h - int(h);\\nl = .25 + .5*rand(101)*.01;\\ns = rand(101)*.01;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"t1 = .7 + rand(100)*.01*.6;\\nt2 = .7 + rand(100)*.01*.6;\\nt3 = .7 + rand(100)*.01*.6;\\nt4 = .7 + rand(100)*.01*.6;\\nt5 = .7 + rand(100)*.01*.6;\\nt6 = .7 + rand(100)*.01*.6;\\nt7 = .7 + rand(100)*.01*.6;\\nt8 = .7 + rand(100)*.01*.6;","frame_eqs_eel":"","point_eqs_eel":"\\nit = (it+1)*above(sample,0);\\n\\nmod = equal(it,0)*t1 + equal(it,1)*t2 + equal(it,2)*t3 + equal(it,3)*t4 + equal(it,4)*t5 + equal(it,5)*t6 + equal(it,6)*t7;\\nmod = mod + equal(mod,0)*t8;\\n\\nx = .5 + q1*sin(q2*mod);\\ny = .5 + q1*cos(q3*mod);\\n\\nh = q4 + .1*sample;\\nh = h - int(h);\\nl = .25 + .5*rand(101)*.01;\\ns = rand(101)*.01;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"t1 = .7 + rand(100)*.01*.6;\\nt2 = .7 + rand(100)*.01*.6;\\nt3 = .7 + rand(100)*.01*.6;\\nt4 = .7 + rand(100)*.01*.6;\\nt5 = .7 + rand(100)*.01*.6;\\nt6 = .7 + rand(100)*.01*.6;\\nt7 = .7 + rand(100)*.01*.6;\\nt8 = .7 + rand(100)*.01*.6;","frame_eqs_eel":"","point_eqs_eel":"\\nit = (it+1)*above(sample,0);\\n\\nmod = equal(it,0)*t1 + equal(it,1)*t2 + equal(it,2)*t3 + equal(it,3)*t4 + equal(it,4)*t5 + equal(it,5)*t6 + equal(it,6)*t7;\\nmod = mod + equal(mod,0)*t8;\\n\\nx = .5 + q1*sin(q2*mod);\\ny = .5 + q1*cos(q3*mod);\\n\\nh = q4 + .1*sample;\\nh = h - int(h);\\nl = .25 + .5*rand(101)*.01;\\ns = rand(101)*.01;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"t1 = .7 + rand(100)*.01*.6;\\nt2 = .7 + rand(100)*.01*.6;\\nt3 = .7 + rand(100)*.01*.6;\\nt4 = .7 + rand(100)*.01*.6;\\nt5 = .7 + rand(100)*.01*.6;\\nt6 = .7 + rand(100)*.01*.6;\\nt7 = .7 + rand(100)*.01*.6;\\nt8 = .7 + rand(100)*.01*.6;","frame_eqs_eel":"","point_eqs_eel":"\\nit = (it+1)*above(sample,0);\\n\\nmod = equal(it,0)*t1 + equal(it,1)*t2 + equal(it,2)*t3 + equal(it,3)*t4 + equal(it,4)*t5 + equal(it,5)*t6 + equal(it,6)*t7;\\nmod = mod + equal(mod,0)*t8;\\n\\nx = .5 + q1*sin(q2*mod);\\ny = .5 + q1*cos(q3*mod);\\n\\nh = q4 + .1*sample;\\nh = h - int(h);\\nl = .25 + .5*rand(101)*.01;\\ns = rand(101)*.01;\\ntmpb = if(below(l,0.5),l*(1+s),(l+s)-(s*l));\\ntmpa = 2*l - tmpb;\\nhvr = h + .333333;\\nhvr = if(below(hvr,0),hvr+1,if(above(hvr,1),hvr-1,hvr));\\nhvg = h;\\nhvg = if(below(hvg,0),hvg+1,if(above(hvg,1),hvg-1,hvg));\\nhvb = h - .333333;\\nhvb = if(below(hvb,0),hvb+1,if(above(hvb,1),hvb-1,hvb));\\nr = if(below(6*hvr,1),tmpa+(tmpb-tmpa)*6*hvr, if(below(2*hvr,1),tmpb, if(below(hvr*3,2),tmpa+(tmpb-tmpa)*(.666666-hvr)*6,tmpa)));\\ng = if(below(6*hvg,1),tmpa+(tmpb-tmpa)*6*hvg, if(below(2*hvg,1),tmpb, if(below(hvg*3,2),tmpa+(tmpb-tmpa)*(.666666-hvg)*6,tmpa)));\\nb = if(below(6*hvb,1),tmpa+(tmpb-tmpa)*6*hvb, if(below(2*hvb,1),tmpb, if(below(hvb*3,2),tmpa+(tmpb-tmpa)*(.666666-hvb)*6,tmpa)));"}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\nq4=sin(atime*.03);\\nq5=cos(atime*.030383824);\\nq6=tan(atime*.029384834);\\n\\nq6=aspecty;        t1=t1+1;\\nq1=bnot(t1%400);   decay=(t1>1);\\n\\nt=t+.001/fps;  \\ns1=500*sin(t);     s2=20+10*sin(.5*t);   \\ni=0;\\n\\nloop(1024,\\n\\np1=.5*p1+s2*sin(s1*i);     p2= p1-p2;\\n\\nx1=x1+cos(p2-p1);          y1=y1+sin(p2-p1);\\n\\ngmegabuf(2*i)=x1;   gmegabuf(2*i+1)=y1;\\n\\ni=i+1;);\\n\\n\\nzoom=1-(1-pow(2,(bass+treb+mid)*.0031));","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 7.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - (\\n    (clamp (((vol / vol_att) - 1.1), 0.0, 1.0) * 0.5)\\n   + 0.004)));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_6;\\n  tmpvar_6 = (0.1 / (sqrt(\\n    dot (tmpvar_5, tmpvar_5)\\n  ) + 0.05));\\n  vec2 tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (ang / 3.14);\\n  tmpvar_7.x = tmpvar_8;\\n  tmpvar_7.y = (tmpvar_6 * 1.5);\\n  uv2_3.y = (tmpvar_7.y + (0.1 * time));\\n  uv2_3.x = (tmpvar_8 + (0.02 * time));\\n  uv3_2.y = (tmpvar_6 + q30);\\n  uv3_2.x = (tmpvar_8 + (time / 32.0));\\n  crisp_1 = ((texture (sampler_main, fract(uv2_3)).xyz + (2.0 * texture (sampler_main, \\n    fract(uv3_2)\\n  ).xyz)) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  ret_4 = ((crisp_1 + (\\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, fract(uv)).xyz));\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv3_2.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_4.x > (q26 * q13)) && (ret_4.x <= (q23 * q11)))) {\\n    ret_4.z = (ret_4.z - (tmpvar_10.x * 0.5));\\n  };\\n  if (((ret_4.y > (q25 * q11)) && (ret_4.y <= (q22 * q12)))) {\\n    ret_4.x = (ret_4.x - (tmpvar_10.y * 0.5));\\n  };\\n  if (((ret_4.z > (q24 * q12)) && (ret_4.z <= (q21 * q13)))) {\\n    ret_4.y = (ret_4.y - (tmpvar_10.z * 0.5));\\n  };\\n  ret_4 = (ret_4 * 0.8);\\n  ret_4 = (1.0 - ret_4);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_4;\\n  ret = tmpvar_11.xyz;\\n }"}')},9252:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"decay":0.99,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpanimspeed":100,"warpscale":4.142,"zoomexp":0.85437,"zoom":0.99951,"warp":0.01,"sx":1.01,"sy":1.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.40031,"r":0.5,"g":0.5,"r2":0.5,"g2":0,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)*.3;\\n\\nrad=rad*sounds*0.6;\\n\\nr=r+sin(bass)*g;\\ng=g+sin(mid)*g;\\n\\n\\nx=x+0.207*cos(time*bass*0.5)*2;\\ny=y+0.207*sin(time*bass*0.5)*2;\\n\\nr = bass_att;\\ng = mid;\\nb = treb;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.13465,"r2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ng2=g2+0.09*sin((treb+mid)*1.23);\\ng=g+0.09*cos((bass+mid)*1.37);\\n\\nsounds=(bass+mid+treb)/3;\\n\\nrad=rad*(treb+mid)/3;\\n\\nx=x+0.300*sin(time*bass);\\ny=y+0.317*cos(time*bass);\\n\\nr = treb;\\ng = mid;\\nb = bass_att;"},{"baseVals":{"sides":100,"rad":0.20047,"g":1,"b":1,"r2":0.5,"g2":0.5,"b2":1,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"sounds=(bass+treb+mid)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\natt=(bass_att+treb_att+mid_att)/3;\\nr2=r2+(0.25*sin(time*6.28))-bass;\\ng2=g2+(0.25*sin(time*6.28))-bass;\\n\\nrad=rad;\\nx=x+0.217*cos(time*2.3)+sounds*0.1;\\ny=y+0.217*sin((time*3.5)+(sounds*0.3));"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":256,"scaling":20.35074,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r=r+0.5*sin(treb*1.13);\\ng=g+0.5*sin(bass*1.33);\\nb=b+0.5*sin(mid*1.23);","point_eqs_eel":""},{"baseVals":{"sep":256,"usedots":1,"scaling":100,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=bass*.2;\\nwarp=warp+(above(bass,1)*bass*.2);\\n\\necho_alpha=(above(bass,1.25)*.9);\\n\\n//mv_a=(above(bass,1)*bass*.5);\\n\\n// Awesome beat code by martin!\\ndec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\n\\nFR = if(is_beat,if(above(FR,0),-1,1),FR);\\n\\nq2=q2+(above(bass,1.3)*sin(time)*.02);\\n\\nrot=(rot+q2)*FR;\\n\\nzoom=zoom+(above(bass,1.3)*bass*.03);\\n\\nsy=sy+(above(treb_att,1.2)*treb_att*.002*sin(time));\\nsx=sx+(above(treb_att,1.2)*treb_att*.002*sin(time));","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  float tmpvar_5;\\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * 2.0) + 1.7)\\n  )) - (2.0 * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  )) * (-0.08 + tmpvar_2)));\\n  ret = tmpvar_6.xyz;\\n }"}')},4792:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"y":0.9,"rad":0.15493,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.05 + rand(900)/1000;\\ny = 0.05 + rand(900)/1000;\\nang = rand(320)/100;\\n "},{"baseVals":{"sides":36,"additive":1,"rad":0.01,"r":0,"g":0.12,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"scaling":0.5033,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/2;\\n\\nrot1 = rot1 + q26;\\nq25 = .01*rot1;\\n\\nq27 = 8-index;\\nq28 = index3;\\n\\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\\nq29 = dx1;\\nmonitor = q29;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;","pixel_eqs_eel":"rot = 0;\\ndx = .02*q29;\\nzoom = 1;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((0.995 * texture (sampler_main, \\n    (uv + (((\\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \\n        (q2 + 1.0)\\n      ) * tmpvar_1.yx)))\\n     * texsize.zw) * 4.0) * (2.0 + q1)))\\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }"}')},4789:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1,"mv_r":0.39,"mv_g":0.44,"mv_b":0.9,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"additive":1,"textured":1,"rad":0.13478,"tex_zoom":1.62835,"r":0.3,"g":0.8,"b":1,"a":0.08,"g2":0.5,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":11,"additive":1,"textured":1,"rad":0.1016,"r":0.3,"g":0.6,"b":1,"a":0.38,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":10,"additive":1,"rad":0.94761,"r":0.5,"g":0.2,"b":0.8,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a=mid_att*mid_att*mid*0.002"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.01,"tex_zoom":0.04027,"g":0.2,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*0.1;\\na=mid*mid_att;\\na=min(a,1);\\na=1-a*0.4 * above(treb,0.9)"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.3,"g":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\\n\\nxp=sin(n+phase);\\nyp=cos(n+phase);\\nzp=0;\\n\\n//rotate on y during draw\\nang=n*2+phase;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\nr1=0.1;g1=0.3;b1=1;\\nr2=0.7;g2=0.1;b2=1.0;\\nfade=xq*0.5 + 0.5;\\nr=r1*fade + r2*(1-fade);\\ng=g1*fade + g2*(1-fade);\\nb=b1*fade + b2*(1-fade);\\n\\n//rotation;\\nang=time*0.1;\\nxp=xq*sin(ang) + zq*cos(ang);\\nyp=yq;\\nzp=xq*cos(ang) - zq*sin(ang);\\n\\nang=time*0.17;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n\\n//push into viewspace\\nzq=zq+3.1;\\n\\n\\n//project into screenspace\\nxs=xq/zq;\\nys=yq/zq;\\n\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\na=(1)*0.3 * (pow(sin(n*4+time)*0.5+0.5,2));\\n\\nspark=sin(phase*35);\\nr=if( above(spark,0.93) , 0.6 , r);\\ng=if( above(spark,0.93) , 0.8 , g);\\nb=if( above(spark,0.93) , 1.0 , b);\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\\n\\nxp=sin(n+phase);\\nyp=cos(n+phase);\\nzp=0;\\n\\n//rotate on y during draw\\nang=n*2+phase;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\nr1=0.1;g1=0.3;b1=1;\\nr2=1.0;g2=0.1;b2=0.5;\\nfade=xq*0.5 + 0.5;\\nr=r1*fade + r2*(1-fade);\\ng=g1*fade + g2*(1-fade);\\nb=b1*fade + b2*(1-fade);\\n\\n//rotation;\\nang=time*0.1;\\nxp=xq*sin(ang) + zq*cos(ang);\\nyp=yq;\\nzp=xq*cos(ang) - zq*sin(ang);\\n\\nang=time*0.17;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n\\n//push into viewspace\\nzq=zq+3.1;\\n\\n\\n//project into screenspace\\nxs=xq/zq;\\nys=yq/zq;\\n\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\\n\\na=sample*wave*0.4;\\n\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01+2.1;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\\n\\nxp=sin(n+phase);\\nyp=cos(n+phase);\\nzp=0;\\n\\n//rotate on y during draw\\nang=n*2+phase;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\nr1=0.1;g1=0.3;b1=1;\\nr2=1.0;g2=0.1;b2=0.5;\\nfade=xq*0.5 + 0.5;\\nr=r1*fade + r2*(1-fade);\\ng=g1*fade + g2*(1-fade);\\nb=b1*fade + b2*(1-fade);\\n\\n//rotation;\\nang=time*0.1;\\nxp=xq*sin(ang) + zq*cos(ang);\\nyp=yq;\\nzp=xq*cos(ang) - zq*sin(ang);\\n\\nang=time*0.17;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n\\n//push into viewspace\\nzq=zq+3.1;\\n\\n\\n//project into screenspace\\nxs=xq/zq;\\nys=yq/zq;\\n\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\\n\\na=sample*wave*0.4;\\n\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*0.03+time*0.01+4.2;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nphase=sin(n*3)*sin(n*7.9)*sin(n*16.7)*sin(n*63.5)*6;\\n\\nxp=sin(n+phase);\\nyp=cos(n+phase);\\nzp=0;\\n\\n//rotate on y during draw\\nang=n*2+phase;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\nr1=0.1;g1=0.3;b1=1;\\nr2=1.0;g2=0.1;b2=0.5;\\nfade=xq*0.5 + 0.5;\\nr=r1*fade + r2*(1-fade);\\ng=g1*fade + g2*(1-fade);\\nb=b1*fade + b2*(1-fade);\\n\\n//rotation;\\nang=time*0.1;\\nxp=xq*sin(ang) + zq*cos(ang);\\nyp=yq;\\nzp=xq*cos(ang) - zq*sin(ang);\\n\\nang=time*0.17;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n\\n//push into viewspace\\nzq=zq+3.1;\\n\\n\\n//project into screenspace\\nxs=xq/zq;\\nys=yq/zq;\\n\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\nwave=sin(n*8000)*sin(n*690)*sin(n*17000)*0.5+0.5;\\n\\na=sample*wave*0.4;\\n\\n"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/2;\\n\\nrot1 = rot1 + q26;\\nq25 = .01*rot1;\\n\\nq27 = 8-index;\\nq28 = index3;\\n\\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\\nq29 = dx1;\\nmonitor = q29;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;","pixel_eqs_eel":"rot = 0;\\ndx = .02*q29;\\nzoom = 1;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((0.985 * texture (sampler_main, \\n    (uv + (((\\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \\n        (q2 + 1.0)\\n      ) * tmpvar_1.yx)))\\n     * texsize.zw) * 4.0) * (2.0 + q1)))\\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.15 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.2));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  float tmpvar_8;\\n  tmpvar_8 = (0.15 * time);\\n  uv2_3.y = (tmpvar_5 + tmpvar_8);\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_7;\\n  tmpvar_9.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_9.y + tmpvar_8);\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.5 * crisp_1) * rad);\\n  float tmpvar_10;\\n  tmpvar_10 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_10)) + (tmpvar_10 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_11.xyz;\\n }"}')},712:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoom":0.9995,"rot":0.1,"cx":2,"cy":2,"warp":0.01105,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":0,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.03809,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"t7=1;\\nflip=0;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\\nt8=2;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip + 0.5*t7;\\nt7=if( equal(flip,1) + equal(flip,0) , -t7 , t7 );\\n\\n\\ntm=if( equal(flip,0.5) , tm+0.02*q8 , tm);\\n\\nxp=0;\\nyp=0.05 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=(flip - 0.5) * 0.1;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a* above( sin(tm*128*t8) , 0 );\\na=a* (1-abs(flip - 0.5));\\n\\n\\nmag=(1-abs(flip - 0.5)*2)+1; \\nr=min(t4*mag,1);\\ng=min(t5*mag,1);\\nb=min(t6*mag,1);\\n"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"t7=1;\\nflip=0;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\\nt8=2","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip + 0.5*t7;\\nt7=if( equal(flip,1) + equal(flip,0) , -t7 , t7 );\\n\\n\\ntm=if( equal(flip,0.5) , tm+0.02*q8 , tm);\\n\\n\\nxp=0;\\nyp=0.05 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=(flip - 0.5) * 0.1;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a* above( sin(tm*128*t8) , 0 );\\na=a* (1-abs(flip - 0.5));\\n\\n\\nmag=(1-abs(flip - 0.5)*2)+1; \\nr=min(t4*mag,1);\\ng=min(t5*mag,1);\\nb=min(t6*mag,1);"},{"baseVals":{"enabled":1,"g":0.6,"b":0.1},"init_eqs_eel":"t7=1;\\nflip=0;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\\nt8=2;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip + 0.5*t7;\\nt7=if( equal(flip,1) + equal(flip,0) , -t7 , t7 );\\n\\n\\ntm=if( equal(flip,0.5) , tm+0.02*q8 , tm);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a* above( sin(tm*128*t8) , 0 );\\na=a* (1-abs(flip - 0.5));\\n\\n\\nmag=(1-abs(flip - 0.5)*2)+1; \\nr=min(t4*mag,1);\\ng=min(t5*mag,1);\\nb=min(t6*mag,1);\\n"},{"baseVals":{"enabled":1,"g":0.3,"b":0.1},"init_eqs_eel":"t7=1;","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);\\nt8=2","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip + 0.5*t7;\\nt7=if( equal(flip,1) + equal(flip,0) , -t7 , t7 );\\n\\n\\ntm=if( equal(flip,0.5) , tm+0.02*q8 , tm);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a* above( sin(tm*128*t8) , 0 );\\na=a* (1-abs(flip - 0.5));\\n\\n\\nmag=(1-abs(flip - 0.5)*2)+1; \\nr=min(t4*mag,1);\\ng=min(t5*mag,1);\\nb=min(t6*mag,1);"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\n//zoom = 1;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nvol = (bass_att + treb_att + mid_att)*.333333;\\n\\nra = 1/tic*.15;\\n\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb;\\nmt = mt + tic*mid;\\nbt = bt + tic*bass;\\nvt = vt + tic*vav;\\n\\nq1 = tt*1.4;// wave morph speeds\\nq2 = mt*3;\\nq3 = bt*3;\\n\\nq4 = vt; // wave colour cycle\\n\\nrb = if(rb,rb,.2 + rand(1001)*.001*.6);\\nrc = if(rc,rc,.2 + rand(1001)*.001*.6);\\nrd = if(rd,rd,.2 + rand(1001)*.001*.6);\\nre = if(re,re,.2 + rand(1001)*.001*.6);\\n\\n\\nti = vt*2;\\ncx = .3 + .1*sin(ti*re) + .1*cos(ti*rc);\\ncy = .5 + .2*sin(ti*rb) + .1*cos(ti*rd);\\n\\n\\nq7 = 6;\\nq8 = 2.8;","pixel_eqs_eel":"xnum = q7;\\nynum = q8;\\npi = 1.141592654;\\n\\nxseg = int(x*xnum);\\nyseg = int(y*ynum);\\n\\nxsw = equal((xseg+equal(yseg%2,0))%2,0);\\nysw = equal((yseg+2)%2,0);\\n\\n\\nox = x - xseg*(1/xnum);\\nox = if(xsw,1/xnum - ox,ox);\\n\\noy = y - yseg*(1/ynum);\\noy = if(ysw,1/ynum - oy,oy);\\n\\ndx = above(xseg+yseg,0)*(x-ox);\\ndy = above(xseg+yseg,0)*(y-oy);\\n\\nrot = rot*(1-above(xseg+yseg,0));\\n\\n//dx = equal(seg,1)*(x - .5)*2;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.85);\\n  ret_1 = (ret_1 - 0.022);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.xy = uv;\\n  tmpvar_2.z = q2;\\n  vec2 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = ((tmpvar_4 * vec2(-1.0, 1.0)) + 0.5);\\n  ret_1 = (((\\n    (mix (texture (sampler_main, ((tmpvar_4 * 0.98) + 0.5)).xyz, texture (sampler_main, ((\\n      (tmpvar_3 - 0.5)\\n     * 0.98) + 0.5)).xyz, vec3(0.2, 0.2, 0.2)) + ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   + \\n    ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3)\\n  ) + (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)) + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 * texture (sampler_noisevol_hq, tmpvar_2).xyz);\\n  ret_1 = (ret_1 * 2.0);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }"}')},5830:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.02,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":4.8,"mv_dx":0.4,"mv_l":1,"mv_r":0,"mv_g":0.5,"mv_a":0.1,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"x":1,"y":0.59,"rad":0.55923,"ang":3.39292,"tex_zoom":100,"r":0,"g":1,"b":1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=sin(time/10)*0.1+0.5+(treb_att*0.1);"},{"baseVals":{"sides":13,"additive":1,"x":0.9,"y":0.84,"rad":0.36457,"ang":3.07876,"tex_zoom":4.14146,"r":0.25,"g":0.05,"a":0.2,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//additive=above(sin(time*50),.95);"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"x":0.3,"y":0.7,"rad":1.08925,"ang":0.81681,"tex_ang":3.14159,"tex_zoom":0.50422,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//tex_ang=(sin(time/4)*0.5+0.5)*6.28;"},{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":0.28428,"ang":3.14159,"tex_ang":4.90089,"tex_zoom":2.98776,"g":1,"b":1,"r2":0.95,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"ang=time/10;\\ntex_zoom=3.4+(bass*0.03);\\nvar=above(bass_att,0.7);\\na=var;\\na2=var;\\nborder_a=var;\\n\\n\\n//This preset fluctuates between 53.2 and 55.44 fps on my box.  Texture size_2048 Meshsize_36*24\\n//On a SuperScan Pro 800 Hitachi\\n//On a Radion_9600\\n//1280*1024_Screen_Resolution\\n//;) hello! I am ATHEN ANDANDA!"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"a":0.06},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xspout=.5;\\nyspout=-.01;\\n\\npphase=9999*sample*sample*.0001;\\npphase2=.1+((sample*3349*sample)%100)*.01;\\npheight=((sample*9893)%100)*.002;\\nyheight=((sample*1231*sample)%100)*.01;\\n\\nr=((sample*5454)%100)*.01*abs(sin(time*.25));\\ng=((sample*9954)%100)*.01;\\n\\nxoffset1=(cos((time*pphase2)+pphase)*pheight);\\nxoffset2=-1*(cos((time*pphase2)+pphase)*pheight);\\n\\nlrorient=if(below(cos((time*pphase2)+pphase),cos(((time-.1)*pphase2)+pphase)),0,1);\\n\\npx=if(equal(lrorient,0),xspout-pheight+xoffset1,xspout+pheight-xoffset2);\\n\\npy=yspout+(abs(sin((time*pphase2)+pphase))*yheight);\\n\\nx=px;\\ny=py;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"pphase=(sample*5671*cos(time*.0001));\\npheight=((sample*7654)%100)*.005*sin(time*.2);\\n\\n//xspout=.5;\\nxspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),xspout);\\n//yspout=.5;\\nyspout=if(below(abs(sin(time*.2)),.005),.3+(int(rand(40))*.01),yspout);\\n\\npx=xspout+(cos(time+pphase)*pheight);\\npy=yspout+(sin(time+pphase)*pheight);\\n\\nx=px;\\ny=py;\\na=abs(sin(time*.2)*.3+(treb_att*.1));\\n\\nr=treb*2;"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs*4;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.1-0.05)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*20 + sin(tm*76 + time*4)*0.4;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=sin(tm*2);\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*2.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*1)*1.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm);\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"usedots":1,"thick":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1;\\n\\nt7=.0;\\nt8=.45;\\n\\nddx=.25*cos(5.7119*t1)+2.5963*t1*sin(5.7119*t1);\\nddy=.3125*sin(5.7119*t1)-3.2453*t1*cos(5.7119*t1);\\nddtan=atan2(ddy,ddx);\\nt2=-ddtan;\\n\\nval1=((-.5*cos(5.7119*t1))*cos(t2)-(-.625*sin(5.7119*t1))*sin(t2));\\nval2=((-.5*cos(5.7119*t1))*sin(t2)+(-.625*sin(5.7119*t1))*cos(t2));\\n\\nt6=-sign(t1);\\nt7=t7-val1;\\nt8=t8-val2;\\n\\nt3=q2;","point_eqs_eel":"sample=pow(sample,.85);\\n\\nc1=6.2831*t1/(1.1-sample);\\nc=cos(c1);\\ns=sin(c1);\\nc2=sqrt(1-sample);\\n\\nox=t7-.5*c2*c;\\noy=t8-.625*c2*s;\\n\\nx=t7+((ox-t7)*cos(t2)-(oy-t8)*sin(t2));\\ny=t8+((ox-t7)*sin(t2)+(oy-t8)*cos(t2));\\n\\ninv=1/sqr(1.1-sample);\\nfdx=-.25*pow(1-sample,-.5)*c-c2*s*3.1415*t1*inv;\\nfdy=-.3125*c2*s+3.9268*c2*c*t1*inv;\\ninvMag=1/sqrt(sqr(fdx)+sqr(fdy));\\nfdx=fdx*invMag;\\nfdy=fdy*invMag;\\n\\nrdx=fdx*cos(1.5707+t2)-fdy*sin(1.5707+t2);\\nrdy=fdx*sin(1.5707+t2)+fdx*cos(1.5707+t2);\\ntt=int(rand(100))/100;\\nx=x+rdx*(.15*tt)*(1-sample);\\ny=y+rdy*(.15*tt)*(1-sample);\\n\\nx=x*.55;\\ny=(y-.5)*.55+.5;\\n\\nr=sample;\\ng=1-sample;\\nb=1;\\na=below(sample,.995);\\n\\n\\ny=y+t3;"}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\n\\nframethird = frame%3;\\n\\nx1 = 0.5 + 0.15*sin(0.416*time) + 0.15*sin(0.832*time) + 0.1*sin(1.324*time);\\nx2 = 0.5 + 0.15*sin(0.341*time) + 0.15*sin(0.768*time) + 0.1*sin(1.523*time);\\nx3 = 0.5 + 0.15*sin(0.287*time) + 0.15*sin(0.913*time) + 0.1*sin(1.142*time);\\nr1 = 0.5 + 0.15*sin(0.512*time) + 0.15*sin(0.943*time) + 0.1*sin(1.024*time);\\nr2 = 0.5 + 0.15*sin(0.483*time) + 0.15*sin(0.879*time) + 0.1*sin(1.423*time);\\nr3 = 0.5 + 0.15*sin(0.531*time) + 0.15*sin(0.671*time) + 0.1*sin(1.442*time);\\ng1 = 0.5 + 0.15*sin(0.248*time) + 0.15*sin(0.829*time) + 0.1*sin(1.623*time);\\ng2 = 0.5 + 0.15*sin(0.461*time) + 0.15*sin(0.699*time) + 0.1*sin(1.254*time);\\ng3 = 0.5 + 0.15*sin(0.397*time) + 0.15*sin(0.768*time) + 0.1*sin(1.157*time);\\nb1 = 0.5 + 0.15*sin(0.211*time) + 0.15*sin(0.652*time) + 0.1*sin(1.865*time);\\nb2 = 0.5 + 0.15*sin(0.333*time) + 0.15*sin(0.978*time) + 0.1*sin(1.359*time);\\nb3 = 0.5 + 0.15*sin(0.475*time) + 0.15*sin(0.791*time) + 0.1*sin(1.011*time);\\nwave_x = if(equal(framethird,0),x1,if(equal(framethird,1),x2,x3));\\nwave_r = if(equal(framethird,0),r1,if(equal(framethird,1),r2,r3));\\nwave_g = if(equal(framethird,0),g1,if(equal(framethird,1),g2,g3));\\nwave_b = if(equal(framethird,0),b1,if(equal(framethird,1),b2,b3));\\n\\nvolume = 0.3*(bass+mid);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.99 + (1-above(time - lastbeat, 2*beatrate))*0.998);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\ndx = if(beat,1-2*int(rand(2)),0);\\nob_a = if(beat,0,0.65);\\nmv_a = if(beat,1,0.05);","pixel_eqs_eel":"dy = 0.004 + 0.0005*sin(10*x+0.459*time) + 0.0005*sin(14*x+0.325*time) + 0.0005*sin(1.231*time);\\n//dx = dx + 0.0001*sin(9*y+0.612*time) + 0.0001*sin(13*y+0.429*time) + 0.0001*sin(1.027*time);","warp":" shader_body { \\n  vec2 uv6_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  float x_4;\\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\\n  float tmpvar_5;\\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = normalize(tmpvar_3);\\n  uv1_2 = (tmpvar_3 + ((-0.01 * \\n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  ) * tmpvar_6));\\n  uv1_2 = (uv1_2 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ((0.5 * (\\n    ((texture (sampler_main, ((uv1_2 * \\n      (0.8 + (0.2 * tmpvar_5))\\n    ) + 0.5)).xyz + (vec3((0.01 / \\n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\\n    )) * (0.3 * \\n      (1.0 + roam_cos)\\n    ).xyz)) * 0.96)\\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }"}')},9935:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":2.853,"zoom":1.064,"warp":0,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.14392,"tex_zoom":4.57482,"g":1,"b":1,"a":0.9,"r2":0.84,"g2":0.93,"b2":1,"border_r":0.8,"border_g":0,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);\\nrad = .2*max(sin(time/9)-.6,0);\\nx = .5 + .01 * sin(time/2); //slightly off-center\\n\\nborder_r = .4 * (1.5+sin(time/18));\\nborder_g = .4 * (1.5+sin(time/38));\\nborder_b = .4 * (1.5+sin(time/28));"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel);\\ny = .5+cos(trel*1.3 +q28/3);\\nrad = .03;\\na = q26/4+.2;  a2 = 0;\\na = 1;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":0.89152,"smoothing":0.82,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1*cos(time/3);\\nt2 = 1*sin(time/7);\\n\\nvol = mid_att + treb_att;\\nvol_m = vol_m*0.999+vol*0.001;\\nexc = above (vol, vol_m*1.1);\\n\\npulse = 0.95*pulse + 0.05*exc;\\nwinkel = winkel + pulse/3;\\nt3 = winkel;\\n\\n\\n","point_eqs_eel":"  //Alle Funktionen muessen rel. zu t_rel sein\\n\\n\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = sin(t_abs*3)-0.0;\\n\\nox = 3*sin (time) + ampl*(sin (t_rel*267)) ;\\noy = 3*cos (time) + ampl*(cos (t_rel*277)) ;\\noz = 0*cos (t_rel*time/23)+t_abs*4 ;\\n\\n\\nr = sqr(sin(t_rel*3.4));\\ng = sqr(sin(t_rel*2.3));\\nb = sqr (cos(t_rel*.9));\\n\\na= 0.2*(cos(t_abs*1 )) + q26/16 ;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = 0.2;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"enabled":1,"samples":232,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/5;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = sin(t_abs*1335)+1;\\ng = sin(t_abs*1783)+1 ;\\nb = rand(5)/5 ;\\n\\na=0.5+0.25 * sin(t_rel*15);\\nxang = t1 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ampl = time - int(time);\\naml = ampl/2;\\nx = .5 + ampl * sin(sample*230);\\ny = .5 + ampl * cos(sample*230);\\na = .03;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.100*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.013*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.040*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );","pixel_eqs_eel":"rot=rot+0.05+0.04*sin(ang*3+time*1.6);","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},6545:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":5.996,"warpscale":1.331,"zoomexp":1.01,"zoom":0.99853,"rot":0.002,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.9,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.14392,"tex_zoom":4.57482,"g":1,"b":1,"a":0.9,"r2":0.84,"g2":0.93,"b2":1,"border_r":0.8,"border_g":0,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);\\nrad = .2*max(sin(time/9)-.6,0);\\nx = .5 + .01 * sin(time/2); //slightly off-center\\n\\nborder_r = .4 * (1.5+sin(time/18));\\nborder_g = .4 * (1.5+sin(time/38));\\nborder_b = .4 * (1.5+sin(time/28));"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"rad":1.99863,"tex_zoom":0.49981,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel);\\ny = .5+cos(trel*1.3 +q28/3);\\nrad = .03;\\na = q26/4+.2;  a2 = 0;\\na = 1;"},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"scaling":0.89152,"smoothing":0.82,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1*cos(time/3);\\nt2 = 1*sin(time/7);\\n\\nvol = mid_att + treb_att;\\nvol_m = vol_m*0.999+vol*0.001;\\nexc = above (vol, vol_m*1.1);\\n\\npulse = 0.95*pulse + 0.05*exc;\\nwinkel = winkel + pulse/3;\\nt3 = winkel;\\n\\n\\n","point_eqs_eel":"  //Alle Funktionen muessen rel. zu t_rel sein\\n\\n\\nt_abs = sample;\\nt_rel = sample-time/6;\\nampl = sin(t_abs*3)-0.0;\\n\\nox = 3*sin (time) + ampl*(sin (t_rel*267)) ;\\noy = 3*cos (time) + ampl*(cos (t_rel*277)) ;\\noz = 0*cos (t_rel*time/23)+t_abs*4 ;\\n\\n\\nr = sqr(sin(t_rel*3.4));\\ng = sqr(sin(t_rel*2.3));\\nb = sqr (cos(t_rel*.9));\\n\\na= 0.2*(cos(t_abs*1 )) + q26/16 ;\\n\\nxang = t2+t3/3;\\nyang = t1*t2-t3/4;\\nzang = t3;\\nfov = 0.2;\\n\\nmonitor = t2;\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz =  mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"enabled":1,"samples":232,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/5;\\nampl = time;\\n\\nox = ampl*10*sin (t_abs*68);\\noy = ampl*10*cos (t_abs*28);\\noz = ampl*10*cos (t_abs*128);\\n\\n\\nr = sin(t_abs*1335)+1;\\ng = sin(t_abs*1783)+1 ;\\nb = int(rand(5))/5 ;\\n\\na=0.5+0.25 * sin(t_rel*15);\\nxang = t1 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.12;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ampl = time - int(time);\\naml = ampl/2;\\nx = .5 + ampl * sin(sample*230);\\ny = .5 + ampl * cos(sample*230);\\na = .03;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q8=0;","frame_eqs_eel":"","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},7077:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":100,"warpscale":0.089,"zoomexp":0.59124,"zoom":1.00951,"warp":0.35949,"sy":1.00183,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"sides = 3;\\nsx = bass - zoom * time/ang;\\n\\n\\nang = time* 3.7;\\nx = 0.5;\\n\\n\\nr = 0.6*time;\\nb = 0.6*time;\\ng = 0.5*time;\\nr2 = 0.98*time;\\nb2 = 0.5*time;\\ng2 = 0.7*time;"},{"baseVals":{"enabled":1,"rad":0.01},"init_eqs_eel":"","frame_eqs_eel":"y = sin(time*2)*0.4 + 0.5;\\nx = sin(time)*0.4 + 0.5;\\n\\nsides = 20;\\n\\nr = 3;\\nr2 = 3;\\nb = 0;\\nb2 = 0;\\ng=0;\\ng2=0;"},{"baseVals":{"enabled":1,"rad":0.01},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time*2)*0.4 + 0.5;\\ny = sin(time)*0.4 + 0.5;\\n\\nsides = 20;\\n\\nr = 0;\\nr2 = 0;\\nb = 3;\\nb2 = 3;\\ng=3;\\ng2=3;"},{"baseVals":{"enabled":1,"rad":0.01},"init_eqs_eel":"","frame_eqs_eel":"x = sin(bass*0.05)*0.4 + 0.5;\\ny = sin(bass)*0.4 + 0.5;\\n\\nsides = 20;\\n\\nr = 0;\\nr2 = 0;\\nb = 0;\\nb2 = 0;\\ng=4;\\ng2=4;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"tad1 = q4-q2;\\ntad2 = cos(time);\\n\\n\\n\\nx = cos( (tad1-tad2)*3*ang )*0.4899 + 0.5;\\n\\nr=sin(0.6*time);\\ng=sin(0.9*time);\\nb=sin(0.8*time);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r=bass*.5;\\nwave_b=bass*.5;\\nrot=rot+((int(rand(10))-5)*.02*treb);","pixel_eqs_eel":"zoom=zoom+(above(y,.5)*sin(time)*.1);\\nzoom=zoom+(below(y,.5)*cos(time)*.1);","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},9313:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.169,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":53,"rad":0.0244,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.2,"g":0.7,"g2":0,"a2":0.2,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = min(q22/4,1); a2 = 1;\\n\\n\\nr0 = bnot(q24)*r0 + q24 * int(rand(10))/10;\\nb0 = bnot(q24)*b0 + q24 * int(rand(10))/10;\\ng0 = bnot(q24)*g0 + q24 * int(rand(10))/10;\\nrad = q22/40;\\nr = r0; b = b0; g = g0;\\nr2 = 0; b2 = 0; g2 = 0;"},{"baseVals":{"enabled":1,"sides":44,"textured":1,"x":0.7,"rad":0.2173,"tex_ang":0.62832,"tex_zoom":1.63319,"g":1,"b":1,"r2":0.99,"g2":0.99,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + 1/fps * q1;\\n\\nposx = (1-q24)*posx + q24*(.3+int(rand(100))/200);\\nposy = (1-q24)*posy + q24*(.3+int(rand(100))/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+int(rand(100))/300);\\nrad = rad0;\\n\\n\\nx =  posx;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"enabled":1,"sides":63,"x":0.503,"rad":0.03886,"tex_zoom":2.2233,"g":0.1,"r2":1,"b2":1,"a2":0.7,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = 1;\\nrot0 = rot0 + .1/fps * q2;\\n\\n\\nposx = (1-q24)*posx + q24*(.3+int(rand(100))/200);\\nposy = (1-q24)*posy + q24*(.3+int(rand(100))/200);;\\n\\nrad0  = (1-q24)*rad0 + q24*(.05+int(rand(100))/400);\\nrad = rad0;\\n\\n\\nx =  posx+q26;\\ny =  posy;\\nang = rot0;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%8;\\nk2 = bnot (k1);\\nxi = value1*k2 + xi*(1-k2);\\nyi = value2*(1-k2) + yi*k2;\\n\\ndx = dx*.99 + xi;\\ndy = dy*.99 + yi;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\na = q22/8; \\na = min(a,.4);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.02,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"dirx = 1;","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq29 = 2 * (index2%2-.5);\\nq25 = min(1,q22/2);\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\n\\nq27 = index;\\nq28 = index2;\\n\\nmov = mov*dec_med + (1-dec_med)*above(index%8,2);\\nmovez = movez + 1/fps*mov;\\nq30 = movez;\\n//**************************\\n\\nq8 = movex; q9 = movey;\\n\\ntrel1 = trel1 + (q1*q22*3)/fps;\\ntrel2 = trel2 + (q2*q22*2)/fps;\\ntrel3 = trel3 + 4*(1-mov)/fps;\\ntrel4 = trel4 + 1 * mov/fps;\\n\\nq11 = .3*sin(trel1); \\nq12 = .1*cos(trel2); \\nq13 = 8 + 6*sin(trel3);\\n\\nq14 = .3*sin(trel2); \\nq15 = .2*cos(trel3) ; \\nq16 = 6 + 3*sin(trel1);\\n\\nq17 = .3*sin(trel4); \\nq18 = .3*cos(trel2); \\nq19 = 3 + sin(trel3);\\n\\ntrot = trel1/2;\\ntrot = index2*6.28/4;\\nq5 = cos(trot);\\nq6 = sin(trot);\\nq7 = -q6;\\nq8 = q5;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 8.0)\\n   + \\n    (rand_frame * 6.0)\\n  .xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  vec2 uv2_2;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), texture (sampler_main, (uv_1 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * 0.5004596) - (uv_1.y * 0.8657598));\\n  uv2_2.y = ((uv_1.x * 0.8657598) + (uv_1.y * 0.5004596));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * -0.4990803) - (uv_1.y * 0.8665558));\\n  uv2_2.y = ((uv_1.x * 0.8665558) + (uv_1.y * -0.4990803));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  uv2_2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * -0.5018377) - (uv_1.y * -0.8649619));\\n  uv2_2.y = ((uv_1.x * -0.8649619) + (uv_1.y * -0.5018377));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * 0.4976997) - (uv_1.y * -0.8673494));\\n  uv2_2.y = ((uv_1.x * -0.8673494) + (uv_1.y * 0.4976997));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  uv2_2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  uv2_2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  xlat_mutableret1 = max (xlat_mutableret1, texture (sampler_main, (uv2_2 + 0.5)).xyz);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (xlat_mutableret1 * 2.0);\\n  ret = tmpvar_3.xyz;\\n }"}')},1007:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.399,"decay":1,"echo_zoom":1.488,"echo_alpha":0.3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.99951,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":1.46815,"tex_zoom":0.63904,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\\n\\nsides=int(abs(sin(time*.5)*7));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"rad":0.02743,"a":0.05,"r2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\\n\\nr=.7+(sin(time)*.3);\\ng=.7+(cos(time)*.3);\\nb=.7+(sin(time+.12)*.3);\\n\\nrad=rad+(treb_att*bass_att*.5);\\nx=.5+(sin(time)*.5);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"rad":0.02508,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.25;\\n\\ng=.7+(sin(time)*.3);\\nb=.7+(cos(time)*.3);\\nr=.7+(sin(time+.12)*.3);\\n\\nr2=.7+(sin(time)*.3);\\ng2=.7+(cos(time)*.3);\\nb2=.7+(sin(time+.12)*.3);\\n\\nrad=rad+(treb_att*bass_att*.5);\\ny=.5+(sin(time)*.25);"},{"baseVals":{"additive":1,"textured":1,"rad":2.66717,"tex_zoom":0.60804,"a":0.1,"a2":0.01,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\\n\\n//base\\nwx=if(equal(sc,0),.5,wx);\\nwy=if(equal(sc,0),0,wy);\\n\\nwx=if(equal(sc,1),.5,wx);\\nwy=if(equal(sc,1),.1,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.2+sin(time),-.2);\\n\\nwa=if(below(sc,2),3.1415927*.5,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\\n\\n//base\\nwx=if(equal(sc,0),.5,wx);\\nwy=if(equal(sc,0),1,wy);\\n\\nwx=if(equal(sc,1),.5,wx);\\nwy=if(equal(sc,1),.9,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.2+sin(time),-.2);\\n\\nwa=if(below(sc,2),3.1415927*1.5,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\\n\\n//base\\nwx=if(equal(sc,0),0,wx);\\nwy=if(equal(sc,0),.5,wy);\\n\\nwx=if(equal(sc,1),.1,wx);\\nwy=if(equal(sc,1),.5,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.25+cos(time),-.25);\\n\\nwa=if(below(sc,2),3.1415927*2,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=int(rand(2));\\n\\n//base\\nwx=if(equal(sc,0),1,wx);\\nwy=if(equal(sc,0),.5,wy);\\n\\nwx=if(equal(sc,1),.9,wx);\\nwy=if(equal(sc,1),.5,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.25+cos(time),-.25);\\n\\nwa=if(below(sc,2),3.1415927*1,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\n\\nwave_x = wave_x + 0.2*sin(0.32*time);\\nwave_y = wave_y + 0.2*cos(0.32*time);\\n\\nob_r = wave_r;\\nob_g = wave_g;\\nob_b = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.0095*(sin(10*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);","warp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = max (texture (sampler_fc_main, uv).xyz, (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.33, 0.33))).xyz * 0.95));\\n  vec2 x_2;\\n  x_2 = (uv - uv_orig);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    mix (tmpvar_1, (floor((\\n      (tmpvar_1 * vec3(7.0, 6.0, 8.0))\\n     + 0.25)) / vec3(7.0, 6.0, 8.0)), vec3(0.1, 0.1, 0.1))\\n   * 0.99) - 0.0025) - ((1.0 - \\n    clamp ((sqrt(dot (x_2, x_2)) * 40.0), 0.0, 1.0)\\n  ) * 0.003));\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},4477:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":1,"wave_mode":1,"modwavealphabyvolume":1,"wave_a":8.2,"wave_scale":1.013,"wave_smoothing":0.9,"wave_mystery":-0.28,"modwavealphastart":1.05,"modwavealphaend":1.65,"warpscale":2.853,"zoomexp":3.6,"zoom":1.025,"rot":-0.02,"warp":0.309,"wave_r":0.7,"wave_g":0.65,"wave_b":0.7,"ob_a":0.5,"ib_a":0.5,"mv_x":31.2,"mv_y":2.28,"mv_l":2.5,"mv_b":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.200*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.200*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.200*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.023*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );","pixel_eqs_eel":"zoom=zoom+0.03*sin((x*2-1)*4+time*1.63)+0.03*sin((y*2-1)*3+time*1.37)-0.1*sin(rad*0.1+time*1.6);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    ((treb_att - 1.0) + 0.4)\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }"}')},5713:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_a":0.001,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"x":0.75,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0444,"tex_zoom":0.22746,"r":0,"g":0.3,"g2":0,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":0.22167,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"border_r = 0.5 + 0.5*sin(q1*10);"},{"baseVals":{"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a = above(q3,2);\\na2 = above(q3,2)*0.8;\\n\\nxx = if(above(q3,6),xx,rand(100)*0.01);\\nyy = if(above(q3,6),yy,rand(100)*0.01);\\nradi = if(above(q3,5),radi,rand(100)*0.01);\\n\\nrad = radi;\\n\\nx = xx;\\ny = yy;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.22) + 0.1;\\ng = 0.4 + 0.4*sin(q1*1.307);\\nb = 0.4 + 0.4*sin(q1*1.959);\\n\\n\\nr2 = 0.5 + 0.5*sin(q1*1.622) + 0.1;\\ng2 = 0.4 + 0.4*sin(q1*1.507);\\nb2 = 0.4 + 0.4*sin(q1*1.6559);"}],"waves":[{"baseVals":{"enabled":1,"a":0.5},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\\nzs = if(below(zs,1),9,zs);\\n\\nzs = if(above(zs, 1100),1, zs);\\n\\nspeed = bass*0.002;\\n\\n//sum\\nzs = zs + tan(q1*0.015)*speed;\\n\\nzd = zd + 2;\\n\\n\\n\\n//project\\nx = 0.5 + 0.1*cos(q1*zs);\\ny = 0.5 + 0.1*sin(q1*zs);\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"rot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1.xz = (ret_1.xz + ((\\n    (ret_1.xz - mix (((texture (sampler_blur2, uv).xyz * scale2) + bias2), ((texture (sampler_blur1, uv).xyz * scale1) + bias1), uv_orig.xxx).xz)\\n   * 0.3) - (0.00666 * \\n    (((bass + treb) + mid) - 0.5)\\n  )));\\n  ret_1.xz = (ret_1.xz * 0.95);\\n  ret_1.xz = (ret_1.xz + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1.x = mix (ret_1.x, dot (ret_1.xxx, vec3(0.32, 0.49, 0.29)), 0.2);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 12.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.z;\\n  tmpvar_7.y = tmpvar_4.z;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (((uv_orig + \\n    (tmpvar_5 * 0.05)\\n  ) + (tmpvar_6 * 0.02)) - (tmpvar_7 * 0.05));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - 0.04);\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1.y - (((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).y * 1.2))\\n   + 0.2) * 0.2));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.5 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    (((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.5 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    (((tmpvar_6.xyz * scale3) + bias3) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 - (0.25 * sqrt(tmpvar_12)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},7050:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":2.001,"decay":0.99,"echo_zoom":0.9996,"wave_mode":1,"wave_a":3.072644,"wave_scale":1.285746,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);","pixel_eqs_eel":"zoom = zoom + 0.05*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1);\\nrot = rot + 0.5*sin(0.5-rad)*cos(0.02*(0.5-rad)+time);\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.05*(1-rad)*below(rad,0.5);","warp":"","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = cos((uv.x * 37.0));\\n  tmpvar_1.y = sin((uv.y * 29.0));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_main, (uv + (0.045 * tmpvar_1))).xyz);\\n  ret = tmpvar_2.xyz;\\n }"}')},6075:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.504,"decay":0.9,"echo_zoom":0.999592,"echo_alpha":0.5,"echo_orient":3,"wave_a":100,"wave_scale":0.311604,"wave_smoothing":0.45,"wave_mystery":-0.5,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.438651,"zoomexp":0.999994,"zoom":1.000156,"warp":0.01,"sx":0.990099,"sy":0.990099,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.1,"ob_g":0.6,"ob_b":0.5,"ob_a":0.1,"ib_size":0.05,"ib_r":0,"ib_g":1,"ib_b":1,"ib_a":0.1,"mv_x":12.799995,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(1.2*frame) + 0.3*sin(1.9*frame);\\nwave_g = wave_g + 0.7*sin(1.1*frame) + 0.4*cos(1.6*frame);\\nwave_b = wave_b + 0.2*sin(1.3*frame) + 0.4*sin(2*frame);","pixel_eqs_eel":"rot=rot + (0.5 + 0.1*sin(bass)-rad)*pow(bass,3)/50;\\nzoom= zoom + (0.5 + 0.3*tan(3*bass_att)-rad)*(cos(pow(rad,2.4))+(0.2*mid_att));\\nwarp = warp + if (above(bass,1.34), 0.5*(0.5+ 0.1*sin(bass)-rad)*(cos(pow(rad,2.4))+(5*bass_att)), 0);","warp":"","comp":""}')},2998:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":2,"gammaadj":1.35,"decay":1,"echo_zoom":0.999599,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wrap":0,"darken":1,"wave_a":0.690724,"wave_scale":4.778029,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":0.999513,"warp":0.0101,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.1,"ib_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*sin(time*1.13);\\nwave_g = wave_g + 0.5*sin(time*1.23);\\nwave_b = wave_b + 0.5*sin(time*1.33);\\n\\nwave_x = wave_x + 0.2*sin(0.32*time);\\nwave_y = wave_y + 0.2*cos(0.32*time);\\n\\nob_r = wave_r;\\nob_g = wave_g;\\nob_b = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nzoom = zoom + 0.0095*(sin(24*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.5)\\n*above(sin(time),0);\\nzoom = zoom + 0.0095*(sin(6*ang) + sin(sin(time*2*sin(time)*rad))*0.3 - cos(rad)*0.1)\\n*below(sin(time),0);\\nrot = rot + 0.08*abs(0.746-rad)*sin(2.2*(0.5-rad)+5.7*sin(0.1*time));\\nsx = sx + 0.01*(0.99*1-rad)*sin(0.733*time)*below(sin(time),0);\\nsy = sy + 0.01*(0.99*1-rad)*cos(0.953*time)*above(sin(time),0);\\nzoom = zoom - 0.015*(0.5*abs(3)-rad)*below(rad,1.5);","warp":"","comp":""}')},2339:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.99,"echo_zoom":0.741918,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wave_a":100,"wave_scale":3.072694,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":2.781671,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.25*sin(1.4*time) + 0.25*sin(2.25*time);\\nwave_g = wave_g + 0.25*sin(1.7*time) + 0.25*sin(2.11*time);\\nwave_b = wave_b + 0.25*sin(1.84*time) + 0.25*sin(2.3*time);\\nwarp = 0;\\nob_r = 0.3 + 0.3*sin(1.56*time);\\nob_g = 0.3 + 0.3*sin(2.15*time);\\nob_b = 0.3 + 0.3*cos(1.4*time);\\ning = 2*sin(0.25*time);\\nwave_x = wave_x + 0.0257*sin(time);\\nwave_y = wave_y + 0.0257*cos(time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nrot = rot + above(bass,1)*0.25*(1-rad)*(100*dx_r);\\nzoom = zoom + 0.2*(0.5-rad);\\ncx = cx + above(bass,1)*0.25*sin(time)*(100*dy_r);\\ncy = cy + above(mid,1)*0.25*cos(time)*(100*dy_r);\\ndy = dy - dy_r;\\ndx = dx - dx_r;","warp":"","comp":""}')},7059:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":100,"wave_scale":0.653092,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.2,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\nwave_x = wave_x + 0.1*cos(1.2*time)*sin(1.1*time)+0.1*sin(0.61*time);\\nwave_y = wave_y + 0.1*sin(1.2*time)*cos(4.1*time)+0.11*cos(1.1*time);\\n\\nob_r = 1-abs(wave_r);\\nob_b = 1-abs(wave_b);\\nob_g = 1-abs(wave_g);\\n\\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\\nrg1 = abs(sin(time));\\nrg2 = 0*above(rg1,0.75) + 3*below(rg1,0.25) + 1*above(rg1,0.25)*below(rg1,0.5)+\\n2*above(rg1,0.5)*below(rg1,0.75);\\nrg3 = if(equal(pfthresh,2),rg2,rg3);\\n\\necho_orient = rg3;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nxbar = above(sin(dx_r*2*time),0)*abs(4-x*tan(4*cos(y*time))) +\\nbelow(sin(dx_r*2*time),0)*sin(3*x*sin(3*cos(dx_r*y*time)));\\nybar = above(cos(dy_r*1.2*time),0)*abs(4-y*tan(4*cos(x*time))) +\\nbelow(cos(dy_r*1.2*time),0)*sin(3*y*sin(3*cos(dy_r*x*time)));\\n\\ndx = dx + dx_r*cos(1.6*xbar);\\ndy = dy + dy_r*cos(1.6*ybar);\\nzoom = zoom - 0.01*(3*(xbar/ybar));\\nrot = rot + 0.01*(2*(ybar+xbar))*cos(1.52*time);\\ncx = cx + xbar*2*dx_r;\\ncy = cy + ybar*2*dy_r;","warp":"","comp":""}')},4301:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":1,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":5,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.721422,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.449737,"tex_zoom":1.07409,"g":1,"b":1,"r2":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//r = q2;\\n//g = q1;\\n//b = q3;\\nr2 = q3;\\nb2 = 1-abs(q1);\\ng2 = 1-abs(q3);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\nob_r = 1-abs(wave_r);\\nob_g = 1-abs(wave_g);\\nob_b = 1-abs(wave_b);\\nq1 = wave_r;\\nq2 = wave_g;\\nq3 = wave_b;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.15*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.15*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\ndy = dy - abs(dy_r*rad*sin(sin(12*rad))*sin(time)*cos(1.62*time));\\ndx = dx + abs(dx_r*rad*sin(sin(12*rad))*cos(1.21*time)*sin(1.02*time));\\ndy = dy + abs(dx_r*rad*sin(sin(12*rad))*cos(1.01*time)*sin(2.12*time));\\ndx = dx - abs(dy_r*rad*sin(sin(12*rad))*sin(1.52*time)*cos(0.62*time));","warp":"","comp":""}')},4997:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.96,"echo_zoom":1.007,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":1.611,"rot":0.004,"warp":0.12532,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*flip;\\n\\nb=b+pow(1-sample,2)*0.3"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*flip;\\n\\n\\nb=b+pow(1-sample,2)*0.3\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.6,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=1.002;\\n\\nq1=time*0.9;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_fc_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = ((texture (sampler_main, uv2_1).x + (\\n    ((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1)\\n  .x * 0.3)) + ((\\n    (texture (sampler_blur2, uv2_1).xyz * scale2)\\n   + bias2).x * 0.1));\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_5;\\n  tmpvar_5.z = 0.08;\\n  tmpvar_5.x = (tmpvar_2 - tmpvar_3);\\n  tmpvar_5.y = (tmpvar_4 - ((texture (sampler_main, uv2_1).x + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1).x * 0.3)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n  .x * 0.1)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (vec3(1.95, 1.35, 0.9) * clamp (dot (\\n    normalize(tmpvar_5)\\n  , vec3(0.9070111, -0.3930381, 0.1511685)), 0.0, 1.0));\\n  ret = tmpvar_6.xyz;\\n }"}')},4167:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.94,"echo_zoom":0.999996,"echo_orient":1,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.999998,"zoom":13.290894,"dx":-0.28,"dy":-0.32,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0.015,"ib_r":0.01,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":35.200005,"mv_y":29.760006,"mv_l":0.5,"mv_g":0.91,"mv_b":0.71,"mv_a":0.5},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.491382,"r":0,"g":1,"b":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+q4;y=.5+q5;"},{"baseVals":{"enabled":1,"sides":24,"additive":1,"rad":0.018423,"tex_zoom":0.819541,"g":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang=0.01;\\nx=.5-q4;\\ny=.5-q5;"},{"baseVals":{"enabled":1,"additive":1,"x":1,"y":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"additive":1,"x":0,"y":1,"rad":0.662308},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"zoom=1;\\nxpos=0;\\nypos=0;","frame_eqs_eel":"decay=1;\\n\\nvol= (bass+mid+treb)*0.55;\\nvol=vol;\\n\\n\\nmv_r = 0.5 + 0.4*sin(time*1.324);\\nmv_g = 0.5 + 0.4*cos(time*1.371);\\n\\n\\n\\n\\nzoom=.9;\\n\\nmusictime=musictime+vol;\\nq4=0.5;\\nq5=0.5;\\n\\n//dx=sin(musictime*0.1)*0.07;\\n//dy=cos(musictime*0.069)*0.07;\\n\\n\\n\\n\\nmonitor=rot;","pixel_eqs_eel":"rd=sqrt( sqr( (x-0.5-q4)*1.7) + sqr( (y-0.5+q5)*1.2 ) );\\ncx=0.5+q4;\\ncy=0.5-q5;\\n\\nzoom=(rd/rd);\\nrot=(rd/rd)+sin(time/5);","warp":"","comp":""}')},9645:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.96,"echo_zoom":0.99663,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.010284,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"rad":0.194774,"r":0,"b":1,"a":0.000001,"r2":0.63,"g2":0.7,"b2":1,"a2":0.07,"border_a":0},"init_eqs_eel":"flip=1","frame_eqs_eel":"\\nflip=-flip;\\nlens_scale = flip*0.5+0.5;\\nlens_scale = 1 + lens_scale*2.4;\\npos_scale = if( equal(flip,-1) , 0.5 , lens_scale );\\n\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= -xp/zp*pos_scale + 0.5;\\ny= -yp/zp*pos_scale * 1.333 + 0.5;\\n\\nrad = rad*(1+q8/3)*lens_scale"},{"baseVals":{"enabled":1,"sides":6,"rad":0.043785,"r":0.3,"g":0.6,"b":1,"g2":0,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a+q8/2,1);\\nr= min(r*(1+q8) , 1 );\\ng= min(g*(1+q8) , 1 );\\n\\nr2= min(q8/2,1);\\ng2= min(q8/4,1);\\n\\nrad= rad*(1+q8/7)"},{"baseVals":{"enabled":1,"sides":36,"rad":0.284278,"r":0,"a":0,"r2":0.23,"g2":0.54,"b2":1,"a2":0.05,"border_g":0.8,"border_b":0.4,"border_a":0.45},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\na2= min( a2*(1+q8/2) , 1 );\\nr2= min( r2*(1+q8/4) , 1 );\\ng2= min( g2*(1+q8/3) , 1 );\\n\\nborder_a = min( border_a * (1+q8) , 1 );"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"rad":0.158045,"r":0.3,"g":0.6,"b":1,"a":0.140001,"r2":0.4,"g2":0.5,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a*q8,1);\\n\\nrad= rad*(1+q8)"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.05,"g":0.09},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"thick":1,"r":0.5,"g":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+3;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\n\\nxp= rand(cubesize)/cubesize-0.5+fix;\\nyp= rand(cubesize)/cubesize-0.5+fix;\\nzp= rand(cubesize)/cubesize-0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\n\\nsize =4;\\nbc=0;","frame_eqs_eel":"decay=0.95;\\nzoom=1.005;\\n\\n\\nvol= (bass+mid+treb)*0.25;\\nvol = vol*vol;\\n\\nq8=vol;\\nmtime=mtime+vol*0.01*(75/fps);\\n\\nq7 = mtime;\\n\\nmonitor=512/8;\\n\\nwarp=0;\\nq1=mtime*0.9;\\n\\nbeat = above(vol,1);\\nbc = max(bc,0);\\nbc = if( equal(bc,0) , bc+beat , bc-(1/fps)/4 );\\n\\ntrigger = equal(bc,1);\\n\\nmonitor=size;\\n\\nsize = size + trigger;\\nsize = if( above(size,10) , 4 , size );\\n\\n\\nq2=int(size); //cubesize","pixel_eqs_eel":"","warp":"","comp":""}')},3507:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":32,"additive":1,"rad":0.19477,"r":0,"b":1,"a":0,"r2":0.63,"g2":0.7,"b2":1,"a2":0.07,"border_a":0,"enabled":0},"init_eqs_eel":"flip=1","frame_eqs_eel":"\\nflip=-flip;\\nlens_scale = flip*0.5+0.5;\\nlens_scale = 1 + lens_scale*2.4;\\npos_scale = if( equal(flip,-1) , 0.5 , lens_scale );\\n\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= -xp/zp*pos_scale + 0.5;\\ny= -yp/zp*pos_scale * 1.333 + 0.5;\\n\\nrad = rad*(1+q8/3)*lens_scale"},{"baseVals":{"sides":6,"rad":0.04378,"r":0.3,"g":0.6,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a+q8/2,1);\\nr= min(r*(1+q8) , 1 );\\ng= min(g*(1+q8) , 1 );\\n\\nr2= min(q8/2,1);\\ng2= min(q8/4,1);\\n\\nrad= rad*(1+q8/7)"},{"baseVals":{"sides":36,"rad":0.28428,"r":0,"a":0,"r2":0.23,"g2":0.54,"b2":1,"a2":0.05,"border_g":0.8,"border_b":0.4,"border_a":0.45,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\na2= min( a2*(1+q8/2) , 1 );\\nr2= min( r2*(1+q8/4) , 1 );\\ng2= min( g2*(1+q8/3) , 1 );\\n\\nborder_a = min( border_a * (1+q8) , 1 );"},{"baseVals":{"sides":6,"additive":1,"rad":0.15804,"r":0.3,"g":0.6,"b":1,"a":0.14,"r2":0.4,"g2":0.5,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a*q8,1);\\n\\nrad= rad*(1+q8)"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.55045,"smoothing":1,"r":0.19,"g":0.15,"b":0.11},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;\\na=if(above((treb+mid)*.3,1),1,treb*.5);","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\ntaille=bass*.25+0.3;\\nxp= sin(tm)*cos(tm*3)*taille+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*taille+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*taille+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"thick":1,"r":0.5,"g":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+3;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\n\\nxp= rand(cubesize)/cubesize-0.5+fix;\\nyp= rand(cubesize)/cubesize-0.5+fix;\\nzp= rand(cubesize)/cubesize-0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\n\\ndcsp=0;\\n\\nsize =6;\\nbc=0;","frame_eqs_eel":"decay=0.985;\\nvol= (bass+mid+treb)*0.25;\\nvol = vol*vol;\\n\\nq8=vol;\\nmtime=mtime+vol*0.01*(75/fps);\\n\\nq7 = mtime;\\n\\nmonitor=512/8;\\n\\nwarp=0;\\nq1=mtime*0.9;\\n\\nbeat = above(vol,1.5);\\nbc = max(bc,0);\\nbc = if( equal(bc,0) , bc+beat , bc-(1/fps)/4 );\\n\\ntrigger = equal(bc,1);\\n\\nmonitor=bc;\\n\\nsize = size + trigger;\\nsize = if( above(size,9) ,6 , size );\\nmainangle=q1*0.255*0.75;\\nkick= if(equal(trigger,1),2,1);\\ndx=cos(mainangle)*.003*kick;\\ndy=sin(mainangle)*.003*kick;\\nzoom=1-(vol*.005)*abs(cos(mainangle));\\nq2=int(size); //cubesize","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_4 * texsize.zw) * 2.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \\n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.004) + ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.12)).x;\\n  ret_1.y = (texture (sampler_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5).xy * texsize.zw)\\n   * 3.0))).y - 0.004);\\n  ret_1.z = texture (sampler_main, uv).z;\\n  ret_1.z = (ret_1.z + ((\\n    (ret_1.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\\n   * 0.1) - 0.015));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":""}')},3128:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":2,"gammaadj":1,"decay":0.96,"echo_zoom":1.006596,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.010284,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":6,"textured":1,"rad":0.323535,"ang":0.314159,"tex_zoom":4.722082,"g":1,"b":1,"r2":1,"g2":0.8,"b2":0.7,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a=q8"},{"baseVals":{"enabled":1,"sides":36,"additive":1,"textured":1,"rad":0.919742,"tex_zoom":0.980296,"r":0,"a":0,"r2":1,"b2":0.94,"a2":0.06,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom=tex_zoom+ (sin(time*0.3)*0.2);\\n\\nang=sin(time*0.5)*0.01;"},{"baseVals":{"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":24,"g":1,"b":1,"a":0,"r2":0.5,"g2":0.7,"b2":0.8,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.06,"g":0.04,"b":0.11},"init_eqs_eel":"","frame_eqs_eel":"t1=time*0.5;\\nt2=time*0.33;\\nt3=time*0.23;\\nt8=-1","point_eqs_eel":"scale=1+q1;\\n\\nn=sample*6.283*4;\\nthird=6.283/3;\\ncycle=int(sample*4);\\npos=t8;\\npos=if( equal(pos,1) , -1 , pos+1 );\\npos=if( equal(sample*4-cycle,0) , 0 , pos);\\nt8=pos;\\npoints= equal(pos,0);\\na=equal(pos,0)*q2;\\n\\nxp=sin(n) * 0.05 *points *scale;\\nyp=pos;\\nzp=cos(n) * 0.05 *points *scale;\\n\\n//rot x\\nang=3.1415/2 - above(cycle,0.99) * third;\\n\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + yp*cang;\\nyq=xp*cang - yp*sang;\\nzq=zp;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rot y\\nang=3.1415/2;\\nstep1=equal(cycle,2)*third;\\nstep2=equal(cycle,3)*third*2;\\nang=ang+step1+step2;\\nang=ang ;\\n\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\nang=time*0.23;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\nang=time*0.6;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp=zp+4.1;\\nxs=xp/zp + 0.5;\\nys=yp/zp *1.333 + 0.5;\\n\\nx=xs;y=ys;\\n\\n\\n\\nblack=1 - equal(pos,0);\\nr=r*black;\\ng=g*black;\\nb=b*black;"},{"baseVals":{"enabled":1,"additive":1,"r":0.06,"g":0.04,"b":0.02},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"scale=1+q1;\\n\\nn=sample*6.283*4;\\nthird=6.283/3;\\ncycle=int(sample*4);\\npos=t8;\\npos=if( equal(pos,1) , -1 , pos+1 );\\npos=if( equal(sample*4-cycle,0) , 0 , pos);\\nt8=pos;\\npoints= equal(pos,0);\\na=equal(pos,0)*q2;\\n\\nxp=sin(n) * 0.05 *points *scale;\\nyp=pos;\\nzp=cos(n) * 0.05 *points *scale;\\n\\n//rot x\\nang=3.1415/2 - above(cycle,0.99) * third;\\n\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + yp*cang;\\nyq=xp*cang - yp*sang;\\nzq=zp;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rot y\\nang=3.1415/2;\\nstep1=equal(cycle,2)*third;\\nstep2=equal(cycle,3)*third*2;\\nang=ang+step1+step2;\\nang=ang ;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\nyp=-yp;\\nang=time*0.23;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\nang=time*0.6;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp=zp+4.1;\\nxs=xp/zp + 0.5;\\nys=yp/zp *1.333 + 0.5;\\n\\nx=xs;y=ys;\\n\\n\\na=a*(1-q8*0.5);"},{"baseVals":{"enabled":1,"additive":1,"r":0.21,"g":0.12,"b":0.05},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance","point_eqs_eel":"\\ns=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp*1.333 + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nag=atan( (y-0.5)/(x-0.5) );\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.61,"g":0.72,"b":0.95},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.008;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance","point_eqs_eel":"sparkle=sin(sample*6.283*3+time*5)*0.5+0.5;\\n\\ns=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\na=a*sparkle;\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp*1.333 + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nag=atan( (y-0.5)/(x-0.5) );\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=0.98;\\nzoom=1.000;\\nwarp=0;\\n\\n\\nq1=(mid_att+treb_att)*0.25;\\n\\nq2=1 - min(q1,2)*0.6;\\n\\n\\nmvol=(bass_att+mid_att+treb_att)*0.33;\\nmvolB=(mvolB-0.007) + mvol*0.007;\\nmvolB=max(mvolB,0);\\nmvolB=min(mvolB,1);\\nq8=mvolB;\\nmonitor=q8","pixel_eqs_eel":"zoom=.99 + (sin(ang*(2+(treb/3)) + time*3)*0.5 + 0.5)*0.04;\\nsx=-1;","warp":"","comp":""}')},8766:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":1.03442,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_y":0.04,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.04043,"tex_zoom":0.73458,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.53189,"ang":0.25133,"tex_zoom":1.3345,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);\\nyy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);\\naang = if(below(d,0.12),int(rand(1000))/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"","frame_eqs_eel":"mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = -0.2*sin(dist*0.05);\\ndx = mult*sin(ang2*2-1.5)*aspectx;\\ndy = mult*cos(ang2*2-1.5)*aspecty;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec2 my_uv2_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (0.448 + q9);\\n  tmpvar_2.y = (0.701 + q10);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * 1.81);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((tmpvar_3.x * tmpvar_3.x) - (tmpvar_3.y * tmpvar_3.y));\\n  tmpvar_4.y = ((2.0 * tmpvar_3.x) * tmpvar_3.y);\\n  my_uv2_1 = (tmpvar_4 + tmpvar_2);\\n  my_uv2_1 = (1.0 - abs((\\n    (fract((my_uv2_1 * 0.5)) * 2.0)\\n   - 1.0)));\\n  xlat_mutabled = (texsize.zw * 3.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = xlat_mutabledx.x;\\n  tmpvar_6.y = xlat_mutabledy.x;\\n  float tmpvar_7;\\n  tmpvar_7 = sqrt(dot (tmpvar_6, tmpvar_6));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = xlat_mutabledx.y;\\n  tmpvar_8.y = xlat_mutabledy.y;\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = mix (mix (mix (\\n    mix (((vec3(0.6, 0.5, 0.4) * tmpvar_5.x) * ((\\n      (-(xlat_mutabledx) + xlat_mutabledy)\\n     + 1.0) * 1.4).x), (vec3(4.0, 2.0, 1.0) * tmpvar_7), vec3((tmpvar_7 * 2.0)))\\n  , vec3(0.3, 0.0, 0.0), vec3(\\n    (texture (sampler_main, my_uv2_1).z * 4.0)\\n  )), vec3(0.0, 0.0, 1.4), vec3((\\n    sqrt(dot (tmpvar_8, tmpvar_8))\\n   * 1.4))), vec3(0.5, 0.5, 0.5), vec3((tmpvar_5.y * 2.0)));\\n  ret = tmpvar_9.xyz;\\n }"}')},6643:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.99996,"g":1,"b":1,"r2":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*0.618)*0.2;\\ny = 0.5+cos(time*1.618)*0.2;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"g":1,"b":1,"g2":0,"b2":1,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(time*2.618)*0.3;\\ny = 0.5+cos(time*3.14)*0.3;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);\\n"},{"baseVals":{"sides":100,"thickoutline":1,"rad":0.50126,"tex_zoom":0.9998,"g":1,"b":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5+sin(-time*2.618)*0.4;\\ny = 0.5+cos(-time*1.14)*0.4;\\nrad = bass*0.05;\\nborder_r = 1-(sin(time*1.25)*0.3+0.7);\\nborder_g = 1-(sin(time)*0.3+0.3);\\nborder_b = 1-(sin(time/3)*0.5+0.5);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"scaling":0.16188,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"additive":1,"scaling":25.12601,"smoothing":1,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q11 = 0.5/asin(1);","frame_eqs_eel":"//zoom = 0.99;\\nib_r = sin(time*1.25*4)*0.3+0.7;\\nib_g = sin(time*4)*0.3+0.3;\\nib_b = sin(time/3*4)*0.5+0.5;\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1)); y1 = max(0,min(1,y1));\\n\\nspring = 10;\\ngrav = .5;\\nresist = 1;\\nbounce = 0.75;\\ndt = 0.0002*(60/fps);\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq4 = x4;\\nq8 = y4;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\n\\nzoom = 1;\\nwarp = 0;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\na = a*0.95 + q5;\\n\\ns = s*0.9 + a;\\nq3 = s*0.1;\\nmonitor = s;\\n\\nwave_a = 0;\\n\\nq9 = 0.5 + 0.5*sin(time*0.1);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\nxx = q4;\\nyy = 1-q8;\\n\\ndx = 0; dy = 0;\\n\\nd = sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\\n\\nr = 0.11;\\nv = 20;\\nv2 = q5;\\ndx = (v*(sin(y-yy)*(d-r)-(x-xx)*(d-r/2)) + cos(dir)*v2)*(1.00-sigmoid(d-r,100));\\ndy = (-v*(sin(x-xx)*(d-r)+(y-yy)*(d-r/2)) -sin(dir)*v2)*(1.00-sigmoid(d-r,100));","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 32.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.5;\\n  tmpvar_2.y = (1.0 - q9);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv_orig - tmpvar_2);\\n  float tmpvar_4;\\n  tmpvar_4 = (3.0 / tmpvar_3.y);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((tmpvar_3.x * tmpvar_4) * q9);\\n  tmpvar_5.y = (tmpvar_4 * q9);\\n  xlat_mutabled = (texsize.zw * 1.5);\\n  xlat_mutabledx = (texture (sampler_main, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz);\\n  xlat_mutabledy = (texture (sampler_main, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz - texture (sampler_main, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = xlat_mutabledx.y;\\n  tmpvar_6.y = xlat_mutabledy.y;\\n  vec2 x_7;\\n  x_7 = (tmpvar_6 * 8.0);\\n  ret_1 = (((texture (sampler_main, \\n    fract((((1.0 - \\n      abs(((fract(\\n        ((tmpvar_3 + vec2(0.5, 1.0)) * 0.5)\\n      ) * 2.0) - 1.0))\\n    ) + vec2(0.0, -0.02)) - ((\\n      (texture (sampler_noise_hq, ((tmpvar_5 * 0.05) + (vec2(0.1, -0.05) * time))) - 0.5)\\n     * \\n      float(int((tmpvar_3.y > 0.0)))\\n    ).xy * 0.025)))\\n  ).x * \\n    (1.0 - sqrt(dot (x_7, x_7)))\\n  ) * (\\n    (hue_shader * 6.0)\\n   - 4.0)) * 0.8);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = xlat_mutabledx.z;\\n  tmpvar_8.y = xlat_mutabledy.z;\\n  vec2 x_9;\\n  x_9 = (tmpvar_8 * 4.0);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (ret_1, vec3(1.0, 1.0, 1.0), vec3(sqrt(dot (x_9, x_9))));\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},4495:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"invert":1,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.25,"mv_g":0.5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"x":0.77,"y":0.79,"rad":0.31091,"ang":4.27256,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"a":0.96,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.04208,"tex_zoom":0.73458,"g":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q3;\\ny = q7;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.04208,"tex_zoom":0.73458,"g":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q2;\\ny = q6;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample*0.05;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = (q4-q6)*10;\\nc=2;\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + xx1-xx2;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 28;\\ngrav = 2;\\nresist = 0.2;\\nbounce = 0.94;\\ndt = 0.0001;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\nq1 = aspectx;\\nq2 = aspecty;\\nq4 = x4;\\n\\nq8 = y4;\\n\\n\\nzoom = 1;\\nwarp = 0;\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nob_r = (bb-min(min(bb,mm),tt))/(max(max(bb,mm),tt)-min(min(bb,mm),tt));\\nob_b = (mm-min(min(bb,mm),tt))/(max(max(bb,mm),tt)-min(min(bb,mm),tt));\\nob_g = (tt-min(min(bb,mm),tt))/(max(max(bb,mm),tt)-min(min(bb,mm),tt));\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);\\n\\nwave_a = 0;\\n// these lines belong to the composite shader\\na = a*0.98 - (bass-treb)*0.01;\\nq15 = a;\\nv = v*0.96 + a*0.12;\\nq16 = v;\\nw = w - v*0.01;\\nq18 = w;\\nq19 = 0.5-(bass_att-treb_att)*0.15;\\nd = d + (bass_att-0.5)*0.01*60/fps;\\nd2 = d2 + (treb_att-0.5)*0.006*60/fps;\\nq20 = d;\\nq21 = d2;\\nmonitor = d2;","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 + (y-0.5)*q2;\\n\\ndir = -q6*1 + asin(1)*1;\\n\\nb1 = 0.1; // distance\\nm1 = q5*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_fc_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":"vec2 xlat_mutablers;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (0.5 + ((uv - 0.5) * aspect.xy));\\n  xlat_mutablers.x = (((ang / 3.14) + (rad * \\n    (q15 - q16)\\n  )) - q18);\\n  vec2 x_2;\\n  x_2 = (uv_1 - 0.5);\\n  xlat_mutablers.y = ((0.1 / (0.05 + \\n    (sqrt(dot (x_2, x_2)) * 1.4)\\n  )) + q21);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(xlat_mutablers);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  tmpvar_4.x = texsize.z;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (tmpvar_4 * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = texsize.w;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 * 4.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_5)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_5)).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_7)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_7)).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = ((0.4 * cos(\\n    ((12.56 * tmpvar_3) - (vec2(0.0, 10.0) * (q21 + q20)))\\n  )) - (4.0 * tmpvar_8));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = pow (((\\n    (2.0 * (clamp ((0.02 / \\n      sqrt(dot (uv_1, uv_1))\\n    ), 0.0, 1.0) * hue_shader))\\n   * \\n    ((texture (sampler_main, tmpvar_3) * 4.0).xyz + 1.0)\\n  ) - 0.04), vec3(0.8, 0.8, 0.8));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = mix (tmpvar_9, tmpvar_9.zxy, vec3(q19)).zxy;\\n  ret = tmpvar_10.xyz;\\n }"}')},6110:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.136,"wave_smoothing":0.9,"modwavealphastart":1.6,"modwavealphaend":1.6,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_r":0,"wave_g":0.04,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":0.1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.99596,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample);\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nvolume = 0.3*(bass+mid+att);\\nxamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nyamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//wave_x = xpos + 0.5;\\n//wave_y = 1-(ypos + 0.5);\\nwave_r = 0.5 + 0.499*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = 0.5 + 0.499*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = 0.5 + 0.499*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nwave_mystery = -0.17 + 0.03*(0.6*sin(0.637*time) + 0.4*sin(0.949*time));\\nmv_r = if(beat, 1, ib_r);\\nmv_b = if(beat, wave_b, ib_b);\\n//mv_a = if(beat, 0.1, ib_a);\\n//ib_a = 0.015;\\nq3 = wave_mystery;\\nq1 = wave_x;\\nq2 = 1-wave_y;\\nq2 = ypos+0.5;\\nwarp=0;\\n\\n//q2 = 1-(ypos + 0.5);\\n//q1 = 0.5;\\n//q2=0.5;\\nob_r = 1-wave_g;\\nob_b = 1-wave_r;\\nob_g = 1-wave_b;\\n\\nmonitor = wave_y;\\nmovement =movement + 0.4*(((bass+bass_att + 0.1*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);\\nmovement = if(above(movement,10000), 0, movement);\\nrot =1*sin(movement);\\ncx = wave_x;\\ncy = y_pos+0.5;\\n\\nq8 = movement;","pixel_eqs_eel":"myy = x-q1;\\nmyx = y-q2+0.1;\\ndx = 3*sin(q8*0.675)*(2*myx*myy);\\ndy = 3*sin(q8*0.675)*((myx*myx) - (myy*myy));","warp":" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = texture (sampler_fc_main, tmpvar_3).z;\\n  ret_2.y = mix (mix (texture (sampler_fc_main, tmpvar_3).x, ret_2.x, 0.5), texture (sampler_main, uv_orig).y, 0.75);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 6.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.998) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \\n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\\n  .z) * 0.02));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 8.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.z;\\n  tmpvar_7.y = tmpvar_5.z;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.x;\\n  tmpvar_9.y = tmpvar_5.x;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.z;\\n  tmpvar_10.y = tmpvar_5.z;\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (uv - (tmpvar_10 * 1.4));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.y;\\n  tmpvar_12.y = tmpvar_5.y;\\n  vec2 tmpvar_13;\\n  tmpvar_13 = (uv - (tmpvar_12 * 0.1));\\n  vec4 tmpvar_14;\\n  tmpvar_14 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_14.x * vec3(0.7, 0.6, 0.5));\\n  vec3 tmpvar_15;\\n  tmpvar_15 = mix (mix (mix (\\n    mix (mix (mix (mix (\\n      mix (mix (ret_1, vec3(1.0, 0.8, 0.4), vec3((sqrt(\\n        dot (tmpvar_7, tmpvar_7)\\n      ) * 2.0))), vec3(0.8, 0.4, 0.0), vec3(sqrt(dot (tmpvar_6, tmpvar_6))))\\n    , vec3(1.0, 1.0, 0.0), vec3(\\n      ((((texture (sampler_blur2, \\n        (uv - (tmpvar_9 * 0.4))\\n      ).xyz * scale2) + bias2).z * ((tmpvar_2.xyz * scale1) + bias1).x) * 1.4)\\n    )), vec3(0.2, 0.0, 0.6), vec3((tmpvar_14.z * 2.0))), vec3(0.8, 0.7, 0.6), vec3(((\\n      (texture (sampler_blur1, tmpvar_11).xyz * scale1)\\n     + bias1).x * (\\n      (tmpvar_2.xyz * scale1)\\n     + bias1).z))), vec3(1.0, 1.0, 0.0), vec3((((\\n      (texture (sampler_blur2, tmpvar_11).xyz * scale2)\\n     + bias2).y * tmpvar_14.z) * 2.0)))\\n  , vec3(1.0, 1.0, 1.0), vec3(\\n    sqrt(dot (tmpvar_8, tmpvar_8))\\n  )), vec3(1.0, 0.0, 0.0), tmpvar_14.yyy), ((1.0 - texture (sampler_main, tmpvar_13).z) * vec3(1.0, 1.0, 0.0)), vec3(((\\n    (texture (sampler_blur1, tmpvar_13).xyz * scale1)\\n   + bias1).y * (\\n    (tmpvar_2.xyz * scale1)\\n   + bias1).y)));\\n  ret_1 = tmpvar_15;\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = tmpvar_15;\\n  ret = tmpvar_16.xyz;\\n }"}')},3057:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;","frame_eqs_eel":"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\nvol = bass*8 + mid*5 + treb*3;\\nm = m*0.96 + vol*0.06;\\nmonitor = vol-m;\\nbeat = above(vol,res)*above(vol,m)*above(vol,10);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.15) + (1-beat)*(res -  (0.15+diff*0.03)*60/fps);\\nres = max(0,res);\\n\\nr = if(beat, 0.02*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\nv = if(beat,0.035 + 0.025*(rand(200)-100)*0.01, v);\\n\\nw = w + (0.07-v)*90;\\n\\nq3 = c_x;\\nq4 = c_y;\\nq5 = v;\\nq6 = beat;\\nq7 = w;","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),0.5)-0);\\nv = q5;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = mix (uv_orig, uv, vec2(0.35, 0.35));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_6 - ((tmpvar_7 * texsize.zw) * 4.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.z;\\n  tmpvar_9.y = tmpvar_5.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (tmpvar_6 - ((tmpvar_9 * texsize.zw) * 4.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_main, uv_orig);\\n  ret_1.y = (((\\n    (texture (sampler_main, tmpvar_8).y - (((\\n      (tmpvar_11.xyz * scale1)\\n     + bias1).y - texture (sampler_main, tmpvar_8).y) * 0.024))\\n   - 0.009) + (\\n    (1.0 - tmpvar_12.x)\\n   * 0.014)) + (tmpvar_2 * 0.02)).x;\\n  ret_1.z = (((\\n    (texture (sampler_main, tmpvar_10).z - (((\\n      (tmpvar_11.xyz * scale1)\\n     + bias1).z - texture (sampler_main, tmpvar_10).z) * 0.024))\\n   - 0.009) + (tmpvar_12.x * 0.014)) + (tmpvar_2 * 0.02)).x;\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.4) + (tmpvar_2 * 0.004)).x);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_1;\\n  ret = tmpvar_13.xyz;\\n }","comp":"vec2 xlat_mutabled;\\n shader_body { \\n  float fnord_1;\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  float tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv);\\n  tmpvar_2 = (tmpvar_3.x * (1.0 - tmpvar_3.z));\\n  float tmpvar_4;\\n  tmpvar_4 = ((1.0 - tmpvar_3.y) * (1.0 - tmpvar_3.x));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_5.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (((uv - 0.5) + (tmpvar_5 * 0.15)) * texsize.xy);\\n  float tmpvar_7;\\n  tmpvar_7 = clamp (((float(mod (\\n    ((abs(tmpvar_6.x) + abs(tmpvar_6.y)) + q7)\\n  , 64.0))) - 32.0), 0.0, 1.0);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp (((float(mod (\\n    ((-(abs(tmpvar_6.x)) - abs(tmpvar_6.y)) + q7)\\n  , 64.0))) - 32.0), 0.0, 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = sqrt(dot (tmpvar_6, tmpvar_6));\\n  if ((tmpvar_9 > (0.25 * texsize.y))) {\\n    fnord_1 = tmpvar_8;\\n  } else {\\n    fnord_1 = tmpvar_7;\\n  };\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = (mix (vec3(fnord_1), vec3(1.0, 0.0, 0.0), vec3(tmpvar_2)) * (vec3(1.0, 1.0, 1.0) - vec3(tmpvar_4)));\\n  ret = tmpvar_10.xyz;\\n }"}')},4629:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.9217,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_g":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.02015,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"a":0.1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":3.0054,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"thickoutline":1,"x":1,"rad":0.39872,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = sample;\\nx = 0.5 + t8*0.005;\\n\\npi3 = 3.1415*2*0.3333;\\nt = time + sample*2;\\nc=2;\\n\\nr = sin(t)*c;\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"decay = 1;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*1.5;\\ny1 = 0.5 + yy1;\\n\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 18;\\ngrav = 1;\\nresist = 5;\\nbounce = 0.9;\\ndt = 0.0003;\\n\\nvx2 = vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring);\\nvy2 = vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav);\\nvx3 = vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring);\\nvy3 = vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav);\\nvx4 = vx4*(1-resist*dt) + dt*((x3-x4)*spring);\\nvy4 = vy4*(1-resist*dt) + dt*((y3-y4)*spring-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nwarp = 0;\\nzoom = 1.00;\\nq6 = atan2(vx4,vy4);\\nq5 = sqrt(vx4*vx4 + vy4*vy4);","pixel_eqs_eel":"dir = -q6*1 + asin(1)*1;\\n\\nb1 = 0.1; // distance\\nm1 = q5*25;//-0.6 + q5*200; // size\\nt1 = 0.05; // velocity\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*b1;\\ny1 = yy -sin(dir+1.5708)*b1;\\n\\nx2 = xx   -cos(dir+1.5708)*b1;\\ny2 = yy +sin(dir+1.5708)*b1;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\nsi3 = -pow(q5,3)*00;\\n\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2 + si3*cos(dir)*t1)*2;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2 - si3*sin(dir)*t1)*2;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.006)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.85);\\n  ret_2.z = (ret_2.z + 0.008);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.03));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - q4);\\n  tmpvar_2.y = q8;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 + ((uv - tmpvar_2) * 0.992));\\n  ret_1 = (mix (mix (vec3(0.0, 0.0, 0.2), vec3(0.3, 0.0, 1.0), texture (sampler_fw_main, tmpvar_3).yyy), vec3(1.0, 1.0, 0.0), vec3(max (\\n    (((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1).z * 1.5)\\n  , texture (sampler_main, \\n    (tmpvar_2 + ((uv - tmpvar_2) * 0.996))\\n  ).z))) * (1.0 - (\\n    ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1)\\n  .x * 2.0)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (ret_1, vec3(1.0, 0.1, 0.4), texture (sampler_fw_main, uv).xxx);\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},331:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":1.554,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.19913,"warp":0.01359,"wave_r":0,"wave_b":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0.5,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.86644,"g":0.03,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"vx = 0.5+cos(time*0.2)*.5;\\nvy = 0.5+sin(time*0.2)*.5;\\nx = x - vx;\\ny = y - vy;\\n\\nd = time*0.1;\\nxx = sin(d)*x + cos(d)*y;\\nyy = cos(d)*x - sin(d)*y;\\n\\nx = xx;\\ny = yy;\\n\\ncz = 0.5;\\nzoom = 0.33;\\nw = 1/zoom*(1+sqrt(sqr(cz) + sqr(x-cx)+sqr(y-cy)));\\ndx = (x-mx)*w;\\ndy = (y-my)*w;","warp":" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).x * 0.5);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \\n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\\n  .z) * 0.02));\\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.9996, 0.9996))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix ((texture (sampler_fc_main, (uv - \\n    (tmpvar_2 * 0.4)\\n  )).x * pow (hue_shader.zxy, vec3(4.0, 4.0, 4.0))), (mix (\\n    (pow (hue_shader, vec3(6.0, 6.0, 6.0)) * 1.2)\\n  , \\n    pow (hue_shader, vec3(8.0, 8.0, 8.0))\\n  .yzx, texture (sampler_main, uv).yyy) * 2.0), vec3(((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1).z * 0.7)));\\n  ret = tmpvar_3.xyz;\\n }"}')},933:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.0039,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"r":0,"g":0.3,"b":0.75,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"r":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"g":0.5,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"r":0.4,"g":0,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nzoom = 1.0;\\n\\nbb = bb*0.99 + bass*0.02;\\nmm = mm*0.99 + mid*0.02;\\ntt = tt*0.99 + treb*0.02;\\n\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nib_r = (bb-mn)/(mx-mn);\\nib_b = (mm-mn)/(mx-mn);\\nib_g = (tt-mn)/(mx-mn);","pixel_eqs_eel":"// have a nice warp effect? - rotate it like a shape!\\n\\n  angle = asin(1)*0.5 + sin(time*0.05)*asin(1);\\n\\n/////////////////////////////////////////////////////////\\nX1 = (x-0.5)*aspectx; // center\\nY1 = (y-0.5)*aspecty;\\nx = cos(-angle)*X1 -sin(-angle)*Y1; // rotate the original x/y coordinates\\ny = sin(-angle)*X1 +cos(-angle)*Y1;\\n/////////////////////////////////////////////////////////\\n// x = x + 0.5;\\n// y = y + 0.5;\\n// place your original code below (so far center is at 0,0)\\n\\n\\n  t = time*0.25;\\n  v = 0.0005;\\n  n = 11;\\n\\n  dx = v*sin(y*n+t); // these are the 2 lines for my mushroom motion\\n  dy = v*sin(x*n+t); // insert your per-vertex-code-to-rotate here (and shift back center to 0.5/0.5 if needed)\\n\\n\\n\\n/////////////////////////////////////////////////////////\\ndx1 = cos(angle)*dx - sin(angle)*dy; // and finally rotate the resulting vector for the rotated domain\\ndy1 = sin(angle)*dx + cos(angle)*dy;\\ndx = dx1*aspectx;\\ndy = dy1*aspecty;\\n/////////////////////////////////////////////////////////","warp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  xlat_mutabledy = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 6.0)\\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 6.0)\\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    ((2.0 * ret_1.x) - (2.0 * ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x))\\n   * 0.075) + (tmpvar_2 * 0.0042)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * d_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  dy_2 = (((2.0 * \\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * d_4))).xyz * scale1) + bias1)\\n  )) * 0.5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 2.0) + tmpvar_9);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_blur1, uv);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   * 2.0) + (\\n    ((tmpvar_10.xyz * scale1) + bias1)\\n  .y * 2.0))) * vec3(0.2, 0.3, 0.6));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q19;\\n  tmpvar_11.y = q20;\\n  vec2 tmpvar_12;\\n  tmpvar_12 = fract(((0.5 + \\n    (uv - 0.5)\\n  ) + (tmpvar_11 * vec2(-1.0, 1.0))));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = dx_3.y;\\n  tmpvar_13.y = dy_2.y;\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (((\\n    (mix (ret_5, vec3(3.0, 2.0, 1.0), ((texture (sampler_blur3, \\n      (tmpvar_12 - tmpvar_13)\\n    ).xyz * scale3) + bias3).xxx) * (vec3(1.0, 1.0, 1.0) - ((texture (sampler_blur2, \\n      (tmpvar_12 - dz_1)\\n    ).xyz * scale2) + bias2).xxx))\\n   * \\n    (vec3(1.0, 1.0, 1.0) - vec3((0.75 * texture (sampler_main, tmpvar_12).x)))\\n  ) * (vec3(1.0, 1.0, 1.0) - vec3(\\n    (((tmpvar_10.xyz * scale1) + bias1).z * 4.0)\\n  ))), vec3(2.0, 2.0, 2.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = tmpvar_14;\\n  ret = tmpvar_15.xyz;\\n }"}')},3397:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.073,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"a":0.96,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\\ny = q5;"},{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"a":0.96,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q2;\\ny = q6;"},{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"b":1,"a":0.96,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q7;"},{"baseVals":{"sides":24,"rad":0.0639,"tex_ang":0.12566,"tex_zoom":1.51878,"g":1,"b":1,"a":0.96,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q4;\\ny = q8;"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0.33},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*6;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"additive":1,"scaling":1.69136,"smoothing":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\n\\nx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\ny = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":1.69136,"smoothing":0,"g":0,"b":0,"a":0.3},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*q1 + 5*pow(sample,4)*(1-sample)*q1 + 10*pow(sample,3)*sqr(1-sample)*q2\\n+ 10*sqr(sample)*pow(1-sample,3)*q3 + 5*pow(1-sample,4)*sample*q4 + pow(1-sample,5)*q4;\\n\\nyy = pow(sample,5)*q5 + 5*pow(sample,4)*(1-sample)*q5 + 10*pow(sample,3)*sqr(1-sample)*q6\\n+ 10*sqr(sample)*pow(1-sample,3)*q7 + 5*pow(1-sample,4)*sample*q8 + pow(1-sample,5)*q8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = sample*(1-sample)*sin(sample*180)*d*0.1;\\nx = xx + (yy-yyy)*dd;\\ny = yy - (xx-xxx)*dd;\\n\\nx = 0.5 + (x-0.5)*q9;\\ny = 0.5 + (y-0.5)*q10;\\n"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n// elastic thread code\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4)*0.8;\\nq14 = atan2(vx4,vy4);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q11;\\ny = 0.5 + (y-0.5)*q12;\\ndir = -q14*1 + asin(1)*1;\\n\\nvelocity = q13;\\nstrength = 100;\\nsize = 0.07;\\n\\nxx = q4;\\nyy = 1-q8;\\n\\n\\nx1 = xx   +cos(dir+1.5708)*size;\\ny1 = yy -sin(dir+1.5708)*size;\\n\\nx2 = xx   -cos(dir+1.5708)*size;\\ny2 = yy +sin(dir+1.5708)*size;\\n\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-size*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\n\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-size*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\n\\ndx = (si1*sin(y1-y)*d1  - si2*sin(y2-y)*d2)*strength*velocity;\\ndy = (-si1*sin(x1-x)*d1 + si2*sin(x2-x)*d2)*strength*velocity;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  tmpvar_1.xyz = ((texture (sampler_main, clamp (\\n    (uv - (((vec2(0.0, 32.0) * texsize.zw) * dot (\\n      (tmpvar_2.xyz - 0.35)\\n    , vec3(0.32, 0.49, 0.29))) * (dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy)\\n  ) - 0.5) * 0.0038).xyz);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_6.x = (texture (sampler_main, (uv + tmpvar_7)).xyz - texture (sampler_main, (uv - tmpvar_7)).xyz).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_6.y = (texture (sampler_main, (uv + tmpvar_8)).xyz - texture (sampler_main, (uv - tmpvar_8)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.y;\\n  dz_1 = ((tmpvar_6 * 3.0) + tmpvar_9);\\n  ret_5 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dx_3.x;\\n  tmpvar_10.y = dy_2.x;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (mix (ret_5, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv + ((tmpvar_10 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\\n  ret_5 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},4636:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":2,"x":0.49,"rad":0.09902,"tex_zoom":4.36077,"r":0,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(1000))/1000;\\ny = int(rand(1000))/1000;\\nang = int(rand(150))/100;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"x":0.7,"y":0.3,"rad":0.18348,"ang":2.45044,"tex_zoom":0.74934,"g":0.1,"b":0.1,"r2":1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"x = q4 + 0.5;\\ny = q5 + 0.5;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+int(rand(200))/1000,xx);\\nyy = if(below(d,0.15),0.3+int(rand(400))/1000,yy);\\naang = if(below(d,0.12),int(rand(1000))/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"usedots":1,"thick":1,"scaling":9.94114,"smoothing":0,"r":0,"g":0.1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\ny = 0.5 + d*sample*(1-sample);\\nx = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nq1=ib_r;\\nq2=ib_g;\\nq3=ib_b;\\n\\n\\n\\ndecay =1;\\n\\n\\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\\n//solarize=above(0.5,bass);\\n//darken=above(0.4,treb);\\n\\nmusictime=musictime+(mid*mid*mid)*0.02*(75/fps);\\n\\nxpos=cos(musictime*0.6)*0.6;\\nypos=sin(musictime*0.4)*0.6;\\nq4=xpos;\\nq5=ypos;\\n\\n// these lines belong to the composite shader\\na = a*0.98 - (bass-treb)*0.01;\\nq15 = a;\\nv = v*0.96 + a*0.12;\\nq16 = v;\\nw = w - v*0.01;\\nq18 = w;\\nq19 = 0.5-(bass_att-treb_att)*0.15;\\nd = d + (bass_att-0.5)*0.01*60/fps;\\nd2 = d2 + (treb_att-0.5)*0.006*60/fps;\\nq20 = d;\\nq21 = d2;\\nmonitor = d2;","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\\n//var=(bass+mid+treb)/3;\\n//rot=((ang&rad/rad)/(var*20))/10;\\n//sx=.99-(var*0.01);\\n//cx=var*0.1*(ang/12);\\n//sy=sx;\\n\\n//zoom=-1;\\nsx=-1+(bass*0.2);\\nsy=-1-(treb*0.2);\\n\\ncx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\n//zm=(1.1-(rd/4));\\nzm=1;\\n\\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\\nstar=sin(ag*6+time)*((2-rd)-ag)/5;\\nzm=zm+star/20;\\nsx=zm*rd;\\nsy=zm*rd;\\n//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1.x = (tmpvar_2.x - ((\\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).x - tmpvar_2.x)\\n   + 0.004) * 0.04));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_orig - 0.5) * vec2(1.8, 1.8));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((tmpvar_3.x * tmpvar_3.x) - (tmpvar_3.y * tmpvar_3.y));\\n  tmpvar_4.y = ((2.0 * tmpvar_3.x) * tmpvar_3.y);\\n  ret_1.y = (texture (sampler_fc_main, (tmpvar_4 + vec2(0.25, 0.551))).y + 0.0038);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 12.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.8)) + rand_frame.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_5))\\n  ).xyz * scale1) + bias1)).z;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((mix (uv_orig, uv, vec2(0.02, 0.02)) + (\\n    (tmpvar_7 * texsize.zw)\\n   * 4.0)) + ((\\n    (texture (sampler_noise_lq, tmpvar_6).xy - 0.5)\\n   * texsize.zw) * 4.0));\\n  ret_1.z = (((texture (sampler_fc_main, tmpvar_8).z - \\n    ((texture (sampler_fc_main, tmpvar_8).z - ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3).z) * 0.02)\\n  ) - 0.008) + ((texture (sampler_noise_lq, tmpvar_6).z - 0.5) * 0.1));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":"vec2 xlat_mutablers;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (0.5 + ((uv - 0.5) * aspect.xy));\\n  xlat_mutablers.x = (((ang / 3.14) + (rad * \\n    (q15 - q16)\\n  )) - q18);\\n  vec2 x_2;\\n  x_2 = (uv_1 - 0.5);\\n  xlat_mutablers.y = ((0.1 / (0.05 + \\n    (sqrt(dot (x_2, x_2)) * 1.4)\\n  )) + q21);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(xlat_mutablers);\\n  vec2 tmpvar_4;\\n  tmpvar_4.y = 0.0;\\n  tmpvar_4.x = texsize.z;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (tmpvar_4 * 4.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = texsize.w;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 * 4.0);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_5)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_5)).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_7)).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_7)).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = ((0.4 * cos(\\n    ((12.56 * tmpvar_3) - (vec2(0.0, 10.0) * (q21 + q20)))\\n  )) - (4.0 * tmpvar_8));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = pow (((\\n    (2.0 * (clamp ((0.02 / \\n      sqrt(dot (uv_1, uv_1))\\n    ), 0.0, 1.0) * hue_shader))\\n   * \\n    ((texture (sampler_main, tmpvar_3) * 4.0).xyz + 1.0)\\n  ) - 0.04), vec3(0.8, 0.8, 0.8));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = mix (tmpvar_9, tmpvar_9.zxy, vec3(q19)).zxy;\\n  ret = tmpvar_10.xyz;\\n }"}')},3286:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.136,"wave_smoothing":0.9,"modwavealphastart":1.6,"modwavealphaend":1.6,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_r":0,"wave_g":0.04,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":0.1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"rad":0.99596,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"thick":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample);\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nvolume = 0.3*(bass+mid+att);\\nxamptarg = if(equal(frame%15,0),min(0.25*volume*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nyamptarg = if(equal(frame%15,0),min(0.15*volume*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\n//wave_x = xpos + 0.5;\\n//wave_y = 1-(ypos + 0.5);\\nwave_r = 0.5 + 0.499*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = 0.5 + 0.499*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = 0.5 + 0.499*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nwave_mystery = -0.17 + 0.03*(0.6*sin(0.637*time) + 0.4*sin(0.949*time));\\nmv_r = if(beat, 1, ib_r);\\nmv_b = if(beat, wave_b, ib_b);\\n//mv_a = if(beat, 0.1, ib_a);\\n//ib_a = 0.015;\\nq3 = wave_mystery;\\nq1 = wave_x;\\nq2 = 1-wave_y;\\nq2 = ypos+0.5;\\nwarp=0;\\n\\n//q2 = 1-(ypos + 0.5);\\n//q1 = 0.5;\\n//q2=0.5;\\nob_r = 1-wave_g;\\nob_b = 1-wave_r;\\nob_g = 1-wave_b;\\n\\nmonitor = wave_y;\\nmovement =movement + 0.4*(((bass+bass_att + 0.1*pow((bass+0.6*bass_att+0.2*treb_att),3)))/fps);\\nmovement = if(above(movement,10000), 0, movement);\\nrot =1*sin(movement);\\ncx = wave_x;\\ncy = y_pos+0.5;\\n\\nq8 = movement;","pixel_eqs_eel":"myy = x-q1;\\nmyx = y-q2+0.1;\\ndx = 3*sin(q8*0.675)*(2*myx*myy);\\ndy = 3*sin(q8*0.675)*((myx*myx) - (myy*myy));","warp":" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = texture (sampler_fc_main, tmpvar_3).z;\\n  ret_2.y = mix (mix (texture (sampler_fc_main, tmpvar_3).x, ret_2.x, 0.5), texture (sampler_main, uv_orig).y, 0.75);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 6.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.998) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\\n  ).xyz * scale1) + bias1)).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \\n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\\n  .z) * 0.02));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},9864:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.9,"echo_zoom":0.710682,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.311604,"wave_scale":1.22891,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoom":0.999902,"warp":0.207965,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.0065,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"x":0.37,"rad":2.999997,"ang":3.644249,"r":0,"a":0.5,"g2":0,"a2":0.3,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"ang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.2*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.2*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.2*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.37,"rad":0.706533,"ang":3.644249,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*1.25+3);\\ny = y + 0.03*sin(time*1.49+1);\\nang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.706533,"ang":4.209736,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*2.17);\\ny = y + 0.03*sin(time*1.83);\\nang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":6,"rad":0.161222,"g":1,"r2":1,"g2":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.2*sin(time*1.14);\\ny = y + 0.1*sin(time*0.93+2);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_mystery = time*0.2;","pixel_eqs_eel":"","warp":"","comp":""}')},5212:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"wave_mode":6,"modwavealphabyvolume":1,"wave_a":0.22,"wave_scale":1.141,"wave_smoothing":0.522,"wave_mystery":0.4,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoom":1.023,"warp":0.14846,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.650*( 0.60*sin(1.437*time) + 0.40*sin(0.970*time) );\\nwave_g = wave_g + 0.650*( 0.60*sin(1.344*time) + 0.40*sin(0.841*time) );\\nwave_b = wave_b + 0.650*( 0.60*sin(1.251*time) + 0.40*sin(1.055*time) );\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.005*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.005*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual*0.33;\\ndy = dy + dy_residual*0.33;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2)*0.016*sin(time*7) + (1-equal(bass_thresh,2))*dx_residual;\\ndy_residual = equal(bass_thresh,2)*0.012*sin(time*9) + (1-equal(bass_thresh,2))*dy_residual;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.z = 0.0;\\n  tmpvar_2.xy = texsize.zw;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (tmpvar_2 * 2.5);\\n  ret_1 = (texture (sampler_main, uv).xyz * 0.5);\\n  ret_1 = (ret_1 + (vec3(1.4, 0.98, 0.42) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.xz)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 + (vec3(0.28, 0.7, 0.98) * (\\n    dot (((texture (sampler_blur1, (uv + tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n   - \\n    dot (((texture (sampler_blur1, (uv - tmpvar_3.zy)).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\\n  )));\\n  ret_1 = (ret_1 * 1.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }"}')},4571:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"wave_mode":7,"modwavealphabyvolume":1,"wave_a":0.207218,"wave_scale":0.397108,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpanimspeed":0.451118,"warpscale":3.03984,"zoomexp":2.95821,"zoom":1.00971,"warp":0.131259,"wave_g":0.999999,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);\\n//zoom = 1;\\n//warp = 0;\\nzoom = zoom + 0.2*(0.01*cos(time*0.317+1) + 0.01*cos(time*0.1132+4));\\nrot  = rot  + 0.5*(0.01*cos(time*0.214+3) + 0.01*cos(time*0.2732+2));\\nwave_mystery = time*0.05;\\n//zoom = zoom + (max(1, bass_att)-1)*0.01;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\\n   / 256.0) * 28.0));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\\n  ret_1 = tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = tmpvar_3;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }"}')},6028:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"decay":0.97,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.03,"ob_r":0.2,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"it = it + 1;\\n\\na = equal(it%20,0);\\na = 1;","point_eqs_eel":"x = int(rand(101))*.01;\\ny = int(rand(101))*.01;"},{"baseVals":{"enabled":1,"sep":51,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"tm = int(rand(101))*.01*6.24;\\ndt = int(rand(101))*.01;\\n\\n\\nt1 = .5 + .5*sin(tm)*dt;\\nt2 = .5 + .5*cos(tm)*dt;\\n\\nr = .5 + .5*sin(time*1.132);\\ng = .5 + .5*sin(time*1.121);\\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\\nsw = equal(it%2,0);\\nit = if(equal(sample,0),0,it + 1);\\n\\nmod = bass;\\n\\nax = t1 + sin(sample*6.28)*mod*.1;\\nay = t2 + cos(sample*6.28)*mod*.1;\\nbx = t1 + sin(sample*6.28)*mod*.005;\\nby = t2 + cos(sample*6.28)*mod*.005;\\n\\nx = if(sw,bx,ax);\\ny = if(sw,by,ay);\\n\\na = if(sw,equal(int(rand(7)),0)*.1,0);\\n\\na = sw*.2;"},{"baseVals":{"enabled":1,"sep":51,"thick":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"tm = int(rand(101))*.01*6.24;\\ndt = int(rand(101))*.01;\\n\\n\\nt1 = .5 + .5*sin(tm)*dt;\\nt2 = .5 + .5*cos(tm)*dt;\\n\\nr = .5 + .5*sin(time*1.132);\\ng = .5 + .5*sin(time*1.121);\\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\\nsw = equal(it%2,0);\\nit = if(equal(sample,0),0,it + 1);\\n\\nmod = treb;\\n\\nax = t1 + sin(sample*6.28)*mod*.1;\\nay = t2 + cos(sample*6.28)*mod*.1;\\nbx = t1 + sin(sample*6.28)*mod*.005;\\nby = t2 + cos(sample*6.28)*mod*.005;\\n\\nx = if(sw,bx,ax);\\ny = if(sw,by,ay);\\n\\na = if(sw,equal(int(rand(7)),0)*.1,0);\\n\\na = sw*.2;"},{"baseVals":{"enabled":1,"sep":51,"thick":1,"additive":1,"scaling":1.32735,"smoothing":0.82,"b":3},"init_eqs_eel":"","frame_eqs_eel":"tm = int(rand(101))*.01*6.24;\\ndt = int(rand(101))*.01;\\n\\nt1 = .5 + .5*sin(tm)*dt;\\nt2 = .5 + .5*cos(tm)*dt;\\n\\nr = .5 + .5*sin(time*1.132);\\ng = .5 + .5*sin(time*1.121);\\nb = .5 + .5*sin(time*1.187);","point_eqs_eel":"sp = int(sample*4);\\nsw = equal(it%2,0);\\nit = if(equal(sample,0),0,it + 1);\\n\\nax = t1 + sin(sample*6.28)*mid*.1;\\nay = t2 + cos(sample*6.28)*mid*.1;\\nbx = t1 + sin(sample*6.28)*mid*.005;\\nby = t2 + cos(sample*6.28)*mid*.005;\\n\\nx = if(sw,bx,ax);\\ny = if(sw,by,ay);\\n\\na = if(sw,equal(int(rand(7)),0)*.1,0);\\n\\na = sw*.2"}],"init_eqs_eel":"colorcounter = 1;\\ncounter1 = 0;\\ncounter2 = 1;\\ncdelay1 = 0;\\ncdelay2 = 0;\\nrx = .5;\\nry = .5;\\nxm = 0;\\nym =0;\\norx = .5;\\nory = .5;\\nwave_x = .5;\\nwave_y = .5;\\noldx = int(rand(100))*.01;\\noldy = int(rand(100))*.01;","frame_eqs_eel":"warp = 0;\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.05),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.05),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\noldx = if(equal(colorcounter%2,1),if(equal(counter1,.95),rx,oldx),if(equal(counter2,.95),rx,oldx));\\noldy = if(equal(colorcounter%2,1),if(equal(counter1,.95),ry,oldy),if(equal(counter2,.95),ry,oldy));\\nrx = if(equal(cdelay1,1),int(rand(100))*.01,rx);\\nry = if(equal(cdelay1,1),int(rand(100))*.01,ry);\\nxm = if(equal(cdelay1,1),(rx - oldx)*.05,xm);\\nym = if(equal(cdelay1,1),(ry - oldy)*.05,ym);\\nmonitor = colorcounter;\\nwave_r = bass*.4;\\nwave_g = treb*.4;\\nwave_b = mid*.4;\\nwave_a = bass;\\nwave_mystery = -.5+bass*.1;\\nwave_x = rx - (if(equal(colorcounter%2,1),abs(counter1-1)*(xm*20),abs(counter2-1)*(xm*20)));\\nwave_y = ry - (if(equal(colorcounter%2,1),abs(counter1-1)*(ym*20),abs(counter2-1)*(ym*20)));\\nzoom = .995;","pixel_eqs_eel":"","warp":"","comp":" shader_body { \\n  vec3 orig_1;\\n  vec3 ret_2;\\n  float tmpvar_3;\\n  tmpvar_3 = fract(((\\n    (ang / 6.28)\\n   * 9.0) + (time * 0.05)));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = cos(tmpvar_3);\\n  tmpvar_4.y = sin(tmpvar_3);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, (0.5 + ((1.75 * \\n    (rad * rad)\\n  ) * tmpvar_4)));\\n  ret_2 = tmpvar_5.xyz;\\n  orig_1 = ret_2;\\n  ret_2.yz = vec2(dot (tmpvar_5.xyz, vec3(0.32, 0.49, 0.29)));\\n  ret_2.x = orig_1.x;\\n  ret_2 = (-0.3 + (1.6 * ret_2));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }"}')},6743:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.94,"echo_zoom":1,"echo_orient":1,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"invert":1,"wave_a":4.1,"wave_scale":2.85,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.12,"warp":0.08081,"sx":1.05101,"sy":1.07213,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_r":0.6,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0.005,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"y":0.9,"rad":0.15493,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"rad":0.98608,"tex_ang":3.14159,"tex_zoom":0.75668,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=1;\\nzoom=-1.00;\\nms=sin(time*0.6)*0.15;\\nmss=mss+ms*0.001;\\nq1=ms;\\n\\n\\n//rot=sin(time)*0.01;\\n\\n//echo_zoom=1 + ( sin(time*0.6)*0.5+0.5 )*3;\\ndx=0;dy=0","pixel_eqs_eel":"it = 0.3*bass_att;\\nradm = rad*500;\\nrot = -0.02*tan((radm+it)*30)/((rad+0.1)*(bass_att*500));\\nvar=2-atan(bass_att*4);\\nmod = atan(ang*var)+(bass_att*2);\\nmod = mod*cos(rad)-cos(ang);\\nzoom = .89 + abs(0.02*mod)+(bass_att*0.01);","warp":" shader_body { \\n  vec2 my_uv_1;\\n  float dy_2;\\n  float dx_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (texsize.zw * 12.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_5)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_5))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_5)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_5))))\\n  ).xyz * scale2) + bias2)).y;\\n  tmpvar_6.y = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_5)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_5))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_5)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_5))))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - (tmpvar_6 * 0.08));\\n  ret_4.y = texture (sampler_fc_main, (tmpvar_7 - floor(tmpvar_7))).y;\\n  ret_4.y = (ret_4.y + ((\\n    (ret_4.y - ((texture (sampler_blur1, (tmpvar_7 - \\n      floor(tmpvar_7)\\n    )).xyz * scale1) + bias1).y)\\n   * 0.125) + 0.02));\\n  dx_3 = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).x * 1280.0) * texsize.z);\\n  dy_2 = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).x * 1024.0) * texsize.w);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dx_3;\\n  tmpvar_8.y = dy_2;\\n  my_uv_1 = (uv + (tmpvar_8 * 0.01));\\n  ret_4.x = texture (sampler_fw_main, my_uv_1).x;\\n  ret_4.x = (ret_4.x + ((\\n    (ret_4.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   - 0.02) * 0.2));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dy_2;\\n  tmpvar_9.y = -(dx_3);\\n  my_uv_1 = (uv - (tmpvar_9 * 0.04));\\n  ret_4.z = texture (sampler_fw_main, my_uv_1).z;\\n  ret_4.z = (ret_4.z + (ret_4.z - (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1).z));\\n  ret_4.z = (ret_4.z * (0.9 * (\\n    (ret_4.x + (ret_4.y * 0.64))\\n   - 1.0)));\\n  ret_4.z = (ret_4.z + 0.02);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_4;\\n  ret = tmpvar_10.xyz;\\n }","comp":""}')},1723:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1.700001,"decay":0.99,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":2.256828,"wave_scale":1.199241,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.1,"ob_r":0.01,"ib_size":0.26,"mv_x":12.64,"mv_y":12.84,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"decay=0.5;","frame_eqs_eel":"wave_myster=bass_att-1;\\nmv_r=sin(1.39+time*1.55)*bass_att;\\nmv_g=sin(1.59+time*1.75)*bass_att;\\nmv_b=sin(1.79+time*1.95)*bass_att;\\nwave_r=mv_g;\\nwave_b=mv_r;\\nwave_g=mv_b;\\nrot=rot+(bass_att-1)*.2;\\ndecay=if(time%20,.99,.5)","pixel_eqs_eel":"dx=sin(sqrt(sqr(x*15)*15))*.01;\\ndy=sin(sqrt(sqr(y*15)*15))*.01;","warp":"","comp":""}')},8465:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1,"wave_scale":0.535234,"wave_smoothing":0.5,"wave_mystery":-0.5,"modwavealphastart":0.5,"modwavealphaend":1,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"ob_size":0.005,"ob_r":0.4,"ob_g":0.3,"ob_a":1,"ib_r":1,"ib_g":0.6,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":2,"mv_dy":-0.1,"mv_l":5,"mv_r":0.2,"mv_a":0.5},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = 0.5 + 0.3*sin(time*0.894);\\nwave_g = 0.53 + 0.33*sin(time*1.14);\\nwave_b = 0.4 + 0.1*(1-bass);\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ntest = equal(thresh,2);\\ndx_r = test*0.002*sin(5*time)+(1-test)*dx_r;\\ndy_r = test*0.002*sin(6*time)+(1-test)*dy_r;\\nzoom = zoom -0.01*thresh;\\ndx = 1.1* dx_r;\\ndy = 1.1* dy_r;\\ndx = dx + if (above(bass,1.3), 21*dx_r, 0);\\nmv_x = if(test,2,64);\\nmv_y = if(test,64,2);\\nmv_dx = if(test,-0.1,0);\\nmv_dy = if(test,0,-0.1);\\nmv_a = if(test,1,0.5);\\nxpos = xpos + 0.05*(80*dx_r - xpos);\\nypos = ypos + 0.05*(80*dy_r - ypos);\\nwave_x = 0.5 - xpos + 0.1*sin(2*time);\\nwave_y = 0.5 - ypos + 0.1*cos(2*time);\\nq1 = wave_x;\\nq2 = 1 - wave_y;","pixel_eqs_eel":"newx = x - q1;\\nnewy = y - q2;\\nnewrad = sqrt((newx)*(newx)+0.5625*(newy)*(newy))*2;\\nnewzoom = pow(1.03, pow(0.01+sin(newrad*newrad), newrad*2-1));\\ndx = min(5*newrad,1)*dx + max(-newrad*5+1,0)*((newx)*newzoom - newx);\\ndy = min(5*newrad,1)*dy + max(-newrad*5+1,0)*((newy)*newzoom - newy);","warp":"","comp":""}')},7602:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"decay":1,"echo_zoom":1,"wave_mode":1,"wave_brighten":0,"wave_a":1,"wave_scale":0.504,"wave_mystery":0.24,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"zoom":1.0201,"warp":0.81954,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.2,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.06,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dx=-0.0005;\\ndy=-0.0005;\\nvol = (bass+mid+att)/6;\\nxamptarg = if(equal(frame%15,0),min(0.5*vol*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nwave_x = xpos + 0.5;\\nyamptarg = if(equal(frame%15,0),min(0.3*vol*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nwave_y = ypos + 0.5;\\nwave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nrot = rot + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\\ncx = cx + 0.410*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.410*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nwave_mystery = wave_mystery + 0.15*( 0.60*sin(0.629*time) + 0.40*sin(1.826*time) );\\nwarp = warp*vol;\\nzoom = zoom - 0.02*zoom*bass_att;\\nzoom_exp = 1.5*( 0.60*sin(0.381*time) + 0.40*sin(0.479*time) );\\nob_a = 1 - 2*vol;\\nmonitor = zoom_exp;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 z_1;\\n  vec3 tmpvar_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.1 * texsize.zw);\\n  tmpvar_2 = (0.25 * ((\\n    (texture (sampler_main, (uv + tmpvar_3)).xyz + texture (sampler_main, (uv + (tmpvar_3 * vec2(-1.0, 1.0)))).xyz)\\n   + texture (sampler_main, \\n    (uv + (tmpvar_3 * vec2(1.0, -1.0)))\\n  ).xyz) + texture (sampler_main, (uv - tmpvar_3)).xyz));\\n  float tmpvar_4;\\n  tmpvar_4 = ((tmpvar_2.x * tmpvar_2.y) * tmpvar_2.y);\\n  z_1.x = (tmpvar_2.x + ((\\n    -(tmpvar_4)\\n   + \\n    (0.035 * (1.0 - tmpvar_2.x))\\n  ) * 4.0));\\n  z_1.y = (tmpvar_2.y + ((tmpvar_4 - \\n    (0.095 * tmpvar_2.y)\\n  ) * 4.0));\\n  z_1.z = tmpvar_2.z;\\n  z_1.x = (z_1.x + (0.4 * (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv).xyz)).x);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (z_1 + (0.05 * (\\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\\n   - 1.0)));\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\\n  ret = tmpvar_1.xyz;\\n }"}')},9309:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":1,"echo_zoom":1,"wave_brighten":0,"wave_a":1,"wave_scale":0.999996,"wave_mystery":-0.4999,"zoom":0.9999,"rot":0.1,"wave_r":0.8,"wave_g":0.2,"wave_b":0.2,"ob_a":0.1,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nwave_r = wave_r + 0.45*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\\nwave_b = wave_b - 0.4*(0.5*sin(time*4.782)+0.5*cos(time*0.522));\\nwave_g = wave_g + 0.4*sin(time*1.731);\\nob_r = above(bass_att,bass)*(bass_att-bass)*4;\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nmode2 = if(beat,(mode2 + rand(7) + 1)%8,mode2);\\nmode3 = if(beat,(mode3 + rand(7) + 1)%8,mode3);\\nq1 = 2*mode-1;\\nq2 = mode2 + 2;\\nq3 = 1/q2;\\nq4 = mode3 + 2;\\nq5 = 1/q4;\\nwave_x = (rand(q2)+0.5)*q3;\\nwave_y = (rand(q4)+0.5)*q5;\\ndecay = decay - 0.1*equal(frame%50,0);","pixel_eqs_eel":"cx = ((0&(x*q2-0.5))+0.5)*q3;\\ncy = ((0&(y*q4-0.5))+0.5)*q5;\\nrot = rot*pow(-1,(0&(x*q2-0.5)) + (0&(y*q4-0.5)))*q1;","warp":"","comp":""}')},7653:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.94,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_brighten":0,"wave_a":0.032,"wave_scale":4.778,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":30.965,"warpscale":2.572,"zoom":1.00901,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":16,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_pw_main, uv).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) * 0.3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.xzy, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},6913:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1.9,"echo_zoom":1.169,"wave_thick":1,"wave_brighten":0,"wave_a":4.1,"wave_scale":0.972,"wave_smoothing":0.9,"wave_mystery":0.094,"modwavealphastart":1,"modwavealphaend":1.3,"warpanimspeed":0.691,"warpscale":2.28,"warp":67.16532,"sx":1.10462,"wave_x":1,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.59957,"tex_zoom":1.3345,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.5;\\nro = 0;\\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.2*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.01) - 0.01 + 1*(1 - above(bob,0.01));\\nbob = 0.4 + 0.4*sin(time*0.8);\\nbob = bob*vol;\\nrad = bob;\\nborder_1 = 0.4;\\nsides = 30;\\nro = ro + 0.02;\\nang = ro;\\nrad = 0.6;\\n\\nsp = red*0.025;\\nspi = 0.5 - sp;\\ntm = time*0.1;\\nborder_r = 0.5 + sp*sin(tm*0.6) + spi*cos(tm*1.46);\\nborder_g = 0.5 + sp*sin(tm*1.294) + spi*cos(tm*0.87);\\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time);\\ny = 0.5 + 0.3*cos(time);\\n\\nrad = rad*mid_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 2.09);\\ny = 0.5 + 0.3*cos(time + 2.09);\\n\\nrad = rad*bass_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 4.19);\\ny = 0.5 + 0.3*cos(time + 4.19);\\n\\nrad = rad*treb_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0","frame_eqs_eel":"//krash\'s beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\nmonitor=flip;\\nq8=flip;\\n\\n\\ndecay=1;\\n//zoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.05*flip;\\n\\nq1=mtime*0.4;\\n\\n\\nmusictime=musictime+(mid*mid*mid*mid)*0.01*flip;\\n\\nxpos=sin(musictime*0.6)*0.3;\\nypos=sin(musictime*0.4)*0.3;\\nq4=xpos;\\nq5=ypos;\\n\\nwarp=0.0","pixel_eqs_eel":"cx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\nzm=(1-(rd/5));\\nsx=zm;\\nsy=zm;\\n//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3);\\n\\n\\n\\ntm=time+(sin(time)*rad);\\nvar=tan(tm+time)*treb;\\n\\nzoom=.91+(rd/100)+0.1;\\n//rot=((rad/100)+(var/400))*sin(time);","warp":" shader_body { \\n  vec3 z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\\n  float tmpvar_5;\\n  tmpvar_5 = ((tmpvar_4.x * tmpvar_4.y) * tmpvar_4.y);\\n  z_1.x = (tmpvar_4.x + ((\\n    (-(tmpvar_5) + (0.035 * (1.0 - tmpvar_4.x)))\\n   + 0.0007) * 9.0));\\n  z_1.y = (tmpvar_4.y + ((tmpvar_5 - \\n    (0.095 * tmpvar_4.y)\\n  ) * 9.0));\\n  z_1.z = (tmpvar_4.z - 0.02);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (0.3 * texsize.zw);\\n  z_1.x = (z_1.x + (1.8 * (\\n    (0.25 * (((texture (sampler_main, \\n      (tmpvar_3 + tmpvar_6)\\n    ).xyz + texture (sampler_main, \\n      (tmpvar_3 + (tmpvar_6 * vec2(-1.0, 1.0)))\\n    ).xyz) + texture (sampler_main, (tmpvar_3 + \\n      (tmpvar_6 * vec2(1.0, -1.0))\\n    )).xyz) + texture (sampler_main, (tmpvar_3 - tmpvar_6)).xyz))\\n   - texture (sampler_main, tmpvar_3).xyz)).x);\\n  ret_2.yz = z_1.yz;\\n  ret_2.x = (z_1.x + (0.09 * (\\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\\n   - 1.0)).x);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_2;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 0.65);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},6104:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":30.965,"warpscale":2.572,"fshader":1,"zoom":1.00901,"warp":0.00054,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"mv_x":64,"mv_y":20.16,"mv_l":0.4,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.20321,"tex_zoom":1.22019,"a":0,"a2":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"ma=.5;\\nmy=.5;\\nmd=0; //direction 0 1 2 3","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\\n\\nr=bass*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"mx=.5;\\nmy=.5;\\nmd=1;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;\\n\\ng=treb*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"mx=.5;\\nmy=.5;\\nmd=2;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=bass*.1;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.25*sin(0.437*time+1);\\nwave_g = 0.85 + 0.25*sin(0.544*time+2);\\nwave_b = 0.85 + 0.25*sin(0.751*time+3);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\n//zoom = zoom + 0.005*( 0.60*sin(0.1934*time+3) + 0.40*sin(0.307*time+9) );\\n//zoom = zoom + max(0,bass_att-1.1)*0.2;\\n//warp = warp + max(0,treb_att-1.1)*1.0;\\n\\n// this is a great way to respond to beats:\\n// once you get one, let it decay at a constant rate!!\\nrg = max(rg*0.77, 0.02 + 0.5*min(2,max(0,mid_att-1)*1.3));\\nq9 = rg;\\n\\nzoom = zoom + q9*0.1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_pw_main, uv).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  float ang2_2;\\n  ang2_2 = (fract((0.9549295 * ang)) / 6.0);\\n  ang2_2 = (abs((ang2_2 - 0.08333334)) * 6.283185);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(ang2_2);\\n  tmpvar_3.y = sin(ang2_2);\\n  uv_1 = (0.5 + ((\\n    (0.4 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_3) * texsize.zw));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret = tmpvar_4.xyz;\\n }"}')},1392:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1,"decay":0.94,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":20.16,"mv_l":0.4,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.20321,"tex_zoom":1.22019,"a":0,"a2":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=cos(tan(treb + bass*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=cos(tan(treb + bass*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=cos(tan(treb + bass*.1));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_eel":"mx=.5;\\nmy=.4;\\nmd=3;","frame_eqs_eel":"","point_eqs_eel":"oldmd=md;\\nmd=(md+rand(4))%4;\\nmd=if(equal(md,oldmd),(md+1)%4,md);\\n\\nmx=mx+(equal(md,0)*.002*bass);\\nmx=mx-(equal(md,1)*.002*bass);\\nmy=my+(equal(md,2)*.002*treb);\\nmy=my-(equal(md,3)*.002*treb);\\n\\nmx=if(above(mx,.9),.5,mx);\\nmx=if(below(mx,.1),.5,mx);\\nmy=if(above(my,.9),.5,my);\\nmy=if(below(my,.1),.5,my);\\n\\nx=mx;\\ny=my;\\na=cos(tan(treb + bass*.1));"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\nq27 = index + 1;\\nq28 = index2;\\n\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ndrot = (index%4-2) * 30/fps;\\np3 = p3*dec_slow + (1-dec_slow)*30/fps * drot;\\nq30 = p3 ;\\n\\nstag = (q27+index2*1);\\nstag = max(stag,1);\\np4 = dec_med*p4 + (1-dec_med)*stag;\\nq31 = p4;\\n\\nzoom = 1 + .05*q1;\\nrot = -0.007 * index;\\n\\nq32 = pow(0.996, 30/fps); //fade\\n\\nmonitor = index2;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((ret_2.y - \\n    ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3)\\n  .y) * 0.2));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 0.0;\\n  tmpvar_17.xyz = ret_2;\\n  vec3 tmpvar_18;\\n  tmpvar_18 = mix (tmpvar_17, texture (sampler_main, uv_orig), vec4(0.2, 0.2, 0.2, 0.2)).xyz;\\n  ret_2 = tmpvar_18;\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = tmpvar_18;\\n  ret = tmpvar_19.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 2.0);\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = tmpvar_3.z;\\n  tmpvar_4.y = -(tmpvar_2.z);\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + ((tmpvar_4 * texsize.zw) * 64.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.z;\\n  tmpvar_6.y = -(tmpvar_2.z);\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 32.0));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (mix (mix (\\n    (mix (mix (vec3(0.2, 0.02, 0.6), vec3(0.6, 0.6, 0.0), vec3((\\n      ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\\n    .y * 8.0))), vec3(1.0, 1.0, 2.0), vec3(((\\n      (texture (sampler_blur1, tmpvar_5).xyz * scale1)\\n     + bias1).y * 6.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_5).y * 2.0))))\\n  , vec3(0.0, 1.0, 0.0), vec3(\\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 1.2)\\n  )), vec3(1.4, 0.0, 0.0), vec3((\\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\\n  .x * 2.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_7).x * 2.0))));\\n  ret = tmpvar_8.xyz;\\n }"}')},75:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.780001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.958178,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"ob_size":0.06,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":25.599995,"mv_y":9.600006,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.040123,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"a":0.5,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.4*sin(time/3);\\ny = .5+.4*sin(time/4);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\nx0 = x0*bnot(trig) + trig*(.5+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.5+ rand(100)/200); \\n\\n\\nx0 = x0 + .3*q1/fps;\\ny0 = y0 + .3*q2/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*(.01+rand(100)/800);\\nrad = rad0;\\n\\n\\nr0 = bnot(trig)*r0 + trig * rand(10)/10;\\ng0 = bnot(trig)*g0 + trig * rand(10)/10;\\nb0 = bnot(trig)*b0 + trig * rand(10)/10;\\n\\nr = r0; b = b0; g = g0;\\nr2 = b; b2 = g; g2 = r;\\na= .4; a2 = .0; "},{"baseVals":{"enabled":1,"sides":44,"additive":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\nx0 = x0*bnot(trig) + trig*(.5+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.5+ rand(100)/200); \\n\\n\\nx0 = x0 + .3*q1/fps;\\ny0 = y0 + .3*q2/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*(.04+rand(100)/800);\\nrad = rad0;\\n\\n\\nr0 = bnot(trig)*r0 + trig * rand(10)/10;\\ng0 = bnot(trig)*g0 + trig * rand(10)/10;\\nb0 = bnot(trig)*b0 + trig * rand(10)/10;\\n\\nr = r0; b = b0; g = g0;\\nr2 = 0; b2 = 0; g2 = 0;\\na= .4; a2 = .0; "},{"baseVals":{"sides":100,"rad":0.01,"tex_zoom":0.499805,"r":0,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"rad = q2+.02\\n;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"thick":1,"additive":1,"scaling":3.915805,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"\\nx = .5 + sample*((100*sample)%2-.5);\\nk1 = (100*sample)%4;\\nx = sample ;\\n\\nval = value1;\\ny = val * (.25-(sample-.5)*(sample-.5)) + .5;\\n\\nk1 = (10*bass_att)%4;\\n\\nr = .8; g = .8; b = 1;\\na = bnot(k1); a=.1;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index4 = rand(2);\\nindex3 = rand(4);\\noo = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%6;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = index+1;\\nq28 = index2;\\nq29 = index3*4+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovez = movez + .01*30/fps ;\\nq31 = movez;\\n\\nmovex = movex +.01*30/fps * q2;\\nq32 = movex;\\n//q32 = .5 + .02*sin(time/5);\\n\\n\\nuu = dec_slow*uu + (1-dec_slow)*equal(index2,0);\\nrot = .1*uu;\\n\\noo = dec_slow*oo + (1-dec_slow)*below(index2,3);\\nmv_a =.1* oo;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = ((uv * texsize.xy) * (0.01 * q28));\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (cos((tmpvar_1.y * q1)) * sin(-(tmpvar_1.y)));\\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos((tmpvar_1.y * q2)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \\n    ((tmpvar_2 * texsize.zw) * 18.0)\\n  )).xyz * 0.99) - 0.01);\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec3 ret_4;\\n  uv_1 = (uv - 0.5);\\n  float tmpvar_5;\\n  tmpvar_5 = (time / 4.0);\\n  dist_3 = (1.0 - fract(tmpvar_5));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6.y = 0.0;\\n  float tmpvar_7;\\n  tmpvar_7 = (time / 8.0);\\n  tmpvar_6.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_6);\\n  vec2 tmpvar_8;\\n  tmpvar_8.y = 0.0;\\n  tmpvar_8.x = texsize.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9.y = 0.0;\\n  tmpvar_9.x = texsize.z;\\n  xlat_mutabledz.x = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_8)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_9)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = 0.0;\\n  tmpvar_10.y = texsize.w;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.0;\\n  tmpvar_11.y = texsize.w;\\n  xlat_mutabledz.y = (inten_2 * dot ((texture (sampler_main, \\n    (xlat_mutableuv3 + tmpvar_10)\\n  ).xyz - texture (sampler_main, \\n    (xlat_mutableuv3 - tmpvar_11)\\n  ).xyz), vec3(0.32, 0.49, 0.29)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.2 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_12;\\n  tmpvar_12.y = 0.0;\\n  tmpvar_12.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_12);\\n  vec2 tmpvar_13;\\n  tmpvar_13.y = 0.0;\\n  tmpvar_13.x = texsize.z;\\n  vec2 tmpvar_14;\\n  tmpvar_14.y = 0.0;\\n  tmpvar_14.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_13)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_14)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = texsize.w;\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = 0.0;\\n  tmpvar_16.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_15)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_16)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.4 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_17;\\n  tmpvar_17.y = 0.0;\\n  tmpvar_17.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_17);\\n  vec2 tmpvar_18;\\n  tmpvar_18.y = 0.0;\\n  tmpvar_18.x = texsize.z;\\n  vec2 tmpvar_19;\\n  tmpvar_19.y = 0.0;\\n  tmpvar_19.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_18)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_19)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = 0.0;\\n  tmpvar_20.y = texsize.w;\\n  vec2 tmpvar_21;\\n  tmpvar_21.x = 0.0;\\n  tmpvar_21.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_20)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_21)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  dist_3 = (1.0 - fract((0.6 + tmpvar_5)));\\n  inten_2 = ((sqrt(dist_3) * (1.0 - dist_3)) * 2.0);\\n  vec2 tmpvar_22;\\n  tmpvar_22.y = 0.0;\\n  tmpvar_22.x = tmpvar_7;\\n  xlat_mutableuv3 = (((\\n    (2.0 * uv_1)\\n   * dist_3) + 0.4) + tmpvar_22);\\n  vec2 tmpvar_23;\\n  tmpvar_23.y = 0.0;\\n  tmpvar_23.x = texsize.z;\\n  vec2 tmpvar_24;\\n  tmpvar_24.y = 0.0;\\n  tmpvar_24.x = texsize.z;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_23)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_24)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  vec2 tmpvar_25;\\n  tmpvar_25.x = 0.0;\\n  tmpvar_25.y = texsize.w;\\n  vec2 tmpvar_26;\\n  tmpvar_26.x = 0.0;\\n  tmpvar_26.y = texsize.w;\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_2 * dot (\\n    (texture (sampler_main, (xlat_mutableuv3 + tmpvar_25)).xyz - texture (sampler_main, (xlat_mutableuv3 - tmpvar_26)).xyz)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_2));\\n  uv_1 = (uv_1 + (xlat_mutabledz * 14.0));\\n  xlat_mutableuv4 = (uv_1 - vec2(0.2, -0.1));\\n  float tmpvar_27;\\n  tmpvar_27 = (0.5 * clamp ((1.0/(\\n    (abs(uv_1.y) + 0.1)\\n  )), 0.0, 12.0));\\n  vec2 tmpvar_28;\\n  tmpvar_28.x = (uv_1.x * tmpvar_27);\\n  tmpvar_28.y = tmpvar_27;\\n  vec3 tmpvar_29;\\n  tmpvar_29.xy = vec2(0.0, 0.0);\\n  tmpvar_29.z = clamp ((1.0 - (3.0 * uv_1.y)), 0.0, 1.0);\\n  ret_4 = (vec3(0.0, 0.1, 0.1) + (0.1 * tmpvar_29));\\n  ret_4 = (ret_4 + (vec3(dot (texture (sampler_noise_hq, \\n    (tmpvar_28 + (0.04 * time))\\n  ), vec4(0.32, 0.49, 0.29, 0.0))) * (\\n    (clamp ((1.0 - (12.0 * uv_1.y)), 0.0, 1.0) * 0.1)\\n   / \\n    (0.03 + sqrt(dot (xlat_mutableuv4, xlat_mutableuv4)))\\n  )));\\n  ret_4 = (ret_4 + ((0.4 * xlat_mutableret1) + (xlat_mutableret1 * q22)));\\n  vec4 tmpvar_30;\\n  tmpvar_30.w = 1.0;\\n  tmpvar_30.xyz = ret_4;\\n  ret = tmpvar_30.xyz;\\n }"}')},6790:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.965,"echo_zoom":1.101,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"darken_center":1,"brighten":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":4.77802,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.05,"ob_a":0.5,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":1.28,"mv_y":48,"mv_dx":0.4,"mv_l":1,"mv_g":0,"mv_a":0.4},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"x":1,"y":0.59,"rad":1.51261,"ang":3.39292,"tex_zoom":100,"r":0,"g":0.9,"b":0.7,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x=sin(time/10)*0.1+0.5+(treb_att*0.1);"},{"baseVals":{"enabled":1,"sides":13,"textured":1,"rad":0.66231,"ang":3.07876,"tex_zoom":1.10258,"g":1,"b":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//additive=above(sin(time*50),.95);\\nang=sin(time/20)*6.28;"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"x":0,"y":0.3,"rad":1.46815,"ang":5.02655,"tex_zoom":0.33198,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_ang=(sin(time/4)*0.5+0.5)*6.28;\\ny=sin(time/2)*0.5+0.5;"},{"baseVals":{"enabled":1,"sides":28,"textured":1,"rad":0.38316,"ang":3.14159,"tex_ang":4.90089,"tex_zoom":2.37657,"r":0,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time/10;\\n//tex_zoom=3.4+(bass*0.03);\\nvar=above(bass_att,0.7);\\na=var;\\na2=var;\\nborder_a=var;\\n\\n\\n//This preset fluctuates between 53.2 and 55.44 fps on my box.  Texture size_2048 Meshsize_36*24\\n//On a SuperScan Pro 800 Hitachi\\n//On a Radion_9600\\n//1280*1024_Screen_Resolution\\n//;) hello! I am ATHEN ANDANDA!"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0,"a":0.06},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance","point_eqs_eel":"s=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.44)+sin(s*14.3)+sin(s*12.8);\\nxp=xp*0.10;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.29)+cos(s*19.4)+sin(s*37.7);\\nyp=yp*0.10;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*6.24)+cos(s*37.4)+cos(s*29.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nzp=zp*0.7;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp + 0.5;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nr=1;\\ng=1;\\nb=1;\\n\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.1,"g":0.5},"init_eqs_eel":"","frame_eqs_eel":"t1=q2;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs*4;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=(flip*0.1-0.05)*(sample);\\nzp=0;\\n\\n//spin;\\nang=tm*20 + sin(tm*76 + time*4)*0.4;\\nsa=sin(ang);ca=cos(ang);\\nxr=xp*sa + yp*ca;\\nyr=xp*ca - yp*sa;\\nzr=zp;\\n\\nxp=xr;\\nyp=yr + 0.05 + (sin(tm)*0.5 + 0.5)*0.2 + 0.05;\\nzp=zr;\\n\\n//wrist movement;\\nang=sin(tm*2);\\n\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n\\nang=tm*8;\\nsa=sin(ang);ca=cos(ang);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*2.5;\\nxq=xp;\\nsa=sin(ang);ca=cos(ang);\\nyq=yp*sa + zp*ca;\\nzq=yp*ca - zp*sa;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5);\\nxp=xq*sa + yq*ca;\\nyp=xq*ca - yq*sa;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*1)*1.75 - 1.05;\\nsa=sin(ang);ca=cos(ang);\\nxq=xp*sa + zp*ca;\\nyq=yp;\\nzq=xp*ca - zp*sa;\\n\\n//upper arm up down;\\nang=cos(tm);\\nxp=xq;\\nsa=sin(ang);ca=cos(ang);\\nyp=yq*ca - zq*sa;\\nzp=yq*sa + zq*ca;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+1.5;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample);\\n"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0.7,"g":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q3; //mytime\\nt2=q2;\\nt3=.3*q2;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3+.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\noy=.5+(.3+.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\n\\nang=atan2( (py-oy),(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3-.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\ny2=.5+(.3-.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(1-counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(1-counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=counter+1;\\na=sqr(sample);"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"g":0,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=q3; //mytime\\nt2=q2;\\nt3=.3*q2;","point_eqs_eel":"t=t1+t2*(1-sample);\\n\\nox=.5+(.3-.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\noy=.5+(.3-.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\n\\nang=atan2( (py-oy),(px-ox) );\\nl=tan(ang);\\nx2=.5+(.3+.05*sample)*cos(t+.65+3.1415*sin(1.7*t+.98))*sin(1.32*t+3.21);\\ny2=.5+(.3+.05*sample)*1.25*sin(.78*t+1.71)*cos(.91*t+3.09+3.1415*sin(1.49*t+.43));\\nsum = (l*x2-y2+oy-l*ox)*sign(ang)*sign(l);\\ndir=-1+2*above(sum,-.001);\\n\\nxtrudx=(counter%2)*t3*sample*cos(ang+dir*1.5707)*abs(value1+value2);\\nxtrudy=(counter%2)*t3*sample*sin(ang+dir*1.5707)*abs(value1+value2);\\n\\nx=ox+xtrudx;\\ny=oy+xtrudy;\\n\\npx=ox;\\npy=oy;\\n\\ncounter=counter+1;\\na=sqr(sample);"}],"init_eqs_eel":"","frame_eqs_eel":"decay=.999;\\nwrap=sin(time*10);\\nmv_dx=bass;\\nib_a=.005;\\n\\n\\nvol=(bass+mid+treb)*0.55;\\nvol=vol*vol;\\n\\nmtime=mtime+vol*0.01*(48/fps);\\n\\nq1=mtime*0.5;\\n\\n\\ndt=1/FPS;\\nmytime=mytime+dt;\\ncontvol=min( max(.5, (1-.5*dt)*contvol+.5*dt*(bass+mid+treb)*.133 ) ,2 ) ;\\nq2=contvol;\\nq3=mytime;\\necho_zoom=1+(vol*0.01);\\nsx=-.99;","pixel_eqs_eel":"zoom=1.005-(rad/100);\\nrot=rad/100;\\n//sy=-1.02;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((0.995 * texture (sampler_main, \\n    (uv + (((\\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \\n        (q2 + 1.0)\\n      ) * tmpvar_1.yx)))\\n     * texsize.zw) * 4.0) * (2.0 + q1)))\\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.05));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = (tmpvar_5 * 1.5);\\n  uv2_3.y = (tmpvar_6.y + (0.1 * time));\\n  uv2_3.x = (tmpvar_7 + (0.02 * time));\\n  uv3_2.y = (tmpvar_5 + q30);\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = ((texture (sampler_main, fract(uv2_3)).xyz + (2.0 * texture (sampler_main, \\n    fract(uv3_2)\\n  ).xyz)) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((crisp_1 + (\\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_8)) + (tmpvar_8 * texture (sampler_main, fract(uv)).xyz));\\n  ret = tmpvar_9.xyz;\\n }"}')},8074:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":1.136,"wave_scale":1.951,"wave_smoothing":0.9,"wave_mystery":0.094,"modwavealphastart":1.14,"modwavealphaend":1.3,"zoomexp":4.57482,"zoom":1.00778,"rot":0.02,"warp":0.01,"sx":0.96,"wave_g":0.83,"wave_b":1.24,"wave_x":0.86,"ob_size":0.05,"ob_r":0.99,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_b":1.2,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.61756,"g":0.98,"b":1.17,"a":0.99,"r2":1,"b2":1,"a2":1,"border_g":0.98,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.5;\\nro = 0;\\nred = rand(20);","frame_eqs_eel":"vol = 1 + 0.17*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.008) - 0.008 + 1*(1 - above(bob,0.008));\\nbob = 0.35 + 0.35*sin(time*0.66);\\nbob = bob*vol;\\nrad = bob;\\nborder_1 = 0.4;\\nsides = 30;\\nro = ro + 0.02;\\nang = ro;\\nrad = 0.6;\\n\\nsp = red*0.025;\\nspi = 0.5 - sp;\\ntm = time*0.1;\\nborder_r = 0.5 + sp*sin(tm*0.46) + spi*cos(tm*1.343);\\nborder_g = 0.49 + sp*sin(tm*1.1775) + spi*cos(tm*0.687);\\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"tex_zoom":0.88,"g":1,"b":1,"g2":0,"border_g":0.92,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.6169 + 0.6169*(sin(time*0.92)*0.29 + 0.82*sin(time*0.6169));\\nx = 0.57 + 0.189*sin(time);\\ny = 0.5 + 0.3*cos(time);\\n\\nrad = rad*mid_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.435,"y":0.595,"rad":0.103,"r":0.8,"g":1,"b":0.87,"g2":0,"border_g":0.99,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 2.09);\\ny = 0.45 + 0.25*cos(time + 1.797);\\n\\nrad = rad*bass_att;\\nr = 0.4686 + 0.4686*sin(frame*0.4686);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.612 + 0.612*sin(frame*0.612 + 3.2666);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"x":0.595,"rad":0.09,"g":1,"b":1,"g2":0,"border_g":0.97,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.495 + 0.495*(sin(time*0.9)*0.36 + 0.8*sin(time*0.495));\\nx = 0.44 + 0.216*sin(time + 5.154);\\ny = 0.5 + 0.3*cos(time + 4.19);\\n\\nrad = rad*treb_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"}],"waves":[{"baseVals":{"scaling":1.24,"r":0.77,"g":1.1,"a":1.11,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":1.12,"smoothing":0.45,"r":1.02,"g":0.89,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0.385,"b":1.18,"a":0.78,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"smoothing":0.4,"r":1.07,"g":1.07,"b":1.11,"a":0.92,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"cx = if(above(x,0.5+q1),0.3,1-2*q1);\\n//cy = if(above(y,0.5),0.2+q1,0.7);\\ncx = if(above(rad,0.5),cx+0.2*sin(q3),cx-0.1);\\n//cy = if(above(rad,0.5),cy+0.2*cos(q4),cy-0.1);\\ncx = if(above(ang,1.56),cx+0.1,cx-0.2*sin(q4));\\ncx = if(above(ang,3.56),cy-0.1,cy+0.2*sin(q3));\\nrot = 1.5*(1-q1)*(0*rad+ 0.00*cx-0.0*cy);","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\\n  float x_4;\\n  x_4 = (tmpvar_3.x * tmpvar_3.y);\\n  float tmpvar_5;\\n  tmpvar_5 = ((q10 * 24.0) * sqrt((x_4 * x_4)));\\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  , vec3(0.32, 0.49, 0.29))));\\n  uv_1 = (uv_1 - (clamp (\\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 200.0));\\n  uv6_2 = (0.4 * sin((\\n    (uv_1 * 6.0)\\n   + \\n    (rand_frame * 16.0)\\n  .xy)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.02))\\n   + \\n    (0.1 * (vec3((0.1 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * (0.5 * (1.0 + roam_cos)).xyz))\\n  ) * 0.99) - 0.025);\\n  ret = tmpvar_6.xyz;\\n }","comp":"float xlat_mutablesmask;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv3;\\nvec2 xlat_mutableuv4;\\n shader_body { \\n  float dist_1;\\n  float stars_2;\\n  vec3 ret_3;\\n  float tmpvar_4;\\n  tmpvar_4 = (q4 / 2.0);\\n  ret_3 = (ret_3 * normalize(texture (sampler_noise_hq, (\\n    (uv + tmpvar_4)\\n   / 6.0))).xyz);\\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 * time);\\n  float tmpvar_6;\\n  tmpvar_6 = (0.2 * rad);\\n  dist_1 = ((1.0 - fract(\\n    (0.25 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = q1;\\n  tmpvar_7.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_7);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.84);\\n  vec2 tmpvar_8;\\n  tmpvar_8 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = max (0.0, clamp ((\\n    (1.0 - dist_1)\\n   * \\n    ((0.1 / sqrt(dot (tmpvar_8, tmpvar_8))) * xlat_mutablesmask)\\n  ), 0.0, 1.0));\\n  dist_1 = ((1.0 - fract(\\n    (0.5 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q1;\\n  tmpvar_9.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_9);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.84);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_10, tmpvar_10)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_1 = ((1.0 - fract(\\n    (0.75 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = q1;\\n  tmpvar_11.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_11);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.84);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_12, tmpvar_12)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  dist_1 = ((1.0 - fract(\\n    (1.0 + tmpvar_5)\\n  )) * (1.0 - tmpvar_6));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = q1;\\n  tmpvar_13.y = q2;\\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_13);\\n  xlat_mutableuv4 = ((64.0 * dist_1) * xlat_mutableuv3);\\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.84);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = abs((fract(xlat_mutableuv4) - 0.5));\\n  stars_2 = (stars_2 + max (stars_2, clamp (\\n    ((1.0 - dist_1) * ((0.1 / sqrt(\\n      dot (tmpvar_14, tmpvar_14)\\n    )) * xlat_mutablesmask))\\n  , 0.0, 1.0)));\\n  vec3 tmpvar_15;\\n  tmpvar_15 = max ((texture (sampler_main, uv).xyz * 2.0), ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) * 2.0));\\n  ret_3 = (ret_3 + clamp ((stars_2 * stars_2), 0.0, 1.0));\\n  ret_3 = (ret_3 * clamp ((1.0 - \\n    (2.0 * dot (tmpvar_15, vec3(0.32, 0.49, 0.29)))\\n  ), 0.0, 1.0));\\n  ret_3 = (ret_3 + tmpvar_15);\\n  ret_3 = (ret_3 * normalize(texture (sampler_noise_hq, (\\n    (uv + tmpvar_4)\\n   / 6.0))).xyz);\\n  vec4 tmpvar_16;\\n  tmpvar_16.w = 1.0;\\n  tmpvar_16.xyz = ret_3;\\n  ret = tmpvar_16.xyz;\\n }"}')},4999:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"wrap":0,"invert":1,"wave_a":0.001,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.32104,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":24,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.27425,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":"tex_capture  = q1;\\n\\nsaw = saw - 0.001*bass;\\nsaw = if(below(saw,0.2),0.6,saw);\\n\\ntex_zoom = saw;\\n\\n\\n"},{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.27425,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":"tex_capture  = q1;\\n\\nsaw = saw - 0.001*bass;\\nsaw = if(below(saw,0.1),0.6,saw);\\n\\ntex_zoom = saw;"},{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.36964,"g":1,"b":1,"a":0.1,"a2":0.4,"border_g":0,"border_b":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.30294,"g":1,"b":1,"a":0.1,"a2":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.2;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\n//r = 0.5 + 0.5*sin(time*1.22) + 0.1;\\ng = 1;//0.4 + 0.4*sin(time*1.307) + x;\\n//b = 0.4 + 0.4*sin(time*1.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.2;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 0.7);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 0.7);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\n//r = 0.5 + 0.5*sin(time*1.4) + 0.1;\\ng = 1;//0.4 + 0.4*sin(time*1.307) + x;\\n//b = 0.4 + 0.4*sin(time*1.259);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.2;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys + 1.4);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs + 1.4);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\n//r = 0.5 + 0.5*sin(time*1.4674) + 0.1;\\ng = 1;//0.4 + 0.4*sin(time*1.807) + x;\\n//b = 0.4 + 0.4*sin(time*1.359);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = bass*0.1;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\ny = y - sample*0.1;\\n\\nx = x*0.6 + 0.2;\\ny = y + bass*0.1;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*6.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*5.307);\\nb = 0.4 + 0.4*sin(time*4.959)*x;\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"decay = 0.25;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\n\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1;\\n\\nx1 = max(0,min(1,x1));\\ny1 = max(0,min(1,y1));\\n//x2 = 0;y2 = 0;x3 = 0;y3 = 0;x4 = 0;y4 = 0;\\n\\nspring = 50;\\ngrav = 2;\\nresist = 5;\\nbounce = 0.75;\\ndt = 0.0005;\\n\\nspx2 = (x1+x3-2*x2)*spring;\\nspy2 = (y1+y3-2*y2)*spring;\\nspx3 = (x2+x4-2*x3)*spring;\\nspy3 = (y2+y4-2*y3)*spring;\\nspx4 = (x3-x4)*spring;\\nspy4 = (y3-y4)*spring;\\n\\nvx2 = vx2*(1-resist*dt) + dt*(spx2);\\nvy2 = vy2*(1-resist*dt) + dt*(spy2-grav);\\nvx3 = vx3*(1-resist*dt) + dt*(spx3);\\nvy3 = vy3*(1-resist*dt) + dt*(spy3-grav);\\nvx4 = vx4*(1-resist*dt) + dt*(spx4);\\nvy4 = vy4*(1-resist*dt) + dt*(spy4-grav);\\n\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nx4 = x4 + vx4;\\ny4 = y4 + vy4;\\n\\nvx2 = if(above(x2,0.1),vx2,abs(vx2)*bounce);\\nvx2 = if(below(x2,0.9),vx2,-abs(vx2)*bounce);\\nvx3 = if(above(x3,0.1),vx3,abs(vx3)*bounce);\\nvx3 = if(below(x3,0.9),vx3,-abs(vx3)*bounce);\\nvx4 = if(above(x4,0.1),vx4,abs(vx4)*bounce);\\nvx4 = if(below(x4,0.9),vx4,-abs(vx4)*bounce);\\n\\nvy2 = if(above(y2,0),vy2,abs(vy2)*bounce);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*bounce);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*bounce);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*bounce);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*bounce);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*bounce);\\n\\n\\nq1 = x1;\\nq2 = x2;\\nq3 = x3;\\nq4 = x4;\\n\\nq5 = y1;\\nq6 = y2;\\nq7 = y3;\\nq8 = y4;\\n\\nmonitor = ry4;\\n\\nzoom = 1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = max (max (texture (sampler_main, (uv_1 + 0.5)).xyz, texture (sampler_main, (uv2_3 + 0.5)).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz);\\n  ret = tmpvar_4.xyz;\\n }"}')},4839:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.9,"echo_zoom":1.169,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":4.1,"wave_scale":0.972,"wave_smoothing":0.9,"wave_mystery":0.094,"modwavealphastart":1,"modwavealphaend":1.3,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_x":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":40,"thickoutline":1,"textured":1,"rad":0.59957,"tex_zoom":1.3345,"g":1,"b":1,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"bob = 1.5;\\nro = 0;\\nred = int(rand(20));","frame_eqs_eel":"vol = 1 + 0.2*((bass_att+treb_att+mid_att)/3);\\nbob = bob*above(bob,0.01) - 0.01 + 1*(1 - above(bob,0.01));\\nbob = 0.4 + 0.4*sin(time*0.8);\\nbob = bob*vol;\\nrad = bob;\\nborder_1 = 0.4;\\nsides = 30;\\nro = ro + 0.02;\\nang = ro;\\nrad = 0.6;\\n\\nsp = red*0.025;\\nspi = 0.5 - sp;\\ntm = time*0.1;\\nborder_r = 0.5 + sp*sin(tm*0.6) + spi*cos(tm*1.46);\\nborder_g = 0.5 + sp*sin(tm*1.294) + spi*cos(tm*0.87);\\nborder_b = 0.5 + sp*sin(tm*1.418) + spi*cos(tm*0.76);"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time);\\ny = 0.5 + 0.3*cos(time);\\n\\nrad = rad*mid_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 2.09);\\ny = 0.5 + 0.3*cos(time + 2.09);\\n\\nrad = rad*bass_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"},{"baseVals":{"enabled":1,"sides":40,"additive":1,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*(sin(time*1.1)*0.3 + 0.7*sin(time*0.5));\\nx = 0.5 + 0.225*sin(time + 4.19);\\ny = 0.5 + 0.3*cos(time + 4.19);\\n\\nrad = rad*treb_att;\\nr = 0.5 + 0.5*sin(frame*0.5);\\nb = 0.5 + 0.5*sin(frame*0.5 + 2.094);\\ng = 0.5 + 0.5*sin(frame*0.5 + 4.188);\\n"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  ret_1 = (ret_1 + ((\\n    (ret_1 - mix (((texture (sampler_blur2, uv).xyz * scale2) + bias2), ((texture (sampler_blur1, uv).xyz * scale1) + bias1), uv_orig.xxx))\\n   * 0.3) - (0.00666 * \\n    (((bass + treb) + mid) - 0.5)\\n  )));\\n  ret_1 = (ret_1 * 0.95);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.4)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 122.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_main, ((vec2(-0.5, 0.5) * \\n    (uv - 0.5)\\n  ) + 0.5)).xyz);\\n  ret = tmpvar_1.xyz;\\n }"}')},3261:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":0.95,"echo_zoom":1,"echo_alpha":0.2,"echo_orient":3,"wave_a":0.001,"zoom":0.96,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_a":1,"mv_x":64,"mv_y":4.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.25,"rad":1.10444,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = 1;//above(q3,2);\\ntex_zoom = q8;"},{"baseVals":{"enabled":1,"textured":1,"x":0.75,"y":0.75,"rad":0.99983,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.4,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 0.4;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.98608,"r":0,"a":0,"g2":0,"a2":0.2,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 +  0.4*sin(q1*0.45);\\ny = 0.5 +  0.4*sin(q1*0.5);\\n\\nr2 = 0.5 + 0.5*sin(q1 *0.458);\\ng2 = 0.5 + 0.5*sin(q1 *0.858);\\nb2 = 0.5 + 0.5*sin(q1 *0.658);"}],"waves":[{"baseVals":{"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"a":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//init\\nzs = if(below(zs,1),9,zs);\\n\\nzs = if(above(zs, 1300),1, zs);\\n\\nspeed = bass*0.002;\\n\\nxcoef = equal(q4,0)*2 + equal(q4,1)*2.1  + equal(q4,2)*2.2 + equal(q4,3)*2.3 + equal(q4,4)*2.4 + equal(q4,5)*2.5;\\n\\n//sum\\nzs = zs + tan(q1*0.015)*speed;\\n\\n\\ncount = count + 0.0001;\\ncount = if(above(count,6.24),0,count);\\n\\n//project\\nx = 0.1*cos(q1*zs*2 + 0.1);\\ny = 0.1*sin(q1*zs*1 + 0.1);\\n\\n//rotate\\nx = x*cos(-q1*3)*0.8 - y*sin(-q1*3)*0.8;\\ny = x*sin(-q1*3) + y*cos(-q1*3);\\n\\n//move\\nx = x + q6 + 0.5;\\ny = y + q7 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"zoomy = 1;","frame_eqs_eel":"basstime = basstime + bass*0.03;\\nq1 = basstime;\\n\\n//start in most active range\\nbasstime = if(below(basstime,450),450,basstime);\\nbasstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\nstate = if(above(state,5),0,state);\\nstate =  state + above(diff,3);\\nq4 = state;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n//toggle zoom in and out\\nzoom_in = zoom_in + above(diff,4);\\nzoom_in = if(above(zoom_in,2),0,zoom_in);\\nq5 = zoom_in;\\n\\n\\ntex_saw = tex_saw - 0.002*diff;\\nflag = below(tex_saw,0.1);\\ntex_saw = if(below(tex_saw,0.1),0.6,tex_saw);\\nstate_echo = state_echo + flag;\\n\\nq8 = tex_saw;\\nmonitor = tex_saw;\\n\\n\\n//obtain lock while zooming out\\nlock = if(equal(lock,0),bnot(equal(flag, prev_edge)),1);\\n\\n//gradient zoom out\\nlock = if(equal(state_echo,0),0,lock);\\nlock = if(equal(state_echo,1),0,lock);\\nlock = if(equal(state_echo,2)*(below(zoomy,0.3505)),0,lock);\\nlock = if(equal(state_echo,3)*(below(zoomy,0.205)),0,lock);\\n\\nzoomy = zoomy - zoomy*0.02*lock;\\n\\nzoomy = equal(state_echo,4)*1.05 + bnot(equal(state_echo,4))*zoomy;\\necho_zoom = zoomy;\\n\\nmonitor  = tex_saw;\\n\\nstate_echo = if(above(state_echo,3),0,state_echo);\\n//for edge detection\\nprev_edge = flag;","pixel_eqs_eel":"zoom = 1 - equal(q5,0)*0.1*q3 + equal(q5,1)*0.1*q3;\\n\\nsaw_r = saw_r + 0.0001*bass;\\nsaw_r =  if(above(saw_r,1),0,saw_r);\\n\\nsaw_g = saw_g + 0.00012*bass;\\nsaw_g =  if(above(saw_g,1),0,saw_g);\\n\\nsaw_b = saw_b + 0.00011*bass;\\nsaw_b =  if(above(saw_b,1),0,saw_b);\\n\\n\\ndecay_r = 5 - x*y*saw_r;\\ndecay_g = 5 - y*x*saw_g;\\ndecay_b = 5 - x*y*saw_b;\\n\\nrot = 0;\\nzoom = 1;","warp":"","comp":""}')},3237:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"decay":0.9,"echo_zoom":1.006596,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wrap":0,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-6.279995,"warp":0.000521,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.667177,"tex_zoom":0.451117,"g":1,"a":0.15,"g2":0,"a2":0.05},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"sides":100,"textured":1,"rad":2.380961,"tex_zoom":0.424973,"r":0,"b":1,"a":0.4,"g2":0,"a2":0.9,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"sides":100,"x":1,"rad":0.102009,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.02*sin(time);\\ny = 0.5 + 0.02*cos(time);\\n\\nr = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.09878);\\nb = 0.1 + 0.5*sin(q1*0.0897);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.035);\\ng2 = 0.1 + 0.5*sin(q1*0.09878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.02*sin(time*0.5 + 1.68);\\ny = 0.5 + 0.02*cos(time*0.5 + 1.68);\\n\\n\\nr = 0.1 + 0.5*sin(q1*0.0144);\\ng = 0.1 + 0.5*sin(q1*0.05878);\\nb = 0.1 + 0.5*sin(q1*0.0797);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\\nv = abs(cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = 0.3*sin(s)*cos(ss);\\nys = 0.3*sin(s)*sin(ss);\\nzs = 0.3*cos(s);\\n\\n\\n//rotate x axis\\nangle = sin(q1*0.027)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(q1*0.028)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\n\\nr = 0.5 + 0.5*sin(q1*0.2 + x + x) + xn;\\ng = 0.5 + 0.5*sin(q1*0.5 + x + y) + yn;\\nb = 0.5 + 0.5*sin(q1*0.36 + y + y) + zn;"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),int(rand(100))*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),int(rand(10)),burstspeed);\\nxdrift = if(equal(state,0),int(rand(20)),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.032)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.7 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.16 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),int(rand(100))*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),int(rand(10)),burstspeed);\\nxdrift = if(equal(state,0),int(rand(20)),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst*0.8 + 0.4*burst*cos(s))*cos(ss);\\nys = (burst*0.8 + 0.4*burst*cos(s))*sin(ss);\\nzs = 0.4*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.015)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(q1*0.01579)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.27 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.346 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),int(rand(100))*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),int(rand(10)),burstspeed);\\nxdrift = if(equal(state,0),int(rand(20)),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.1*cos(s))*cos(ss);\\nys = (burst + 0.1*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nq9 = basstime * 0.000005;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\n\\nmonitor = q1;","pixel_eqs_eel":"zoom = 1;","warp":" shader_body { \\n  float final_noise_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.xy = uv;\\n  tmpvar_2.z = (q1 * 0.1);\\n  final_noise_1 = ((texture (sampler_noisevol_lq, tmpvar_2) * 2.0) - 1.0).x;\\n  final_noise_1 = (final_noise_1 + (0.5 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_2 * 2.0)) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (final_noise_1 + (0.25 * (\\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 4.0)) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (final_noise_1 + (0.125 * (\\n    (texture (sampler_noisevol_hq, (tmpvar_2 * 8.0)) * 2.0)\\n   - 1.0)).x);\\n  final_noise_1 = (1.0 + (final_noise_1 * 0.02));\\n  mat2 tmpvar_3;\\n  float tmpvar_4;\\n  tmpvar_4 = cos(q9);\\n  tmpvar_3[uint(0)].x = tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = sin(q9);\\n  tmpvar_3[uint(0)].y = -(tmpvar_5);\\n  tmpvar_3[1u].x = tmpvar_5;\\n  tmpvar_3[1u].y = tmpvar_4;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = texture (sampler_main, (((\\n    ((uv - 0.5) * (tmpvar_3 * final_noise_1))\\n   * \\n    (1.0 - ((rad * 0.05) * (0.9 + (bass * 0.1))))\\n  ) * final_noise_1) + 0.5)).xyz;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\\n    (vec2(-0.993, 0.993) * (uv - 0.5))\\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\\n  ret = tmpvar_1.xyz;\\n }"}')},5072:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":1,"echo_zoom":0.9996,"echo_orient":3,"wave_mode":1,"wave_a":0.001,"warpscale":0.033004,"zoom":0.97,"rot":-6.279995,"warp":0.931,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"tex_capture":1,"tex_cx":0.5,"tex_cy":0.5,"rad":1.0003,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.789);\\n\\n\\nx = 0.5 + 0.2*sin(q2*1.2);\\ny = 0.5 + 0.2*sin(q2*0.78);\\n\\nang = q2*0.899;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"tex_capture":0,"tex_cx":0.5,"tex_cy":0.5,"rad":0.742182,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.45);\\ng2 = 0.5 + 0.5*sin(q2*0.678);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\n\\nx = 0.5 + 0.2*sin(q2*0.899);\\ny = 0.5 + 0.2*sin(q2*0.95);\\n\\n\\n\\nang = -q2*1.05;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"tex_capture":0,"tex_cx":0.5,"tex_cy":0.5,"rad":0.498489,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"r2 = 0.5 + 0.5*sin(q2*0.35);\\ng2 = 0.5 + 0.5*sin(q2*0.578);\\nb2 = 0.5 + 0.5*sin(q2*0.689);\\n\\nx = 0.5 + 0.2*sin(q2);\\ny = 0.5 + 0.2*sin(q2*0.89);\\n\\n\\nang = q2;\\ntex_capture = above(q3,2);"},{"baseVals":{"enabled":1,"textured":1,"tex_capture":1,"tex_cx":0.5,"tex_cy":0.5,"rad":3.254462,"g":1,"b":1,"a":0.3,"r2":1,"b2":1,"a2":0.4,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntex_capture = above(q3,2);"}],"waves":[{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"bdrawback":0,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.11;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.15;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"bdrawback":0,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.13;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.16;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"enabled":1,"sep":1,"spectrum":1,"thick":1,"bdrawback":0,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = (cos(q1*0.1))*3.14159;\\nv = (cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.3 + 0.1*cos(s))*cos(ss)*0.2*cos(v);\\nys = (0.3 + 0.1*cos(s))*sin(ss)*6*u;\\nzs = 0.5*sin(s)*0.2*sin(v);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.16;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.16;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.36 + y + y);"},{"baseVals":{"sep":1,"spectrum":1,"usedots":1,"bdrawback":0,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"u = abs(cos(q1*0.1))*3.14159;\\nv = abs(cos(q1*0.015))*3.14159*2;\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw\\nxs = (0.5 + 0.01*cos(s))*cos(ss);\\nys = (0.5 + 0.01*cos(s))*sin(ss);\\nzs = 0.5*sin(s);\\n\\n//rotate x axis\\nangle = q1*0.1;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = q1*0.14;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = q1*0.15;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2 + 0.5;\\n\\nr = 0.5 + 0.5*sin(q1*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"","frame_eqs_eel":"basstime = basstime + bass*0.03;\\nq1 = basstime*4;\\n\\n//start in most active range\\nbasstime = if(below(basstime,1000),1000,basstime);\\n//basstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\nmonitor = q3;","pixel_eqs_eel":"zoom = 1;// + 0.05*q3*rad;\\n\\ndecay_r =1;// 0.2*x*y*sin(q2*0.35) + 0.85 + 0.1*sin(q2);\\ndecay_g = 1;//0.2*y*sin(q2*0.5) + 0.85 + 0.1*sin(0.7*q2);\\ndecay_b = 1;//0.2*x*sin(q2*0.4) + 0.85 + 0.1*sin(0.8*q2);\\n\\nwarp = 1;\\n\\nrot = 0;","warp":"","comp":""}')},9880:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-0.02,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_x":64,"mv_y":48,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.2,"g2":0,"a2":0.2,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":2.38096,"tex_zoom":0.42497,"r":0,"b":1,"a":0.4,"g2":0,"a2":0.4,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.050;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos((time+0.5)*2 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos((time+0.5)*2.1 + xs);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\nr = 0.5 + 0.5*sin(time*0.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*0.307) + x;\\nb = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.05;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\nr = 0.5 + 0.5*sin(time*0.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*0.307) + x;\\nb = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"spectrum":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.05;\\nv = sample*100000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos((time-0.5)*2 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos((time-0.5)*2.1 + xs);\\n\\nx = x;\\ny = y;\\ny = y;\\n\\nr = 0.5 + 0.5*sin(time*0.22) + 0.1;\\ng = 0.4 + 0.4*sin(time*0.307) + x;\\nb = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"spectrum":1,"usedots":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),rand(100)*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),rand(10),burstspeed);\\nxdrift = if(equal(state,0),rand(20),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\n\\nq10 = cos(q1*0.00001);\\nq11 = sin(q1*0.00001);","pixel_eqs_eel":"zoom = 1  + (rad*rad-0.5)*0.05  + cos(x*3.14)*0.05 + sin(y*3.14)*0.05;","warp":" shader_body { \\n  float tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 8.0).x;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_main, (uv + \\n    (vec2(1.0, 0.0) * tmpvar_1)\\n  )).xyz + texture (sampler_main, (uv + \\n    (vec2(1.0, 0.0) * tmpvar_1)\\n  )).xyz) * 0.5);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = ((texture (sampler_main, (uv + \\n    (vec2(0.0, 1.0) * tmpvar_1)\\n  )).xyz + texture (sampler_main, (uv + \\n    (vec2(0.0, 1.0) * tmpvar_1)\\n  )).xyz) * 0.5);\\n  vec3 tmpvar_4;\\n  tmpvar_4.xy = uv;\\n  tmpvar_4.z = q2;\\n  float tmpvar_5;\\n  tmpvar_5 = ((tmpvar_2 + (tmpvar_3 * texture (sampler_main, \\n    ((uv + tmpvar_2.xy) + tmpvar_3.xy)\\n  ).xyz)).xy - texture (sampler_noisevol_lq, tmpvar_4).xy).x;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = (tmpvar_5 * texsize.z);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = (texture (sampler_fc_main, ((\\n    (((uv - 0.5) * (1.0 - (tmpvar_5 * 0.01))) * (0.99 - (bass * 0.001)))\\n   + tmpvar_6) + 0.5)).xyz - 0.02);\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2.xy = uv;\\n  tmpvar_2.z = q2;\\n  vec2 tmpvar_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv - 0.5);\\n  tmpvar_3 = ((tmpvar_4 * vec2(-1.0, 1.0)) + 0.5);\\n  ret_1 = (((\\n    (mix (texture (sampler_main, ((tmpvar_4 * 0.98) + 0.5)).xyz, texture (sampler_main, ((\\n      (tmpvar_3 - 0.5)\\n     * 0.98) + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) + ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   + \\n    ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3)\\n  ) + (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)) + ((texture (sampler_blur1, tmpvar_3).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 * texture (sampler_noisevol_hq, tmpvar_2).xyz);\\n  ret_1 = (ret_1 * 10.0);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }"}')},4381:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wrap":0,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-18.84024,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":0.9,"ob_g":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_g":0.3,"mv_b":0.2,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.15,"g2":0,"a2":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"sides":100,"x":0.35,"y":0,"rad":0.09959,"tex_zoom":0.42497,"r":0,"b":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.09878);\\nb = 0.1 + 0.5*sin(q1*0.0897);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.035);\\ng2 = 0.1 + 0.5*sin(q1*0.09878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"},{"baseVals":{"sides":100,"y":0,"rad":0.10201,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.03878);\\nb = 0.1 + 0.5*sin(q1*0.0497);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0597);"},{"baseVals":{"sides":100,"x":0.65,"y":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5 + 0.02*sin(time*0.5 + 1.68);\\n//y = 0.5 + 0.02*cos(time*0.5 + 1.68);\\n\\n\\nr = 0.1 + 0.5*sin(q1*0.0144);\\ng = 0.1 + 0.5*sin(q1*0.05878);\\nb = 0.1 + 0.5*sin(q1*0.0797);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"additive":1,"r":0,"g":0,"b":0},"init_eqs_eel":"time_delta = 2;","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 3);\\n\\nexplode_time = 1.5;\\n\\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\\n\\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\\n\\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\\n\\n\\nx =  xpos  + size*cos(sample*10);\\ny =  ypos  + size*sin(sample*10);\\n\\nr = 0.5 + 0.5*sin(q2*1.2 + x + x);\\ng = 0.5 + 0.5*sin(q2*1.5 + x + y);\\nb = 0.5 + 0.5*sin(q2*1.36 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 2.9);\\n\\nexplode_time = 1;\\n\\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\\n\\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\\n\\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\\n\\n\\nx =  xpos  + size*cos(sample*10);\\ny =  ypos  + size*sin(sample*10);\\n\\nr = 0.5 + 0.5*sin(q2*1.24 + x + x);\\ng = 0.5 + 0.5*sin(q2*1.35 + x + y);\\nb = 0.5 + 0.5*sin(q2*1.4666 + y + y);"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 1.5);\\n\\nexplode_time = 1;\\n\\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\\n\\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\\n\\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\\n\\n\\nx =  xpos  + size*cos(sample*10);\\ny =  ypos  + size*sin(sample*10);\\n\\nr = 0.5 + 0.5*sin(q2*1.14 + x + x);\\ng = 0.5 + 0.5*sin(q2*1.55 + x + y);\\nb = 0.5 + 0.5*sin(q2*1.7666 + y + y);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"fire = above(q3, 1);\\n\\nexplode_time = 1;\\n\\nstate = if(below((timestart+explode_time) -(time*fire), 0), 0,  1);\\ntimestart = if(below((timestart+explode_time) -(time*fire), 0), time,  timestart);\\n\\nxpos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), xpos);\\nypos = if(equal(state, 0), 0.5 + 0.3*sin(rand(1000)), ypos);\\nexplode = if(equal(state, 0), rand(100)*0.0000001, explode);\\n\\nsize = if(equal(state,1),size + 0.00001 + explode, 0);\\n\\n\\nx =  xpos  + size*cos(sample*10);\\ny =  ypos  + size*sin(sample*10);\\n\\nr = 0.5 + 0.5*sin(q2*1.24 + x + x);\\ng = 0.5 + 0.5*sin(q2*1.35 + x + y);\\nb = 0.5 + 0.5*sin(q2*1.4666 + y + y);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nq9 = basstime * 0.000005;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n//circle 1","pixel_eqs_eel":"zoom = 0.98;\\nrot = 0;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  tmpvar_1.xyz = (texture (sampler_main, ((\\n    ((((tmpvar_2 * \\n      (0.97 + (rad * 0.02))\\n    ) + 0.5) + ((\\n      (texture (sampler_blur1, ((tmpvar_2 * 0.9) + 0.5)).xyz * scale1)\\n     + bias1) * 0.1).xy) - 0.5)\\n   * 0.98) + 0.5)).xyz - 0.002);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 2.0);\\n  ret = tmpvar_1.xyz;\\n }"}')},707:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"wrap":0,"brighten":1,"wave_a":0.002,"zoom":0.96,"rot":-18.84024,"warp":0.00052,"wave_r":0,"wave_g":0.1,"wave_b":0,"ob_a":1,"ib_r":0.2,"ib_g":0.1,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0.5,"mv_g":0.4,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.15,"g2":0,"a2":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1);\\ng = 0.1 + 0.5*sin(q1*0.9878);\\nb = 0.1 + 0.5*sin(q1*0.897);"},{"baseVals":{"sides":100,"x":0.35,"y":0,"rad":0.09959,"tex_zoom":0.42497,"r":0,"b":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.09878);\\nb = 0.1 + 0.5*sin(q1*0.0897);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.035);\\ng2 = 0.1 + 0.5*sin(q1*0.09878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"},{"baseVals":{"sides":100,"y":0,"rad":0.10201,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"r = 0.1 + 0.5*sin(q1*0.01);\\ng = 0.1 + 0.5*sin(q1*0.03878);\\nb = 0.1 + 0.5*sin(q1*0.0497);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0597);"},{"baseVals":{"sides":100,"x":0.65,"y":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//x = 0.5 + 0.02*sin(time*0.5 + 1.68);\\n//y = 0.5 + 0.02*cos(time*0.5 + 1.68);\\n\\n\\nr = 0.1 + 0.5*sin(q1*0.0144);\\ng = 0.1 + 0.5*sin(q1*0.05878);\\nb = 0.1 + 0.5*sin(q1*0.0797);\\n\\nr2 = 0.1 + 0.5*sin(q1*0.065);\\ng2 = 0.1 + 0.5*sin(q1*0.07878);\\nb2 = 0.1 + 0.5*sin(q1*0.0897);"}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"speed = sqrt(bass_att*0.005);\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*1)*speed*atan(v*1.51);\\nys = ys + sin(v*1)*speed;\\nzs = zs + cos(v*1.1)*speed;\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs)*atan(basstime + zs*0.1);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs)*sin(basstime*0.4 + zs*0.12);\\nz = 0.5 + 0.5*sin(zs*0.1)*cos(time*2.1 + zs);\\n\\nx = x + sample*0.5*sin(basstime)*bass;\\ny = y + sample*0.5*sin(basstime*1.2)*bass;\\n\\n\\nz = cos(z*sample)*value1*sample*10 + 2;\\n\\nx_int = x*0.6 + 0.2;\\ny_int = y;\\n\\nx = x_int*z*0.5;\\ny = y_int*z*0.5;\\n\\n\\nr = 0.5 + 0.5*sin(time*6.22)*x_int + 0.1;\\ng = 0.4 + 0.4*sin(time*5.307)*x_int;\\nb = 0.4 + 0.4*sin(time*4.959)*y_int;\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),rand(100)*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),rand(10),burstspeed);\\nxdrift = if(equal(state,0),rand(20),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"basstime = basstime + bass*0.06;\\nq1 = basstime;\\n\\nq9 = basstime * 0.000005;\\n\\nbasstime = if(below(basstime,1000),1000,basstime);\\n\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\n\\n\\nmonitor = q1;\\n\\n//mv_a = q3 - 2;","pixel_eqs_eel":"zoom = 0.98;\\nrot = 0;","warp":" shader_body { \\n  vec3 xlat_varoutput_1;\\n  vec3 color_2;\\n  vec2 uv2_3;\\n  uv2_3 = (uv + q3);\\n  color_2 = ((texture (sampler_noise_lq, uv2_3) - 0.5).xyz + (texture (sampler_noise_mq, uv2_3) - 0.5).xyz);\\n  color_2 = (color_2 + (texture (sampler_noise_hq, uv2_3) - 0.5).xyz);\\n  mat2 tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = cos(q9);\\n  tmpvar_4[uint(0)].x = tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = sin(q9);\\n  tmpvar_4[uint(0)].y = -(tmpvar_6);\\n  tmpvar_4[1u].x = tmpvar_6;\\n  tmpvar_4[1u].y = tmpvar_5;\\n  vec2 tmpvar_7;\\n  float tmpvar_8;\\n  tmpvar_8 = (1.0/(texsize.x));\\n  tmpvar_7.x = -(tmpvar_8);\\n  float tmpvar_9;\\n  tmpvar_9 = (1.0/(texsize.y));\\n  tmpvar_7.y = 0.0;\\n  xlat_varoutput_1 = (0.05 * texture (sampler_main, (uv + tmpvar_7))).xyz;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_8;\\n  tmpvar_10.y = 0.0;\\n  xlat_varoutput_1 = (xlat_varoutput_1 + (0.05 * texture (sampler_main, (uv + tmpvar_10))).xyz);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.0;\\n  tmpvar_11.y = tmpvar_9;\\n  xlat_varoutput_1 = (xlat_varoutput_1 + (0.05 * texture (sampler_main, (uv + tmpvar_11))).xyz);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = 0.0;\\n  tmpvar_12.y = -(tmpvar_9);\\n  xlat_varoutput_1 = (xlat_varoutput_1 + (0.05 * texture (sampler_main, (uv + tmpvar_12))).xyz);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  float tmpvar_14;\\n  tmpvar_14 = (rad * 0.02);\\n  tmpvar_13.xyz = (texture (sampler_main, ((\\n    ((((\\n      ((uv - 0.5) * (tmpvar_4 - (rad * 0.01)))\\n     * \\n      (0.97 + tmpvar_14)\\n    ) + 0.5) + ((\\n      (texture (sampler_blur1, (((\\n        (xlat_varoutput_1 + color_2)\\n       - 0.5) * 0.9) + 0.5).xy).xyz * scale1)\\n     + bias1) * 0.02).xy) - 0.5)\\n   * \\n    (1.0 - tmpvar_14)\\n  ) + 0.5)).xyz - 0.03);\\n  ret = tmpvar_13.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\\n    (0.5 - uv)\\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\\n  ret = tmpvar_1.xyz;\\n }"}')},3571:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"decay":0.95,"echo_zoom":1.071,"echo_alpha":0.5,"echo_orient":3,"darken":1,"wave_a":0.001,"warpanimspeed":100,"warpscale":0.01,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.3696,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0.5},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = -q1*0.2;\\n\\ntex_capture = above(q3,1);\\ntex_zoom = 1.2;"},{"baseVals":{"textured":1,"x":0.25,"y":0.75,"rad":0.7418,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0,"enabled":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\n//x = 0.5 + 0.2*sin(q2);\\n//y = 0.5 + (0.3*sin(q2));\\n\\ntex_capture = above(q3,2);\\ntex_zoom = 0.6;"},{"baseVals":{"enabled":1,"textured":1,"rad":1.81639,"tex_zoom":0.22746,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_eel":"tex_saw = 0.4;","frame_eqs_eel":"ang = q1*0.2;\\ntex_capture = 1;//above(q3,1);\\ntex_zoom = 0.6;"},{"baseVals":{"sides":100,"rad":1.08922,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5 + 0.5*sin(q1*1.5);\\ny = 0.5 + 0.5*sin(q1*1.7);"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.6;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6 + 0.3;\\ny = y;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.22 + x*2) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.307 + y*2);\\nb = 0.4 + 0.4*sin(time*1.959 + x*y);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.6;\\nv = sample*1000000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v)*speed*atan(v*1.51);\\nys = ys + sin(v)*speed*atan((v));\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6 + 0.3;\\nx = -x + 1;\\ny = y;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.22 + x*x) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.107 + y*2);\\nb = 0.4 + 0.4*sin(time*1.959 + x*y);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = x*0.6;\\ny = y*0.9 + 0.05 + bass*0.08;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.478);\\nb = 0.4 + 0.4*sin(time*1.125);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"thick":1,"additive":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.8;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + (equal(0,q1))*sin(v*1)*speed*atan(v*1.51);\\nys = ys + (equal(0,q1))*sin(v*1)*speed;\\n\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*2 + xs);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*2.1 + xs);\\n\\nx = -x*0.6 + 1;\\ny = y*0.9 + 0.05 + bass*0.08;\\ny = y*0.8;\\n\\nr = 0.5 + 0.5*sin(time*1.789) + 0.1;\\ng = 0.4 + 0.4*sin(time*1.478);\\nb = 0.4 + 0.4*sin(time*1.125);\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"}],"init_eqs_eel":"state = 0;","frame_eqs_eel":"//warp = bass*3;\\ndecay_r = 0.65 + 0.2*(abs(cos(difftime*1.56+rarr)));\\ndecay_g = 0.5 + 0.2*(abs(cos(difftime*1.36+rarr)));\\ndecay_b = 0.5 + 0.2*(abs(cos(difftime*1.2+rarr)));\\n//dy = 0.98;\\n\\nbasstime = basstime + bass*0.03;\\nbasstime2 = basstime + bass*0.03;\\nq1 = basstime2;\\n\\n//start in most active range\\nbasstime = if(below(basstime,1000),1000,basstime);\\n//basstime = if(above(basstime,495),450,basstime);\\n\\nbasstime = basstime + bass_att*0.03;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;","pixel_eqs_eel":"saw_r = saw_r + 0.0001*bass;\\nsaw_r =  if(above(saw_r,1),0,saw_r);\\n\\nsaw_g = saw_g + 0.00012*bass;\\nsaw_g =  if(above(saw_g,1),0,saw_g);\\n\\nsaw_b = saw_b + 0.00011*bass;\\nsaw_b =  if(above(saw_b,1),0,saw_b);\\n\\n\\ndecay_r = 2 - y*saw_r;\\ndecay_g = 2 - y*saw_g;\\ndecay_b = 2 - y*saw_b;\\n\\n\\nrot =0;\\nzoom = 1.02;","warp":"","comp":""}')},262:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.001827,"echo_alpha":0.5,"echo_orient":1,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"red_blue":1,"wave_a":4.099998,"wave_scale":2.850136,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":12.799995,"mv_y":38.400002,"mv_l":0.800001,"mv_r":0.44,"mv_g":0.65,"mv_b":0.81,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"textured":1,"y":0.7,"rad":0.15493,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"y=bass_att*0.5+0.2;\\nx=cos(time*2)*0.5+0.5;"},{"baseVals":{"textured":1,"rad":1.801999,"tex_ang":3.141593,"tex_zoom":0.572684,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + (bass*.2) + (time*.4);\\n//rad=1.781+(bass*0.025);\\nang=above(0.5,treb_att)*.063;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"x":0.9,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time*5) * .4 + .5;\\ny=treb_att*0.5;\\n"},{"baseVals":{"sides":100,"textured":1,"rad":0.033004,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+(bass*0.07);"}],"waves":[{"baseVals":{"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"basstime=basstime+(bass*bass);\\nt1=basstime*0.003;\\n","point_eqs_eel":"//plot x,y,z to point on circle\\nsmp=sample*6.283;\\nxp=sin(smp )*0.35;\\nyp=cos(smp )*0.35;\\nzp=0;\\n\\n\\n//alter shape;\\nangy=sin(sample*6.28*4 +t1 )*6.28;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n\\n//rotate on y axis;\\nangy=t1*0.1;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(t1*0.15) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(t1*0.1)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=xs+0.5+q4;\\ny=ys+0.5+q5;\\n\\nr=1-q1;\\ng=1-q2;\\nb=1-q3;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\nob_r=ib_r-0.5;\\nob_g=ib_g-0.5;\\nob_b=ib_b-0.5;\\nq1=ib_r;\\nq2=ib_g;\\nq3=ib_b;\\n\\n\\n\\ndecay =1;\\n\\n\\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\\n//solarize=above(0.5,bass);\\n//darken=above(0.4,treb);\\n\\nmusictime=musictime+(mid*mid*mid)*0.02*(75/fps);\\n\\nxpos=cos(musictime*0.6)*0.6;\\nypos=sin(musictime*0.4)*0.6;\\nq4=xpos;\\nq5=ypos","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\\n//var=(bass+mid+treb)/3;\\n//rot=((ang&rad/rad)/(var*20))/10;\\n//sx=.99-(var*0.01);\\n//cx=var*0.1*(ang/12);\\n//sy=sx;\\n\\n//zoom=-1;\\nsx=-1+(bass*0.2);\\nsy=-1-(treb*0.2);\\n\\ncx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\n//zm=(1.1-(rd/4));\\nzm=1;\\n\\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\\nstar=sin(ag*6+time)*((2-rd)-ag)/5;\\nzm=zm+star/20;\\nsx=zm*rd;\\nsy=zm*rd;\\n//rot=above(rd,0.7)*(rd-0.7)*sin(time*0.3)","warp":"","comp":""}')},5254:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1,"decay":0.925,"echo_zoom":1.001829,"echo_alpha":0.5,"echo_orient":2,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"invert":1,"wave_a":4.099998,"wave_scale":2.850136,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"ib_a":1,"mv_x":12.799995,"mv_y":38.400002,"mv_l":0.800001,"mv_r":0.44,"mv_g":0.65,"mv_b":0.81,"mv_a":0},"shapes":[{"baseVals":{"sides":23,"additive":1,"textured":1,"y":0.7,"rad":0.15493,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"y=bass_att*0.5+0.2;\\nx=cos(time*2)*0.5+0.5;"},{"baseVals":{"textured":1,"rad":1.801999,"tex_ang":3.141593,"tex_zoom":0.572684,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + (bass*.2) + (time*.4);\\n//rad=1.781+(bass*0.025);\\nang=above(0.5,treb_att)*.063;"},{"baseVals":{"sides":100,"additive":1,"textured":1,"x":0.9,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time*5) * .4 + .5;\\ny=treb_att*0.5;\\n"},{"baseVals":{"sides":100,"textured":1,"rad":0.033004,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x=.5+(bass*0.07);"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"basstime=basstime+(bass*bass);\\nt1=basstime*0.003;\\n","point_eqs_eel":"//plot x,y,z to point on circle\\nsmp=sample*6.283;\\nxp=sin(smp )*0.20;\\nyp=cos(smp )*0.20;\\nzp=0;\\n\\n\\n//alter shape;\\nangy=sin(sample*6.28*4 +t1 )*6.28;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n\\n//rotate on y axis;\\nangy=t1*0.1;\\nxq=xp*cos(angy) - zp*sin(angy);\\nzq=xp*sin(angy) + zp*cos(angy);\\nxp=xq;\\nzp=zq;\\n\\n//rotate on x axis\\naxs1 = sin(t1*0.15) + 1.6;\\nyq= yp*cos(axs1) - zp*sin(axs1);\\nzq= yp*sin(axs1) + zp*cos(axs1);\\nyp=yq;\\nzp=zq;\\n\\n//rotate on y axis again\\naxs2 = sin(t1*0.1)*3.3;\\nxq=xp*cos(axs2) - zp*sin(axs2);\\nzq=xp*sin(axs2) + zp*cos(axs2);\\nxp=xq;\\nzp=zq;\\n\\n//stretch y axis to compensate for aspect ratio\\nyp=yp*1.2;\\n\\n//push forward into viewpace\\nzp=zp+2.1;\\n\\n//project x,y,z into screenspace\\nxs=xp/zp;\\nys=yp/zp;\\n\\n//center 0,0 in middle of screen\\nx=xs+0.5+q4;\\ny=ys+0.5+q5;\\n\\nr=1-q1;\\ng=1-q2;\\nb=1-q3;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nib_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nib_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nib_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\nob_r=ib_r-0.5;\\nob_g=ib_g-0.5;\\nob_b=ib_b-0.5;\\nq1=ib_r;\\nq2=ib_g;\\nq3=ib_b;\\n\\n\\n\\ndecay = 0.9999;\\n\\n\\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\\n//solarize=above(0.5,bass);\\n//darken=above(0.4,treb);\\n\\nmusictime=musictime+(mid*mid*mid)*0.01;\\n\\nxpos=sin(musictime*0.4)*0.2;\\nypos=sin(musictime*0.4)*0.2;\\nq4=xpos;\\nq5=ypos","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\\n//var=(bass+mid+treb)/3;\\n//rot=((ang&rad/rad)/(var*20))/10;\\n//sx=.99-(var*0.01);\\n//cx=var*0.1*(ang/12);\\n//sy=sx;\\n\\nzoom=1;\\n\\ncx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\n//zm=(1.1-(rd/4));\\nzm=.99;\\n\\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\\nstar=sin(ag/5)*(2-rd-ag);\\nzm=zm+star/20;\\nsx=zm;\\nsy=zm;\\nrot=above(rd,0.7)/(rd+7)*(bass_att*0.1)/rd;\\ndx=sin(y*140)*(bass*0.005);\\ndy=cos(x*140)*(bass*0.005);","warp":"","comp":""}')},2458:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":2,"wave_thick":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":1,"wave_scale":0.5,"wave_smoothing":0,"modwavealphastart":1.5,"modwavealphaend":1,"warp":0,"wave_r":0.23,"wave_g":0.2,"wave_b":0.2,"ob_size":0.005,"ob_a":0.2,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_l":5,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.825*time) + 0.40*sin(0.915*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.900*time) + 0.40*sin(1.025*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.810*time) + 0.40*sin(0.950*time) );\\nwave_x = 0.5-cos(time+dx_residual)/3.5;\\nwave_y = 0.5-cos(time+dy_residual)/2.5;\\ncx = cx + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) );\\ncy = cy + 0.225*( 0.60*sin(0.350*time) + 0.40*sin(0.350*time) );\\ndx = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = 0.005 + 0.002*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndx_residual=max(bass, bass_att)-1;\\ndy_residual=min(bass, bass_att)-1;\\ndx = if(above(bass_att+bass,2.8),5*dx,dx);","pixel_eqs_eel":"rot = 0.03*sin(0.84*time)-0.013*cos(0.784*time)+0.02*sin(1-rad);","warp":"","comp":""}')},2119:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_thick":1,"wrap":0,"darken_center":1,"wave_a":0.3,"wave_scale":0.881,"wave_smoothing":0.5,"wave_mystery":-1,"warpscale":2.853,"zoomexp":3.6,"zoom":1.02109,"rot":-0.16,"warp":0.309,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"wave_y":0.47,"mv_l":1.75},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nq8 = oldq8+if(above(bass+bass_att,1.8),q8+0.0005*pow((bass+bass_att-1),9),0);\\noldq8 = q8;\\nmonitor = q8;\\nzoom = zoom + 0.023*( 0.60*sin(0.339*q8) + 0.40*sin(0.276*q8) );\\nrot = rot + 0.030*( 0.60*sin(0.381*q8) + 0.40*sin(0.579*q8) );\\n//decay = decay - 0.02*equal(frame%40,0);\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nmv_x = 1.25;\\nmv_y = 1.25;\\nmv_dx = 0.1*sin(1.1*time);\\nmv_dy = 0.1*cos(1.112*time);","pixel_eqs_eel":"rot=rot+1/(10*(rad+0.2+0.1*sin(q8)));","warp":"","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (((vec3(1.1, 0.8, 0.7) * tmpvar_2.x) + (vec3(0.4, 0.6, 0.55) * tmpvar_2.y)) + (vec3(0.7, 0.6, 0.3) * tmpvar_2.z));\\n  ret_1 = (ret_1 * 0.4);\\n  ret_1 = ((ret_1 * ret_1) * (1.0 + (\\n    clamp (((cos(\\n      (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 17.0) + 3.0) + (uv.x * 30.0))\\n    ) * 3.0) - 2.7), 0.0, 1.0)\\n   * 4.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},554:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"decay":0.973,"echo_zoom":1.047463,"wave_mode":4,"wave_dots":1,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.9,"wave_scale":2.905229,"wave_smoothing":0.6,"wave_mystery":-0.3,"warpscale":2.853,"zoomexp":0.999835,"zoom":0.799682,"warp":0.016779,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"ob_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);","pixel_eqs_eel":"zoom = 1.01 + rad*0.15*q1;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz - 0.008);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  float ang2_1;\\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\\n  ang2_1 = (cos((50.26548 * ang2_1)) * 0.023);\\n  ang2_1 = (ang2_1 * 6.283185);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = cos(ang2_1);\\n  tmpvar_2.y = sin(ang2_1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = texture (sampler_main, (0.5 + ((\\n    (0.375 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\\n   * tmpvar_2) * texsize.zw))).xyz;\\n  ret = tmpvar_3.xyz;\\n }"}')},7294:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"wave_mode":7,"additivewave":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":1,"wave_scale":0.438649,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":0.999996,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_y":0.976,"ob_size":0.005,"ob_r":0.4,"ob_g":0.3,"ob_a":1,"ib_r":1,"ib_g":0.6,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = 0.5 + 0.3*sin(time*0.894);\\nwave_g = 0.53 + 0.33*sin(time*1.14);\\nwave_b = 0.2 + 0.2*(1-bass);\\nthresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.004*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.004*sin(6*time)+(1-equal(thresh,2))*dy_r;\\nq1 = thresh;\\ndx = 1.1* dx_r;\\ndy = 1.1* dy_r;\\ndx = dx + if (above(bass,1.35), 31*dx_r, 0);\\ndy = if(above(bass,1.3), 0, dy);","pixel_eqs_eel":"zoom = zoom -0.01*q1*rad;\\nzoomexp = 1+0.2*(rad-0.2*q1);","warp":"","comp":""}')},9190:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":1,"echo_orient":1,"wave_thick":1,"wave_a":7.015,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.4,"warpanimspeed":5.996,"warpscale":1.331,"zoomexp":1.01,"zoom":0.99853,"rot":0.002,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.1,"wave_y":0.9,"ob_g":0.9,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.201,"ib_g":0.5,"ib_b":0.5,"ib_a":1,"mv_x":63.936,"mv_y":48,"mv_l":1,"mv_r":0.63,"mv_g":0.2,"mv_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"beatcounter =0;","frame_eqs_eel":"ob_r = 0.21 - 0.2*(0.5*sin(time*0.701)+ 0.3*cos(time*0.438));\\nob_g = 0.5 - 0.46*sin(time*1.724);\\nob_b = 0.65 - 0.3*cos(time*1.816);\\nwarp =0;\\nib_size = 0.025;\\nib_r = ib_r + 0.2*(0.6*sin(time*3.034)+0.4*cos(time*2.14));\\nib_g = ib_g + 0.5*(0.6*sin(time*3.147)+0.4*cos(time*2.015));\\nib_b = ib_b - 0.5*(0.6*sin(time*3.431)+0.4*cos(time*1.842));\\ndx = dx +0.001+abs(0.003*(0.6*sin(time*0.234) + 0.4*cos(time*0.437)));\\ndy = dy + abs(0.003*(0.7*sin(time*0.213) + 0.3*cos(time*0.315)));\\nvolume = 0.15*(bass+bass_att+treb+treb_att+mid+mid_att);\\nxamptarg = if(equal((frame+.5)%15,0),min(0.5*volume*bass_att,0.5),xamptarg);\\nxamp = xamp + 0.5*(xamptarg-xamp);\\nxdir = if(above(abs(xpos),xamp),-sign(xpos),if(below(abs(xspeed),0.1),2*above(xpos,0)-1,xdir));\\nxaccel = xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxspeed = xspeed + xdir*xamp - xpos - xspeed*0.055*below(abs(xpos),xamp);\\nxpos = xpos + 0.001*xspeed;\\nq2 = xpos;\\nyamptarg = if(equal((frame+.5)%15,0),min(0.3*volume*treb_att,0.5),yamptarg);\\nyamp = yamp + 0.5*(yamptarg-yamp);\\nydir = if(above(abs(ypos),yamp),-sign(ypos),if(below(abs(yspeed),0.1),2*above(ypos,0)-1,ydir));\\nyaccel = ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nyspeed = yspeed + ydir*yamp - ypos - yspeed*0.055*below(abs(ypos),yamp);\\nypos = ypos + 0.001*yspeed;\\nq4 = ypos;\\nbass_effect = max(max(bass,bass_att)-1.2,0);\\necho_zoom = 1.32 + 0.3*(0.59*sin(q4+time*0.865) + 0.41*cos(q2+time*1.192)) + 0.05*bass_effect;\\nvolume = 0.15*(bass_att+bass+mid+mid_att);\\nbeatrate = if(equal(beatrate,0),1,if(below(volume,0.01),1,beatrate));\\nlastbeat = if(equal(lastbeat,0),time,lastbeat);\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = if(above(bass_att,peakbass_att),bass_att,peakbass_att);\\nbeat = if(above(volume,0.8),if(below(peakbass_att - bass_att, 0.05*peakbass_att),if(above(time - lastbeat,0.1+0.5*(beatrate-0.1)),1,0),0),0);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = if(equal(beat,0),if(above(time - lastbeat,2*beatrate),peakbass_att*0.95,peakbass_att*0.995),bass_att);\\nlastbeat = if(beat,time,lastbeat);\\npeakbass_att = max(if(beat,bass_att,peakbass_att),1.1*meanbass_att);\\nbeatcounter = if(above(beat,0),beatcounter +1, beatcounter);\\nbeatcounter = if(above(beatcounter,7), 0, beatcounter);\\nbeateven = (beatcounter+.5)%2;\\nmode = if(beat,(mode+(int(rand(3))+1)+.5)%4,mode);\\necho_orient = mode;\\nwave_a = if(beat,1,0);\\nwave_r = wave_r + 0.2*sin(time*0.7854) - 0.2*beateven;\\nwave_b = wave_b + 0.1*sin(time*0.8254) + 0.2*beateven;\\nwave_g = wave_g + 0.1*sin(time*0.854) + 0.2*beateven;\\nq6 = beat;\\nwave_mode = if(beateven,7,0);\\nmv_a = if(beat,if(equal(beatcounter,6),1,0),0);\\nmv_r = if(mv_a,int(rand(2)),0);\\nmv_b = if(mv_a,int(rand(2)),0);\\nmv_g= if(mv_a,int(rand(2)),0);","pixel_eqs_eel":"box =0.5+0.8*((2*x+.5)%4+(2*y+.5)%2);\\nq1 = 8.45+0.3*(sin(pow(x,3)+0.177*time)-cos(pow(y,3)+0.223*time));\\nq7 = above(box,1);\\nzoom = if(q7,(q1*.1) + q6*6 ,zoom);\\nrot = if(q7,0.63*sin(0.385*time + 0.12*sin(0.67*time) + 0.1*q4 + 0.12*q2 +q6*50),rot);\\ncx = cx - 0.15*sin(2*q4);\\ncy = cy + 0.14*sin(2*q2);\\nsx = if(q7,sx+q6*18,sx);\\nsy = if(q7,sy+q6*18,sy);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 8.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.y;\\n  tmpvar_7.y = tmpvar_4.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 8.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_3.z;\\n  tmpvar_9.y = tmpvar_4.z;\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 8.0));\\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \\n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n  ).x * 0.02));\\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \\n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\\n  ).y * 0.02));\\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \\n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\\n  ).z * 0.02));\\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.2) - 0.06));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.5 + ((uv - 0.5) * 0.98));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv_1 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_1 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_6.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, ((vec3(0.05, 0.05, 0.0) * (\\n    ((uv_1.xyy + (tmpvar_6 * 0.5)) * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  tmpvar_8.y = dot (tmpvar_5, vec3(0.32, 0.49, 0.29));\\n  uv_1 = (uv_1 - (tmpvar_8 * 0.04));\\n  ret_2 = (abs((\\n    ((texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)) - ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2))\\n   - \\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  )) * (dot (tmpvar_7, vec4(0.32, 0.49, 0.29, 0.0)) * 3.0));\\n  ret_2 = (1.0 - pow (ret_2, vec3(0.5, 0.5, 0.5)));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }"}')},358:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":0.999609,"echo_alpha":0.5,"echo_orient":1,"wave_mode":8,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":4.099998,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.990099,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.005,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q8=0;\\nq1 = rand(2)+2;","frame_eqs_eel":"warp=0;\\nib_r = 0.5+0.50*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nib_g = 0.5+0.5*sin(time*1.476);\\nib_b = 0.5+0.5*sin(1.374*time);\\nob_r = ib_r;\\nob_g=ib_g;\\nob_b=ib_b;\\nq8 =oldq8+ 0.001*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\noldq8 = q8;\\nwave_a = 0;\\nib_a =1;","pixel_eqs_eel":"dx = sin((1000+sin(q8))/y)/200;\\ndy = cos((1000+sin(q8))/x)/200;\\nrot = dy*100*dx;","warp":"","comp":""}')},4467:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":4,"echo_zoom":0.998169,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_a":7.74,"wave_scale":0.656,"wave_smoothing":0.8,"warpscale":1.772,"zoomexp":1.96,"fshader":0.19,"zoom":0.999698,"warp":0.513,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":0.58,"ib_size":0.015,"ib_r":0.55,"ib_g":1,"ib_b":0.4999,"ib_a":0.23,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":302,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"ti=if(above(bass,1.3),.3,ti*.9);\\ntt1=tt1+.01+ti*.1;\\nt8=tt1;\\nt7=cos(time*.1+1)*sin(time*.1-6);\\nrx=atan2(sin(time*.1)*cos(t8),sqr(sin(t8)+1)+sqr(t7))/4+(sin(t8)+1)/2;\\nry=atan2(sin(time*.1)*cos(t8),t7);\\nrz=0;\\n\\nt1=sin(rx);t2=cos(rx);\\nt3=sin(ry);t4=cos(ry);\\nt5=sin(rz);t6=cos(rz);","point_eqs_eel":"sample=sample*6.283185*.5;value1=(value1+1)*.3;\\nx1=sin(sample)*sin(sample*40)*value1;\\ny1=cos(sample)*value1;\\nz1=sin(sample)*cos(sample*40)*value1;\\nx1=x1+(sin(time*.1)*cos(t8));\\ny1=y1+(sin(t8)+1);\\nz1=z1+t7;\\nx2=x1*t4-z1*t3;z2=x1*t3+z1*t4;\\ny2=y1*t2-z2*t1;z3=y1*t1+z2*t2+1.4;\\nx3=x2*t6-y2*t5;y3=x2*t5+y2*t6;\\nz3=if(above(z3,.1),.5/z3,0);\\nx=if(z3,x3*z3,x)+.5;\\ny=if(z3,-y3*z3,y)+.5;\\nhu=sample+sin(time);\\nr=sin(hu)*.5+.5;\\ng=sin(hu+6.283185*.33)*.5+.5;\\nb=sin(hu+6.283185*.66)*.5+.5;\\na=z3*.8;"},{"baseVals":{"enabled":1,"samples":302,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"ti=if(above(bass,1.3),.3,ti*.9);\\ntt1=tt1+.01+ti*.1;\\nt8=tt1;\\nt7=cos(time*.1+1)*sin(time*.1-6);\\nrx=atan2(sin(time*.1)*cos(t8),sqr(sin(t8)+1)+sqr(t7))/4+(sin(t8)+1)/2;\\nry=atan2(sin(time*.1)*cos(t8),t7);\\nrz=0;\\n\\nt1=sin(rx);t2=cos(rx);\\nt3=sin(ry);t4=cos(ry);\\nt5=sin(rz);t6=cos(rz);\\n","point_eqs_eel":"cp=bnot(cp);\\nr=sample*6.283185*10;\\ni1=(sample*6)%2;\\nrt=if(cp,1,.5);\\nsample=sample*6.283185*.5;\\n\\nx1=sin(r)*rt;\\nz1=cos(r)*rt;\\ny1=-sin(i1)+.5;\\nx1=x1+(sin(time*.1)*cos(t8));\\ny1=y1+(sin(t8)+1);\\nz1=z1+t7;\\nx2=x1*t4-z1*t3;z2=x1*t3+z1*t4;\\ny2=y1*t2-z2*t1;z3=y1*t1+z2*t2+1.4;\\nx3=x2*t6-y2*t5;y3=x2*t5+y2*t6;\\nz3=if(above(z3,.1),.5/z3,0);\\nx=if(z3,x3*z3,x)+.5;\\ny=if(z3,-y3*z3,y)+.5;\\nhu=sample+sin(time/6.283185)*6.283185;\\nr=sin(hu)*.5+.5;\\ng=sin(hu+6.283185*.33)*.5+.5;\\nb=sin(hu+6.283185*.66)*.5+.5;\\na=z3*.8;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"ti=if(above(bass,1.3),.3,ti*.9);\\ntt1=tt1+.01+ti*.1;\\nt8=tt1;\\nt7=cos(time*.1+1)*sin(time*.1-6);\\nrx=atan2(sin(time*.1)*cos(t8),sqr(sin(t8)+1)+sqr(t7))/4+(sin(t8)+1)/2;\\nry=atan2(sin(time*.1)*cos(t8),t7);\\nrz=0;\\n\\nt1=sin(rx);t2=cos(rx);\\nt3=sin(ry);t4=cos(ry);\\nt5=sin(rz);t6=cos(rz);","point_eqs_eel":"sample=sample*6.283185*134;\\nx1=sin(sample*543)*2+(sin(time*.1)*cos(t8));\\ny1=cos(sample*4232)*2+(sin(t8)+1);\\nz1=sin(sample*90)*2+t7;\\n\\nx2=x1*t4-z1*t3;z2=x1*t3+z1*t4;\\ny2=y1*t2-z2*t1;z3=y1*t1+z2*t2+1;\\nx3=x2*t6-y2*t5;y3=x2*t5+y2*t6;\\nz3=if(above(z3,.1),.5/z3,0);\\nx=if(z3,x3*z3,x)+.5;\\ny=if(z3,-y3*z3,y)+.5;\\na=z3*.8;"},{"baseVals":{"enabled":1,"samples":142,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"ti=if(above(bass,1.3),.3,ti*.9);\\ntt1=tt1+.01+ti*.1;\\nt8=tt1;\\nt7=cos(time*.1+1)*sin(time*.1-6);\\nrx=atan2(sin(time*.1)*cos(t8),sqr(sin(t8)+1)+sqr(t7))/4+(sin(t8)+1)/2;\\nry=atan2(sin(time*.1)*cos(t8),t7);\\nry1=ry1+bass_att*.2;\\nt1=sin(rx);t2=cos(rx);\\nt3=sin(ry);t4=cos(ry);\\nt5=ry1;\\n","point_eqs_eel":"cp=bnot(cp);\\nr=sample*62.83185;\\ni1=(sample*6)%2;\\nrt=if(cp,.7,.2);\\nsample=sample*3.14159;\\n\\nx1=sin(r)*rt;\\nz1=cos(r)*rt;\\ny1=-.5;\\nx2=x1*cos(t5)-z1*sin(t5);z2=x1*sin(t5)+z1*cos(t5);\\nx1=x2+(sin(time*.1)*cos(t8));\\ny1=y1+(sin(t8)+1);\\nz1=z2+t7;\\nx2=x1*t4-z1*t3;z2=x1*t3+z1*t4;\\ny2=y1*t2-z2*t1;z3=y1*t1+z2*t2+1.4;\\nx3=x2;y3=y2;\\nz3=if(above(z3,.1),.5/z3,0);\\nx=if(z3,x3*z3,x)+.5;\\ny=if(z3,-y3*z3,y)+.5;\\nhu=sample+cos(time/6.283185)*6.283185;\\nr=sin(hu)*.5+.5;\\ng=sin(hu+6.283185*.33)*.5+.5;\\nb=sin(hu+6.283185*.66)*.5+.5;\\na=z3*.8;\\n\\n"}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nold_bass_flop=bass_flop;\\nold_treb_flop=treb_flop;\\nold_mid_flop=mid_flop;\\nchaos=.9+.1*sin(pulse);\\nentropy=if(bnot(entropy),2,if(equal(pulse,-20),1+int(rand(3)),entropy));\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\\nbass_flop=abs(bass_flop-equal(bass_thresh,2));\\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\\ntreb_flop=abs(treb_flop-equal(treb_thresh,2));\\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\\nmid_flop=abs(mid_flop-equal(mid_thresh,2));\\nbass_changed=bnot(equal(old_bass_flop,bass_flop));\\nmid_changed=bnot(equal(old_mid_flop,mid_flop));\\ntreb_changed=bnot(equal(old_treb_flop,treb_flop));\\nbass_residual = bass_changed*sin(pulse*bass_thresh*.1*entropy) + bnot(bass_changed)*bass_residual;\\ntreb_residual = treb_changed*sin(pulse*treb_thresh*.1*entropy) + bnot(treb_changed)*treb_residual;\\nmid_residual = mid_changed*sin(pulse*mid_thresh*.1*entropy) + bnot(mid_changed)*mid_residual;\\npulse=if(above(abs(pulse),20),-20,pulse+.2*bor(bor(bass_changed*bnot(treb_changed),treb_changed*bnot(bass_changed))*bnot(mid_changed),mid_changed)+(mid+bass+treb)*entropy*.025);\\nq1=mid_residual;\\nq2=bass_residual;\\nq3=treb_residual;\\nq4=sin(pulse);\\nq5=sin(pulse/2);\\nwave_r=wave_r+.5*bass_residual;\\nwave_r=wave_g+.5*mid_residual;\\nwave_r=wave_b+.5*treb_residual;\\nwave_mystery=mid_residual;\\nob_r=if(bass_flop,treb_flop,wave_r);\\nob_b=if(treb_flop,mid_flop,wave_b);\\nob_g=if(mid_flop,bass_flop,wave_g);\\nob_a=.03+.02*wave_r;\\nob_size=.05+.04*treb_residual;\\nib_r=if(bass_flop,ob_b,ob_g);\\nib_b=if(treb_flop,ob_g,ob_r);\\nib_g=if(mid_flop,ob_r,ob_b);\\nib_a=.03+.02*wave_g;\\nib_size=.05+.04*bass_residual;","pixel_eqs_eel":"radix=if(above(q3,0),min(x,y),max(x,y));\\nradix=if(above(q2,0),min(radix,rad),max(radix,rad));\\nrot=if(above(q4,0),rad*.2*q5,0);\\nzoom=if(above(q2,0),zoom,if(above(q3,0),1+q1*.05,1+.07*cos(radix*10*q1)));","warp":"","comp":""}')},2726:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":4.224,"wave_scale":3.672,"wave_smoothing":0.666,"wave_mystery":0.1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.037,"warpscale":0.015,"warp":0.033,"wave_r":0.1,"wave_g":0.1,"wave_b":0.1,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":1,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"x":0.37,"rad":3,"ang":3.64425,"r":0,"a":0.5,"g2":0,"a2":0.3,"border_a":1},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"ang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.2*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.2*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.2*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.2*sin(time*0.657 + 3)));\\ng2 = min(1,max(0,g2 + 0.2*sin(time*0.737 + 5)));\\nb2 = min(1,max(0,b2 + 0.2*sin(time*0.884 + 6)));"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.37,"rad":0.70653,"ang":3.64425,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*1.25+3);\\ny = y + 0.03*sin(time*1.49+1);\\nang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"textured":1,"x":0.67,"y":0.43,"rad":0.70653,"ang":4.20974,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;","frame_eqs_eel":"x = x + 0.05*sin(time*2.17);\\ny = y + 0.03*sin(time*1.83);\\nang = time*(0.3 + 0.1*t1);\\nrad = rad * (0.9 + 0.2*t2);\\nr = min(1,max(0,r + 0.1*sin(time*0.417 + 1)));\\ng = min(1,max(0,g + 0.1*sin(time*0.391 + 2)));\\nb = min(1,max(0,b + 0.1*sin(time*0.432 + 4)));\\nr2 = min(1,max(0,r2 + 0.1*sin(time*0.457 + 3)));\\ng2 = min(1,max(0,g2 + 0.1*sin(time*0.437 + 5)));\\nb2 = min(1,max(0,b2 + 0.1*sin(time*0.484 + 6)));"},{"baseVals":{"enabled":1,"sides":6,"rad":0.16122,"r":0.56,"g":1,"g2":0,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.2*sin(time*1.14);\\ny = y + 0.1*sin(time*0.93+2);"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0;\\nwarp=0","frame_eqs_eel":"zoom=1;\\n//krash\'s beat detection code\\nvolume = 0.3*(bass+mid+att);\\nbeatrate = equal(beatrate,0) + (1-equal(beatrate,0))*(below(volume,0.01) + (1-below(volume,0.01))*beatrate);\\nlastbeat = lastbeat + equal(lastbeat,0)*time;\\nmeanbass_att = 0.1*(meanbass_att*9 + bass_att);\\npeakbass_att = max(bass_att,peakbass_att);\\nbeatrate = max(if(beat,if(below(time-lastbeat,2*beatrate),0.1*(beatrate*9 + time - lastbeat),beatrate),beatrate),0.1);\\npeakbass_att = beat*bass_att + (1-beat)*peakbass_att*(above(time - lastbeat, 2*beatrate)*0.95 + (1-above(time - lastbeat, 2*beatrate))*0.995);\\nlastbeat = beat*time + (1-beat)*lastbeat;\\npeakbass_att = max(peakbass_att,1.1*meanbass_att);\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nbeatcounter = beatcounter + beat;\\nmode = if(beat*equal(beatcounter%2,0),1-mode,mode);\\nflip = 2*mode-1;\\nmonitor=flip;\\nq8=flip;\\n\\nangadv=angadv+beat;\\nangadv=if( above(angadv,5) , 2 , angadv );\\nq7=angadv;\\n\\n\\ndecay=0.95;\\nzoom=1.002;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1*flip*(37/fps);\\n\\nq1=mtime*0.4;\\n\\nwarp=0.0;\\n\\ncx=sin(mtime*0.2)*0.4 + 0.5;\\ncy=sin(mtime*0.33);\\ncys=sign(cy);\\ncy=cy*cy*cys;\\ncy=cy*0.4+0.5;\\n\\n//cx=sin(time)*0.5+0.5;\\n//cy=cos(time)*0.5+0.5;\\n//cx=0.5;\\n//cy=0.5;\\nrot=sin(time*0.25)*0.31;\\n\\n\\nq23 = rand(1000)/1000;\\nq24 = rand(1000)/1000;\\nq25 = (rand(1000)/1000)*6.28;\\nq26 = q25 - 3.14;\\nq27 = (rand(1000)/8000)+0.1;\\n\\nq28 = rand(1000)/1000;\\nq29 = rand(1000)/1000;\\nq30 = (rand(1000)/1000)*6.28;\\nq31 = q30 - 3.14;\\nq32 = (rand(1000)/8000)+0.1;","pixel_eqs_eel":"//tm=time+(sin(time)*rad);\\n//var=tan(time)*treb;\\ntbr=0.7+treb*0.3;\\nvar=-2*tbr*0.75;\\n\\nag=atan( (y-0.5-(cy-0.5))/(x-0.5-(cx-0.5)) )*1.75;\\nstar=sin(ang*q7)*tbr;\\n\\nrdd=max( abs(x-0.5) , abs(y-0.5) )*4 ;\\nzm=1+(rdd/40)+(var/40)+star*0.003 ;\\n\\n//sx=zm;\\n//sy=zm;\\n//sx=1+star*0.1;sy=1+star*0.1;\\nsx=0.8;sy=sx;\\n//rot=star*0.01*tbr","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv - 0.5) * vec2((1.0 + q1)));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = ((tmpvar_2.x * tmpvar_2.x) - (tmpvar_2.y * tmpvar_2.y));\\n  tmpvar_3.y = ((2.0 * tmpvar_2.x) * tmpvar_2.y);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = ((tmpvar_3.x * -0.12) - (tmpvar_3.y * 0.74));\\n  tmpvar_4.y = ((tmpvar_3.x * 0.74) + (-0.12 * tmpvar_3.y));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((tmpvar_3.x * (tmpvar_4.x + 1.0)) + (tmpvar_3.y * tmpvar_4.y));\\n  tmpvar_5.y = ((tmpvar_3.y * (tmpvar_4.x + 1.0)) - (tmpvar_3.x * tmpvar_4.y));\\n  my_uv_1 = (tmpvar_5 * (1.0/((\\n    ((tmpvar_4.x + 1.0) * (tmpvar_4.x + 1.0))\\n   + \\n    (tmpvar_4.y * tmpvar_4.y)\\n  ))));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))) * 0.94).xyz;\\n  ret = tmpvar_6.xyz;\\n }","comp":""}')},609:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.65,"decay":0.985,"echo_zoom":1.069,"echo_alpha":0.5,"wrap":0,"brighten":1,"invert":1,"wave_a":0.001,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":1.12682,"zoom":1.0406,"warp":0.01,"ob_size":0.005,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"num_inst":13,"r":0,"b":1,"a":0.6,"g2":0,"b2":0.5,"a2":0.5,"border_a":0.6},"init_eqs_eel":"","frame_eqs_eel":"x = q1 + rand(15)*bass_att*0.02;\\ny = q2 + rand(15)*mid_att*0.02;\\nrad = 0.076 + 0.004*rand(11);\\n\\nb = .35+.2*sin(time*0.73)+rand(100)*0.001;\\nb2 = .35+.2*sin(time*0.73)+rand(100)*0.001;\\ng = .55+.125*sin(time*.43)+rand(100)*0.001;\\ng2 = .55+.125*sin(time*.43)+rand(100)*0.001;"},{"baseVals":{"enabled":1,"thickoutline":1,"num_inst":14,"rad":0.0999,"r":0,"a":0.6,"g2":0,"a2":0.5,"border_a":0.6},"init_eqs_eel":"","frame_eqs_eel":"x = q2 + rand(15)*mid_att*0.02;\\ny = 1-q1 + rand(15)*treb_att*0.02;\\nrad = 0.076 + 0.004*rand(11);\\n\\nr = .4 +.2*sin(time*.53)+rand(100)*0.001;\\nr2 = .4 +.2*sin(time*.53)+rand(100)*0.001;\\nb  = .55 +.12*sin(time*.63)+rand(100)*0.001;\\nb2  = .55 +.12*sin(time*.63)+rand(100)*0.001;"},{"baseVals":{"textured":1,"rad":2.29737,"tex_zoom":0.42077,"g":1,"b":1,"a":0.2,"r2":1,"b2":1,"a2":0.2,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1 = rand(1000)*0.001;\\nq2 = rand(1000)*0.001;","pixel_eqs_eel":"","warp":"","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \\n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = mix (tmpvar_5, ((\\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\\n   + \\n    (0.1 * ((texture (sampler_blur1, (\\n      (tmpvar_4 * 1.25)\\n     - 0.125)).xyz * scale1) + bias1))\\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\\n  vec3 x_7;\\n  x_7 = (tmpvar_6 - 0.5);\\n  ret_1 = (tmpvar_6 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\\n  ret_1 = (ret_1 * (ret_1 * 0.45));\\n  ret_1 = (ret_1 * mix (ret_1, (\\n    (1.3 * ret_1)\\n   * \\n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\\n  ), pow (hue_shader.zxy, ret_1)));\\n  ret_1 = (ret_1 + 0.03);\\n  ret_1 = (ret_1 * ret_1);\\n  ret_1 = (ret_1 * hue_shader.zxy);\\n  ret_1 = (ret_1 * 1.75);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }"}')},7001:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.916999,"decay":1,"echo_zoom":0.999609,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"darken":1,"wave_a":1,"wave_scale":1.028413,"wave_smoothing":0.45,"wave_mystery":-0.6,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.07316,"warpscale":0.543568,"zoom":0.999514,"warp":0.01,"wave_b":0.65,"wave_x":0.7499,"wave_y":0.7199,"ob_size":0.02,"ob_a":0.007,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.006,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"warp = 0;\\nzoom = 1;\\nrot = 0.01;","frame_eqs_eel":"wave_b = if(below(treb, 2),1,0);\\ndecay = if(equal(frame % 20,0),.99,1);\\ndx = if(equal(frame % 100,0),.001,0);\\n\\nrot = .05 *cos(time*.4);\\nwave_x = (wave_x-.45)*sin(time*.4) + wave_x;\\nwave_y = (wave_y-.45)*sin(time*.4) + wave_y;\\nzoom = 1- cos(time*.4)*.05;\\n//rot = -0.005;\\nwave_x = .5+(wave_x-.5)*cos(time*5);\\nwave_y = .5+(wave_y-.5)*sin(time*5);\\nib_a = cos(time*.4)*-.5+.5;\\nob_a = ib_a;\\nob_r = cos(time)*.5+.5;\\nob_b = .5;","pixel_eqs_eel":"","warp":"","comp":""}')},5899:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":2,"gammaadj":1,"echo_zoom":1,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":4.099998,"wave_scale":0.430333,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warp":0.001,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.97,"ob_size":0.005,"ib_size":0.26,"mv_x":33.152,"mv_y":28.799997,"mv_dx":0.006,"mv_l":1,"mv_b":0,"mv_a":0.4},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"mv_g=1-bass_att*.4;\\nbeat=if(above(bass*bass_att,4.5),1-beat,beat);\\nq1=beat*2-1;\\n\\namp =amp*.8+.2*(bass_att+mid_att+treb_att)*.3;\\nq2 = min(amp,1);\\ntrebcap=trebcap*.7+.16*treb;\\nq3=trebcap*2;\\nmonitor = q3;","pixel_eqs_eel":"wang = (3+q3)*x+time*1.7+bass*.1;\\nin = 0;\\nin = in + below(abs(x-.25),.05)*below(abs(y-.5),.25);\\nin = below(abs(y-(.5+.5*sin(wang)*q2)),.1);\\nin=bnot(bnot(in));\\ndx = .02*in;\\ndy = .08*cos(wang)*q2*in;\\n\\ndx = dx+bnot(in)*.005*q1;\\ndy = dy+bnot(in)*cos(wang)*-.01*q1;","warp":"","comp":""}')},772:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"decay":0.981,"echo_zoom":1.00644,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_brighten":0,"bmotionvectorson":0,"wave_a":1.868299,"wave_scale":1.136001,"wave_smoothing":0.54,"wave_mystery":0.2,"modwavealphastart":0.95,"modwavealphaend":0.75,"zoomexp":1.008151,"fshader":0.2,"zoom":0.9998,"cx":0.47,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":0.5,"ob_g":0.5,"ob_b":0.5,"ib_size":0,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nchaos=.9+.1*sin(pulse);\\nentropy=if(bnot(entropy),2,if(equal(pulse,-20),1+rand(5),entropy));\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*chaos+1.3);\\nbass_changed=abs(bass_changed-equal(bass_thresh,2));\\ntreb_thresh=above(treb_att,treb_thresh)*2 + (1-above(treb_att,treb_thresh))*((treb_thresh-1.3)*chaos+1.3);\\ntreb_changed=abs(treb_changed-equal(treb_thresh,2));\\nmid_thresh=above(mid_att,mid_thresh)*2 + (1-above(mid_att,mid_thresh))*((mid_thresh-1.3)*chaos+1.3);\\nmid_changed=abs(mid_changed-equal(mid_thresh,2));\\npulse=if(above(abs(pulse),20),-20,pulse+.1*chaos*bor(bor(bass_changed,treb_changed),mid_changed)+(mid+bass+treb)*.025);\\nq3=sin(pulse);\\nq2=(pulse/entropy)*.5*chaos;\\nq4=sin(q2);\\nq5=entropy;\\nq1=(1+1*above(q4,0))*(1+2*above(q3,0))*(1+4*mid_changed*above(q3,0))*(1+6*above(pulse,0));\\nwave_r=if(treb_changed,.5+.5*q3,if(bass_changed,.5+.5*q4,1));\\nwave_g=.5+.2*bnot(q1%2)-.2*bnot(q1%3)+.2*bnot(q1%5)-.2*bnot(q1%7);\\nwave_b=if(bnot(q1%6),.8+.2*q4,bass_changed*mid_changed);\\nob_r=ob_r+.2*q4+.3*bnot(q1%7)*q3;\\nob_b=ob_b-.1*bnot(q1%105)-.4*sin(q2*.8);\\nob_g=ob_g+.5*sin(pulse*.4*entropy);\\nob_a=.07+.05*q3;\\nob_size=.01*entropy*bnot(q1%6);\\nib_r=ib_r+.2*q1-.3*bnot(q1%3)*q4;\\nib_b=ib_b-.1*bnot(q1%42)-.4*sin(q2*.7);\\nib_g=ib_g+.5*sin(pulse*.5*entropy);\\nib_a=.07+.05*q3*q4;\\nib_size=.005+.005*q3;\\nzoom_fade=if(above(q3,0),if(above(q4,0),zoom_fade-.0013,zoom_fade+.002),1+.04*q4);\\nzoom=zoom_fade;","pixel_eqs_eel":"g1=sin(q2*.04*q5);\\ng2=sin(q2*.05*q5);\\ng3=sin(q2*.06*q5);\\nx_shift=pow(x,2)+x*g1*2+sqr(g1);\\ny_shift=pow(y,2)+y*g2*2+sqr(g2);\\nr_shift=pow(rad,2)+rad*g3*2+sqr(g3);\\nzoom=zoom -sin(x_shift*bnot(q1%10)+y_shift*bnot(q1%14)+r_shift*bnot(q1%21))*q3*(.1+.1*bnot(q1%30)+.1*bnot(q1%7));\\ndx=dx+bnot(q1%35)*(rad-.5*g3)*g2-cos(y*1.68)*.1*bnot(q1%21);\\ndy=dy-cos(x*1.68)*bnot(q1%10);\\nrot=if(above(sin(q2*4.3),0),.3*above(abs(zoom-1),.05),.3*g3);","warp":"","comp":""}')},6278:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":0.999786,"echo_alpha":0.4999,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.842588,"wave_scale":0.44582,"wave_smoothing":0,"zoomexp":1.759877,"zoom":0.991498,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.7,"mv_x":64,"mv_y":48,"mv_l":0.2,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0.8},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp=0;\\nle=1+.5+2*sin(bass_att);\\nbpulse=band(above(le,bth),above(le-bth,bblock));\\nbblock=le-bth;\\nbth=if(above(le,bth),le+114/(le+10)-7.407,\\nbth+bth*.07/(bth-12)+below(bth,2.7)*.1*(2.7-bth));\\nbth=if(above(bth,6),6,bth);\\nbres=bpulse*sin(pulse+le*.5) + bnot(bpulse)*bres;\\n\\nle=1+.5+2*sin(treb_att);\\ntpulse=band(above(le,tth),above(le-tth,tblock));\\ntblock=le-tth;\\ntth=if(above(le,tth),le+114/(le+10)-7.407,\\ntth+tth*.07/(tth-12)+below(tth,2.7)*.1*(2.7-tth));\\ntth=if(above(tth,6),6,tth);\\ntres=tpulse*sin(pulse+le*.5) + bnot(tpulse)*tres;\\n\\nle=1+.5+2*sin(mid_att);\\nmpulse=band(above(le,mth),above(le-mth,mblock));\\nmblock=le-mth;\\nmth=if(above(le,mth),le+114/(le+10)-7.407,\\nmth+mth*.07/(mth-12)+below(mth,2.7)*.1*(2.7-mth));\\nmth=if(above(mth,6),6,mth);\\nmres=mpulse*sin(pulse+le*.5) + bnot(mpulse)*mres;\\n\\n\\n\\npulse=if(above(abs(pulse),3.14),-3.14,pulse+(bth+mth+tth)*.003);\\nq1=bres;\\nq2=tres;\\nq3=mres;\\nq4=sin(pulse);\\nmod_state=(above(q1,0)+above(q2,0)+above(q3,0))*(1+above(q4,0));\\nccl=ccl+tpulse+mpulse-bpulse;\\nq5=cos(pulse*(.5+.1*mod_state));\\nq6=sin(pulse*(.5+pow(.25,mod_state)));\\nq7=mod_state;\\nq8=ccl;\\nob_r=.5+.5*cos(q1+q7);\\nob_g=.5+.5*cos(q2*3.14+q7);\\nob_b=.5+.5*cos(q3*2+sin(time*.0816));\\nib_size=.025+.02*q2;\\nob_size=.03+.02*q3-.002*q7;\\nwave_r=.5+.5*sin(q1*q7+time*2.183);\\nwave_g=.5+.5*sin(q2*3+time*1.211);\\nwave_b=.5+.5*cos(q3+time*1.541);\\n\\n\\nob_a=.8+.2*q2;\\nzoom=zoom+.02*q4;\\ndecay=.997+.003*q3;\\nwave_mode=q7%4;","pixel_eqs_eel":"snee=bnot(above(sin(ang)-x,.5)*above(q2,0)+above(y-cos(ang),.5)*above(q1,0));\\nsnur=bnot(below(x,.5)*above(q3,0)+below(y,.5)*below(q7,4));\\ngrid=sin(sigmoid(sin(y*6.28*q2),sin(x*6.28*q6))*(10+q7));\\nrot=bnot(above(x,.5)+((y*20*q2)%q7))\\n*cos(rad*q2+3.14*if(above(grid,0),snur,bnot(snur))*(.5+.5*sin(rad*3.14*q1)))*q4*.1;\\nzoom=zoom-.5*cos(ang*3*q6+q2)*sign(if(q8%4,bnot(snee),snee))*q5;\\nrot=if(rot,rot*sign(if(above(q3,0),snur,bnot(snur))),q6);\\ncx=if(below(x,.5+.5*q4)*below(y,.5),.5+.2*q1,.5);\\ncy=if(below(x,.5)*below(y,.5+.5*q5),.5+.2*q3,.5);\\nrot=rot*(1-.2*above(.5+q3+q5*2,0)-.2*grid*above(.5+q2+q6,0))*bnot(q8%q7);\\nzoom=if(above(.5+q1+q2+q4*2,0),zoom-.02*snur,zoom-.05*cos(rad*6*q2+q4*3+q5*x+q6*y));","warp":"","comp":""}')},6457:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":0.16,"decay":0.96,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.004,"wave_scale":1.666,"wave_smoothing":0.81,"modwavealphastart":1.4,"modwavealphaend":1.4,"zoom":1.0299,"warp":0.01,"ob_size":0.007,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0.3},"shapes":[{"baseVals":{"enabled":1,"sides":24,"additive":1,"num_inst":3,"x":0.48,"rad":0.01,"tex_zoom":4.36077,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\n\\nr = rand(1200)/1000;\\ng = rand(1200)/1000;\\nb = rand(1200)/1000;\\n\\nr2 = r;\\ng2 = g;\\nb2 = b;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n\\npow( (bass*.15),2);"},{"baseVals":{"sides":36,"textured":1,"rad":0.63647,"tex_zoom":1.5339,"r2":1,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"movement = movement + 0.1*max(0,bass+bass_att-2) + 0.15*pow(bass,3) + 0.005;\\nq1 = movement;\\nmonitor =q1;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_4 * texsize.zw) * 2.0));\\n  ret_1.x = (((texture (sampler_main, tmpvar_5).x - \\n    ((texture (sampler_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\\n  ) - 0.004) + ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.12)).x;\\n  ret_1.y = (texture (sampler_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5).xy * texsize.zw)\\n   * 3.0))).y - 0.004);\\n  ret_1.z = texture (sampler_main, uv).z;\\n  ret_1.z = (ret_1.z + ((\\n    (ret_1.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\\n   * 0.1) - 0.015));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\\n  vec2 tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_blur1, uv);\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (tmpvar_3 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_3.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 + clamp ((\\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_6.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = uv.x;\\n  tmpvar_8.y = (1.0 - uv.y);\\n  ret_1 = (pow (mix (\\n    (vec3((((tmpvar_5.xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)) + (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).x + ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).x))\\n  , tmpvar_7, tmpvar_7), vec3(5.0, 1.0, 0.5)) + pow ((texture (sampler_main, tmpvar_8).yyy + texture (sampler_main, \\n    (1.0 - uv)\\n  ).yyy), vec3(0.6, 0.95, 5.0)));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\\n    ret_1.z = (ret_1.z - (tmpvar_9.x * 0.5));\\n  };\\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\\n    ret_1.x = (ret_1.x - (tmpvar_9.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\\n    ret_1.y = (ret_1.y - (tmpvar_9.z * 0.5));\\n  };\\n  ret_1 = (ret_1 - ((slow_roam_sin.xyz * roam_cos.zxy) * 0.5));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_1;\\n  ret = tmpvar_10.xyz;\\n }"}')},794:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"wrap":0,"wave_scale":0.133,"wave_mystery":-0.38,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"rad":0.1644,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a = if(above(bass,1.2),1,0);\\nx = rand(100)*.01;\\ny = rand(100)*.01;\\nrad = .1+rand(50)*.01;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nwave_r = wave_r + .4*sin(time*.333)+bass_att*.2;\\nwave_g = wave_g + .4*sin(time*.555)+treb_att*.2;\\nwave_b = wave_b + .4*sin(time*.444)+mid_att*.2;\\ndx = .0002*sin(time);\\ndy = .0002*sin(time*.999);","pixel_eqs_eel":"zoom = 1+(rad*(.15+(bass*.05)));","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_fc_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 5.0));\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 * 0.96);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 2.0);\\n  ret_1 = (ret_1 * 2.0);\\n  ret_1 = (ret_1 + abs((ret_1 - 0.2)));\\n  ret_1 = (ret_1 - 0.2);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},7598:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"wave_mode":3,"wave_dots":1,"modwavealphabyvolume":1,"wave_scale":16.217,"wave_mystery":-0.44,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"additive":1,"textured":1,"rad":0.59958,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0; \\nwave_r = wave_r + .2*sin(time*1.33)+bass*.3; \\nwave_g = wave_g + .2*sin(time)+treb*.3; \\nwave_b = wave_b + .2*sin(time*.988)+mid*.3; \\nzoom = 1+bass*.01;","pixel_eqs_eel":"zoom = zoom + (rad*.01)*treb;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - 0.5);\\n  ret_1.x = texture (sampler_main, (tmpvar_2 + 0.5)).x;\\n  ret_1.y = texture (sampler_main, ((tmpvar_2 * 0.98) + 0.5)).y;\\n  ret_1.z = texture (sampler_main, ((tmpvar_2 * 0.96) + 0.5)).z;\\n  ret_1 = (ret_1 - (ret_1 * 0.5));\\n  ret_1 = ((ret_1 * abs(\\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2) - 0.5)\\n  )) * 5.0);\\n  ret_1 = (ret_1 - 0.01);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\\n  float tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\\n  float tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\\n  float tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \\n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\\n  ) + (\\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\\n   * 0.15)) + ((\\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\\n   + bias3) * 0.1)).x;\\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.14;\\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\\n  tmpvar_6.y = (tmpvar_5 - ((\\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\\n   + \\n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\\n  ) + (\\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\\n   * 0.1)).x);\\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\\n  vec2 x_7;\\n  x_7 = (ret_2.xy - 0.5);\\n  ret_2 = (ret_2 * clamp ((\\n    sqrt(dot (x_7, x_7))\\n   * 5.0), 0.0, 1.0));\\n  ret_2 = ret_2.xxy;\\n  ret_2 = (ret_2 + 1.15);\\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \\n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\\n  ), pow (hue_shader.yxz, ret_2)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }"}')},629:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.27,"wave_mystery":-0.38,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":1,"ib_g":1,"ib_b":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"rad":0.34,"ang":0.53,"r":0.56,"g":0.36,"r2":0.9,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time;"},{"baseVals":{"sides":3,"rad":0.41,"r":0,"g":0.8,"b":0.7,"g2":0.4,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang - time*.333;"},{"baseVals":{"sides":3,"rad":0.21,"r":0.84,"r2":1,"g2":0.58,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + time*4;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = .5 + (bass*.2)*sin(sample*2*(time*10*treb));\\ny = .5 + (bass*.2)*cos(sample*2*(time*10*treb));\\nr = 1 + .5*sin(sample*.10+(time*10*bass));\\ng = 1 + .5*sin(sample*2+(time*50*treb));\\nb = 1 + .5*sin(sample*5+(time*20*mid));\\na = r;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\ndecay = .92;","pixel_eqs_eel":"zoom = zoom + (.03*(bass_att*bass_att))*rad;\\nrot = rot + rad*(-2.5&(cos(time)*5))*.01;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz - 0.04);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret1_1;\\n  vec2 uv1_2;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv).xyz;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_4.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_2 = ((0.5 * cos(\\n    (((uv - 0.5) * 1.5) + 1.6)\\n  )) - (3.0 * tmpvar_4));\\n  ret1_1 = ((0.3 * dot (tmpvar_3, vec3(0.32, 0.49, 0.29))) + ((\\n    (clamp ((0.01 / sqrt(\\n      dot (uv1_2, uv1_2)\\n    )), 0.0, 1.0) * tmpvar_3)\\n   * \\n    (4.0 * (bass + mid))\\n  ) * treb_att));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 0.0;\\n  tmpvar_5.xyz = ret1_1;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 0.0;\\n  tmpvar_6.xyz = abs((ret1_1 - 1.0));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = mix (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)), tmpvar_5, tmpvar_6);\\n  ret1_1 = tmpvar_7.xyz;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (0.8 * tmpvar_7.xyz);\\n  ret = tmpvar_8.xyz;\\n }"}')},9088:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"wave_a":0.027,"wave_scale":1.015,"wave_smoothing":0.522,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpscale":3.138,"zoom":1.033,"warp":0.14837,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nq6 = 0.6*cos(time*0.83);\\nq7 = 0.6*cos(time*0.70);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 3.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - 0.005));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec3 N_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  N_1.x = (((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\\n   + bias2)).x * 0.7);\\n  N_1.y = (((\\n    (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\\n   + bias2)).x * 0.7);\\n  N_1.x = (N_1.x + ((\\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ).x * 0.3));\\n  N_1.y = (N_1.y + ((\\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n   - \\n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ).x * 0.3));\\n  N_1.z = -0.07;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = normalize(N_1);\\n  N_1 = tmpvar_4;\\n  vec3 tmpvar_5;\\n  tmpvar_5.z = -0.8;\\n  tmpvar_5.x = q6;\\n  tmpvar_5.y = q7;\\n  vec3 tmpvar_6;\\n  tmpvar_6.z = 0.0;\\n  tmpvar_6.xy = ((uv_orig * 2.0) - 1.0);\\n  vec3 tmpvar_7;\\n  tmpvar_7 = normalize((tmpvar_5 - tmpvar_6));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = normalize((tmpvar_6 - vec3(0.0, 0.0, 1.0)));\\n  ret_2 = (vec3(clamp (dot (tmpvar_4, tmpvar_7), 0.0, 1.0)) * normalize((\\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\\n  .yzx + 0.05)));\\n  ret_2 = (ret_2 + (pow (\\n    clamp (dot (normalize((tmpvar_8 + \\n      ((2.0 * tmpvar_4) * dot (tmpvar_8, tmpvar_4))\\n    )), tmpvar_7), 0.0, 1.0)\\n  , 32.0) * 0.5));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }"}')},7828:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":7,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0,"wave_scale":2.122,"wave_smoothing":0.783,"modwavealphastart":0.99,"modwavealphaend":1.49,"warpanimspeed":0.55,"warpscale":1.66,"zoom":1.003,"warp":0.06621,"wave_r":0.81,"wave_g":0.79,"wave_b":0.77,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"rad":0.80814,"ang":1.25664,"g":1,"b":1,"a":0,"r2":0.42,"g2":0.6,"b2":0.5,"a2":0.01,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.85 + 0.35*sin(0.437*time+1) + 0.55*sin(0.197*time+4);\\nwave_g = 0.85 + 0.35*sin(0.544*time+2) + 0.55*sin(0.143*time+5);\\nwave_b = 0.85 + 0.35*sin(0.751*time+3) + 0.55*sin(0.117*time+6);\\nwave_r = sqrt(wave_r);\\nwave_g = sqrt(wave_g);\\nwave_b = sqrt(wave_b);\\nrot = rot + 0.010*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.210*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.210*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndx = dx + 0.003*( 0.60*sin(0.234*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.003*( 0.60*sin(0.284*time) + 0.40*sin(0.247*time) );\\ndecay = decay - 0.01*equal(frame%6,0);\\ndx = dx + dx_residual;\\ndy = dy + dy_residual;\\nbass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.96+1.3);\\ndx_residual = equal(bass_thresh,2.13)*0.016*sin(time*7) + (1-equal(bass_thresh,2.13))*dx_residual;\\ndy_residual = equal(bass_thresh,2.13)*0.012*sin(time*9) + (1-equal(bass_thresh,2.13))*dy_residual;\\nwave_x = wave_x - dx_residual*7;\\nwave_y = wave_y - dy_residual*7;\\nwave_mystery = time*0.03;\\n\\nzoom = zoom + 0.008*(0.35*sin(0.844*time+2) + 0.55*sin(1.743*time+5));\\n//zoom = zoom + max(0,treb-1.2)*0.1;\\n\\nq1 = 0.03;// + 0.09*pow( 0.5 + 0.25*sin(0.437*time+1) + 0.15*sin(0.197*time+4), 8 );","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, (uv + ((texture (sampler_main, \\n    (mix (uv, uv_orig, vec2(-1.0, -1.0)) + (texsize.zw * vec2(1.0, 3.0)))\\n  ).xy - 0.5) * q1)));\\n  ret_1 = (tmpvar_2.xyz - (vec3(0.001, 0.001, 0.0) * (\\n    (clamp (((tmpvar_2.xyz - 0.5) * 99.0), 0.0, 1.0) * 2.0)\\n   - 1.0)));\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 15.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv);\\n  vec3 tmpvar_2;\\n  tmpvar_2.x = (((tmpvar_1.x * tmpvar_1.y) * 5.0) - 1.0);\\n  tmpvar_2.y = ((tmpvar_1.y * tmpvar_1.z) * 5.0);\\n  tmpvar_2.z = ((tmpvar_1.z * tmpvar_1.x) * 6.0);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (tmpvar_2.zyx * 0.37);\\n  ret = tmpvar_3.xyz;\\n }"}')},4716:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":0.987,"echo_zoom":1.006,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_dots":1,"darken":1,"wave_a":2.782,"wave_scale":0.59,"wave_smoothing":0.36,"warpanimspeed":1.489,"warpscale":0.733,"fshader":0.1,"zoom":0.99971,"dx":-0.005,"warp":0.13291,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.350*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nwave_g = wave_g + 0.350*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nwave_b = wave_b + 0.350*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\ncx = cx + 0.110*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.110*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\ndecay = decay - 0.01*equal(frame%20,0);\\n//zoom = 1;\\n//warp = 0;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.98);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},2585:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.16936,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.011726,"wave_smoothing":0.9,"warpanimspeed":0.037492,"warpscale":0.014889,"warp":0.033004,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.05,"ob_a":0.2999,"ib_size":0.09,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":3,"mv_y":2,"mv_dx":0.02,"mv_dy":-0.02,"mv_l":0.15,"mv_r":0.49,"mv_g":0.48,"mv_b":0.300001,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":3.998815,"tex_ang":1.570796,"tex_zoom":0.250054,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.741858,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.06779,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"sides":5,"textured":1,"rad":1.0677,"ang":0.753982,"tex_zoom":0.779769,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"r":0.1,"g":0,"b":0.3},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(-time+1.1)*0.5+0.5;\\nt5=sin(-time+3.1)*0.5+0.5;\\nt6=sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=(flip+1)*below(flip,1);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\ndx = if(flip,x,dx-x);\\ndy = if(flip,y,dy-y);\\ndz = pow(dx*dx+dy*dy,.5);\\nang = abs(asin(dx/dz));\\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\\nr = .5 + .5*sin(cang);\\ng = .5 + .5*sin(cang + 1.047197);\\nb = .5 + .5*sin(cang + 2.094395);\\n\\na=(1-sample)*above(sample,0);\\n"},{"baseVals":{"enabled":1,"thick":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(-time+1.1)*0.5+0.5;\\nt5=sin(-time+3.1)*0.5+0.5;\\nt6=sin(-time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\ndx = if(flip,x,dx-x);\\ndy = if(flip,y,dy-y);\\ndz = pow(dx*dx+dy*dy,.5);\\nang = abs(asin(dx/dz));\\ncang = if(flip,cang,if(below(dx,0),if(below(dy,0),-ang,3.141592654 + ang),if(below(dy,0),ang,3.141592654 - ang)));\\nr = .5 + .5*sin(cang);\\ng = .5 + .5*sin(cang + 1.047197);\\nb = .5 + .5*sin(cang + 2.094395);\\n\\na=(1-sample)*above(sample,0);"},{"baseVals":{"thick":1,"additive":1,"g":0.6,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs - 2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs - 2)*1.5 ;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs - 0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs + 0.5);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05\\n"},{"baseVals":{"thick":1,"additive":1,"g":0.3,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"n=sample*6.283;\\ntm=q1 ;\\nphs=-sample*0.5;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2+phs-2)*0.5 +0.5 + 2;\\n\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\nang=cos(tm*2+phs-2)*1.5;\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2+phs-0.5)*1.5;\\nxq=xp;\\nyq=yp*sin(ang) + zp*cos(ang);\\nzq=yp*cos(ang) - zp*sin(ang);\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3 + 0.5 +phs);\\nxp=xq*sin(ang) + yq*cos(ang);\\nyp=xq*cos(ang) - yq*sin(ang);\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2+phs)*0.75 - 1.05;\\nxq=xp*sin(ang) + zp*cos(ang);\\nyq=yp;\\nzq=xp*cos(ang) - zp*sin(ang);\\n\\n//upper arm up down;\\nang=cos(tm+phs)*0.5 - 0.5;\\nxp=xq;\\nyp=yq*cos(ang) - zq*sin(ang);\\nzp=yq*sin(ang) + zq*cos(ang);\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=-xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=(1-sample)*0.05;\\n"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"decay=1;\\nzoom=1.1;\\n\\nwarp = 0;\\n\\nvol=(bass_att+mid_att+treb_att)*0.25;\\nvol=vol*vol;\\nmtime=mtime+vol*0.1;\\n\\nq1=mtime*0.4;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_noise_lq, (rand_frame.xy + \\n    ((uv * texsize_noise_lq.zw) * texsize.xy)\\n  )) * 2.0) - 1.0);\\n  ret_1 = (texture (sampler_pw_main, (uv + (\\n    (tmpvar_2.zw * texsize.zw)\\n   * 0.5))).xyz + ((0.59 - \\n    (0.2 * rad)\\n  ) * tmpvar_2.xyz));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = clamp (((\\n    (ret_1 - 0.5)\\n   * 3.0) + 0.25), 0.0, 1.0);\\n  ret_1.x = tmpvar_3.x;\\n  ret_1.yz = tmpvar_3.xx;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},7472:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.977,"echo_zoom":1.006596,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wrap":0,"darken_center":1,"wave_a":1.193337,"wave_scale":1.000291,"wave_smoothing":0.9,"modwavealphastart":0.73,"modwavealphaend":1.07,"warpscale":2.853,"zoomexp":0.999835,"zoom":0.999682,"warp":0,"wave_g":0.8,"wave_b":0.2,"ob_size":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g + 0.100*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b + 0.100*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nmv_r = wave_r;\\nmv_b = wave_b;\\nmv_g = wave_g;\\nq1 = 0.05*(pow(1+1.2*bass+0.4*bass_att+0.1*treb+0.1*treb_att+0.1*mid+0.1*mid_att,6)/fps);\\n//q1 = 0.6*(bass+bass_att);\\nmv_a = if(above(bass-1.2,1),1,bass-1.2);","pixel_eqs_eel":"zoom = 1.01 + rad*0.15*q1;","warp":"","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},4654:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"decay":1,"wave_mode":3,"wave_thick":1,"wave_brighten":0,"wave_a":11.94,"wave_scale":0.387,"wave_smoothing":0.7,"warpscale":1.772,"zoomexp":4.401,"zoom":1.031,"rot":0.003,"warp":0,"wave_r":0.49,"wave_g":0.49,"wave_b":0.49,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"t = time*2.3;\\nwave_x = wave_x + 0.350*( 0.70*sin(2.221*time) + 0.30*sin(1.821*time) );\\nwave_y = wave_y + 0.350*( 0.30*sin(1.942*time) + 0.70*sin(2.522*time) );\\nwave_r = wave_r + 0.790*( 0.60*sin(0.823*t) + 0.40*sin(0.916*t) );\\nwave_g = wave_g + 0.790*( 0.60*sin(0.900*t) + 0.40*sin(1.023*t) );\\nwave_b = wave_b + 0.790*( 0.60*sin(0.808*t) + 0.40*sin(0.949*t) );\\nrot = rot + 0.010*( 0.60*sin(0.038*time) + 0.40*sin(0.054*time) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xxx - 0.5)\\n   / 256.0) * 2.0));\\n  vec2 x_2;\\n  x_2 = (uv - uv_orig);\\n  ret_1 = (ret_1 * (0.97 + (0.03 * \\n    clamp ((sqrt(dot (x_2, x_2)) * 200.0), 0.0, 1.0)\\n  )));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (((\\n    (texture (sampler_main, uv).xyz * -2.0)\\n   + \\n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1) * 2.0)\\n  ) + (\\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n   * 2.0)) - 0.7);\\n  ret = tmpvar_1.xyz;\\n }"}')},7185:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.975,"echo_orient":3,"wave_mode":2,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":0.001,"wave_scale":0.625,"wave_smoothing":0,"modwavealphastart":0,"modwavealphaend":0,"warpanimspeed":0.01,"fshader":0.7,"zoom":1.046,"warp":0.01,"sx":0.99999,"wave_r":0.5,"wave_y":0.47,"mv_x":64,"mv_y":48,"mv_l":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"textured":1,"rad":0.80814,"ang":0.75398,"tex_ang":1.3823,"tex_zoom":1.10462,"g":0.9,"b":0.7,"r2":1,"b2":0.8,"a2":1,"border_a":0.4},"init_eqs_eel":"","frame_eqs_eel":"x = x + 0.03*cos(time*0.69 + 2);\\ny = y + 0.02*cos(time*0.73 + 1);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r*x*bass*1000000 + 0.400*( 0.60*sin(0.933*time) + 0.40*sin(1.045*time) );\\nwave_g = wave_g*200000*treb/x + 0.400*( 0.60*sin(0.900*time) + 0.40*sin(0.956*time) );\\nwave_b = wave_b +0.400*( 0.60*sin(0.910*time) + 0.40*sin(0.920*time) );\\nzoom = zoom + 0.023*( 0.60*sin(0.339*time) + 0.40*sin(0.276*time) );\\nq=rot/5 + 0.030*( 0.60*sin(0.381*time) + 0.40*sin(0.579*time) );\\ncx = cx + 0.070*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\ncy = cy + 0.070*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nzoom=zoom+0.013*(0.60*sin(0.33*time)+0.40*sin(0276*time));\\nx=x+100;","pixel_eqs_eel":"zoom=zoom-max(0.001,(bass-1.2))*sin(time*1.4+rad*6);\\nzoom=zoom+0.07*sin(rad*25+time*2.5);","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz - 0.005);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 1.333);\\n  ret = tmpvar_1.xyz;\\n }"}')},6246:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"darken":1,"wave_a":0.001,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.11,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"rad":2.66718,"tex_zoom":0.45112,"g":1,"a":0.15,"g2":0,"a2":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.35,"y":0,"rad":0.09959,"tex_zoom":0.42497,"r":0,"b":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"y":0,"rad":0.10201,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"x":0.65,"y":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"r":0,"g":0,"b":0,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//q1 = state;\\n//q2 = basstime;\\n\\nq1 = 0;\\nspeed = bass_att*0.3;\\nv = sample*10000 + value2*bass*0.1;\\n\\n//state 0 elipse\\nxs = xs + sin(v*0.1 + sin(v)*0.1)*speed*atan(v*1.51);\\nys = ys + sin(v*0.1 + cos(v)*0.1)*speed*atan(v);\\n\\nx = 0.5 + 0.5*sin(xs*0.1)*cos(time*1 + ys);\\ny = 0.5 + 0.5*sin(ys*0.1)*cos(time*1.1 + xs);\\n\\n\\nr = 0.5 + 0.5*sin(q1*0.22);\\ng = 0.5 + 0.5*sin(q1*0.307) + x;\\n//b = 0.4 + 0.4*sin(time*0.959);\\n\\n\\nxs = if(above(xs,1000),0 ,xs);\\nys = if(above(ys,1000),0 ,ys);"},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"thick":1,"additive":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"//apply zoom burst on beat\\nflag = above(q3,2);\\n//state zero is ready state\\nstate = state + flag*equal(state,0);\\n\\n//upwards flight\\nyval = if(equal(state,0),0, yval);\\nyval = yval + 0.00004*equal(state,1);\\nymax = if(equal(state,0),int(rand(100))*0.004,ymax);\\n\\n//hit apogee\\nstate = if(above(yval,0.5+ymax),2,state);\\n\\n//reset variable\\nyval = if(equal(state,0),0, yval);\\nburst = if(equal(state,0),0.001,burst);\\nalphax = if(equal(state,0),1,alphax);\\nxdriftinc = if(equal(state,0),0,xdriftinc);\\n\\nburstspeed = if(equal(state,0),int(rand(10)),burstspeed);\\nxdrift = if(equal(state,0),int(rand(20)),xdrift);\\n//to get the numbers small enough have to use constants\\nxdriftinc = xdriftinc\\n+ equal(xdrift,0)*equal(state,1)*0.00002\\n+ equal(xdrift,1)*equal(state,1)*0.000018\\n+ equal(xdrift,2)*equal(state,1)*0.000016\\n+ equal(xdrift,3)*equal(state,1)*0.000014\\n+ equal(xdrift,4)*equal(state,1)*0.000012\\n+ equal(xdrift,5)*equal(state,1)*0.00001\\n+ equal(xdrift,6)*equal(state,1)*0.000008\\n+ equal(xdrift,7)*equal(state,1)*0.000006\\n+ equal(xdrift,8)*equal(state,1)*0.000004\\n+ equal(xdrift,9)*equal(state,1)*0.000002\\n+ equal(xdrift,11)*equal(state,1)*-0.000002\\n+ equal(xdrift,12)*equal(state,1)*-0.000004\\n+ equal(xdrift,13)*equal(state,1)*-0.000006\\n+ equal(xdrift,14)*equal(state,1)*-0.000008\\n+ equal(xdrift,15)*equal(state,1)*-0.00001\\n+ equal(xdrift,16)*equal(state,1)*-0.000012\\n+ equal(xdrift,17)*equal(state,1)*-0.000014\\n+ equal(xdrift,18)*equal(state,1)*-0.000016\\n+ equal(xdrift,19)*equal(state,1)*-0.000018;\\n\\nburst = burst\\n+ equal(burstspeed,0)*equal(state,2)*0.000024\\n+ equal(burstspeed,1)*equal(state,2)*0.000022\\n+ equal(burstspeed,2)*equal(state,2)*0.00002\\n+ equal(burstspeed,3)*equal(state,2)*0.000018\\n+ equal(burstspeed,4)*equal(state,2)*0.000016\\n+ equal(burstspeed,5)*equal(state,2)*0.000014\\n+ equal(burstspeed,6)*equal(state,2)*0.000012\\n+ equal(burstspeed,7)*equal(state,2)*0.00001\\n+ equal(burstspeed,8)*equal(state,2)*0.000008\\n+ equal(burstspeed,9)*equal(state,2)*0.000008;\\n\\nalphax = alphax - 0.00004*equal(state,2);\\nstate = if(below(alphax,0),0,state);\\n\\n\\ns = sample*3.14*100;\\nss = sample*6.28*1000;\\n\\n//draw torus\\nxs = (burst + 0.0001*cos(s))*cos(ss);\\nys = (burst + 0.0001*cos(s))*sin(ss);\\nzs = 0.1*burst*sin(s);\\n\\n\\n//rotate x axis\\nangle = sin(-q1*0.035)*6.28;\\nyx = ys*cos(angle) - zs*sin(angle);\\nzx = ys*sin(angle) + zs*cos(angle);\\nxx = xs;\\n\\n//rotate y axis\\nangle2 = sin(-q1*0.03)*6.28;\\nxd = xx*cos(angle2) - zx*sin(angle2);\\nzd = xx*sin(angle2) + zx*cos(angle2);\\nyd = yx;\\n\\n//rotaye z axis\\nangle3 = sin(-q1*0.022)*6.28;\\nxn = xd*cos(angle3) - yd*sin(angle3);\\nyn = xd*sin(angle3) + yd*cos(angle3);\\n\\nzd = zd + 2;\\n\\nx = xn*zd*0.3 + 0.5;\\ny = yn*zd*0.3*1.2;\\n\\n\\nx = x + xdriftinc;\\ny = y + sin(yval*1.5) - 0.18;\\n\\n\\nr = 0.5 + 0.5*sin(q1*1.3 + x + x);\\ng = 0.5 + 0.5*sin(q1*1.1 + x + y);\\nb = 0.5 + 0.5*sin(q1*1.66 + y + y);"}],"init_eqs_eel":"p1 = int(rand(16));\\np2 = p1;","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .4+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = 8-index;\\nq28 = sin(time/7);\\nq29 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmv_a = .5 * q1;\\n\\nmovez = movez + .01 * 30/fps ;\\nq29 = movez;\\n\\nmovex = movex + .003 * 30/fps *q2;\\nq30 = movex;\\n\\nq31 = sqr(sin(time/17));\\nq32 = sqr(cos(time/17));\\n\\nzoom = 1.0;\\nrot = .0;\\ndx = .0;\\nwarp = .2;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 zz_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  zz_1 = (((\\n    (uv - vec2(0.5, 0.5))\\n   * texsize.xy) * 0.01) * tmpvar_2);\\n  zz_1 = -(zz_1.yx);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((texture (sampler_main, (uv + \\n    (((clamp (\\n      (sin(zz_1.yx) / cos(zz_1.yx))\\n    , vec2(-8.0, -8.0), vec2(8.0, 8.0)) * cos(\\n      (4.0 * zz_1)\\n    )) * texsize.zw) * 16.0)\\n  )).xyz * 0.99) - 0.01);\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.x = cos((13.5 * uv.y));\\n  tmpvar_1.y = sin((19.5 * uv.x));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = max (texture (sampler_main, uv).xyz, texture (sampler_main, (uv + (0.06 * tmpvar_1))).xyz);\\n  ret = tmpvar_2.xyz;\\n }"}')},1886:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.8,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/100;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/75;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"speed_=1;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.96, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, 0.2+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nvol = (bass_att + mid_att + treb_att)/2;\\nvol_ = dec_med * vol_ + (1-dec_med)* vol;\\nvol__ = dec_med * vol__ + (1-dec_med)* vol_;\\nq27 = index + 1;\\nq28 = index2 + 2;\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrig = q24 * bnot(index%8);\\nvx = vx*bnot(trig) + trig* (int(rand(100))/100-.5);\\nvy = vy*bnot(trig) + trig* (int(rand(100))/100-.5);\\nvz = vz*bnot(trig) + trig* (int(rand(100))/100-.5);\\n\\nspeed = min(vol_-vol__+.5,1);\\nspeed = max(speed,-.5);\\nspeed_ = bnot(trig)*speed_ + trig*speed;\\nspg = dec_med*spg + (1-dec_med)*speed_;\\nmovz = movz + 1/fps*(speed_+0*vol_/6);\\nq9 = movz;\\nq12 = min(q22,6)*2;\\n\\n//puls = puls*dec_med + (1-dec_med)*q22;\\n\\nq13 = 2* sin(movz/3-time/11);\\n\\ntrig = bnot(index%4) * q24;\\ndir = bnot(trig)*dir + trig*(int(rand(10))-5);\\ntrel = trel + .1/fps*dir;\\nq5 = cos(trel-movz);\\nq6 = sin(trel/2-movz);\\nq7 = -q6;\\nq8 = q5;\\n\\nang0 = ang0*dec_med + vz*(1-dec_med);\\nq17 = ang0*2; \\nq30 = .2*sin(time/8);\\n\\nq31 = .5 + .5*sin(time/3.3);\\n\\nzoom = 1;\\nrot = .0;\\ndx = .00;\\nmonitor = q28;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + ((0.004 * \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ).xy * vec2(0.0, 1.0)));\\n  uv6_2 = (0.4 * sin((\\n    (((uv - 0.5) * aspect.xy) * 18.0)\\n   * rand_frame.xy)));\\n  vec3 tmpvar_3;\\n  tmpvar_3.x = (treb * 0.5);\\n  tmpvar_3.y = (bass * 0.5);\\n  tmpvar_3.z = (mid * 0.5);\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (0.15 * (vec3((0.051 / sqrt(\\n      dot (uv6_2, uv6_2)\\n    ))) * tmpvar_3))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_4.xyz;\\n }","comp":"float xlat_mutabledist;\\nfloat xlat_mutabledist2;\\nfloat xlat_mutableinten;\\nfloat xlat_mutablem;\\nfloat xlat_mutablemask;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_2);\\n  int tmpvar_3;\\n  tmpvar_3 = int(q10);\\n  xlat_mutablem = (1.0 - float(tmpvar_3));\\n  float tmpvar_4;\\n  tmpvar_4 = -(q10);\\n  xlat_mutabledist = (1.0 - fract((0.25 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  xlat_mutableret1 = (texture (sampler_main, xlat_mutableuv2).xyz * xlat_mutableinten);\\n  xlat_mutablem = (2.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((0.5 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_5.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_5.xyz * xlat_mutableinten));\\n  xlat_mutablem = (3.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((0.75 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_6.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_6.xyz * xlat_mutableinten));\\n  xlat_mutablem = (4.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((1.0 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_7.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_7.xyz * xlat_mutableinten));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (1.8 * xlat_mutableret1);\\n  ret = tmpvar_8.xyz;\\n }"}')},7469:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.49,"decay":1,"echo_zoom":1.01,"echo_orient":2,"wave_mode":4,"wave_thick":1,"brighten":1,"wave_a":100,"wave_scale":0.007,"wave_smoothing":0.5,"wave_mystery":-0.4,"modwavealphastart":0.5,"modwavealphaend":1,"zoom":1.0099,"cy":0.86,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0.002,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"sides":3,"num_inst":6,"rad":0.08244,"tex_ang":6.28319,"tex_zoom":0.97059,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//// cube with triangles\\n\\nsample=instance/num_inst;    t = 6.28*sample + .05*time;\\n\\nx = .04*sin(t);   y = .04*cos(t);\\nx=.5 + x/q6;      y=.5 + y; \\n\\nang=3.14/4+t;\\n\\nr=.3+.35*(3.1*sample)%3;   g=.7*r;    b=.5*r;\\nr2=.8*r;                   g2=.8*g;   b2=.8*b;"},{"baseVals":{"enabled":1,"sides":6,"additive":1,"textured":1,"num_inst":66,"rad":0.14444,"tex_ang":4.08407,"tex_zoom":6.89114,"g":1,"b":1,"r2":1,"b2":1,"a2":0.1,"border_a":0.04},"init_eqs_eel":"","frame_eqs_eel":"/// circles\\n\\nsample=instance/num_inst;        n=11;      \\nt = n*6.28*sample + .5*time;    s=-int(n*sample);    w=3*3.14/4;\\n\\nr1=    bnot(s+ 0) *.16;    w1=   bnot(s+ 0) * (t);\\nr1=r1+ bnot(s+ 1) *.32;    w1=w1+bnot(s+ 1) * (t);\\nr1=r1+ bnot(s+ 2) *.28;    w1=w1+bnot(s+ 2) * (t-2*w);   \\nr1=r1+ bnot(s+ 3) *.42;    w1=w1+bnot(s+ 3) * (t+.3*w);\\nr1=r1+ bnot(s+ 4) *.46;    w1=w1+bnot(s+ 4) * (t-2*w); \\nr1=r1+ bnot(s+ 5) *.55;    w1=w1+bnot(s+ 5) * (t-2*w); \\nr1=r1+ bnot(s+ 6) *.64;    w1=w1+bnot(s+ 6) * (t-1.998*w); \\nr1=r1+ bnot(s+ 7) *.42;    w1=w1+bnot(s+ 7) * (t-.3*w);\\nr1=r1+ bnot(s+ 8) *.48;    w1=w1+bnot(s+ 8) * (t-1.33*w);\\nr1=r1+ bnot(s+ 9) *.42;    w1=w1+bnot(s+ 9) * (t-.3*w);\\nr1=r1+ bnot(s+10) *.73;    w1=w1+bnot(s+10) * (t-1.993*w);\\n\\nr1=r1*.79;\\nx = r1*sin(w1);           y = r1*cos(w1);\\nx =.5 + x/q6;             y =.5 + y; \\n\\nang=t+w;                  \\nw3=atan2(y-.5,x-.5);\\n//tex_ang= ang + (pow(-1,instance)+bnot(instance%3))*3.14/3;\\ntex_ang= ang + 3.14/3*(20*t)%6;\\ntex_zoom=7.9-7*sample;\\nr=.5+.5*sin(133*sample);  g=.5+.5*sin(401*sample);     b=.5+.5*sin(499*sample);\\nr2=r;                     g2=g;                        b2=b;"},{"baseVals":{"sides":6,"additive":1,"textured":1,"num_inst":12,"y":0.61,"rad":0.208,"tex_zoom":6.17732,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":3,"num_inst":6,"x":0.38,"y":0.28,"rad":0.08244,"ang":0.81681,"tex_zoom":1.54929,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//// cube with triangles\\n\\nsample=instance/num_inst;    t = 6.28*sample + .05*time +  3.14/3*(.13*time)%6;\\n\\nx = .04*sin(t);   y = .04*cos(t);\\nx=.5 + x/q6;      y=.5 + y; \\n\\nang=3.14/4+t;\\n\\nr=.3+.35*(3.1*sample)%3;   g=.7*r;    b=.5*r;\\nr2=.8*r;                   g2=.8*g;   b2=.8*b;"}],"waves":[{"baseVals":{"scaling":60.80387,"smoothing":0.7,"a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\nwave_a=0;   warp=0;\\ndecay=.6;    zoom=1;\\n\\nq6=aspecty;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_5.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_5.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_5.z * 0.5));\\n  };\\n  float tmpvar_6;\\n  tmpvar_6 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_6 * tmpvar_6)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  ret_1 = vec3(tmpvar_9);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_9 > (q26 * q13)) && (tmpvar_9 <= (q23 * q11)))) {\\n    ret_1.z = (tmpvar_9 - (tmpvar_10.x * 0.5));\\n  };\\n  if (((tmpvar_9 > (q25 * q11)) && (tmpvar_9 <= (q22 * q12)))) {\\n    ret_1.x = (tmpvar_9 - (tmpvar_10.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\\n    ret_1.y = (tmpvar_9 - (tmpvar_10.z * 0.5));\\n  };\\n  ret_1 = (mix (ret_1, (\\n    (0.75 * ret_1)\\n   * \\n    (((0.6 * (\\n      (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n     + bias3)) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)))\\n  ), pow (hue_shader, \\n    (q20 * ret_1)\\n  )) * 0.9);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_11;\\n  tmpvar_11 = sqrt(ret_1);\\n  ret_1 = tmpvar_11;\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = tmpvar_11;\\n  ret = tmpvar_12.xyz;\\n }"}')},4338:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.0065,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":4.099998,"wave_scale":2.850136,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_g":0,"wave_b":0,"ob_r":0.01,"ob_a":1,"ib_size":0.02,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"x":0.4999,"y":0.9,"rad":0.15493,"tex_zoom":0.779765,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"textured":1,"rad":0.986082,"tex_ang":3.141593,"tex_zoom":0.756684,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + (bass*.2) + (time*.4);\\n\\nx = (sin(time)*0.090+0.5);\\ny = (sin(time/5)*0.090+0.5);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.218587,"tex_zoom":4.492867,"g":1,"b":1,"r2":1,"b2":1,"a2":1},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nob_r = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nob_g = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nob_b = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\nib_r = ob_r*1.001;\\nib_g = ob_g*1.001;\\nib_b = ob_b*1.001;\\n\\n\\n\\ndecay = 0.9999;\\n\\n\\n\\n\\n\\nbasstemp= bass + bass_att + bass_thresh;\\ntrebtemp= treb + treb_att + treb_thresh;\\ntrasstemp= (max(basstemp, trebtemp));\\ntrassave= (trasstemp/3);\\n\\nbasst= max(bass + bass_att, treb + treb_att);\\ntrebb= min(basst + bass_thresh, basst + treb_thresh);\\nmidbeat= trebb/3;\\nmidtb= max(midbeat + mid, midbeat + mid_att);\\nmtb= midtb/2.25;\\n\\nbeetA= (max(treb, bass) + min(treb_att, bass_att)) /2;\\nbeetB= (max(mid, beetA) + min(mid_att, beetA*0.5)) /2;\\nbeetAB= (beetA+beetB)/2;\\nbeetC= (max(mid, treb) + min(mid_att, treb_att)) /2;\\nbeetD= (max(bass, beetC) + min(bass_att, beetC*0.5)) /2;\\nbeetCD= (beetC+beetD)/2;\\nbeet= (beetAB+beetCD) /2;\\n\\nmadbeat= (trassave+mtb+beet) /3;","pixel_eqs_eel":"rot = rot +.05 * sin(rad-(time*.1+bas))  ;\\nbas =  (bass*2.5);\\nbos = bass;\\nwarp = (bos + bass + bass) * .1;\\ncx = (cx + treb) * .5;\\n\\nq2 = q4 * (bass+0.25)  ;\\nwarp = q4-q2;\\n\\ndx = dy+.01 ;\\ndy = dx-.01 ;\\n\\nbasstemp= bass + bass_att + bass_thresh;\\ntrebtemp= treb + treb_att + treb_thresh;\\ntrasstemp= (max(basstemp, trebtemp));\\ntrassave= (trasstemp/3);\\n\\nbasst= max(bass + bass_att, treb + treb_att);\\ntrebb= min(basst + bass_thresh, basst + treb_thresh);\\nmidbeat= trebb/3;\\nmidtb= max(midbeat + mid, midbeat + mid_att);\\nmtb= midtb/2.25;\\n\\nbeetA= (max(treb, bass) + min(treb_att, bass_att)) /2;\\nbeetB= (max(mid, beetA) + min(mid_att, beetA*0.5)) /2;\\nbeetAB= (beetA+beetB)/2;\\nbeetC= (max(mid, treb) + min(mid_att, treb_att)) /2;\\nbeetD= (max(bass, beetC) + min(bass_att, beetC*0.5)) /2;\\nbeetCD= (beetC+beetD)/2;\\nbeet= (beetAB+beetCD) /2;\\n\\nmadbeat= (trassave+mtb+beet) /3;","warp":"","comp":""}')},82:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"rad":0.20068,"tex_zoom":4.32548},"init_eqs_eel":"","frame_eqs_eel":"ba=bass-.9;\\ntr=treb-.9;\\nmi=mid-.9;\\n\\nrad=(ba+tr+mi)*.333;\\nss=ss+mi*.5;\\nss=if(above(8,ss),if(below(3,ss),ss,8),3);\\naa=aa+.01*(bass+bass_att+treb+treb_att-3.5);\\nsides=ss;\\nang=aa;\\n\\ntextured=if(below(1.3,treb),0,1);\\nrr=rr+ba*.4;\\ngg=gg+tr*.4;\\nbb=bb+mi*.4;\\nr=rr-.5*gg;\\nb=gg-.5*bb;\\ng=bb-.5*rr;\\nr2=b;\\nb2=g;\\ng2=r;\\nx=q3;\\ny=q4;\\nt3=x;\\nt4=y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"ff=ff+2.7;\\nbb=bb+bass+mid+treb;\\nbt=bb/ff;\\nbeat=above(bass,bt);\\nbeathard=if(beat,bass-bt,0);\\nmonitor=t3;\\ndecay=1;\\nq1=beat;\\nq2=beathard;\\nwrap=1;\\n\\n\\ncx=1-q3;\\ncy=1-q4;\\nba=bass-.9;\\ntr=treb-.9;\\nmi=mid-.9;\\nxx=xx+ba*.01-tr*.001;\\nyy=yy+tr*.01-ba*.001;\\nxx=if(above(1,xx),if(below(0,xx),xx,1),0);\\nyy=if(above(1,yy),if(below(0,yy),yy,1),0);\\n\\nq3=xx;\\nq4=yy;","pixel_eqs_eel":"dx=if(below(x,q3),abs(y)*.1,0)*q1;\\ndy=if(below(x,q3),abs(y)*.1*(sin(bass*3.14+treb*3.14)),0)*(1-q1);\\nrot=if(above(x,q3),-abs(y)*.1+x*q2*sin(bass),rot);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_2.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_1.y = texture (sampler_fw_main, (uv + (tmpvar_2 * 0.005))).y;\\n  ret_1 = (ret_1 + ((\\n    (ret_1 - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n   * 0.3) - 0.05));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.25)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.1));\\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},998:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.21,"decay":0.97,"echo_zoom":1,"echo_alpha":0.5,"additivewave":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":100,"wave_scale":2.63,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\nob_r = 1-abs(wave_r);\\nob_b = 1-abs(wave_b);\\nob_g = 1-abs(wave_g);\\nib_r = 1-abs(ob_r);\\nib_g = 1-abs(ob_g);\\nib_b = 1-abs(ob_b);;\\nob_a = ob_a - sin(time);\\nib_a = ib_a - cos(time);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\nzoom = zoom - 0.03;\\ndy = dy + 2*dy_r*cos(sin(1.2*cos(2.7*time)*(0.5-x))*y)*8*dx_r*sin(1.02*time);\\ndx = dx + 2*dx_r*sin(cos(1.32*sin(1.24*time)*(0.5-y))*x)*8*dy_r*cos(1.2*time);\\nsx = sx - 12*dx_r*cos(sin(1.1*sin(2.87*time)*1.5*rad)*rad)*12*dx_r*tan(x*0.8*time);\\nsy = sy - 12*dy_r*sin(sin(0.67*cos(1.12*time)*1.5*rad)*rad)*12*dy_r*tan(y*0.9*time);","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 112.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},5573:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1,"echo_orient":3,"wave_mode":5,"wave_a":100,"wave_scale":0.721,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.028,"warpscale":0.905,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5 + 0.5*sin(6*time);\\nwave_g = 0.5 + 0.5*sin(4.1*time);\\nwave_b = -1 + (1-wave_r + 1-wave_g);\\nwarp = 0;\\n\\npfthresh = above(bass_att,pfthresh)*2+(1-above(bass_att,pfthresh))*((pfthresh-1.3)*0.96+1.3);\\npfdx_r = equal(pfthresh,2)*0.015*sin(5*time)+(1-equal(pfthresh,2))*pfdx_r;\\npfdy_r = equal(pfthresh,2)*0.015*sin(6*time)+(1-equal(pfthresh,2))*pfdy_r;\\nrg1 = abs(sin(time));\\nrg2 = -1*above(rg1,0.75) -0.66*below(rg1,0.25) - 0.33*above(rg1,0.25)*below(rg1,0.5) - 0*above(rg1,0.5)*below(rg1,0.75);\\nrg3 = if(equal(pfthresh,2),rg2,rg3);\\n\\n\\nob_r = 1-abs(wave_r);\\nob_b = 1-abs(wave_b);\\nob_g = 1-abs(wave_g);\\necho_alpha = echo_alpha - rg3;\\necho_zoom = echo_zoom + sin(bass_att);","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.015*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.015*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\n\\nwx = 0.2*cos(time)*x;\\nwy = 0.2*sin(1.2*time)*y;\\nrot = rot + dx_r*abs(dy_r*4-treb_att-thresh);\\nzoom = zoom + 0.05*sin(4-(4*cos(0.5-rad*cos(tan(14*dx_r*bass_att))*cos(1.12*time)*rad*\\n14*rad))*16*dx_r);\\nrot = rot + dx_r;\\nrot = rot + dy_r;\\ndx = dx + 1.1*dx_r;\\ndy = dy + 1.1*dy_r;\\nrot = rot + above(bass_att,1.25)*1.2*tan(cos(time));\\nwarp = warp + above(bass_att,1.3)*12;\\nzoom = zoom - above(bass_att,1.2)*1.2*cos(2-abs(rad*2-time))*wx*rad;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz + ((\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n   / 256.0) * 7.0));\\n  vec3 tmpvar_2;\\n  tmpvar_2 = fract((ret_1 - (\\n    (clamp (((vol / vol_att) - 1.1), 0.0, 1.0) * 0.5)\\n   + 0.004)));\\n  ret_1 = tmpvar_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = tmpvar_2;\\n  ret = tmpvar_3.xyz;\\n }","comp":""}')},1846:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1,"decay":0.9,"echo_zoom":0.999823,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":1.766487,"zoomexp":1.000158,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.6,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":6.4,"mv_y":4.8,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.35*sin(1.14*time) + 0.16*sin(1.5*time);\\nwave_g = wave_g + 0.36*sin(1.27*time) + 0.15*sin(1.11*time);\\nwave_b = wave_b + 0.37*sin(1.284*time) + 0.15*sin(1.3*time);\\nwarp = 0;\\n\\nob_r = wave_g;\\nob_b = wave_r;\\nob_g = wave_b;\\nib_r = wave_r;\\nib_b = wave_g;\\nib_g = wave_r;\\n\\nib_size = ib_size + 0.01*bass_att;","pixel_eqs_eel":"thresh = above(bass_att,thresh)*2+(1-above(bass_att,thresh))*((thresh-1.3)*0.96+1.3);\\ndx_r = equal(thresh,2)*0.15*sin(5*time)+(1-equal(thresh,2))*dx_r;\\ndy_r = equal(thresh,2)*0.165*sin(6*time)+(1-equal(thresh,2))*dy_r;\\n\\nzoom = zoom - 0.06;\\ndx = dx + 0.025*sin(abs(24*y))*sin(time);\\ndy = dy + 0.025*sin(abs(24*x))*cos(time);\\nsx = sx - 0.025*sin(cos(24*rad))*cos(time);\\nsy = sy - 0.025*sin(cos(24*rad))*sin(time);","warp":"","comp":""}')},2279:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.17,"wave_scale":0.797,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.9995,"zoom":0.9998,"rot":0.02,"dy":-0.008,"warp":0.01,"sx":1.0098,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.9,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":38.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":33,"y":0,"rad":0.11039,"ang":3.4054,"r":0,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//ang = ang + time*2;\\n\\n//x = x + 0.4*sin(time);\\n//y = y + 0.4*sin(-time*1.4);"},{"baseVals":{"sides":34,"y":0.45,"rad":1.62175,"r":0,"a":0.05,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":54,"x":0,"y":0.6,"rad":0.13478,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.3*(0.6*sin(time*1.87) + 0.4*sin(1.98*time));\\n//b = b + 0.3*(0.6*sin(time*1.3434) + 0.4*sin(1.78*time));\\n//g = g + 0.3*(0.6*sin(time*1.9887) + 0.4*sin(1.6*time));\\nr=0;\\nb=0;\\ng=0;\\nr2=r;\\nb2=b;\\ng2=g;"},{"baseVals":{"x":0,"y":0.2,"rad":0.20068,"r":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"r":0.2,"g":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q1 = 1/asin(1);","frame_eqs_eel":"wave_r = wave_r + 0.3*sin(vol*50);\\nwave_b = wave_b + 0.3*sin(vol*20);\\nwave_g = wave_g + 0.5*sin(vol*35);\\n\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.4*(0.6*sin(time*1.1) + 0.4*sin(0.8*time));\\nwb = 0.5+0.4*(0.6*sin(time*1.6) + 0.4*sin(0.5*time));\\nwg = 0.5+0.4*(0.6*sin(time*1.34) + 0.4*sin(0.4*time));\\n\\nmonitor=wg;\\nq10=wr;\\nq11=wb;\\nq12=wg;\\nq18 = 0.007*sin(time*0.1);\\nq17 = -0.007*sin(time*0.254);\\nq2=bass_thresh;\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\nq3=vol;\\n\\nwarp=0;\\nt = t - 1/fps;\\nt = if(above(t,2),t-2,t);\\nq2 = t;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 noise3_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.5 + ((\\n    (uv - vec2(0.0, 1.0))\\n   - 0.5) * (1.0 + \\n    (tmpvar_2.y * 0.03)\\n  )));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (tmpvar_3.x + pow (tmpvar_2.x, 0.0));\\n  tmpvar_4.y = (tmpvar_3.y + pow (tmpvar_2.x, 0.005));\\n  noise3_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\\n    (q3 * 0.5)\\n  ))));\\n  noise3_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, fract(tmpvar_4));\\n  vec3 tmpvar_7;\\n  tmpvar_7.x = q10;\\n  tmpvar_7.y = q11;\\n  tmpvar_7.z = q12;\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (tmpvar_5, tmpvar_7, tmpvar_6.xxx);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = (tmpvar_6.xyz + clamp ((\\n    (tmpvar_6.yzx * tmpvar_8.zxy)\\n   - \\n    (tmpvar_6.zxy * tmpvar_8.yzx)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec2 uv6_1;\\n  vec2 d_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (((uv - 0.5) * aspect.xy) * 2.4);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((q12 * tmpvar_4.x) - (q11 * tmpvar_4.y));\\n  tmpvar_5.y = ((q11 * tmpvar_4.x) + (q12 * tmpvar_4.y));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = q13;\\n  tmpvar_6.y = q14;\\n  uv6_1 = ((0.5 + (tmpvar_5 * aspect.zw)) + tmpvar_6);\\n  uv6_1 = (1.0 - abs((\\n    (fract((uv6_1 * 0.5)) * 2.0)\\n   - 1.0)));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1)).z;\\n  uv6_1 = (uv6_1 - (tmpvar_7 * 0.1));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (0.5 + ((uv6_1 - 0.5) * 0.9));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = q13;\\n  tmpvar_9.y = q14;\\n  d_2 = (texsize.zw * 12.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (((texture (sampler_blur1, \\n    (tmpvar_8 + (vec2(1.0, 0.0) * d_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_8 - (vec2(1.0, 0.0) * d_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_10.y = (((texture (sampler_blur1, \\n    (tmpvar_8 + (vec2(0.0, 1.0) * d_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_8 - (vec2(0.0, 1.0) * d_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = mix (mix (mix (\\n    (texture (sampler_main, tmpvar_8).x * vec3(1.0, 0.0, 0.0))\\n  , vec3(-0.1, -1.0, -1.0), texture (sampler_main, \\n    (uv6_1 - tmpvar_9)\\n  ).yyy), vec3(1.0, 1.0, 0.0), vec3(sqrt(\\n    dot (tmpvar_10, tmpvar_10)\\n  ))), vec3(-0.5, 2.0, 3.0), vec3((texture (sampler_main, uv).z * 0.4)));\\n  ret = tmpvar_11.xyz;\\n }"}')},5218:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.49,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":1.06,"wave_scale":0.43,"wave_smoothing":0.9,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.403,"zoomexp":1.0016,"zoom":1.0298,"warp":0.01,"sx":0.9901,"sy":0.97078,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.05,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.05,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":54,"textured":1,"rad":0.10406,"tex_zoom":7.09852,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0.1,"border_g":0.1,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"textured":1,"rad":0.2047,"tex_zoom":4.81638,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r=q8;\\n//b=q7;\\n//g=q6;\\n//r2=q8;\\n//b2=q7;\\n//g2=q6;"},{"baseVals":{"sides":3,"y":0.451,"rad":0.02076,"ang":1.82212,"tex_zoom":2.0882,"r":0,"b":1,"a":0,"r2":1,"b2":1,"a2":0.03,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r=1-q8;\\n//b=1-q7;\\n//g=1-q6;\\n//r2=1-q8;\\n//b2=1-q7;\\n//g2=1-q6;\\n//x=x-(int(q1*10)*0.05);\\nrad = rad+0.09*q1;"},{"baseVals":{"sides":44,"rad":0.17628,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":0.30299,"r":0,"g":0,"b":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.90529,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = wave_r + 0.5*(0.6*sin(time*1.3) + 0.4*sin(0.98*time));\\nwave_b = wave_b + 0.5*(0.6*sin(time*1.1) + 0.4*sin(0.78*time));\\nwave_g = wave_g + 0.5*(0.6*sin(time*1.2) + 0.4*sin(0.6*time));\\n\\nq8=wave_r;\\nq7=wave_b;\\nq6=wave_g;\\n\\nwr = 0.5+0.3*(0.6*sin(time*1.8) + 0.4*sin(0.8*time));\\nwb = 0.5+0.3*(0.6*sin(time*1.67) + 0.4*sin(0.5*time));\\nwg = 0.5+0.3*(0.6*sin(time*1.92) + 0.4*sin(0.4*time));\\n\\nq10=wr;\\nq11=wb;\\nq12=wg;\\n\\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\\nq1=vol;\\nmonitor=vol;\\nmtime=mtime+vol*0.01;\\nq2=mtime*0.25;\\nwave_mystery = wave_mystery + 0.6*vol;\\nsy=sy+vol*0.02;\\nsx=sy;\\n\\ncx = cx + 0.2*sin(mtime);\\ncy = cy - 0.2*sin(mtime*1.2);","pixel_eqs_eel":"rot=log(x+0.1)*(x+0.1);\\nrot=rot*0.1;","warp":" shader_body { \\n  vec3 noise2_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv);\\n  vec3 tmpvar_4;\\n  tmpvar_4.x = q8;\\n  tmpvar_4.y = q7;\\n  tmpvar_4.z = q6;\\n  vec3 tmpvar_5;\\n  tmpvar_5.x = q10;\\n  tmpvar_5.y = q11;\\n  tmpvar_5.z = q12;\\n  noise2_1 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * (1.7 * mix (tmpvar_4, tmpvar_5, vec3(\\n    (1.0 - rad)\\n  ))));\\n  ret_2 = (tmpvar_3.xyz + clamp ((\\n    (tmpvar_3.yzx * noise2_1.zxy)\\n   - \\n    (tmpvar_3.zxy * noise2_1.yzx)\\n  ), 0.0, 1.0));\\n  ret_2 = (ret_2 * 0.9);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 1.49);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},7652:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.985,"echo_zoom":0.997,"wave_mode":5,"wave_thick":1,"modwavealphabyvolume":1,"brighten":1,"wave_a":0.08,"wave_scale":0.588,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.645,"warpscale":1.5,"zoomexp":0.9999,"zoom":1.0002,"rot":0.006,"warp":0.08927,"wave_r":0.45,"wave_g":0.45,"wave_b":0.45,"ob_size":0,"ob_r":0.3,"ob_g":0.3,"ob_b":0.5,"ob_a":1,"ib_size":0.26,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":12.8,"mv_y":11.4,"mv_l":5,"mv_a":0,"b1n":0.4},"shapes":[{"baseVals":{"sides":34,"thickoutline":1,"rad":0.80781,"ang":2.51327,"tex_ang":3.7698,"tex_zoom":2.7849,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r = r + 0.400*(0.60*sin(2.22*time) + 0.4*sin(1.888*time));\\n//g = g + 0.300*(0.60*sin(1.90*time) + 0.4*sin(2.100*time));\\n//b = b + 0.400*(0.60*sin(2.12*time) + 0.4*sin(1.98*time));"},{"baseVals":{"sides":34,"rad":0.40254,"tex_ang":2.51312,"tex_zoom":2.06615,"r":0,"a":0.1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"//r2 = r2 + 0.500*(0.60*sin(1.52*time) + 0.4*sin(1.988*time));\\n//g2 = g2 + 0.500*(0.60*sin(0.70*time) + 0.4*sin(1.300*time));\\n//b2 = b2 + 0.500*(0.60*sin(1.32*time) + 0.4*sin(0.91*time));"},{"baseVals":{"enabled":1,"sides":44,"additive":1,"thickoutline":1,"textured":1,"rad":1.79044,"tex_ang":3.76991,"tex_zoom":0.89576,"r":0.5,"g":0.5,"b":0.5,"a":0.1,"r2":0.5,"g2":0.5,"b2":0.5,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.500*(0.60*sin(2.22*time) + 0.4*sin(1.888*time));\\ng = g + 0.500*(0.60*sin(1.90*time) + 0.4*sin(2.100*time));\\nb = b + 0.500*(0.60*sin(2.12*time) + 0.4*sin(1.98*time));\\nr2=r;\\nb2=b;\\ng2=g;\\n"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.2,"y":0.501,"rad":0.5427,"ang":3.1415,"tex_ang":1.5079,"tex_zoom":1.76257,"g":1,"b":1,"r2":0.8,"g2":0.8,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ta2 = equal(q2,2)*abs(6*(sin(time))) + (1-equal(q2,2))*ta2;\\nta3 = equal(q2,2)*ta2 + (1-equal(q2,2))*ta3;\\nta = ta + above(ta3,0)*0.05;\\nta3 = ta3-0.5;\\ntex_ang = tex_ang + ta;\\ntex_zoom=tex_zoom+0.05*q1;"}],"waves":[{"baseVals":{"usedots":1,"additive":1,"r":0.5,"g":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.22019,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"//Yndi Halda - We Flood Empty Lakes\\n\\nvol=(bass+mid+treb)*0.25;\\nvol=vol*vol;\\n\\n\\nmtime=mtime+vol*0.01;\\nq3=mtime*0.25;\\n\\nvola = 0.1*(vola*9 + (bass_att+mid_att+treb_att)*0.333333);\\nq1 = vola;\\n\\nq6 = 0.5 + 0.3*sin(-time*2);\\nq7 = 0.5 + 0.3*cos(-time);\\n\\nmonitor = bass_thresh;\\n\\nzoom = zoom + 0.05*vol;\\nwave_x = wave_x + 0.5*sin(mtime*2);\\nwave_y = wave_y + 0.5*sin(-mtime*1.34);","pixel_eqs_eel":"","warp":" shader_body { \\n  float sand_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_fw_main, uv);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  sand_1 = (dot (texture (sampler_noise_lq, (\\n    ((uv_orig * texsize.xy) * texsize_noise_lq.zw)\\n   + rand_frame.xy)).xyz, abs(\\n    ((((tmpvar_4.xyz * scale1) + bias1) - ((texture (sampler_blur2, uv).xyz * scale2) + bias2)) - ((texture (sampler_blur3, uv).xyz * scale3) + bias3))\\n  )) + ((tmpvar_4.xyz * scale1) + bias1).x);\\n  ret_2 = (tmpvar_3.xyz + (0.1 + (\\n    fract(pow (tmpvar_3.xyz, vec3((sand_1 + sand_1))))\\n   * 2.0)));\\n  ret_2 = (ret_2 * 0.41);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 plastic_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  vec2 x_7;\\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - vec2(0.5, 0.0));\\n  plastic_1.x = (4.0 / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_7, x_7)), 0.5)\\n  )));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - vec2(0.5, 0.0));\\n  plastic_1.y = (4.0 / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_9, x_9)), 0.5)\\n  )));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.z;\\n  tmpvar_10.y = tmpvar_5.z;\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - vec2(0.5, 0.0));\\n  plastic_1.z = (4.0 / (1.0 + (16.0 * \\n    pow (sqrt(dot (x_11, x_11)), 0.5)\\n  )));\\n  ret_2 = (plastic_1 * texture (sampler_main, uv).xyz);\\n  ret_2 = (ret_2 * 3.0);\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }"}')},2834:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.42,"decay":0.95,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wrap":0,"brighten":1,"darken":1,"wave_a":0.711,"wave_scale":0.024,"wave_smoothing":0.54,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.0788,"zoom":0.9415,"rot":-0.04,"warp":0.01,"wave_r":0.29,"wave_g":0.46,"wave_b":0.73,"wave_y":1,"ob_size":0,"ob_r":0.01,"ob_a":0.1,"ib_size":0.05,"mv_x":32,"mv_y":28.8,"mv_l":0.1,"mv_r":0.4,"mv_g":0.4,"mv_b":0.9,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"textured":1,"num_inst":2,"x":0.4,"rad":0.8079,"ang":6.28319,"tex_ang":1.25664,"tex_zoom":0.3346,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(1.22*time) + 0.4*sin(0.888*time));\\ng = g + 0.300*(0.60*sin(0.90*time) + 0.4*sin(1.100*time));\\nb = b + 0.300*(0.60*sin(1.12*time) + 0.4*sin(0.98*time));\\n\\nrad = rad + equal(q2,2)*0.5;\\n\\ny = y - 0.1*q6;"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"num_inst":2,"rad":0.33003,"ang":5.6548,"tex_ang":1.2565,"tex_zoom":0.4083,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(2.52*time) + 0.4*sin(2.588*time));\\ng = g + 0.300*(0.60*sin(2.70*time) + 0.4*sin(2.700*time));\\nb = b + 0.300*(0.60*sin(2.32*time) + 0.4*sin(2.180*time));\\n\\nrad = rad + equal(q2,2)*0.5;\\n\\ny = y - 0.15*q6;\\n"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"num_inst":2,"x":0.4,"y":0.4,"rad":0.33,"ang":4.3982,"tex_ang":1.2565,"tex_zoom":0.40836,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(3.22*time) + 0.4*sin(3.888*time));\\ng = g + 0.300*(0.60*sin(3.90*time) + 0.4*sin(3.100*time));\\nb = b + 0.300*(0.60*sin(3.12*time) + 0.4*sin(3.980*time));\\n\\nrad = rad + equal(q2,2)*0.5;\\n\\ny = y - 0.1*q6;"},{"baseVals":{"enabled":1,"additive":1,"textured":1,"y":0.4,"rad":0.33,"ang":3.7699,"tex_zoom":0.40836,"r":0.6,"g":0.6,"b":0.6,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"r = r + 0.300*(0.60*sin(4.22*time) + 0.4*sin(4.888*time));\\ng = g + 0.300*(0.60*sin(4.90*time) + 0.4*sin(4.100*time));\\nb = b + 0.300*(0.60*sin(4.12*time) + 0.4*sin(4.980*time));\\n\\nrad = rad + equal(q2,2)*1;\\n\\ny = y - 0.1*q6;\\n"}],"waves":[{"baseVals":{"samples":256,"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"y = 0.2 + 0.01*int(value1*50+10);\\nx = sample;"},{"baseVals":{"samples":82,"usedots":1,"thick":1,"scaling":4.02709,"smoothing":0,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"q8 = 1;","frame_eqs_eel":"bass_thresh = above(bass_att,bass_thresh)*2 + (1-above(bass_att,bass_thresh))*((bass_thresh-1.3)*0.91+1.3);\\n\\n//ob_r = 0.1 + 0.1*(0.6*sin(vol*time*8) + 0.4*sin(1.2*time));\\n//ob_b = 0.1 + 0.1*(0.6*sin(vol*time*8) + 0.4*sin(0.8*time));\\n//ob_g = 0.1 + 0.1*(0.6*sin(vol*time*8) + 0.4*sin(1.1*time));\\n\\n\\nvol = 0.1*(vol*9 + (bass_att+mid_att+treb_att)*0.333333);\\n\\nq1 = vol;\\nq2 = bass_thresh;\\n\\ntemp = temp + (above(vol,1.1)*1.5 + (below(vol,1.1)*1));\\nq8 = temp;\\n\\n//cx = cx + 0.4*sin(temp*0.15);\\n\\n\\nq3 = q3 + below(vol,1.1)*(-0.5) + above(vol,1.1)*2;\\n\\nq3=1; //comment out to get some jerky movement that goes with the beat better\\n      //maybe someone can rig up a solution that\'s not so jerky... =2 is interesting too\\n\\ncx = cx + 0.4*sin(q3*(sin(q8/(8*q3))));\\nq6 = cx;\\n\\n//30 fps max to avoid crack bird!","pixel_eqs_eel":"cy = cy - cos(rad*q1*(sin(time*0.6)));\\n\\ncx = cx + 1.5*sin(rad*q3*(sin(q8/(8*q3))));","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv).xyz * 0.95);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  ret_1 = (texture (sampler_main, tmpvar_2).xyz + texture (sampler_main, uv).xyz);\\n  ret_1 = (ret_1 * 1.42);\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},92:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":4,"decay":0.7,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpscale":1.331,"zoomexp":1.86831,"zoom":1.0002,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_x":0,"mv_y":43.2,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"sides":5,"textured":1,"rad":1.06779,"ang":0.75398,"tex_zoom":0.77977,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang=sin(q1*0.15);\\nx=sin(q1*0.5) * 0.05 + 0.5;\\ny=cos(q1*0.63)* 0.05 + 0.5"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":5,"additive":1,"rad":0.03809,"g":1,"b":1,"g2":0.6,"b2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tm=q1;\\n\\nxp=0;\\nyp=0.1;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\n\\n"}],"waves":[{"baseVals":{"enabled":1,"r":0.1,"b":0.7},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2 )*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\n\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"r":0.2,"b":0.6},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\n\\nb=b+pow(1-sample,2)*0.3;\\n\\nr1=t1;\\ng1=t2;\\nb1=t3;\\nr2=t4;\\ng2=t5;\\nb2=t6;\\n\\nr=r1*flip + r2*(1-flip);\\ng=g1*flip + g2*(1-flip);\\nb=b1*flip + b2*(1-flip);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.6,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nxq=xp;\\nsinang=sin(ang);cosang=cos(ang);\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8 + 1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\n\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;\\n"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"g":0.3,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1=sin(time)*0.5+0.5;\\nt2=sin(time+2.1)*0.5+0.5;\\nt3=sin(time+4.2)*0.5+0.5;\\n\\nt4=sin(time+1.1)*0.5+0.5;\\nt5=sin(time+3.1)*0.5+0.5;\\nt6=sin(time+5.2)*0.5+0.5;\\n\\n\\nt8= int( sin(time*2)*2 + 3);","point_eqs_eel":"n=sample*6.283;\\nphs=-sample * 0.2;\\ntm=q1 + phs;\\n\\nflip=flip+1;\\nflip=flip*below(flip,2);\\n\\nxp=0;\\nyp=flip*0.1 + (sin(tm)*0.5 + 0.5)*0.2 +0.1;\\nyp=-yp;\\nzp=0;\\n\\n//wrist movement;\\nang=sin(tm*2)*0.5 +0.5;\\n\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\nyq=yp;\\nzq=zp;\\n\\nang=tm*8+1;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//forearm movement;\\nzp=zp-0.3;\\nang=3.14 + sin(tm*2 - 0.5)*1.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp;\\nyq=yp*sinang + zp*cosang;\\nzq=yp*cosang - zp*sinang;\\n\\n//upper arm twist\\nang=-1.0 + cos(tm*3.1 + 0.5);\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq*sinang + yq*cosang;\\nyp=xq*cosang - yq*sinang;\\nzp=zq;\\n\\n//upper arm outward;\\nzp=zp-0.35;\\nang=cos(tm*2.3)*1.75 - 1.05;\\nsinang=sin(ang);cosang=cos(ang);\\nxq=xp*sinang + zp*cosang;\\nyq=yp;\\nzq=xp*cosang - zp*sinang;\\n\\n//upper arm up down;\\nang=cos(tm)*0.5 - 0.5;\\nsinang=sin(ang);cosang=cos(ang);\\nxp=xq;\\nyp=yq*cosang - zq*sinang;\\nzp=yq*sinang + zq*cosang;\\n\\n//xp=xq;yp=yq;zp=zq;\\n\\n\\n//project into screenspace and draw on screen\\nzp=zp+2;\\nxs=xp/zp;\\nys=yp/zp;\\n\\nx=xs+0.5;\\ny=ys*1.3+0.5;\\n\\n\\na=if( equal(q8,1) , (1-sample) , sample);\\na=a*a;\\n\\na=a* above( sin(tm*128*t8) , 0 );\\n\\n\\nr=t4;\\ng=t5;\\nb=t6;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_a = 0;\\n//decay = 0.1;\\n\\nvol = (bass_att + treb_att + mid_att)*.333333;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nra = 10;\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb_avg;\\nmt = mt + tic*mid_avg;\\nbt = bt + tic*bass_avg;\\n\\nsp = abs(vav - slide)*.1;\\nslide = if(above(slide,vav),slide-tic*sp,slide+tic*sp) + (1-toc)*vav;\\ntoc = 1;\\n\\nvt = vt + tic*slide;\\n\\nq1 = bt;\\nq2 = mt;\\nq3 = tt;\\nq4 = slide*1;\\nq5 = vt*.05 + 150;\\n\\nq6 = .01;//tic;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  float tmpvar_5;\\n  tmpvar_5 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_5 * tmpvar_5)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = texture (sampler_main, uv).xxx;\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((pow (\\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)), tmpvar_1, tmpvar_1)\\n  , vec3(0.3, 0.9, 8.0)) * 1.25) - 0.25);\\n  ret = tmpvar_2.xyz;\\n }"}')},7958:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"wave_brighten":0,"wave_a":1.105,"wave_scale":100,"wave_smoothing":0.18,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.95,"ob_size":0,"ob_r":0.01,"ob_a":1,"ib_size":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\nwave_a = 0;\\n\\n\\n\\n//Thanks to Zylot for rainbow generator\\ncounter1 = if(equal(counter2,1),if(equal(counter1,1),0,counter1+.2),1);\\ncounter2 = if(equal(counter1,1),if(equal(counter2,1),0,counter2+.2),1);\\ncdelay1 = if(equal(cdelay2,1),1,if(equal(colorcounter%2,1),if(equal(counter1,1),2 ,0), if(equal(counter2,1),2,0)));\\ncdelay2 = if(equal(cdelay1,2),1,0);\\ncolorcounter = if(above(colorcounter,7),0,if(equal(cdelay1,1),colorcounter+1,colorcounter));\\nib_rr = .5*if(equal(colorcounter,1),1, if(equal(colorcounter,2),1, if(equal(colorcounter,3),1, if(equal(colorcounter,4),sin(counter2+2.1), if(equal(colorcounter,5),0, if(equal(colorcounter,6),0,sin(counter1)))))));\\nib_gg = .5*if(equal(colorcounter,1),0, if(equal(colorcounter,2),sin(counter2*.5), if(equal(colorcounter,3),sin((counter1+1.75)*.4), if(equal(colorcounter,4),1, if(equal(colorcounter,5),1, if(equal(colorcounter,6),sin(counter2+2),0))))));\\nib_bb = if(equal(colorcounter,1),sin(counter1+2.1), if(equal(colorcounter,2),0, if(equal(colorcounter,3),0, if(equal(colorcounter,4),0, if(equal(colorcounter,5),sin(counter1), if(equal(colorcounter,6),1,1))))));\\n\\n\\n\\n\\n\\nib_r=tan(time*24);\\nib_r=min(ib_r,1);\\nib_r=max(ib_r,0);\\nib_g=tan(time*24+3.14);\\nib_g=min(ib_g,1);\\nib_g=max(ib_g,0);\\nib_b=tan(time*24+6.28);\\nib_b=min(ib_b,1);\\nib_b=max(ib_b,0);\\n\\nob_r=ib_r-0.5;\\nob_g=ib_g-0.5;\\nob_b=ib_b-0.5;\\nq1=ib_rr;\\nq2=1-ib_gg;\\nq3=ib_bb;\\n\\n\\n\\ndecay = 1;\\n\\n\\n//echo_orient=((bass_att+mid_att+treb_att)/3)*3;\\n//solarize=above(0.5,bass);\\n//darken=above(0.4,treb);\\n\\nmusictime=musictime+(mid*mid*mid)*0.01*(75/fps);\\n\\nxpos=sin(musictime*0.6)*0.5;\\nypos=sin(musictime*0.4)*0.5;\\nq4=xpos;\\nq5=ypos;\\n\\n\\n//invert=above(sin(time),0.5);\\nq30=bass+treb+mid;","pixel_eqs_eel":"//flip= (-2 * above(sin(time),-0.9) )+1;\\n//var=(bass+mid+treb)/3;\\n//rot=((ang&rad/rad)/(var*20))/10;\\n//sx=.99-(var*0.01);\\n//cx=var*0.1*(ang/12);\\n//sy=sx;\\n\\nzoom=.91;\\n\\ncx=0.5+q4;\\ncy=0.5-q5;\\nrd=sqrt( sqr( (x-0.5-q4)*2) + sqr( (y-0.5+q5)*1.5 ) );\\n//zm=(1.1-(rd/4));\\nzm=1.00;\\n\\nag=atan( (y-0.5+q5)/(x-0.5-q4) );\\nstar=(sin(ag/5)*(2-rd)+pow((tan(rd*6.28*32)*0.5+0.5),2)*0.1)+(rd/3);\\nstar=min(star,8);star=max(star,-8);\\nzm=zm+star/20;\\nsx=zm;\\nsy=zm;\\nrot=above(rd,0.7)/(rd+7)*(bass_att*0.1)/rd;\\ndx=sin(x*50)*(bass*0.005)*ag;\\ndy=cos(y*50)*(bass*0.005)*ag;\\n\\nb1a=mid*0.13;\\nb1b=(bass+mid+treb)*0.12;\\nb1=b1b *1.1*rd*rd*rd*rd;\\nzoom=0.97+(b1*.1);","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = texture (sampler_main, uv).xyz;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_2.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_2.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_2.z * 0.5));\\n  };\\n  ret_1 = (ret_1 + ((ret_1 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  ) * 0.3));\\n  ret_1 = (ret_1 * 0.9);\\n  ret_1 = (ret_1 + ((\\n    ((texture (sampler_noise_lq, ((\\n      (uv_orig * texsize.xy)\\n     * \\n      (texsize_noise_lq.zw * 0.04)\\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\\n   * 128.0) * clamp (\\n    (treb_att - 1.0)\\n  , 0.0, 1.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 0.0;\\n  tmpvar_3.xyz = (0.001 * cos((ret_1 * \\n    cos(ret_1)\\n  )));\\n  ret_1 = mix (ret_1.xyzz, vec4(dot ((ret_1 * ret_1), vec3(0.32, 0.49, 0.29))), tmpvar_3).xyz;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 bird_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.y;\\n  tmpvar_6.y = tmpvar_5.y;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv + (tmpvar_6 * 0.05));\\n  vec2 x_8;\\n  x_8 = (tmpvar_7 - uv);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.y;\\n  tmpvar_9.y = tmpvar_5.y;\\n  bird_1 = (pow (vec3(max (texture (sampler_main, tmpvar_7).x, texture (sampler_main, \\n    ((0.5 + ((uv - 0.5) * vec2(-1.0, 1.0))) + (tmpvar_9 * 0.05))\\n  ).x)), vec3(1.4, 1.4, 1.4)) * (hue_shader * hue_shader));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.y;\\n  tmpvar_10.y = tmpvar_5.y;\\n  vec3 tmpvar_11;\\n  tmpvar_11 = (((texture (sampler_blur1, \\n    (uv + (tmpvar_10 * 0.1))\\n  ).xyz * scale1) + bias1) * clamp (1.0, 0.0, 1.0));\\n  ret_2 = (((\\n    ((((\\n      (((tmpvar_4.y + tmpvar_5.y) * 4.0) + 0.5)\\n     * vec3(0.0, 0.0, 1.0)) + (\\n      sqrt(dot (x_8, x_8))\\n     * vec3(64.0, 96.0, 0.0))) + (vec3(1.0, 0.0, 0.0) * texture (sampler_main, uv).y)) - vec3(0.0, 0.0, 0.3))\\n   * 0.6) * clamp (\\n    (1.0 - (bird_1.x * 4.0))\\n  , 0.0, 1.0)) + bird_1);\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_7.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_12.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_12.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_12.z * 0.5));\\n  };\\n  ret_2 = (ret_2 * mix (ret_2, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_11.z * 6.0)\\n   * \\n    (1.0 - (bird_1 * 3.0))\\n  )));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},1490:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":4,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.245,"wave_scale":0.959,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":0.83,"modwavealphaend":1.31,"warpanimspeed":3.987,"warpscale":0.034,"zoomexp":0.75683,"zoom":1.00814,"warp":0.06295,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\\ny = int(rand(100))*.01+instance-instance;\\n\\na =1;\\nvol=bass+mid+treb;\\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"q1=zoom;\\nzoom=zoom-0.008;\\nwarp=0;\\nwave_a=0;\\nmaj=above(bass*treb,3.1)*0.05;\\nnor=above(bass*treb,2.5)*0.025;\\nmini=above(bass*treb,2)*0.001;\\n//\'min\' gives an error.\\nzoom=zoom-if(if(maj,nor,maj),mini,nor);\\nq30=bass+treb+mid;","pixel_eqs_eel":"//zoom=zoom+(int(rand(256))-int(rand(256)))/25;","warp":"vec4 xlat_mutabletexsize;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabletexsize.xy = (texsize.zw * 3.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (uv.x - xlat_mutabletexsize.x);\\n  tmpvar_2.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, (uv - xlat_mutabletexsize.xy));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (uv.x + (xlat_mutabletexsize.x * 2.0));\\n  tmpvar_4.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (uv.x + xlat_mutabletexsize.x);\\n  tmpvar_5.y = (uv.y - (xlat_mutabletexsize.y * 2.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = (uv.x + xlat_mutabletexsize.x);\\n  tmpvar_6.y = (uv.y - xlat_mutabletexsize.y);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (uv.x - (xlat_mutabletexsize.x * 2.0));\\n  tmpvar_7.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (uv.x - xlat_mutabletexsize.x);\\n  tmpvar_8.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (uv.x - xlat_mutabletexsize.x);\\n  tmpvar_9.y = (uv.y + xlat_mutabletexsize.y);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_main, tmpvar_9);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (uv.x + xlat_mutabletexsize.x);\\n  tmpvar_11.y = (uv.y + (xlat_mutabletexsize.y * 2.0));\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_main, (uv + xlat_mutabletexsize.xy));\\n  ret_1 = (ret_1 + ((1.2 * \\n    ((((tmpvar_12.xyz + texture (sampler_main, tmpvar_11).xyz) + (texture (sampler_main, \\n      (uv + (xlat_mutabletexsize.xy * vec2(2.0, 2.0)))\\n    ).xyz + tmpvar_10.xyz)) + ((texture (sampler_main, tmpvar_8).xyz + texture (sampler_main, tmpvar_7).xyz) + (texture (sampler_main, tmpvar_6).xyz + texture (sampler_main, tmpvar_5).xyz))) + ((texture (sampler_main, tmpvar_4).xyz + tmpvar_3.xyz) + (texture (sampler_main, (uv - \\n      (xlat_mutabletexsize.xy * vec2(2.0, 2.0))\\n    )).xyz + texture (sampler_main, tmpvar_2).xyz)))\\n  ) / 12.0));\\n  vec4 tmpvar_13;\\n  tmpvar_13 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * xlat_mutabletexsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_13.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_13.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_13.z * 0.5));\\n  };\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1) * 0.5));\\n  ret_1 = (ret_1 / (1.0 + (\\n    ((tmpvar_12.xyz + tmpvar_10.xyz) + (tmpvar_3.xyz + tmpvar_10.xyz))\\n   * 0.01)));\\n  ret_1 = (ret_1 * 1.1);\\n  ret_1 = (ret_1 + (0.1 * (0.5 - texture (sampler_noise_lq, \\n    ((uv_orig * rand_frame.xy) * 9.0)\\n  ))).xyz);\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_1;\\n  ret = tmpvar_14.xyz;\\n }","comp":" shader_body { \\n  vec2 uvm_1;\\n  vec3 ret_2;\\n  uvm_1.x = (uv.x - (0.07 * texture (sampler_noise_hq, vec2((uv.x * 0.8))).x));\\n  uvm_1.y = (uv.y - (0.07 * texture (sampler_noise_hq, vec2((uv.y * 0.8))).x));\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, fract(uvm_1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((10.0 * tmpvar_3.xyz) - (\\n    ((texture (sampler_blur1, uvm_1).xyz * scale1) + bias1)\\n   * rad)) * ((0.8 * tmpvar_3.xyz) + cos(\\n    (((rad * 2.0) - (roam_sin * 2.0)) + time)\\n  ).xyz).x);\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (1.0 - tmpvar_4);\\n  float tmpvar_6;\\n  tmpvar_6 = dot (tmpvar_4, tmpvar_5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = uv.x;\\n  tmpvar_7.y = (uv.y * 0.75);\\n  ret_2 = ((texture (sampler_main, tmpvar_7).xyz * tmpvar_5) + (0.55 * tmpvar_4));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uvm_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_8.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_8.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_8.z * 0.5));\\n  };\\n  ret_2 = (ret_2 * mix (ret_2, tmpvar_5, vec3((1.5 * \\n    clamp (tmpvar_6, 0.0, 1.0)\\n  ))));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }"}')},5737:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"zoom":1.3345,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":0.64926,"tex_zoom":0.86996,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dx=0;\\noldshift=shift;\\nnormalframez=normalframez+1;\\nshift=above(bass_att,1)*above(treb_att,0.9);\\ncrash=abs(oldshift-shift);\\nnex=equal(rshift,0)*1+equal(rshift,1)*2;\\nrshift=if(crash,nex,rshift);\\nmonitor=rshift;\\nwave_r=rand(200)/200;\\nwave_g=rand(200)/200;\\nwave_b=rand(200)/200;\\nwarp=0;\\nq1=above(bass_att,1.3);\\nzoom1=zoom+0.15-0.3*(normalframez%2);\\nzoom=if(shift,zoom1,1);\\nrot=rot-0.1+rshift*0.1;","pixel_eqs_eel":"dy=-below(y,0.4)*0.007+above(y,0.6)*0.007;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, (uv_orig + \\n    ((uv - uv_orig) * dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29)))\\n  )).xyz * 0.99) - 0.002);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * 2.0);\\n  ret_1 = (ret_1 * (1.0 - ret_1));\\n  ret_1 = (((1.0 - \\n    pow (clamp (ret_1, 0.0, 1.0), vec3(0.5, 0.5, 0.5))\\n  ) * 1.5) - 0.75);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }"}')},3863:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.772,"zoomexp":5.00873,"fshader":1,"zoom":1.011,"rot":0.003,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":2,"x":0.49,"rad":0.04789,"tex_zoom":4.36077,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"t = time*12.3;\\nrot = rot + 0.030*( 0.60*sin(0.38*time) + 0.40*sin(0.54*time) );\\ndx = dx + 0.002*( 0.60*sin(0.434*time) + 0.40*sin(0.277*time) );\\ndy = dy + 0.002*( 0.60*sin(0.384*time) + 0.40*sin(0.477*time) );","pixel_eqs_eel":"","warp":"","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 6.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_2.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\\n  ).xyz * scale1) + bias1)).y;\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = mix (mix ((vec3(0.4, 0.2, 0.9) * texture (sampler_fc_main, \\n    (uv - (tmpvar_2 * 0.6))\\n  ).x), vec3(2.0, 2.0, 2.0), vec3((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .y * 0.35))), vec3(1.0, 0.7, 0.0), vec3((texture (sampler_main, (0.5 + \\n    ((uv - 0.5) * 0.9)\\n  )).z * 0.8)));\\n  ret = tmpvar_3.xyz;\\n }"}')},9024:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.498684,"echo_alpha":0.6,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.763004,"wave_scale":2.114586,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":8.815298,"zoomexp":8.311067,"fshader":0.5,"zoom":1.009509,"dy":0.02,"warp":3.209173,"sx":0.94204,"sy":0.999996,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.05,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"textured":1,"rad":0.662308,"a":0.7,"r2":0.2,"g2":0.6,"b2":0.9,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"additive":1},"init_eqs_eel":"nx=.5;\\nny=.5;","frame_eqs_eel":"","point_eqs_eel":"nd=rand(4);\\n\\nnx=nx+(equal(nd,0)*.01*mid);\\nnx=nx+(equal(nd,2)*-.01*mid);\\nny=ny+(equal(nd,1)*.01*mid);\\nny=ny+(equal(nd,3)*-.01*mid);\\n\\nx=nx;\\ny=ny;\\n\\nr=bass*.6;\\ng=treb*.6;\\n\\nnx=if(equal(sample,1),rand(10)*.1,nx);\\nny=if(equal(sample,1),rand(10)*.1,ny);"},{"baseVals":{"enabled":1,"usedots":1,"a":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"","pixel_eqs_eel":"wave_r=sin(time);\\nwave_b=sin(time*.23);\\nwave_g=sin(time*.47);","warp":"","comp":""}')},6753:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":0,"gammaadj":1.28,"echo_zoom":1.22823,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.285751,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":1.254861,"fshader":1,"zoom":0.970118,"warp":0.01,"sy":0.999999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":1.468146,"tex_zoom":0.639039,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\\n\\nsides=int(abs(sin(time*.5)*7));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"rad":0.02743,"a":0.05,"r2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.1;\\n\\nr=.7+(sin(time)*.3);\\ng=.7+(cos(time)*.3);\\nb=.7+(sin(time+.12)*.3);\\n\\nrad=rad+(treb_att*bass_att*.5);\\nx=.5+(sin(time)*.5);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"rad":0.02508,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang=time*.25;\\n\\ng=.7+(sin(time)*.3);\\nb=.7+(cos(time)*.3);\\nr=.7+(sin(time+.12)*.3);\\n\\nr2=.7+(sin(time)*.3);\\ng2=.7+(cos(time)*.3);\\nb2=.7+(sin(time+.12)*.3);\\n\\nrad=rad+(treb_att*bass_att*.5);\\ny=.5+(sin(time)*.25);"},{"baseVals":{"additive":1,"textured":1,"rad":2.667173,"tex_zoom":0.608038,"a":0.1,"a2":0.01,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=rand(2);\\n\\n//base\\nwx=if(equal(sc,0),.5,wx);\\nwy=if(equal(sc,0),0,wy);\\n\\nwx=if(equal(sc,1),.5,wx);\\nwy=if(equal(sc,1),.1,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.2+sin(time),-.2);\\n\\nwa=if(below(sc,2),3.1415927*.5,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=rand(2);\\n\\n//base\\nwx=if(equal(sc,0),.5,wx);\\nwy=if(equal(sc,0),1,wy);\\n\\nwx=if(equal(sc,1),.5,wx);\\nwy=if(equal(sc,1),.9,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.2+sin(time),-.2);\\n\\nwa=if(below(sc,2),3.1415927*1.5,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=rand(2);\\n\\n//base\\nwx=if(equal(sc,0),0,wx);\\nwy=if(equal(sc,0),.5,wy);\\n\\nwx=if(equal(sc,1),.1,wx);\\nwy=if(equal(sc,1),.5,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.25+cos(time),-.25);\\n\\nwa=if(below(sc,2),3.1415927*2,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"branch=rand(2);\\n\\n//base\\nwx=if(equal(sc,0),1,wx);\\nwy=if(equal(sc,0),.5,wy);\\n\\nwx=if(equal(sc,1),.9,wx);\\nwy=if(equal(sc,1),.5,wy);\\n\\n//calculate previous branch length\\nd=if(below(sc,2),.3,.7*d);\\n\\n//angle\\nwainc=if(equal(branch,1),.25+cos(time),-.25);\\n\\nwa=if(below(sc,2),3.1415927*1,wa+wainc);\\n\\n//branches\\nwx=if(above(sc,2),wx+cos(wa)*d,wx);\\nwy=if(above(sc,2),wy+sin(wa)*d,wy);\\n\\n//sample count\\nsc=if(equal(sc,11),0,sc+1);\\n\\na=if(below(sc,2),0,.1);\\n\\nx=wx;\\ny=wy;"}],"init_eqs_eel":"ez=1.2;","frame_eqs_eel":"ea=abs(sin(time*.25));\\neo=if(below(ea,.1),rand(3),eo);\\nez=if(below(ea,.1),.5+(rand(10)*.1),ez);\\n\\necho_alpha=ea;\\necho_orient=eo;\\necho_zoom=ez;","pixel_eqs_eel":"rot=rot+(rad*sin(time*.25)*.02);","warp":"","comp":""}')},4542:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":5,"gammaadj":1,"decay":0.95,"echo_zoom":0.996629,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.001,"wave_scale":1.2857,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.999514,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.8,"mv_g":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"textured":1,"rad":1.791409,"tex_zoom":100,"r":0,"b":0.1,"a":0.9,"g2":0,"b2":0.13,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//ang=sin(time*.4);\\ntex_zoom=.557;\\ntex_ang=.001;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"decay=.90;","pixel_eqs_eel":"zoom=1.01;","warp":"","comp":""}')},7296:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.14,"decay":0.999,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.55,"wave_scale":2,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":1.6,"modwavealphaend":2,"warpanimspeed":0.137,"warpscale":13.125,"zoom":0.99951,"warp":0.99213,"wave_r":0.5,"wave_g":0,"wave_b":0,"wave_y":0,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.1;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx*1.25-0.125;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"// elastic thread code\\n\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nyy1 = yy1*0.94 + (treb+bass)*0.0075;\\nx1 = 0.5 + (xx1-xx2)*2;\\ny1 = 0.4 + yy1*1.5;\\ndt = 0.03/fps;\\nvx2 = vx2*(1-2*dt) + dt*((x1+x3-2*x2)*10);\\nvy2 = vy2*(1-2*dt) + dt*((y1+y3-2*y2)*10-0.5);\\nvx3 = vx3*(1-2*dt) + dt*((x2+x4-2*x3)*10);\\nvy3 = vy3*(1-2*dt) + dt*((y2+y4-2*y3)*10-0.5);\\nvx4 = vx4*(1-2*dt) + dt*((x3-x4)*10);\\nvy4 = vy4*(1-2*dt) + dt*((y3-y4)*10-0.5);\\nx2 = x2 + vx2; y2 = y2 + vy2;\\nx3 = x3 + vx3; y3 = y3 + vy3;\\nx4 = x4 + vx4; y4 = y4 + vy4;\\nvx2 = if(above(x2,0),vx2,abs(vx2)*0.5);\\nvx2 = if(below(x2,1),vx2,-abs(vx2)*0.5);\\nvx3 = if(above(x3,0),vx3,abs(vx3)*0.5);\\nvx3 = if(below(x3,1),vx3,-abs(vx3)*0.5);\\nvx4 = if(above(x4,0),vx4,abs(vx4)*0.5);\\nvx4 = if(below(x4,1),vx4,-abs(vx4)*0.5);\\nvy2 = if(above(y2,0),vy2,abs(vy2)*0.5);\\nvy2 = if(below(y2,1),vy2,-abs(vy2)*0.5);\\nvy3 = if(above(y3,0),vy3,abs(vy3)*0.5);\\nvy3 = if(below(y3,1),vy3,-abs(vy3)*0.5);\\nvy4 = if(above(y4,0),vy4,abs(vy4)*0.5);\\nvy4 = if(below(y4,1),vy4,-abs(vy4)*0.5);\\nq1 = x1;q2 = x2;q3 = x3;q4 = x4;\\nq5 = y1;q6 = y2;q7 = y3;q8 = y4;\\nq9 = 1/aspectx;\\nq10 = 1/aspecty;\\nq11 = aspectx;\\nq12 = aspecty;\\nq13 = sqrt(vx4*vx4 + vy4*vy4);\\nq14 = atan2(vx4,vy4);\\nq15 = sin(q14);\\nq16 = cos(q14);\\n\\n// Flexis dampened sound response functions\\n\\ndb = db*0.98 + bass*0.2; // dampener\\nbb = bb + db*0.1; // accumulation, replace time expressions with this ;)\\n\\nddt = ddt*0.98 + treb*0.2;\\ntt = tt + ddt*0.1;\\n\\ndm = dm*0.98 + mid*0.2;\\nmm = mm + dm*0.1;\\n\\n\\n//***** [q21-q28] variables for Flexis caleidoscope shader code *****\\n\\n// change\\nq23 = 0.5 + sin((bb-mm)*0.1)*0.25; // center x\\nq24 = 0.5 + sin((tt-mm)*0.1)*0.25; // center y\\nw = (bb-tt)*0.1;                   // angle\\nq26 = 0.25 - (db-ddt)*0.025;        // size\\n\\n//don\'t change\\nq21 = sin(w);\\nq22 = cos(w);\\nq27 = sin(-w);\\nq28 = cos(-w);\\nq25 = 1/q26;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_z_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (1.0 - abs((\\n    (fract((uv * 0.5)) * 2.0)\\n   - 1.0)));\\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).x * 0.5);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (texsize.zw * 4.0);\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv_orig - 0.5);\\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (\\n    (texture (sampler_blur1, (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) * 0.5).z;\\n  tmpvar_7.y = (((2.0 * \\n    ((texture (sampler_blur1, (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1) + bias1)\\n  ) - (\\n    (texture (sampler_blur1, (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\\n   + bias1)) * 0.5).z;\\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\\n  ret_2.z = max (((\\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\\n   * 3.0) * clamp (\\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\\n  ret_2.z = (ret_2.z + ((\\n    (2.0 * texture (sampler_fc_main, uv_z_1).z)\\n   - \\n    (2.0 * ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1).z)\\n  ) * 0.01));\\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.9996, 0.9996))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 dz_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec2 uv_rr_5;\\n  vec2 uv_r_6;\\n  vec3 ret_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = q23;\\n  tmpvar_8.y = q24;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - tmpvar_8) * aspect.xy);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = ((q22 * tmpvar_9.x) - (q21 * tmpvar_9.y));\\n  tmpvar_10.y = ((q21 * tmpvar_9.x) + (q22 * tmpvar_9.y));\\n  uv_r_6 = (q25 * tmpvar_10);\\n  uv_r_6 = (tmpvar_8 + (uv_r_6 * aspect.zw));\\n  uv_r_6 = (1.0 - abs((\\n    (fract((uv_r_6 * 0.5)) * 2.0)\\n   - 1.0)));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = ((uv_r_6 - tmpvar_8) * aspect.xy);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = ((q28 * tmpvar_11.x) - (q27 * tmpvar_11.y));\\n  tmpvar_12.y = ((q27 * tmpvar_11.x) + (q28 * tmpvar_11.y));\\n  uv_rr_5 = (q26 * tmpvar_12);\\n  uv_rr_5 = (tmpvar_8 + (uv_rr_5 * aspect.zw));\\n  vec2 tmpvar_13;\\n  vec2 tmpvar_14;\\n  tmpvar_14 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_13.x = (texture (sampler_main, (uv_rr_5 + tmpvar_14)).xyz - texture (sampler_main, (uv_rr_5 - tmpvar_14)).xyz).y;\\n  vec2 tmpvar_15;\\n  tmpvar_15 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_13.y = (texture (sampler_main, (uv_rr_5 + tmpvar_15)).xyz - texture (sampler_main, (uv_rr_5 - tmpvar_15)).xyz).y;\\n  d_4 = (texsize.zw * 2.0);\\n  dx_3 = (((texture (sampler_blur1, \\n    (uv_rr_5 + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_rr_5 - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  dy_2 = (((texture (sampler_blur1, \\n    (uv_rr_5 + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_rr_5 - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = dx_3.y;\\n  tmpvar_16.y = dy_2.y;\\n  dz_1 = ((tmpvar_13 * 3.0) + tmpvar_16);\\n  ret_7 = (vec3(((\\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\\n   + \\n    (((texture (sampler_blur2, uv_rr_5).xyz * scale2) + bias2).y * 0.4)\\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = dx_3.x;\\n  tmpvar_17.y = dy_2.x;\\n  vec3 tmpvar_18;\\n  tmpvar_18 = mix (mix (ret_7, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \\n    (uv_rr_5 + ((tmpvar_17 * texsize.zw) * 18.0))\\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_rr_5).zzz);\\n  ret_7 = tmpvar_18;\\n  vec4 tmpvar_19;\\n  tmpvar_19.w = 1.0;\\n  tmpvar_19.xyz = tmpvar_18;\\n  ret = tmpvar_19.xyz;\\n }"}')},9146:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":5,"additive":1,"num_inst":2,"x":0.49,"rad":0.11589,"tex_zoom":4.36077,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"thick":1,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"usedots":1,"r":0,"g":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"r":0,"g":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"zoom = 1;\\n// the m�bius transformation\\n// z -> (az+b)/(cz-d); where a,b,c,d are complex numbers and z will be the uv-vector\\n// (az+b)/(cz-d) = a/c + mu/(cz+d), with mu = (bc-ad)/c\\n// so a/c and mu can be calculated outside of the shader\\n\\n//before inversion\\n\\nscale = 0.5 + bass_att*0.02-treb_att*0.01;\\nangle = time*0.1;\\ntranslation_x = 0;\\ntranslation_y = 0.04;\\n\\na_r = cos(angle)*scale;\\na_i = sin(angle)*scale;\\nb_r = translation_x;\\nb_i = translation_y;\\n\\n//complex inverted\\nscale = 1;\\nangle = sin(time*0.4)*0.2;\\ntranslation_u = 0;\\ntranslation_v = -0.2;\\n\\n// c\\nq15 = cos(angle)*scale;\\nq16 = sin(angle)*scale;\\n\\n// d\\nq17 = translation_u;\\nq18 = translation_v;\\n\\n// c^(-1)\\nc_inv_r = q15/(q15*q15+q16*q16);\\nc_inv_i = q16/(q15*q15+q16*q16);\\n\\n// a*c^(-1)\\nq11 = (a_r*c_inv_r - a_i*c_inv_i);\\nq12 = (a_r*c_inv_i - a_i*c_inv_r);\\n\\n// (bc-ad)\\nbcad_r = (b_r*q15 - b_i*q16)-(a_r*q17-a_i*q18);\\nbcad_i = (b_r*q16 - b_i*q15)-(a_r*q18-a_i*q17);\\n\\n// mu*c^(-1)\\nq13 = bcad_r*c_inv_r - bcad_i*c_inv_i;\\nq14 = bcad_r*c_inv_i - bcad_i*c_inv_r;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (tmpvar_2 + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (tmpvar_2 - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  ret_1.x = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_6 * texsize.zw) * 4.0))).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  ret_1.y = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_7 * texsize.zw) * 4.0))).y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  ret_1.z = texture (sampler_fc_main, (tmpvar_2 + ((tmpvar_8 * texsize.zw) * 4.0))).z;\\n  ret_1 = (ret_1 - ((\\n    (ret_1.yzx + ret_1.zxy)\\n   * 0.16) + 0.002));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\\n  ).xyz - 0.5) * 0.04));\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_1;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 moebius_2;\\n  vec2 d_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q11;\\n  tmpvar_4.y = q12;\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q17;\\n  tmpvar_5.y = q18;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_6.x * q15) - (tmpvar_6.y * q16));\\n  tmpvar_7.y = ((tmpvar_6.x * q16) - (tmpvar_6.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_5);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_2 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((((tmpvar_9 / \\n        ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n      ) + tmpvar_4) * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.99));\\n  d_3 = (texsize.zw * 8.0);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = dot (((\\n    (texture (sampler_blur1, (moebius_2 + (vec2(1.0, 0.0) * d_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (moebius_2 - (vec2(1.0, 0.0) * d_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_10.y = dot (((\\n    (texture (sampler_blur1, (moebius_2 + (vec2(0.0, 1.0) * d_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (moebius_2 - (vec2(0.0, 1.0) * d_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  uv_1 = (moebius_2 - ((tmpvar_10 * texsize.zw) * 32.0));\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = mix (mix ((vec3(0.8, 0.6, 0.5) * texture (sampler_fc_main, uv_1).x), mix (vec3(0.6, 1.2, 0.0), vec3(-1.0, 0.8, -1.0), texture (sampler_main, uv_1).zzz), vec3((texture (sampler_main, uv_1).y * 0.4))), vec3(0.0, 0.15, 0.3), vec3(((texture (sampler_main, uv_1).z * \\n    (1.0 - texture (sampler_main, uv_1).y)\\n  ) * 2.0)));\\n  ret = tmpvar_11.xyz;\\n }"}')},9867:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.28632,"fshader":1,"warp":0.01743,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.789,"ang":0.6283,"tex_zoom":1.17257,"r":0,"g":1,"border_a":0},"init_eqs_eel":"vx = 0;\\nvy = 0;","frame_eqs_eel":"rad = 0.65 + bass*0.1;\\n\\nan = an*0.99 + (bass-treb)*0.1;\\nang = an*0.1 + 0.6;"},{"baseVals":{"sides":100,"thickoutline":1,"textured":1,"rad":0.40271,"tex_zoom":2.23888,"g":1,"b":1,"r2":0.08,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0.04,"b":0,"a":0.99},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .07;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 180;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nmy_x = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4+(t7+1)*t8);\\nmy_y = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4+(t7+1)*t8);\\nmy_z = sin(sample*pi*n)*rd;\\n\\n\\n\\nd = 1.4; // makes the perspective impact\\nzoom = 0.65;\\n\\nw1 = q2;\\nw2 = q3;\\nw3 = q4;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;\\n\\nb = -z3 + 0.5;\\nb = min(1,max(0,b))*0.5;\\nr = 1-b*2\\n//b = (1 - r)*0.1;\\n//a =  7/(d*16) - 0.1;"},{"baseVals":{"samples":445,"sep":4,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"a":0.99,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt8 = .09;\\nt7 = 1;","point_eqs_eel":"t7 = -t7;\\npi = asin(1);\\nn = 160;\\nrd = 0.075;//+(value1*10+1)*((sample*512)%2)*0.02;\\nxx = sin(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*sin(sample*pi*4);\\nyy = cos(sample*pi*4+(t7+1)*t8)*0.5 + cos(sample*pi*n)*rd*cos(sample*pi*4);\\nzz = sin(sample*pi*n)*rd;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = -d*t5;\\ns1 = sin(t2*1+w);\\ns2 = sin(t3*1+w);\\ns3 = sin(t4*1+w);\\nc1 = cos(t2*1+w);\\nc2 = cos(t3*1+w);\\nc3 = cos(t4*1+w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 0.75;\\nzoom = 0.5*atan2(a,a+z);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = sample*pi*4-2*time;\\nc=1.6;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\na = 1-(z + a)/2;\\n"},{"baseVals":{"sep":4,"scaling":0.09348,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 100;//0.3;\\nxx = sin(sample*s);//((sample*343)%7 - 3.5)*s;\\nzz = cos(sample*s);//((sample*49)%7 - 3.5)*s;\\nyy = (sample-0.5);//((sample*7)%7 - 3.5)*s;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nd1 = 1/d;\\nxx = xx*d1;\\nyy = yy*d1;\\nzz = zz*d1;\\n\\nw = 1+0*(d)*(t6);//(sample*sin(time*0.3)*0.02-1);\\ns1 = sin(t2*w);\\ns2 = sin(t3*w);\\ns3 = sin(t4*w);\\nc1 = cos(t2*w);\\nc2 = cos(t3*w);\\nc3 = cos(t4*w);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 2;\\nzoom = 0.3*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*13+t5*20;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(-z,10)*1.0+0.0;"},{"baseVals":{"samples":484,"sep":4,"usedots":1,"scaling":9.94125,"smoothing":1,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;","point_eqs_eel":"s8 = sample*383;\\n\\ns = 0.25;\\nxx = ((sample*(465))%15 - 8)*s*2;\\nyy = ((sample*31)%31 - 16)*s;\\nzz = 0;\\n\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = 1;\\n\\ns1 = sin(t2*1);\\ns2 = sin(t3*0);\\ns3 = sin(t4*1);\\nc1 = cos(t2*1);\\nc2 = cos(t3*0);\\nc3 = cos(t4*1);\\n\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\na = 500;\\nzoom = 0.05*atan2(a-z,a);//0.5*(1/(z+a));\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\n\\npi3 = 3.1415*2*0.3333;\\nt = -z*5+t5;\\nc = 10;\\nr = sin(t)*c;\\n\\ng = sin(t+pi3)*c;\\n\\nb = sin(t-pi3)*c;\\n\\nj = 0.71;\\n//r = 0.5+xx*j;\\n//g = 0.5+yy*j;\\n//b = 0.5+zz*j;\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\n\\na = sigmoid(z,5);"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\nq1 = 0;\\nv = 0.4;\\nj1 = j1*0.95 + sqr(bass*4)*v;\\nj2 = j2*0.95 + sqr(mid*4)*v;\\nj3 = j3*0.95 + sqr(treb*4)*v;\\n\\nn = n + j1*0.0052;\\nn1 = n1 + j2*0.0052;\\nn2 = n2 + j3*0.0052;\\n\\n\\nq2 = n*0.01;\\nq3 = n1*0.01;\\nq4 = n2*0.01;\\n\\nk = k*0.99 + sqr(mid_att*2);\\nq5 = k*0.00;\\n\\nzoom = 1.0016;\\nwarp = 0;\\n\\nrot = -0.00;\\n\\nq9 = aspectx;\\nq10 = aspecty;\\nq30=bass+treb+mid;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur2, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale2) + bias2)).z;\\n  tmpvar_3.y = -(((\\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\\n   + bias2)).z);\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 60.0));\\n  vec2 x_5;\\n  x_5 = (tmpvar_4 - uv);\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, uv);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_1.z = (((texture (sampler_main, tmpvar_4).z + \\n    (((tmpvar_6.z - (\\n      (tmpvar_7.xyz * scale1)\\n     + bias1).z) * 200.0) * sqrt(dot (x_5, x_5)))\\n  ) * 0.96) - 0.02);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_8.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).y;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv_orig + ((tmpvar_8 * texsize.zw) * 6.0));\\n  ret_1.y = ((texture (sampler_main, tmpvar_9).y + (\\n    (tmpvar_6.y - ((tmpvar_7.xyz * scale1) + bias1).y)\\n   * 0.1)) - 0.016);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_9.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_10.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_10.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_10.z * 0.5));\\n  };\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_1;\\n  ret = tmpvar_11.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = tmpvar_2.xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3.z = 0.0;\\n  tmpvar_3.xy = texsize.zw;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (tmpvar_3 * 2.5);\\n  float tmpvar_5;\\n  tmpvar_5 = dot (((texture (sampler_blur1, \\n    (uv + tmpvar_4.xz)\\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_6;\\n  tmpvar_6 = dot (((texture (sampler_blur1, \\n    (uv - tmpvar_4.xz)\\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_7;\\n  tmpvar_7 = dot (((texture (sampler_blur1, \\n    (uv + tmpvar_4.zy)\\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\\n  float tmpvar_8;\\n  tmpvar_8 = dot (((texture (sampler_blur1, \\n    (uv - tmpvar_4.zy)\\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_2.x > (q26 * q13)) && (tmpvar_2.x <= (q23 * q11)))) {\\n    ret_1.z = (tmpvar_2.z - (tmpvar_9.x * 0.5));\\n  };\\n  if (((tmpvar_2.y > (q25 * q11)) && (tmpvar_2.y <= (q22 * q12)))) {\\n    ret_1.x = (tmpvar_2.x - (tmpvar_9.y * 0.5));\\n  };\\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\\n    ret_1.y = (tmpvar_2.y - (tmpvar_9.z * 0.5));\\n  };\\n  ret_1 = (ret_1 * 0.5);\\n  ret_1 = (ret_1 + (vec3(3.4, 2.38, 1.02) * (tmpvar_5 - tmpvar_6)));\\n  ret_1 = (ret_1 + (vec3(0.68, 1.7, 2.38) * (tmpvar_7 - tmpvar_8)));\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  if ((tmpvar_10 > 0.6)) {\\n    vec4 tmpvar_11;\\n    tmpvar_11.w = 0.0;\\n    tmpvar_11.xyz = ret_1;\\n    ret_1 = (mix (tmpvar_11, texture (sampler_noise_lq, (uv * 10.0)), vec4(0.1, 0.1, 0.1, 0.1)) * 1.1).xyz;\\n  };\\n  ret_1 = (ret_1 * ret_1);\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 0.0;\\n  tmpvar_12.xyz = ret_1;\\n  vec4 tmpvar_13;\\n  tmpvar_13 = mix (vec4(dot (ret_1, vec3(0.32, 0.49, 0.29))), ((\\n    (2.0 * dot (ret_1, vec3(0.32, 0.49, 0.29)))\\n   * rand_preset) * dot (\\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  , vec3(0.32, 0.49, 0.29))), pow (rand_preset, tmpvar_12));\\n  ret_1 = (tmpvar_13.xyz * (5.0 * sqrt(tmpvar_13.xyz)));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_1;\\n  ret = tmpvar_14.xyz;\\n }"}')},4559:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoomexp":1.00001,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3*sqrt(2);\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"num_inst":4,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// the velocity vector\\n\\nx = q3 + sample*sin(q14)*q13*40;\\ny = q4 + sample*cos(q14)*q13*40;\\n\\n// tangential velocity of rotation\\n//x = q3 + sample*q16*40;\\n//y = q4 - q5/2;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// tangential property of velocity vector\\n\\nx = q3 + sample*sin(q10)*cos(q14-q10)*q13*40;\\ny = q4 + sample*cos(q10)*cos(q14-q10)*q13*40;\\n\\n// vx\\n//x = q3 + sample*q11*40;\\n//y = q4;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// orthogonal property of velocity vector\\n\\nx = q3 + sample*sin(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\ny = q4 + sample*cos(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\n\\n// vy\\n//x = q3;\\n//y = q4 + sample*q12*40;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\nr = 0.03+ (bass_att+treb_att)*0.004;\\nmonitor = aspecty;\\nvr = sin(vr1)*r;\\nbounce = below(y1,r-(aspectx-1)*0.5);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.96 + (r-y1-(aspectx-1)*0.5)*0.1, vy1-0.0003*60/fps);\\nvx1 = if(bounce, vx1 + (vr-vx1)*0.15, vx1);vr = if(bounce, vr + (vx1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = above(x1,1-r+(aspecty-1)*0.5);vx1 = if(bounce, - abs(vx1)*0.96 + (1-r-x1+(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (vr-vy1)*0.15, vy1);vr = if(bounce, vr + (vy1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = below(x1,r-(aspecty-1)*0.5);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.96 + (r-x1-(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (-vr-vy1)*0.15, vy1);vr = if(bounce, vr - (vy1+vr)*0.85 , vr);vr1 = asin(vr/r);\\n\\nvr = sin(vr2)*r;\\nbounce = below(y2,r-(aspectx-1)*0.5);y2 = y2+vy2;vy2 = if(bounce, abs(vy2)*0.96 + (r-y2-(aspectx-1)*0.5)*0.1, vy2-0.0003*60/fps);\\nvx2 = if(bounce, vx2 + (vr-vx2)*0.15, vx2);vr = if(bounce, vr + (vx2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = above(x2,1-r+(aspecty-1)*0.5);vx2 = if(bounce, - abs(vx2)*0.96 + (1-r-x2+(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (vr-vy2)*0.15, vy2);vr = if(bounce, vr + (vy2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = below(x2,r-(aspecty-1)*0.5);x2 = x2+vx2;vx2 = if(bounce, abs(vx2)*0.96 + (r-x2-(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (-vr-vy2)*0.15, vy2);vr = if(bounce, vr - (vy2+vr)*0.85 , vr);vr2 = asin(vr/r);\\n\\nvr = sin(vr3)*r;\\nbounce = below(y3,r-(aspectx-1)*0.5);y3 = y3+vy3;vy3 = if(bounce, abs(vy3)*0.96 + (r-y3-(aspectx-1)*0.5)*0.1, vy3-0.0003*60/fps);\\nvx3 = if(bounce, vx3 + (vr-vx3)*0.15, vx3);vr = if(bounce, vr + (vx3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = above(x3,1-r+(aspecty-1)*0.5);vx3 = if(bounce, - abs(vx3)*0.96 + (1-r-x3+(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (vr-vy3)*0.15, vy3);vr = if(bounce, vr + (vy3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = below(x3,r-(aspecty-1)*0.5);x3 = x3+vx3;vx3 = if(bounce, abs(vx3)*0.96 + (r-x3-(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (-vr-vy3)*0.15, vy3);vr = if(bounce, vr - (vy3+vr)*0.85 , vr);vr3 = asin(vr/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2)));\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; v2r=sin(vr2)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)),sqrt( sqr(x1-x3) + sqr(y1-y3)));\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvr = sin(vr1)*r; v2r=sin(vr3)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr3 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x3+vx3-x2-vx2) + sqr(y3+vy3-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)),sqrt( sqr(x2-x3) + sqr(y2-y3)));\\nref_ang = atan2(x2-x3,y2-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx3,vy3);w2 = atan2(vx2,vy2);\\nvr = sin(vr3)*r; v2r=sin(vr2)*r;\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr3 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\n\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\n\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;","pixel_eqs_eel":"du = (x*2-1) - (q4+q7+q10-1.5)*2/3;\\ndv = (y*2-1) + (q5+q8+q11-1.5)*2/3;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = sin(dist*0.05)*0.4*q14;\\ndx = mult*sin(ang2*2+q13)*aspectx;\\ndy = mult*cos(ang2*2+q13)*aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  ret_1.xz = vec2(0.0, 0.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(uv);\\n  ret_1.y = texture (sampler_fc_main, tmpvar_3).y;\\n  ret_1.y = (ret_1.y + ((\\n    ((ret_1.y - ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3).y) - 0.03)\\n   * 0.6) - 0.06));\\n  ret_1.y = (ret_1.y + ((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x * 0.3));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  ret_1.z = (texture (sampler_fc_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    (tmpvar_4 * texsize.zw)\\n   * 8.0))).z - 0.03);\\n  ret_1.z = (ret_1.z + ((\\n    clamp ((0.2 - ((texture (sampler_blur2, uv).xyz * scale2) + bias2).y), 0.0, 1.0)\\n   * 0.1) + (\\n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\\n  .x * 0.2)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.3 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    ((0.815 * ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.3 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    ((0.815 * ((tmpvar_6.xyz * scale3) + bias3)) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 - (0.175 * sqrt(tmpvar_12)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},1705:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoomexp":1.00001,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q6;\\nang = an*0.5;\\nx = q4;\\ny = q5;\\nrad = q3*sqrt(2);\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q9;\\nang = an*0.5;\\nx = q7;\\ny = q8;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"an = an + q12;\\nang = an*0.5;\\nx = q10;\\ny = q11;\\nrad = q3*sqrt(2);\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"num_inst":4,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"an = an + 0.5*q16/num_inst;\\nw = asin(1)*4*instance/num_inst + an;\\nx = q6 + sin(w)*q5*0.5;\\ny = q7 + cos(w)*q5*0.5;\\nrad = q5*0.25;\\n\\n\\n//x = 0.5 + (x-0.5)/q2;\\n//y = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// the velocity vector\\n\\nx = q3 + sample*sin(q14)*q13*40;\\ny = q4 + sample*cos(q14)*q13*40;\\n\\n// tangential velocity of rotation\\n//x = q3 + sample*q16*40;\\n//y = q4 - q5/2;\\n\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// tangential property of velocity vector\\n\\nx = q3 + sample*sin(q10)*cos(q14-q10)*q13*40;\\ny = q4 + sample*cos(q10)*cos(q14-q10)*q13*40;\\n\\n// vx\\n//x = q3 + sample*q11*40;\\n//y = q4;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"thick":1,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"","point_eqs_eel":"// orthogonal property of velocity vector\\n\\nx = q3 + sample*sin(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\ny = q4 + sample*cos(q10+asin(1))*cos(q14-q10-asin(1))*q13*40;\\n\\n// vy\\n//x = q3;\\n//y = q4 + sample*q12*40;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\ny1 = 0.6;\\n\\nx2 = 0.5;\\ny2 = 0.4;\\n\\nx3 = 0.5;\\ny3 = 0.2;\\n\\nvr1 = 0.0001;\\nvr2 = 0.0;\\nvr3 = 0.0;\\n\\nvx1 = 0;\\nvx2 = 0;\\nvx3 = 0;\\n\\nq21 = 0.5/asin(1);","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\nr = 0.05+ (bass_att+treb_att)*0.006;\\nmonitor = aspecty;\\nvr = sin(vr1)*r;\\nbounce = below(y1,r-(aspectx-1)*0.5);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.96 + (r-y1-(aspectx-1)*0.5)*0.1, vy1-0.0003*60/fps);\\nvx1 = if(bounce, vx1 + (vr-vx1)*0.15, vx1);vr = if(bounce, vr + (vx1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = above(x1,1-r+(aspecty-1)*0.5);vx1 = if(bounce, - abs(vx1)*0.96 + (1-r-x1+(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (vr-vy1)*0.15, vy1);vr = if(bounce, vr + (vy1-vr)*0.85 , vr);vr1 = asin(vr/r);\\nbounce = below(x1,r-(aspecty-1)*0.5);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.96 + (r-x1-(aspecty-1)*0.5)*0.1, vx1);\\nvy1 = if(bounce, vy1 + (-vr-vy1)*0.15, vy1);vr = if(bounce, vr - (vy1+vr)*0.85 , vr);vr1 = asin(vr/r);\\n\\nvr = sin(vr2)*r;\\nbounce = below(y2,r-(aspectx-1)*0.5);y2 = y2+vy2;vy2 = if(bounce, abs(vy2)*0.96 + (r-y2-(aspectx-1)*0.5)*0.1, vy2-0.0003*60/fps);\\nvx2 = if(bounce, vx2 + (vr-vx2)*0.15, vx2);vr = if(bounce, vr + (vx2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = above(x2,1-r+(aspecty-1)*0.5);vx2 = if(bounce, - abs(vx2)*0.96 + (1-r-x2+(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (vr-vy2)*0.15, vy2);vr = if(bounce, vr + (vy2-vr)*0.85 , vr);vr2 = asin(vr/r);\\nbounce = below(x2,r-(aspecty-1)*0.5);x2 = x2+vx2;vx2 = if(bounce, abs(vx2)*0.96 + (r-x2-(aspecty-1)*0.5)*0.1, vx2);\\nvy2 = if(bounce, vy2 + (-vr-vy2)*0.15, vy2);vr = if(bounce, vr - (vy2+vr)*0.85 , vr);vr2 = asin(vr/r);\\n\\nvr = sin(vr3)*r;\\nbounce = below(y3,r-(aspectx-1)*0.5);y3 = y3+vy3;vy3 = if(bounce, abs(vy3)*0.96 + (r-y3-(aspectx-1)*0.5)*0.1, vy3-0.0003*60/fps);\\nvx3 = if(bounce, vx3 + (vr-vx3)*0.15, vx3);vr = if(bounce, vr + (vx3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = above(x3,1-r+(aspecty-1)*0.5);vx3 = if(bounce, - abs(vx3)*0.96 + (1-r-x3+(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (vr-vy3)*0.15, vy3);vr = if(bounce, vr + (vy3-vr)*0.85 , vr);vr3 = asin(vr/r);\\nbounce = below(x3,r-(aspecty-1)*0.5);x3 = x3+vx3;vx3 = if(bounce, abs(vx3)*0.96 + (r-x3-(aspecty-1)*0.5)*0.1, vx3);\\nvy3 = if(bounce, vy3 + (-vr-vy3)*0.15, vy3);vr = if(bounce, vr - (vy3+vr)*0.85 , vr);vr3 = asin(vr/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)),sqrt( sqr(x1-x2) + sqr(y1-y2)));\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvr = sin(vr1)*r; v2r=sin(vr2)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)),sqrt( sqr(x1-x3) + sqr(y1-y3)));\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvr = sin(vr1)*r; v2r=sin(vr3)*r;\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr1 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr3 = asin(v2r/r);\\n\\nbounce = below( sqrt( sqr(x3+vx3-x2-vx2) + sqr(y3+vy3-y2-vy2)), 2*r);\\nbounce = bounce*below(sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)),sqrt( sqr(x2-x3) + sqr(y2-y3)));\\nref_ang = atan2(x2-x3,y2-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx3,vy3);w2 = atan2(vx2,vy2);\\nvr = sin(vr3)*r; v2r=sin(vr2)*r;\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-sin(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + ((vr-v2r)-cos(ref_ang)*v1*cos(w1-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-sin(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + ((v2r-vr)-cos(ref_ang)*v2*cos(w2-ref_ang))*0.1\\n              + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nvr = if(bounce, vr + (cos(w1-ref_ang)*(v1-v2)-vr)*0.9 , vr);vr3 = asin(vr/r);\\nv2r = if(bounce, v2r + (cos(w2-ref_ang)*(v2-v1)-v2r)*0.9 , v2r);vr2 = asin(v2r/r);\\n\\n\\n\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = r*2;\\n\\nq4  = x1;  q5 = y1;  q6 = vr1;\\nq7  = x2;  q8 = y2;  q9 = vr2;\\nq10 = x3; q11 = y3; q12 = vr3;\\n\\nq13 = atan2( (x1+x2+x3)/3 - 0.5, (y1+y2+y3)/3-0.5);\\nq14 = sigmoid(sqrt( sqr((x1+x2+x3)/3 - 0.5) + sqr((y1+y2+y3)/3-0.5) ),2)*0.2;\\n\\nt = t + 0.25/fps;\\nt = if(above(t,2),t-2,t);\\nq22 = -t;","pixel_eqs_eel":"du = (x*2-1) - (q4+q7+q10-1.5)*2/3;\\ndv = (y*2-1) + (q5+q8+q11-1.5)*2/3;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv);\\nmult = sin(dist*0.05)*0.4*q14;\\ndx = mult*sin(ang2*2+q13)*aspectx;\\ndy = mult*cos(ang2*2+q13)*aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1.xz = vec2(0.0, 0.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = fract(uv);\\n  ret_1.y = texture (sampler_fc_main, tmpvar_2).y;\\n  ret_1.y = (ret_1.y + ((\\n    ((ret_1.y - ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).y) - 0.03)\\n   * 0.6) - 0.06));\\n  ret_1.y = (ret_1.y + ((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x * 0.3));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.wz).yx;\\n  float tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = (min (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\\n  tmpvar_6 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\\n  tmpvar_6 = (tmpvar_6 + (float(\\n    (abs((tmpvar_3.x / tmpvar_3.y)) > 1.0)\\n  ) * (\\n    (tmpvar_6 * -2.0)\\n   + 1.570796)));\\n  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.x / tmpvar_3.y)));\\n  if ((abs(tmpvar_3.y) > (1e-08 * abs(tmpvar_3.x)))) {\\n    if ((tmpvar_3.y < 0.0)) {\\n      if ((tmpvar_3.x >= 0.0)) {\\n        tmpvar_4 += 3.141593;\\n      } else {\\n        tmpvar_4 = (tmpvar_4 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_4 = (sign(tmpvar_3.x) * 1.570796);\\n  };\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_4 * q21) - q22);\\n  tmpvar_7.y = (((0.666 * \\n    log(sqrt(dot (tmpvar_3, tmpvar_3)))\\n  ) + (tmpvar_4 * q21)) + q22);\\n  ret_1.z = texture (sampler_main, (0.5 + ((\\n    (1.0 - abs(((\\n      fract(fract(tmpvar_7))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.99))).y;\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 2.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.z;\\n  tmpvar_6.y = tmpvar_5.z;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 12.0));\\n  ret_2 = (((\\n    (texture (sampler_blur2, tmpvar_7).xyz * scale2)\\n   + bias2).z * (\\n    (texture (sampler_blur2, tmpvar_7).xyz * scale2)\\n   + bias2).y) * vec3(0.3, 0.0, 0.5));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.y;\\n  tmpvar_9.y = tmpvar_5.y;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_5.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_4.y;\\n  tmpvar_11.y = tmpvar_5.y;\\n  my_uv_1 = ((uv + (\\n    (tmpvar_10 * texsize.zw)\\n   * 64.0)) - ((tmpvar_11 * texsize.zw) * 64.0));\\n  vec3 tmpvar_12;\\n  tmpvar_12 = mix (mix (ret_2, vec3(3.0, 3.0, 3.0), vec3((\\n    ((texture (sampler_blur3, ((uv + \\n      (tmpvar_8 * 0.4)\\n    ) - tmpvar_9)).xyz * scale3) + bias3)\\n  .x * 0.5))), vec3(1.0, 0.5, 0.2), vec3(((\\n    ((texture (sampler_main, my_uv_1).xyz - ((texture (sampler_blur1, my_uv_1).xyz * scale1) + bias1)) + ((texture (sampler_blur2, my_uv_1).xyz * scale2) + bias2))\\n  .z * \\n    (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\\n  ) * 1.1)));\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_4.x;\\n  tmpvar_13.y = tmpvar_5.x;\\n  my_uv_1 = (uv + ((tmpvar_13 * texsize.zw) * 6.0));\\n  vec3 tmpvar_14;\\n  tmpvar_14 = mix (tmpvar_12, vec3(1.0, 1.0, 1.0), ((texture (sampler_main, my_uv_1).xyz - \\n    ((texture (sampler_blur1, my_uv_1).xyz * scale1) + bias1)\\n  ) + (\\n    ((texture (sampler_blur2, my_uv_1).xyz * scale2) + bias2)\\n   * 0.95)).xxx);\\n  ret_2 = tmpvar_14;\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = tmpvar_14;\\n  ret = tmpvar_15.xyz;\\n }"}')},7027:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.106,"wave_scale":0.51,"wave_smoothing":0,"modwavealphastart":0.82,"modwavealphaend":1.1,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"wave_r":0,"wave_g":0.93,"ob_size":0,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":24,"additive":1,"num_inst":5,"x":0.48,"rad":0.0261,"tex_zoom":4.36077,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\nang = rand(150)/100;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"additive":1,"rad":0.16777,"r":0,"g":0.1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %2;\\n\\n\\nd_x = if(is_beat, (rand(2000)-1000)*0.001 , d_x);\\nd_y = if(is_beat, (rand(2000)-1000)*0.001 , d_y);\\nr = if(is_beat, (rand(2000)-1000)*0.001 , r);\\nz = if(is_beat, rand(1000)*0.001 , z);\\nzoom = 1.03 + z*0.03;\\nrot = r*0.04;\\ndx = d_x*0.01;\\ndy = d_y*0.01;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 10.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  tmpvar_3.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (mix (uv_orig, uv, vec2(0.4, 0.4)) + ((tmpvar_3 * texsize.zw) * 2.0));\\n  ret_1.x = ((texture (sampler_main, tmpvar_4).x - (\\n    (texture (sampler_main, tmpvar_4).x - ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3).x)\\n   * 0.02)) - 0.008);\\n  ret_1.y = texture (sampler_main, uv).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\\n   * 0.2) - 0.004));\\n  ret_1.z = (texture (sampler_main, ((uv_orig - \\n    ((uv_orig - uv) * 2.0)\\n  ) + (\\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\\n  .xy * texsize.zw))).z - 0.004);\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 6.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_4.y = dot (((\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_blur3, uv);\\n  ret_2 = (0.3 * ((tmpvar_6.xyz * scale3) + bias3));\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur2, uv).xyz * scale2)\\n   + bias2) - 0.01));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_blur1, uv);\\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \\n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\\n  ) - 0.01));\\n  ret_2 = (ret_2 + 0.75);\\n  float tmpvar_8;\\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_9;\\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\\n    ((0.8 * ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\\n  ret2_1 = ((-0.3 * (\\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\\n  ret2_1 = (ret2_1 - 0.75);\\n  float tmpvar_10;\\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\\n    ((0.8 * ((tmpvar_6.xyz * scale3) + bias3)) - ((tmpvar_7.xyz * scale1) + bias1))\\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\\n  ret2_1 = tmpvar_11;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\\n  ret_2 = (tmpvar_12 - (0.175 * sqrt(tmpvar_12)));\\n  ret_2 = (ret_2 * ret_2);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_2;\\n  ret = tmpvar_13.xyz;\\n }"}')},699:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":1.666,"wave_smoothing":0.81,"modwavealphastart":1.4,"modwavealphaend":1.4,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"ob_size":0.005,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":24,"additive":1,"num_inst":3,"x":0.48,"rad":0.01,"tex_zoom":4.36077,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\n\\nr = rand(1200)/1000;\\ng = rand(1200)/1000;\\nb = rand(1200)/1000;\\n\\nr2 = r;\\ng2 = g;\\nb2 = b;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"textured":1,"rad":0.63647,"tex_zoom":1.5339,"r2":1,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n\\nd_x = if(beat, (rand(2000)-1000)*0.001 , d_x);\\nd_y = if(beat, (rand(2000)-1000)*0.001 , d_y);\\nr = if(beat, (rand(2000)-1000)*0.001 , r);\\nz = if(beat, rand(1000)*0.001 , z);\\nzoom = 1.01 + z*0.03;\\nrot = r*0.04;\\ndx = d_x*0.01;\\ndy = d_y*0.01;\\n\\nwave_a = beat;\\n\\n// nice random hue-fade\\nrr = rr + (rand(100)-50)/1000;\\ngg = gg + (rand(100)-50)/1000;\\nbb = bb + (rand(100)-50)/1000;\\nrr = max(0, min( 1, rr));\\ngg = max(0, min( 1, gg));\\nbb = max(0, min( 1, bb));\\nmx = max(max(rr,gg),bb);\\nmn = min(min(rr,gg),bb);\\nr = (rr-mn)/(mx-mn);\\ng = (gg-mn)/(mx-mn);\\nb = (bb-mn)/(mx-mn);\\n\\n\\nwave_r = r;\\nwave_g = g;\\nwave_b = b;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 4.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 6.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\\n  ret_1 = ((0.8 * (\\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\\n  ret_1 = (ret_1 + (0.6 * (\\n    (texture (sampler_blur1, uv).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 - ((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n   + bias1)));\\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \\n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\\n  )));\\n  ret_1 = (ret_1 + 1.0);\\n  float tmpvar_9;\\n  tmpvar_9 = dot (ret_1, vec3(0.32, 0.49, 0.29));\\n  ret_1 = (mix (vec3(tmpvar_9), (\\n    (0.75 * vec3(tmpvar_9))\\n   * \\n    dot ((((0.6 * \\n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\\n     + bias1))), vec3(0.32, 0.49, 0.29))\\n  ), pow (hue_shader, vec3(tmpvar_9))) * 0.9);\\n  ret_1 = (ret_1 * ret_1);\\n  vec3 tmpvar_10;\\n  tmpvar_10 = sqrt(ret_1);\\n  ret_1 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},4143:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"c_x = 0.5;\\nc_y = 0.5;","frame_eqs_eel":"q1 = aspectx;\\nq2 = aspecty;\\nrot = 0;\\nzoom = 1;\\nwarp = 0;\\n\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nr = if(beat, 0.01*(rand(200)-100)*0.01,r);\\nrot = r;\\n\\nc_x = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_x);\\nc_y = if(beat,0.5 + 0.5*(rand(200)-100)*0.01, c_y);\\n\\n\\nq3 = c_x;\\nq4 = c_y;","pixel_eqs_eel":"d = (pow(sqrt(sqr(x-q3)+sqr(y-q4)),1)-0);\\nv = 0.03;\\ndx = v*(x-q3)*d;\\ndy = v*(y-q4)*d;","warp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    (uv_orig * texsize.xy)\\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabled = uv;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.y;\\n  tmpvar_3.y = xlat_mutabledy.y;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = xlat_mutabledx.z;\\n  tmpvar_4.y = xlat_mutabledy.z;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, uv_orig);\\n  ret_1.y = ((texture (sampler_main, (uv - \\n    ((tmpvar_3 * texsize.zw) * 6.0)\\n  )).y - 0.008) + ((1.0 - tmpvar_5.x) * 0.018));\\n  ret_1.z = ((texture (sampler_main, (uv - \\n    ((tmpvar_4 * texsize.zw) * 6.0)\\n  )).z - 0.008) + (tmpvar_5.x * 0.018));\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\\n  ret_1.x = (ret_1.x + ((\\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\\n   * 0.15) + (tmpvar_2 * 0.0042)).x);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":"vec2 xlat_mutabled;\\nvec3 xlat_mutabledx;\\nvec3 xlat_mutabledy;\\n shader_body { \\n  vec3 ret_1;\\n  xlat_mutabled = (texsize.zw * 4.0);\\n  xlat_mutabledx = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  xlat_mutabledy = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * xlat_mutabled))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = xlat_mutabledx.y;\\n  tmpvar_2.y = xlat_mutabledy.y;\\n  ret_1 = (((1.0 - \\n    ((texture (sampler_blur3, (uv - (\\n      (tmpvar_2 * texsize.zw)\\n     * 256.0))).xyz * scale3) + bias3)\\n  .x) * vec3(0.7, 0.5, 0.1)) * (1.0 + (\\n    (xlat_mutabledx * 2.0)\\n   + \\n    (xlat_mutabledy * 4.0)\\n  ).y));\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = xlat_mutabledx.z;\\n  tmpvar_3.y = xlat_mutabledy.z;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (ret_1, (vec3(0.7, 0.5, 1.0) * texture (sampler_main, uv).z), vec3(clamp ((\\n    ((texture (sampler_blur3, (uv - (\\n      (tmpvar_3 * texsize.zw)\\n     * 512.0))).xyz * scale3) + bias3)\\n  .x * \\n    (1.0 + ((xlat_mutabledx * 2.0) - (xlat_mutabledy * 4.0)).z)\\n  ), 0.0, 1.0)));\\n  ret_1 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},2030:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q4;\\nrad = q5;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = q6;\\ny = q7;\\nrad = q8;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"additive":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":1},"init_eqs_eel":"","frame_eqs_eel":"x = q9;\\ny = q10;\\nrad = q11;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q12;\\ny = q13;\\nrad = q14;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t4)*t3*20;\\ny = t2 + sample*cos(t4)*t3*20;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10 + asin(1), ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.04+max(bass_att,treb_att)*0.004;\\nbounce = below(y1,r);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0003*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0003*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0003*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0003*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1; q4 = y1; q5 = r*2;\\nq6 = x2; q7 = y2; q8 = r*2;\\nq9 = x3; q10 = y3; q11 = r*2;\\nq12 = x4; q13 = y4; q14 = r*2;\\nq15 = 0.5 + (q12-0.5)/aspecty;\\nq16 = 0.5 + (q13-0.5)/aspectx;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.x;\\n  tmpvar_5.y = tmpvar_4.x;\\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_5 * texsize.zw) * 4.0))).x;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  ret_1.y = texture (sampler_fc_main, (uv + ((tmpvar_6 * texsize.zw) * 4.0))).y;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_3.z;\\n  tmpvar_7.y = tmpvar_4.z;\\n  ret_1.z = texture (sampler_fc_main, (uv + ((tmpvar_7 * texsize.zw) * 4.0))).z;\\n  ret_1 = (ret_1 - ((ret_1.yzx + ret_1.zxy) - 0.001));\\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \\n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\\n  ).xyz - 0.6) * 0.04));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_1;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 2.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = q15;\\n  tmpvar_5.y = (1.0 - q16);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.y;\\n  tmpvar_6.y = tmpvar_4.y;\\n  vec2 x_7;\\n  x_7 = ((uv - (tmpvar_6 * 4.0)) - tmpvar_5);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_3.x;\\n  tmpvar_8.y = tmpvar_4.x;\\n  vec2 x_9;\\n  x_9 = ((uv - (tmpvar_8 * 4.0)) - tmpvar_5);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.z;\\n  tmpvar_10.y = tmpvar_4.z;\\n  vec2 x_11;\\n  x_11 = ((uv - (tmpvar_10 * 4.0)) - tmpvar_5);\\n  vec3 tmpvar_12;\\n  tmpvar_12.x = pow (sqrt(dot (x_9, x_9)), 0.2);\\n  tmpvar_12.y = pow (sqrt(dot (x_7, x_7)), 0.2);\\n  tmpvar_12.z = pow (sqrt(dot (x_11, x_11)), 0.2);\\n  ret_1 = (((1.0 - tmpvar_12) * texture (sampler_main, uv).xyz) * 2.0);\\n  vec2 x_13;\\n  x_13 = (uv - tmpvar_5);\\n  ret_1 = (ret_1 + clamp ((1.0 - \\n    (sqrt(dot (x_13, x_13)) * 32.0)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = ret_1;\\n  ret = tmpvar_14.xyz;\\n }"}')},6998:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":1.413,"wave_scale":0.418,"wave_smoothing":0,"wave_mystery":-0.66,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":0.626,"warpscale":1.331,"zoom":0.99951,"warp":0.08925,"wave_r":0,"wave_g":0,"wave_x":0.24,"wave_y":0.44,"ob_size":0.005,"ob_r":0.01,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":48,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r2":1,"g2":0,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q3;\\ny = q4;\\nrad = q5;\\n\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q6;\\ny = q7;\\nrad = q8;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"enabled":1,"sides":48,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q9;\\ny = q10;\\nrad = q11;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"},{"baseVals":{"sides":48,"additive":1,"thickoutline":1,"rad":0.0277,"ang":6.03186,"tex_ang":6.03186,"tex_zoom":0.6839,"r":0,"g":1,"a":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q12;\\ny = q13;\\nrad = q14;\\n\\nx = 0.5 + (x-0.5)/q2;\\ny = 0.5 + (y-0.5)/q1;\\n"}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\na = beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*2;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t4)*t3*20;\\ny = t2 + sample*cos(t4)*t3*20;\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10, ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"},{"baseVals":{"spectrum":1,"g":0,"b":0,"enabled":0},"init_eqs_eel":"chance = 0;","frame_eqs_eel":"x = if(q9,q15,x);\\ny = if(q9,q16,y);\\nv = if(q9,q19,v);\\nw = if(q9,q20,w);\\n\\nref_w = if(q9, q10 + asin(1), ref_w);\\n\\nt1 = x;\\nt2 = y;\\nt3 = v;\\nt4 = w;\\nt5 = ref_w;\\n\\nt8 = 1;","point_eqs_eel":"x = t1 + sample*sin(t5)*t3*20*cos(t4-t5);\\ny = t2 + sample*cos(t5)*t3*20*cos(t4-t5);\\n\\nx = 0.5 + (x-0.5)/q1;\\ny = 0.5 + (y-0.5)/q2;"}],"init_eqs_eel":"x1 = 0.5;\\nx2 = 0.51;\\n\\ny2 = 0.9;\\ny1 = 0.7;\\n\\nx3 = 0.8;\\ny3 = 0.5;\\n\\nx4 = 0.2;\\ny4 = 0.5;\\n\\n\\nax1 = 0;\\nay1 = 0;\\nax2 = 0;\\nay2 = 0;\\nax3 = 0;\\nay3 = 0;\\n\\nvx1 = 0.000;\\nvx2 = 0.000;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\nr = 0.04+ max(bass_att,treb_att)*0.004;\\nbounce = below(y1,r);y1 = y1+vy1;vy1 = if(bounce, abs(vy1)*0.94 + (r-y1)*0.1, vy1-0.0003*60/fps);\\nbounce = below(x1,r);x1 = x1+vx1;vx1 = if(bounce, abs(vx1)*0.94 + (r-x1)*0.1, vx1);\\nbounce = above(x1,1-r);vx1 = if(bounce, - abs(vx1)*0.94 + (1-r-x1)*0.04, vx1);\\nbounce = below(y2,r);y2 = y2 + vy2;vy2 = if(bounce,abs(vy2)*0.94+(r-y2)*.1, vy2-0.0003*60/fps);\\nbounce = below(x2,r);x2 = x2+ vx2;vx2 = if(bounce, abs(vx2)*0.94 + (r-x2)*0.1, vx2);\\nbounce = above(x2,1-r);vx2 = if(bounce, - abs(vx2)*0.94 + (1-r-x2)*0.1, vx2);\\nbounce = below(y3,r);y3 = y3 + vy3;vy3 = if(bounce,abs(vy3)*0.94+(r-y3)*.1, vy3-0.0003*60/fps);\\nbounce = below(x3,r);x3 = x3+ vx3;vx3 = if(bounce, abs(vx3)*0.94 + (r-x3)*0.1, vx3);\\nbounce = above(x3,1-r);vx3 = if(bounce, - abs(vx3)*0.94 + (1-r-x3)*0.1, vx3);\\nbounce = below(y4,r);y4 = y4 + vy4;vy4 = if(bounce,abs(vy4)*0.94+(r-y4)*.1, vy4-0.0003*60/fps);\\nbounce = below(x4,r);x4 = x4+ vx4;vx4 = if(bounce, abs(vx4)*0.94 + (r-x4)*0.1, vx4);\\nbounce = above(x4,1-r);vx4 = if(bounce, - abs(vx4)*0.94 + (1-r-x4)*0.1, vx4);\\nbounce = below( sqrt( sqr(x1+vx1-x2-vx2) + sqr(y1+vy1-y2-vy2)), 2*r);\\nref_ang = atan2(x2-x1,y2-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx2*vx2+vy2*vy2);w1 = atan2(vx1,vy1);w2 = atan2(vx2,vy2);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx2 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy2);\\nbounce = below( sqrt( sqr(x1+vx1-x3-vx3) + sqr(y1+vy1-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x1,y3-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx1,vy1);w2 = atan2(vx3,vy3);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x2+vx2-x3-vx3) + sqr(y2+vy2-y3-vy3)), 2*r);\\nref_ang = atan2(x3-x2,y3-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx3*vx3+vy3*vy3);w1 = atan2(vx2,vy2);w2 = atan2(vx3,vy3);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx3 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy3);\\nbounce = below( sqrt( sqr(x1+vx1-x4-vx4) + sqr(y1+vy1-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x1,y4-y1)+asin(1); // common tangent\\nv1 = sqrt(vx1*vx1+vy1*vy1);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx1,vy1);w2 = atan2(vx4,vy4);\\nvx1 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx1);\\nvy1 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy1);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x2+vx2-x4-vx4) + sqr(y2+vy2-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x2,y4-y2)+asin(1); // common tangent\\nv1 = sqrt(vx2*vx2+vy2*vy2);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx2,vy2);w2 = atan2(vx4,vy4);\\nvx2 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx2);\\nvy2 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy2);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\nbounce = below( sqrt( sqr(x3+vx3-x4-vx4) + sqr(y3+vy3-y4-vy4)), 2*r);\\nref_ang = atan2(x4-x3,y4-y3)+asin(1); // common tangent\\nv1 = sqrt(vx3*vx3+vy3*vy3);v2 = sqrt(vx4*vx4+vy4*vy4);w1 = atan2(vx3,vy3);w2 = atan2(vx4,vy4);\\nvx3 = if(bounce,sin(ref_ang)*v1*cos(w1-ref_ang) + sin(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vx3);\\nvy3 = if(bounce,cos(ref_ang)*v1*cos(w1-ref_ang) + cos(ref_ang+asin(1))*v2*cos(w2-ref_ang-asin(1)), vy3);\\nvx4 = if(bounce,sin(ref_ang)*v2*cos(w2-ref_ang) + sin(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vx4);\\nvy4 = if(bounce,cos(ref_ang)*v2*cos(w2-ref_ang) + cos(ref_ang+asin(1))*v1*cos(w1-ref_ang-asin(1)), vy4);\\n//pogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogopogo\\n\\nq1 = aspectx;\\nq2 = aspecty;\\nq3 = x1; q4 = y1; q5 = r*2;\\nq6 = x2; q7 = y2; q8 = r*2;\\nq9 = x3; q10 = y3; q11 = r*2;\\nq12 = x4; q13 = y4; q14 = r*2;\\nq15 = atan2(vx4,vy4);\\nq16 = sqrt(vx4*vx4+vy4*vy4);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q2;\\ny = 0.5 + (y-0.5)*q1;\\n\\n\\ndir = -q15 + asin(1);\\nb1 = 0.075;\\nm1 = q16*25;\\nxx = q12;\\nyy = 1-q13;\\nx1 = xx  -sin(dir)*b1;\\ny1 = yy  -cos(dir)*b1;\\nx2 = xx  +sin(dir)*b1;\\ny2 = yy  +cos(dir)*b1;\\nd1 = sqrt((x1-x)*(x1-x)+(y1-y)*(y1-y))-b1*2;\\nd2 = sqrt((x2-x)*(x2-x)+(y2-y)*(y2-y))-b1*2;\\nsi1 = sigmoid(-d1,1000);\\nsi2 = sigmoid(-d2,1000);\\ndx = (si1*sin(y1-y)*m1*d1  - si2*sin(y2-y)*m1*d2)*3*q1;\\ndy = (-si1*sin(x1-x)*m1*d1 + si2*sin(x2-x)*m1*d2)*3*q2;","warp":" shader_body { \\n  float conway_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.02, 0.0))).xyz * scale2) + bias2)\\n  ).y * 1280.0) * texsize.z);\\n  tmpvar_3.y = (((\\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n   - \\n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.02))).xyz * scale2) + bias2)\\n  ).y * 1024.0) * texsize.w);\\n  ret_2.y = texture (sampler_pc_main, (uv - (tmpvar_3 * 0.004))).y;\\n  ret_2.y = (ret_2.y + ((\\n    ((ret_2.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y) - 0.1)\\n   * 0.1) + 0.02));\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\\n  ret_2.z = (texture (sampler_fc_main, (uv - tmpvar_4)).z - 0.004);\\n  conway_1 = (texture (sampler_pw_main, (uv_orig - texsize.zw)).x + texture (sampler_pw_main, (uv_orig + (vec2(0.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, -1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(1.0, 0.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + (vec2(-1.0, 1.0) * texsize.zw))).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + tmpvar_4)).x);\\n  conway_1 = (conway_1 + texture (sampler_pw_main, (uv_orig + texsize.zw)).x);\\n  conway_1 = (conway_1 - fract(conway_1));\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (texture (sampler_pc_main, uv_orig).x, 0.0, 1.0);\\n  ret_2.x = (clamp ((1.0 - \\n    abs((conway_1 - 3.0))\\n  ), 0.0, 1.0) * (1.0 - tmpvar_5));\\n  ret_2.x = (ret_2.x + (clamp (\\n    max ((1.0 - abs((conway_1 - 2.0))), (1.0 - abs((conway_1 - 3.0))))\\n  , 0.0, 1.0) * tmpvar_5));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 moebius_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q11;\\n  tmpvar_3.y = q12;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = q17;\\n  tmpvar_4.y = q18;\\n  vec2 tmpvar_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - 0.5);\\n  tmpvar_5 = (tmpvar_6 * aspect.xy);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((tmpvar_5.x * q15) - (tmpvar_5.y * q16));\\n  tmpvar_7.y = ((tmpvar_5.x * q16) - (tmpvar_5.y * q15));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (tmpvar_7 + tmpvar_4);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = ((q13 * tmpvar_8.x) + (q14 * tmpvar_8.y));\\n  tmpvar_9.y = ((q14 * tmpvar_8.x) - (q13 * tmpvar_8.y));\\n  moebius_1 = (((tmpvar_9 / \\n    ((tmpvar_8.x * tmpvar_8.x) + (tmpvar_8.y * tmpvar_8.y))\\n  ) + tmpvar_3) * 0.5);\\n  float tmpvar_10;\\n  tmpvar_10 = sqrt(dot (moebius_1, moebius_1));\\n  moebius_1 = (0.5 + ((\\n    (1.0 - abs(((\\n      fract((moebius_1 * 0.5))\\n     * 2.0) - 1.0)))\\n   - 0.5) * 0.95));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (0.5 + (tmpvar_6 * 0.2));\\n  ret_2 = (texture (sampler_main, tmpvar_11).z * vec3(0.4, 0.0, 0.7));\\n  ret_2 = (mix (ret_2, vec3(0.0, 1.0, 1.0), vec3(clamp (texture (sampler_fc_main, moebius_1).y, 0.0, 1.0))) * (1.4 - pow (\\n    (tmpvar_10 * 0.8)\\n  , 0.3)));\\n  ret_2 = (mix (mix (\\n    mix (ret_2, vec3(4.0, 1.0, 0.0), vec3(((clamp (\\n      (texture (sampler_fc_main, tmpvar_11).y - texture (sampler_pc_main, tmpvar_11).y)\\n    , 0.0, 1.0) * 4.0) * (tmpvar_10 * tmpvar_10))))\\n  , vec3(-4.0, -4.0, -4.0), texture (sampler_main, tmpvar_11).xxx), vec3(2.0, 2.0, 2.0), vec3((texture (sampler_pc_main, tmpvar_11).x * 0.75))) - (roam_sin.zyx * roam_cos.ywx));\\n  vec4 tmpvar_12;\\n  tmpvar_12.w = 1.0;\\n  tmpvar_12.xyz = ret_2;\\n  ret = tmpvar_12.xyz;\\n }"}')},1229:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":1,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":1.666,"wave_smoothing":0.81,"modwavealphastart":1.4,"modwavealphaend":1.4,"zoomexp":3.04777,"zoom":1.0173,"warp":0.01605,"ob_size":0.005,"ob_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":24,"additive":1,"num_inst":3,"x":0.48,"rad":0.01,"tex_zoom":4.36077,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(1000)/1000;\\ny = rand(1000)/1000;\\n\\nr = rand(1200)/1000;\\ng = rand(1200)/1000;\\nb = rand(1200)/1000;\\n\\nr2 = r;\\ng2 = g;\\nb2 = b;"},{"baseVals":{"sides":5,"textured":1,"rad":0.986,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ang =sin(time/65) ;// ang + (bass*.2) + (time*.4);"},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n"},{"baseVals":{"sides":36,"textured":1,"rad":0.63647,"tex_zoom":1.5339,"r2":1,"g2":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"r":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"q1 = below(rand(100),4 + 10*(treb+mid+bass));","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8)*q1;\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.1) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\n\\nd_x = if(beat, (rand(2000)-1000)*0.001 , d_x);\\nd_y = if(beat, (rand(2000)-1000)*0.001 , d_y);\\nr = if(beat, (rand(2000)-1000)*0.001 , r);\\nz = if(beat, rand(1000)*0.001 , z);\\nzoom = 1.01 + z*0.03;\\nrot = r*0.04;\\ndx = d_x*0.01;\\ndy = d_y*0.01;\\n\\nwave_a = beat;\\n\\n// nice random hue-fade\\nrr = rr + (rand(100)-50)/1000;\\ngg = gg + (rand(100)-50)/1000;\\nbb = bb + (rand(100)-50)/1000;\\nrr = max(0, min( 1, rr));\\ngg = max(0, min( 1, gg));\\nbb = max(0, min( 1, bb));\\nmx = max(max(rr,gg),bb);\\nmn = min(min(rr,gg),bb);\\nr = (rr-mn)/(mx-mn);\\ng = (gg-mn)/(mx-mn);\\nb = (bb-mn)/(mx-mn);\\n\\n\\nwave_r = r;\\nwave_g = g;\\nwave_b = b;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = mix (uv_orig, uv, vec2(0.2, 0.2));\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  tmpvar_3.y = dot (((\\n    (texture (sampler_blur1, (tmpvar_1 + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1) - (\\n    (texture (sampler_blur1, (tmpvar_1 - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)), vec3(0.32, 0.49, 0.29));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = (texture (sampler_fc_main, (tmpvar_1 + (\\n    (tmpvar_3 * texsize.zw)\\n   * 4.0))) - 0.01).xyz;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (texsize.zw * 4.0);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (pow ((\\n    (abs(((\\n      ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n     * 2.0) - texture (sampler_main, uv).xyz)) * 1.8)\\n   + 0.12), vec3(1.8, 1.8, 1.8)) * ((\\n    dot ((((\\n      (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale2)\\n     + bias2) - (\\n      (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale2)\\n     + bias2)) + ((\\n      (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale2)\\n     + bias2) - (\\n      (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale2)\\n     + bias2))), vec3(0.32, 0.49, 0.29))\\n   * 4.0) + 1.0));\\n  ret = tmpvar_2.xyz;\\n }"}')},8685:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_orient":1,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpanimspeed":0.204,"warpscale":8.471,"zoom":0.99951,"warp":0.15038,"wave_r":0.44,"wave_g":0.4,"ob_size":0.005,"ob_r":0.01,"ob_a":1,"ib_size":0.26,"mv_x":44.16,"mv_y":33.6,"mv_l":0.5,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":3,"additive":1,"x":0.67,"y":0.53,"rad":0.17457,"ang":0.25133,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_g":0.5,"border_b":0.15,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":23,"additive":1,"num_inst":817,"rad":0.02798,"tex_ang":3.14159,"tex_zoom":0.99979,"g":1,"b":1,"a":0.41,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"x":0.9,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = sin(time) * .4 + .5;\\n\\n\\npow( (bass*.15),2);"},{"baseVals":{"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 1-q1;\\ny = q2;\\nx = 0.5 + (x - 0.5)*0.25;\\ny = 0.5 + (y - 0.5)*0.25;"}],"waves":[{"baseVals":{"enabled":1,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":0,"r":0.05,"g":0.15},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\nab = 1;","frame_eqs_eel":"// parameters\\nw = time*0.5; // rotation (0..2Pi)\\nt1 = 0.5; // center for rotation (x)\\nt2 = 0.5; // center for rotation (y)\\nt3 = 1; // scale\\nt4 = 0; // translation (x)\\nt5 = 0; // translation (y)\\nt6 = sin(w);\\nt7 = cos(w);","point_eqs_eel":"xx = if(equal(sample,0),q3,xx);\\nyy = if(equal(sample,0),q4,yy);\\n\\n\\ndx = xx*(1-xx)-q5*xx*yy/(xx+q6);\\ndy = q7*yy*(1-yy/xx);\\n\\nx1 = xx;\\ny1 = yy;\\n\\nxx = xx+dx*0.2;\\nyy = yy+dy*0.2;\\n\\nx1 = 0.5+(x1-0.5)/q1 + dy*value1*0.01;\\ny1 = 0.5+(y1-0.5)/q2 - dx*value1*0.01;\\n\\n\\n// synchronized affine transformation\\nx = q26 + ((x1-q26)*q32 + (y1-q27)*q31)*q28 + q29;\\ny = q27 + (-(x1-q26)*q31 + (y1-q27)*q32)*q28 + q30;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xx1 = if(equal(sample,0),q11,xx1);\\nyy1 = if(equal(sample,0),q12,yy1);\\nzz1 = if(equal(sample,0),q13,zz1);\\n\\ndx1 = q14*(yy1-xx1);\\ndy1 = xx1*(q15-zz1)-yy1;\\ndz1 = xx1*yy1-q16*zz1;\\nxx1 = xx1 + q17*dx1;\\nyy1 = yy1 + q17*dy1;\\nzz1 = zz1 + q17*dz1;\\n\\nmy_x = xx1*0.02;\\nmy_y = yy1*0.02;\\nmy_z = zz1*0.02;\\n\\nx = 0.5 + my_x;\\ny = 0.5 + my_y;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0;\\ny1= .001;\\nz1 = 0;","frame_eqs_eel":"zoom = 1;\\nwarp = 0;\\nwave_a = 0;\\n\\n\\n// below parameters belong to an extended \\"Lotka-Volterra\\" model (simple predator-prey differential equation system - see wikipedia)\\n\\nstartx = 0.7; // initial predator population (used only for the phase plot)\\nstarty = 0.7; // initial prey population\\n\\na = 1.0; // LV-model parameters - some pairs reach a so-called limit-cycle\\nb = 0.14;\\nd = 0.2;\\n\\nq1 = aspectx;\\nq2 = aspecty;\\n\\nq3 = startx;\\nq4 = starty;\\n\\nq5 = a; // the model parameters are synchronized for the phase plot wave and the per-vertex warp\\nq6 = b;\\nq7 = d;\\n\\n\\nvol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\n\\nw = if(beat,rand(3.14*2),w);\\nx = if(beat,rand(1),x);\\ny = if(beat,rand(1),y);\\n\\n// below parameters belong to a synchronized affine transformation for waves and the per-vertex code (rotate, scale, translate)\\n\\nq26 = 0.5*x; // center for rotation and scaling (x)\\nq27 = 0.5*y; // center for rotation and scaling (y)\\nq28 = 1; // scale\\nq29 = 0.4; // translate x\\nq30 = 0.1; // translate y\\nq31 = sin(w);\\nq32 = cos(w);\\nq25 = w;\\n// TODO: compensate parameter changes for an invariant canvas pane via difference quotients ;)\\n\\n// integration\\nbb = bb*0.98 + bass*0.5;\\nmm = mm*0.98 + mid*0.5;\\ntt = tt*0.98 + treb*0.5;\\n\\n// normalization\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\n\\nh1 = (bb-mn)/(mx-mn);\\nh2 = (mm-mn)/(mx-mn);\\nh3 = (tt-mn)/(mx-mn);\\n\\n// integration again (for constant change in one variable)\\nv = 0.1/fps;\\nbm = bm + (h1-h2)*v;\\nmt = mt + (h2-h3)*v;\\nbt = bt + (h1-h3)*v;\\n\\n// emit\\nq10 = bm;\\nq11 = mt;\\nq12 = bt;\\nv = bm;\\nq13 = sin(v);\\nq14 = cos(v);","pixel_eqs_eel":"x = 0.5 + (x-0.5)*q1;\\ny = 0.5 - (y-0.5)*q2;\\n\\nx = q26 + (x-q26)/q28 - q29;\\ny = q27 + (y-q27)/q28 - q30;\\n\\n// have a nice warp effect? - rotate it like a shape!\\n\\n  angle = -q25;\\n\\n/////////////////////////////////////////////////////////\\nX1 = x - q26;\\nY1 = y - q27;\\nx = q26 + cos(-angle)*X1 -sin(-angle)*Y1; // rotate the x/y pane\\ny = q27 + sin(-angle)*X1 +cos(-angle)*Y1;\\n/////////////////////////////////////////////////////////\\n\\n\\ndx = x*(1-x)-q5*x*y/(x+q6);\\ndy = -q7*y*(1-y/x);\\n\\ndx = -0.01*dx/q1;\\ndy = -0.01*dy/q2;\\n\\n\\n//dx = 0;\\n//dy = 0;\\n\\n/////////////////////////////////////////////////////////\\ndx1 = cos(angle)*dx - sin(angle)*dy; // and finally the dx/dy pane is rotated to match the x/y pane\\ndy1 = sin(angle)*dx + cos(angle)*dy;\\ndx = dx1*aspectx;\\ndy = dy1*aspecty;\\n/////////////////////////////////////////////////////////","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1.z = (texture (sampler_main, uv).z * 0.5);\\n  vec2 tmpvar_2;\\n  tmpvar_2 = ((uv_orig * texsize.xy) * texsize_noise_lq.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  tmpvar_4.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).y * 0.5);\\n  ret_1.y = texture (sampler_fw_main, clamp ((uv_orig + (\\n    (tmpvar_4 * texsize.zw)\\n   * 4.0)), 0.0, 1.0)).y;\\n  ret_1.y = (ret_1.y + ((\\n    (ret_1 - ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1))\\n  .y * 0.025) + -0.014));\\n  ret_1.y = (ret_1.y + ((texture (sampler_noise_lq, tmpvar_2).y - 0.5) * 0.02));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  tmpvar_5.y = (((2.0 * \\n    ((texture (sampler_blur1, (uv_orig + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  ) - (2.0 * \\n    ((texture (sampler_blur1, (uv_orig - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\\n  )).x * 0.5);\\n  ret_1.x = ((texture (sampler_main, (uv - \\n    ((tmpvar_5 * texsize.zw) * 4.0)\\n  )).x - (ret_1.y * 0.01)) + 0.004);\\n  ret_1.x = (ret_1.x + ((\\n    (texture (sampler_noise_lq, tmpvar_2).x - 0.5)\\n   * 0.01) + (ret_1.z * 0.14)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_1;\\n  ret = tmpvar_6.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec2 mirror_uv_2;\\n  vec2 rotate_uv_3;\\n  vec3 ret_4;\\n  uv_1 = (0.5 + ((uv - 0.5) * 1.5));\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((uv_1 - 0.5) * aspect.xy);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = ((q14 * tmpvar_5.x) - (q13 * tmpvar_5.y));\\n  tmpvar_6.y = ((q13 * tmpvar_5.x) + (q14 * tmpvar_5.y));\\n  vec2 tmpvar_7;\\n  tmpvar_7 = (0.5 + (tmpvar_6 * 2.0));\\n  rotate_uv_3 = tmpvar_7;\\n  vec2 numerator_8;\\n  numerator_8 = (tmpvar_7 - vec2(0.0, 0.5));\\n  vec2 denominator_9;\\n  denominator_9 = (tmpvar_7 - vec2(1.0, 0.5));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = ((numerator_8.x * denominator_9.x) + (numerator_8.y * denominator_9.y));\\n  tmpvar_10.y = ((numerator_8.y * denominator_9.x) - (numerator_8.x * denominator_9.y));\\n  vec2 tmpvar_11;\\n  tmpvar_11 = (((tmpvar_10 / \\n    ((denominator_9.x * denominator_9.x) + (denominator_9.y * denominator_9.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_12;\\n  tmpvar_12 = sqrt(dot (tmpvar_11, tmpvar_11));\\n  float tmpvar_13;\\n  float tmpvar_14;\\n  tmpvar_14 = (min (abs(\\n    (tmpvar_11.x / tmpvar_11.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_11.x / tmpvar_11.y)\\n  ), 1.0));\\n  float tmpvar_15;\\n  tmpvar_15 = (tmpvar_14 * tmpvar_14);\\n  tmpvar_15 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_15) + 0.05368138) * tmpvar_15) - 0.1173503)\\n     * tmpvar_15) + 0.1938925) * tmpvar_15) - 0.3326756)\\n   * tmpvar_15) + 0.9999793) * tmpvar_14);\\n  tmpvar_15 = (tmpvar_15 + (float(\\n    (abs((tmpvar_11.x / tmpvar_11.y)) > 1.0)\\n  ) * (\\n    (tmpvar_15 * -2.0)\\n   + 1.570796)));\\n  tmpvar_13 = (tmpvar_15 * sign((tmpvar_11.x / tmpvar_11.y)));\\n  if ((abs(tmpvar_11.y) > (1e-08 * abs(tmpvar_11.x)))) {\\n    if ((tmpvar_11.y < 0.0)) {\\n      if ((tmpvar_11.x >= 0.0)) {\\n        tmpvar_13 += 3.141593;\\n      } else {\\n        tmpvar_13 = (tmpvar_13 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_13 = (sign(tmpvar_11.x) * 1.570796);\\n  };\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (tmpvar_13 * 0.1591549);\\n  tmpvar_16.y = tmpvar_12;\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = ((tmpvar_16.x * 2.0) + q11);\\n  tmpvar_17.y = ((0.35 * log(tmpvar_12)) + q12);\\n  vec2 tmpvar_18;\\n  tmpvar_18 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_17 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  mirror_uv_2 = tmpvar_18;\\n  uv_1 = (0.5 + ((tmpvar_18 - 0.5) * 1.5));\\n  vec2 tmpvar_19;\\n  tmpvar_19 = (uv_1 - 0.5);\\n  vec2 tmpvar_20;\\n  tmpvar_20.x = ((q14 * tmpvar_19.x) - (q13 * tmpvar_19.y));\\n  tmpvar_20.y = ((q13 * tmpvar_19.x) + (q14 * tmpvar_19.y));\\n  rotate_uv_3 = (0.5 + (tmpvar_20 * 2.0));\\n  vec2 numerator_21;\\n  numerator_21 = (rotate_uv_3 - vec2(0.0, 0.5));\\n  vec2 denominator_22;\\n  denominator_22 = (rotate_uv_3 - vec2(1.0, 0.5));\\n  vec2 tmpvar_23;\\n  tmpvar_23.x = ((numerator_21.x * denominator_22.x) + (numerator_21.y * denominator_22.y));\\n  tmpvar_23.y = ((numerator_21.y * denominator_22.x) - (numerator_21.x * denominator_22.y));\\n  vec2 tmpvar_24;\\n  tmpvar_24 = (((tmpvar_23 / \\n    ((denominator_22.x * denominator_22.x) + (denominator_22.y * denominator_22.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_25;\\n  tmpvar_25 = sqrt(dot (tmpvar_24, tmpvar_24));\\n  float tmpvar_26;\\n  float tmpvar_27;\\n  tmpvar_27 = (min (abs(\\n    (tmpvar_24.x / tmpvar_24.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_24.x / tmpvar_24.y)\\n  ), 1.0));\\n  float tmpvar_28;\\n  tmpvar_28 = (tmpvar_27 * tmpvar_27);\\n  tmpvar_28 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_28) + 0.05368138) * tmpvar_28) - 0.1173503)\\n     * tmpvar_28) + 0.1938925) * tmpvar_28) - 0.3326756)\\n   * tmpvar_28) + 0.9999793) * tmpvar_27);\\n  tmpvar_28 = (tmpvar_28 + (float(\\n    (abs((tmpvar_24.x / tmpvar_24.y)) > 1.0)\\n  ) * (\\n    (tmpvar_28 * -2.0)\\n   + 1.570796)));\\n  tmpvar_26 = (tmpvar_28 * sign((tmpvar_24.x / tmpvar_24.y)));\\n  if ((abs(tmpvar_24.y) > (1e-08 * abs(tmpvar_24.x)))) {\\n    if ((tmpvar_24.y < 0.0)) {\\n      if ((tmpvar_24.x >= 0.0)) {\\n        tmpvar_26 += 3.141593;\\n      } else {\\n        tmpvar_26 = (tmpvar_26 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_26 = (sign(tmpvar_24.x) * 1.570796);\\n  };\\n  vec2 tmpvar_29;\\n  tmpvar_29.x = (tmpvar_26 * 0.1591549);\\n  tmpvar_29.y = tmpvar_25;\\n  vec2 tmpvar_30;\\n  tmpvar_30.x = ((tmpvar_29.x * 2.0) + q11);\\n  tmpvar_30.y = ((0.35 * log(tmpvar_25)) + q12);\\n  mirror_uv_2 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_30 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\\n  vec2 tmpvar_31;\\n  tmpvar_31 = (uv_1 - 0.5);\\n  vec2 tmpvar_32;\\n  tmpvar_32.x = ((q14 * tmpvar_31.x) - (q13 * tmpvar_31.y));\\n  tmpvar_32.y = ((q13 * tmpvar_31.x) + (q14 * tmpvar_31.y));\\n  rotate_uv_3 = (0.5 + (tmpvar_32 * 2.0));\\n  vec2 numerator_33;\\n  numerator_33 = (rotate_uv_3 - vec2(0.0, 0.5));\\n  vec2 denominator_34;\\n  denominator_34 = (rotate_uv_3 - vec2(1.0, 0.5));\\n  vec2 tmpvar_35;\\n  tmpvar_35.x = ((numerator_33.x * denominator_34.x) + (numerator_33.y * denominator_34.y));\\n  tmpvar_35.y = ((numerator_33.y * denominator_34.x) - (numerator_33.x * denominator_34.y));\\n  vec2 tmpvar_36;\\n  tmpvar_36 = (((tmpvar_35 / \\n    ((denominator_34.x * denominator_34.x) + (denominator_34.y * denominator_34.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_37;\\n  tmpvar_37 = sqrt(dot (tmpvar_36, tmpvar_36));\\n  float tmpvar_38;\\n  float tmpvar_39;\\n  tmpvar_39 = (min (abs(\\n    (tmpvar_36.x / tmpvar_36.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_36.x / tmpvar_36.y)\\n  ), 1.0));\\n  float tmpvar_40;\\n  tmpvar_40 = (tmpvar_39 * tmpvar_39);\\n  tmpvar_40 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_40) + 0.05368138) * tmpvar_40) - 0.1173503)\\n     * tmpvar_40) + 0.1938925) * tmpvar_40) - 0.3326756)\\n   * tmpvar_40) + 0.9999793) * tmpvar_39);\\n  tmpvar_40 = (tmpvar_40 + (float(\\n    (abs((tmpvar_36.x / tmpvar_36.y)) > 1.0)\\n  ) * (\\n    (tmpvar_40 * -2.0)\\n   + 1.570796)));\\n  tmpvar_38 = (tmpvar_40 * sign((tmpvar_36.x / tmpvar_36.y)));\\n  if ((abs(tmpvar_36.y) > (1e-08 * abs(tmpvar_36.x)))) {\\n    if ((tmpvar_36.y < 0.0)) {\\n      if ((tmpvar_36.x >= 0.0)) {\\n        tmpvar_38 += 3.141593;\\n      } else {\\n        tmpvar_38 = (tmpvar_38 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_38 = (sign(tmpvar_36.x) * 1.570796);\\n  };\\n  vec2 tmpvar_41;\\n  tmpvar_41.x = (tmpvar_38 * 0.1591549);\\n  tmpvar_41.y = tmpvar_37;\\n  vec2 tmpvar_42;\\n  tmpvar_42.x = ((tmpvar_41.x * 2.0) + q11);\\n  tmpvar_42.y = ((0.35 * log(tmpvar_37)) + q12);\\n  mirror_uv_2 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_42 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  uv_1 = (0.5 + ((mirror_uv_2 - 0.5) * 1.5));\\n  vec2 tmpvar_43;\\n  tmpvar_43 = (uv_1 - 0.5);\\n  vec2 tmpvar_44;\\n  tmpvar_44.x = ((q14 * tmpvar_43.x) - (q13 * tmpvar_43.y));\\n  tmpvar_44.y = ((q13 * tmpvar_43.x) + (q14 * tmpvar_43.y));\\n  rotate_uv_3 = (0.5 + (tmpvar_44 * 2.0));\\n  vec2 numerator_45;\\n  numerator_45 = (rotate_uv_3 - vec2(0.0, 0.5));\\n  vec2 denominator_46;\\n  denominator_46 = (rotate_uv_3 - vec2(1.0, 0.5));\\n  vec2 tmpvar_47;\\n  tmpvar_47.x = ((numerator_45.x * denominator_46.x) + (numerator_45.y * denominator_46.y));\\n  tmpvar_47.y = ((numerator_45.y * denominator_46.x) - (numerator_45.x * denominator_46.y));\\n  vec2 tmpvar_48;\\n  tmpvar_48 = (((tmpvar_47 / \\n    ((denominator_46.x * denominator_46.x) + (denominator_46.y * denominator_46.y))\\n  ) + 0.5) - vec2(0.5, 0.5));\\n  float tmpvar_49;\\n  tmpvar_49 = sqrt(dot (tmpvar_48, tmpvar_48));\\n  float tmpvar_50;\\n  float tmpvar_51;\\n  tmpvar_51 = (min (abs(\\n    (tmpvar_48.x / tmpvar_48.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_48.x / tmpvar_48.y)\\n  ), 1.0));\\n  float tmpvar_52;\\n  tmpvar_52 = (tmpvar_51 * tmpvar_51);\\n  tmpvar_52 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_52) + 0.05368138) * tmpvar_52) - 0.1173503)\\n     * tmpvar_52) + 0.1938925) * tmpvar_52) - 0.3326756)\\n   * tmpvar_52) + 0.9999793) * tmpvar_51);\\n  tmpvar_52 = (tmpvar_52 + (float(\\n    (abs((tmpvar_48.x / tmpvar_48.y)) > 1.0)\\n  ) * (\\n    (tmpvar_52 * -2.0)\\n   + 1.570796)));\\n  tmpvar_50 = (tmpvar_52 * sign((tmpvar_48.x / tmpvar_48.y)));\\n  if ((abs(tmpvar_48.y) > (1e-08 * abs(tmpvar_48.x)))) {\\n    if ((tmpvar_48.y < 0.0)) {\\n      if ((tmpvar_48.x >= 0.0)) {\\n        tmpvar_50 += 3.141593;\\n      } else {\\n        tmpvar_50 = (tmpvar_50 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_50 = (sign(tmpvar_48.x) * 1.570796);\\n  };\\n  vec2 tmpvar_53;\\n  tmpvar_53.x = (tmpvar_50 * 0.1591549);\\n  tmpvar_53.y = tmpvar_49;\\n  vec2 tmpvar_54;\\n  tmpvar_54.x = ((tmpvar_53.x * 2.0) + q11);\\n  tmpvar_54.y = ((0.35 * log(tmpvar_49)) + q12);\\n  mirror_uv_2 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_54 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  uv_1 = mirror_uv_2;\\n  vec2 tmpvar_55;\\n  tmpvar_55 = (texsize.zw * 4.0);\\n  vec3 tmpvar_56;\\n  tmpvar_56 = (((texture (sampler_blur1, \\n    (mirror_uv_2 + (vec2(1.0, 0.0) * tmpvar_55))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (mirror_uv_2 - (vec2(1.0, 0.0) * tmpvar_55))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_57;\\n  tmpvar_57 = (((texture (sampler_blur1, \\n    (mirror_uv_2 + (vec2(0.0, 1.0) * tmpvar_55))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (mirror_uv_2 - (vec2(0.0, 1.0) * tmpvar_55))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_58;\\n  tmpvar_58.x = tmpvar_56.z;\\n  tmpvar_58.y = tmpvar_57.z;\\n  vec2 tmpvar_59;\\n  tmpvar_59.x = tmpvar_56.y;\\n  tmpvar_59.y = tmpvar_57.y;\\n  vec2 tmpvar_60;\\n  tmpvar_60 = ((mirror_uv_2 - (tmpvar_58 * 0.1)) + (tmpvar_59 * 0.06));\\n  ret_4 = (((\\n    ((texture (sampler_blur2, tmpvar_60).xyz * scale2) + bias2)\\n  .x * \\n    clamp ((1.0 - texture (sampler_main, mirror_uv_2).z), 0.0, 1.0)\\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\\n  ret_4 = (mix (ret_4, (\\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\\n   * 1.4), vec3((\\n    (texture (sampler_main, tmpvar_60).x * 0.8)\\n   + \\n    ((texture (sampler_blur1, tmpvar_60).xyz * scale1) + bias1)\\n  .x))) * clamp ((1.0 - \\n    (((texture (sampler_blur1, mirror_uv_2).xyz * scale1) + bias1).y * 4.0)\\n  ), 0.0, 1.0));\\n  vec2 tmpvar_61;\\n  tmpvar_61.x = tmpvar_56.y;\\n  tmpvar_61.y = tmpvar_57.y;\\n  vec3 tmpvar_62;\\n  vec3 tmpvar_63;\\n  tmpvar_63 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\\n  tmpvar_62 = mix (mix (ret_4, vec3(1.0, 1.0, 1.0), (\\n    (tmpvar_63 * texture (sampler_main, clamp ((mirror_uv_2 - (tmpvar_61 * 2.0)), 0.0, 1.0)).z)\\n   * 1.2)), (tmpvar_63.zxy * 1.8), texture (sampler_main, mirror_uv_2).yyy);\\n  ret_4 = tmpvar_62;\\n  vec4 tmpvar_64;\\n  tmpvar_64.w = 1.0;\\n  tmpvar_64.xyz = tmpvar_62;\\n  ret = tmpvar_64.xyz;\\n }"}')},9450:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"invert":1,"wave_a":0.004,"wave_scale":0.295,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.228,"warpscale":4.141,"zoomexp":0.43865,"zoom":0.9901,"warp":0.1809,"wave_y":0.04,"ob_size":0.005,"ob_r":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.25,"mv_g":0.5,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.33,"rad":0.3434,"tex_ang":0.12566,"tex_zoom":0.70591,"g":1,"b":1,"g2":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"x":0.49,"rad":0.04557,"tex_zoom":0.73458,"g":1,"a":0,"g2":0,"border_g":0,"border_b":0,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.04208,"tex_zoom":0.73458,"g":1,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q2;\\ny = q6;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"vol = bass*8 + mid*5 + treb*3;\\nm = m*0.97 + vol*0.08;\\nmonitor = vol;\\nbeat = above(vol,res)*above(vol,m)*above(vol,16);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol + m*0.04) + (1-beat)*(res -  (0.1+diff*0.02)*60/fps);\\nres = max(0,res);\\nb = beat;\\ng = 1-beat;","point_eqs_eel":"tt3 = tt3*0.6 + (value1)*1;\\ntt2 = tt2*0.7 + tt3*0.2;\\ntt1 = tt1*0.8 + tt2*0.1;\\nd = d*0.9 + tt1*0.2;\\n\\ny = 0.5 + d*sample*(1-sample)*4;\\nx =  -0.05 + sample*1.1;"},{"baseVals":{"thick":1,"scaling":2.44415,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"","point_eqs_eel":"w = sample*asin(1)*4;\\nd = 0.04;\\nx = 0.5 + sin(w)*d;\\ny = 0.5 + cos(w)*d;"},{"baseVals":{"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0.4,"a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\nx = xx + sample*(1-sample)*(value1-value2)*(yy-yyy)*d;\\ny = yy - sample*(1-sample)*(value1-value2)*(xx-xxx)*d;"},{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;","point_eqs_eel":"t8 = -t8;\\ny = (1+t8)*0.01;\\nx = sample;"}],"init_eqs_eel":"x1 = 0.9;\\ny1 = 0.5;\\n\\nx2 = 0.5; y2 = 0.5;\\nx3 = 0.5; y3 = 0.5;\\nx4 = 0.5; y4 = 0.5;","frame_eqs_eel":"wave_a = 0;\\nzoom = 0.996;\\nwarp = 0.18 - (bass-treb)*0.15;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 ret_2;\\n  ret_2.yz = (texture (sampler_main, uv).xyz - 0.08).yz;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 4.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  uv1_1 = (uv + (tmpvar_3 * (tmpvar_6 * 0.4)));\\n  ret_2.x = texture (sampler_fc_main, uv1_1).x;\\n  ret_2.x = (ret_2.x - ((\\n    (((texture (sampler_blur1, uv1_1).xyz * scale1) + bias1).x - ret_2.x)\\n   * 0.05) + 0.004));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.x;\\n  tmpvar_7.y = tmpvar_5.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.z;\\n  tmpvar_8.y = tmpvar_5.z;\\n  ret_2.z = (max ((\\n    sqrt(dot (tmpvar_7, tmpvar_7))\\n   * 1.4), texture (sampler_main, (\\n    mix (uv_orig, uv, vec2(-1.0, -1.0))\\n   - \\n    ((tmpvar_8 * texsize.zw) * 4.0)\\n  )).z) - 0.004);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ret_2;\\n  ret = tmpvar_9.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (texsize.zw * 3.0);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_4.x;\\n  tmpvar_6.y = tmpvar_5.x;\\n  uv1_1 = (uv + ((tmpvar_6 * texsize.zw) * 32.0));\\n  ret_2 = (vec3(0.5, 0.0, 0.0) * texture (sampler_main, uv1_1).x);\\n  ret_2.x = (ret_2.x + ((tmpvar_4.x - tmpvar_5.x) * 0.4));\\n  ret_2 = (pow (ret_2.x, 0.8) * vec3(1.2, 0.15, 0.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.x;\\n  tmpvar_7.y = tmpvar_5.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_4.y;\\n  tmpvar_8.y = tmpvar_5.y;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = tmpvar_4.x;\\n  tmpvar_9.y = tmpvar_5.x;\\n  vec3 tmpvar_10;\\n  tmpvar_10 = mix (mix (mix (ret_2, vec3(1.0, 1.0, 1.0), vec3(\\n    (((texture (sampler_blur2, (uv - \\n      ((tmpvar_7 * texsize.zw) * 128.0)\\n    )).xyz * scale2) + bias2).z * 0.6)\\n  )), vec3(1.0, 1.1, 1.2), texture (sampler_main, uv1_1).zzz), vec3(0.2, 0.0, 0.1), vec3(((\\n    (texture (sampler_blur1, ((uv - (\\n      (tmpvar_8 * texsize.zw)\\n     * 16.0)) - ((tmpvar_9 * texsize.zw) * 32.0))).xyz * scale1)\\n   + bias1).y * 6.0)));\\n  ret_2 = tmpvar_10;\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = tmpvar_10;\\n  ret = tmpvar_11.xyz;\\n }"}')},7425:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.107,"zoomexp":0.33077,"zoom":0.9901,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":5.3898,"tex_ang":1.19381,"tex_zoom":0.18923,"g":0.97,"b":1,"a":0.94,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"rad":3.99882,"tex_zoom":0.25005,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.6,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":18,"textured":1,"num_inst":10,"x":0.463,"rad":1.60089,"tex_zoom":0.67634,"g":1,"b":1,"r2":0.7,"g2":0.8,"b2":0.8,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":16,"num_inst":353,"x":0.503,"rad":0.0376,"tex_zoom":1.11234,"g":1,"b":1,"g2":0,"border_a":0.06},"init_eqs_eel":"","frame_eqs_eel":"sample=instance/num_inst;\\nrad=.05+.04*sin(sample);\\n\\n/////  Knot\\n\\nq10=250*sample;\\nmy_x = -.22*cos(q10)-1.28*sin(q10)-.44*cos(3*q10)-.78*sin(3*q10);\\nmy_y= -.1*cos(2*q10)-.27*sin(2*q10)+.38*cos(4*q10)+.46*sin(4*q10);\\nmy_z=.7*cos(3*q10)-.4*sin(3*q10);\\n\\n\\n/////// rotations... by flexi\\n\\nd = .2; \\nzoom = 1;\\n\\nw3 = q1;\\nw2 = q2;\\nw1 = q3;\\n\\nx1 = cos(w1)*my_x + sin(w1)*my_y;\\ny1 = -sin(w1)*my_x + cos(w1)*my_y;\\nz1 = my_z;\\n\\nx2 = cos(w2)*x1 + sin(w2)*z1;\\nz2 = -sin(w2)*x1 + cos(w2)*z1;\\ny2 = y1;\\n\\ny3 = cos(w3)*y2 + sin(w3)*z2;\\nz3 = -sin(w3)*y2 + cos(w3)*z2;\\nx3 = x2;\\n\\n// perspective calculation\\n\\nl = sqrt(x3*x3 + y3*y3);\\nw = atan2(x3,y3);\\np = tan(asin(1) + atan2(d+z3,l));\\nd = sqrt(x3*x3 + y3*y3 + (z3+d)*(z3+d));\\n\\nmy_x = zoom*sin(w)*p;\\nmy_y = zoom*cos(w)*p;\\n\\np1 = .2*sin(sample*50);\\np2 = .2*sin(sample*80);\\n\\nx = .5+my_x*p1;\\ny = .5+my_y*p2;\\n\\nr = .4*sin(sample*80);\\nb = .8*sin(sample*66);\\ng = .6*sin(sample*120);"}],"waves":[{"baseVals":{"spectrum":1,"additive":1,"smoothing":0,"r":0.4,"g":0.4,"b":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"smoothing":0,"r":0,"g":0,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"r":0,"g":0,"b":0,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;","frame_eqs_eel":"vvb = if(below(vvb,0),0,vvb);\\nvvm = if(below(vvm,0),0,vvm);\\nvvt = if(below(vvt,0),0,vvt);\\nvvb = if(above(vvb,1),1,vvb);\\nvvm = if(above(vvm,1),1,vvm);\\nvvt = if(above(vvt,1),1,vvt);\\nvb = vb*0.85 + (1-vb)*pow(bass,2)*0.01;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.2;\\nvm = vm*0.85 + (1-vm)*pow(mid,2)*0.01;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.2;\\nvt = vt*0.85 + (1-vt)*pow(treb,2)*0.01;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.2;\\n\\nq1 = vvb;//0.5 + vb - vvb;\\nq2 = vvm;//0.5 + vm - vvm;\\nq3 = vvt;//0.5 + vt - vvt;\\n\\nv=0.2*(60/fps);\\nd = v*0.35;\\nbb = bb + vvb*v - d;\\nmm = mm + vvm*v - d;\\ntt = tt + vvt*v - d;\\nq6 = bb;\\nq5 = mm;\\nq4 = tt;\\nzoom = 0.995","pixel_eqs_eel":"//dx = -0.005;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = ((2.0 * (\\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\\n   + bias1))).x;\\n  tmpvar_3.y = ((2.0 * (\\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1)) - (2.0 * (\\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\\n   + bias1))).x;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = (-(tmpvar_3) * texsize.zw);\\n  ret_1.yz = vec2(0.0, 0.0);\\n  ret_1.x = (texture (sampler_fw_main, (uv - tmpvar_4)).x - ((\\n    (texture (sampler_blur3, uv).xyz * scale3)\\n   + bias3).x - (\\n    (texture (sampler_blur1, (uv + tmpvar_4)).xyz * scale1)\\n   + bias1).x));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv);\\n  ret_1 = (vec3((tmpvar_2.x * (1.0 - \\n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\\n  .x))) - (roam_sin.wzy * roam_cos.zxy));\\n  ret_1 = (ret_1 + ((\\n    (1.0 - tmpvar_2.x)\\n   * \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .x) * vec3(2.0, 1.2, 0.0)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},7687:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":2,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":1.331,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_y":0.04,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.04466,"tex_zoom":0.73458,"g":1,"b":1,"g2":0,"border_a":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":""},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.7,"y":0.3,"rad":0.6623,"ang":2.45044,"tex_zoom":0.74934,"g":0.1,"b":0.1,"r2":1,"g2":0.1,"b2":0.1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.43,"y":0.6,"rad":1.16781,"ang":5.96903,"tex_zoom":0.67165,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"xx = 0.5;\\nyy = 0.4;","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\n\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang =aang*4*asin(1);\\nx = xx;\\ny = yy;"},{"baseVals":{"sides":100,"additive":1,"thickoutline":1,"y":0.75,"rad":0.07059,"tex_zoom":0.73458,"g":0.5,"b":0.5,"g2":0,"border_a":0,"enabled":0},"init_eqs_eel":"vx = 0","frame_eqs_eel":"x = q1;\\ny = q5;"}],"waves":[{"baseVals":{"usedots":1,"scaling":2.44415,"smoothing":0,"a":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t1 = 0;\\nv = 0.01;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\nt3 = j2;\\nt4 = j3;\\n//t5 = 0;\\nk = k*0.99 + 10*mid/fps;\\nt5 = -k;\\n\\ncl1 = cl1 + 0.002;\\ncl1 = if(above(cl1,1),0,cl1);\\ncl1 = if(below(cl1,0),1,cl1);\\nt8 = cl1;\\n\\ncl2 = cl2 -1*q1;\\ncl2 = if(above(cl2,1),0,cl2);\\ncl2 = if(below(cl2,0),1,cl2);\\nt7 = cl2;\\n\\ncl3 = cl3 +0.001;\\ncl3 = if(above(cl3,1),0,cl3);\\ncl3 = if(below(cl3,0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"xx = ((sample*0983624912364)%10000000+100)/10000000;\\nyy = ((xx*1896575575)%10000000+100)/10000000;\\nzz = ((yy*58652340875)%10000000+100)/10000000;\\n\\n\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\n\\nzz = zz + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nxx = xx + t7 - if(above(xx+t7,1),1,0) - 0.5;\\nyy = yy + t6 - if(above(yy+t6,1),1,0) - 0.5;\\n\\nv = 0.001;\\n\\nw = 1;// (sample*sin(time*0.3)*0.01-1);\\nbb = d*d*0.5;\\nn= 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\ns3 = sin(sin(t4*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nc3 = cos(sin(t4*w+bb)*n);\\n\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\n\\nzoom = .5*(1/(z+0.5));\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;;\\ny = 0.5 + zoom*y1 + cos(time*0.16801)*0;\\n\\npi3 = 3.1415*2*0.3333;\\nt = z*2+t2*1;\\nc=3;\\n//r = sin(t)*c;\\n\\n//g = sin(t+pi3)*c;\\n\\n//b = sin(t-pi3)*c;\\n\\n\\nr = if(above(r,1),1,r);\\nr = if(below(r,0),0,r);\\ng = if(above(g,1),1,g);\\ng = if(below(g,0),0,g);\\nb = if(above(b,1),1,b);\\nb = if(below(b,0),0,b);\\n\\na = 0.4;"},{"baseVals":{"scaling":7.7518,"smoothing":0,"enabled":0},"init_eqs_eel":"t2 = 0;\\nt3 = 0;\\nt4 = 0;\\ncl = 0;","frame_eqs_eel":"t8 = 1;\\n\\nt1 = 0.5;\\nt2 = 0.9;","point_eqs_eel":"d = d*0.85 + (value1)*1;\\n\\nx = 0.5 + d*sample*(1-sample);\\ny = 0.9 - sample*0.8;"},{"baseVals":{"usedots":1,"thick":1,"scaling":5.92556,"smoothing":0,"g":0,"b":0,"a":0.66,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\n\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"},{"baseVals":{"thick":1,"scaling":5.92556,"smoothing":0,"r":0.65,"g":0.45,"enabled":0},"init_eqs_eel":"t2 = 0","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"sample = 1-sample;\\nxxx = xx;\\nyyy = yy;\\nxx = pow(sample,5)*t1 + 5*pow(sample,4)*(1-sample)*t1 + 10*pow(sample,3)*sqr(1-sample)*t2\\n+ 10*sqr(sample)*pow(1-sample,3)*t3 + 5*pow(1-sample,4)*sample*t4 + pow(1-sample,5)*t4;\\n\\nyy = pow(sample,5)*t5 + 5*pow(sample,4)*(1-sample)*t5 + 10*pow(sample,3)*sqr(1-sample)*t6\\n+ 10*sqr(sample)*pow(1-sample,3)*t7 + 5*pow(1-sample,4)*sample*t8 + pow(1-sample,5)*t8;\\n\\nd = 1/sqrt(sqr(xx-xxx)+sqr(yy-yyy));\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\nddd = sample*(1-sample)*sin(sample*200)*d*0.05;\\nx = xx + (yy-yyy)*ddd;\\ny = yy - (xx-xxx)*ddd;"}],"init_eqs_eel":"","frame_eqs_eel":"//mv_r = mv_r + 0.2*( 0.60*sin(0.980*time) + 0.40*sin(1.047*time) );\\nmv_g = mv_g + 0.2*( 0.60*sin(0.835*time) + 0.40*sin(1.081*time) );\\nmv_b = mv_b + 0.2*( 0.60*sin(0.814*time) + 0.40*sin(1.011*time) );\\nq1 = (cx*2-1) + 0.6*( 0.60*sin(0.374*time) + 0.40*sin(0.294*time) );\\nq2 = (cy*2-1) + 0.6*( 0.60*sin(0.393*time) + 0.40*sin(0.223*time) );\\nob_r = 1- 0.4*abs(q1);\\nob_g = 0.3*abs(q2);\\nob_b = 0.4*abs(q1);\\nwave_x = 1-abs(q2)-0.05;\\nwave_y = 1-abs(q1)-0.06;\\nwave_r = wave_r + 0.4*( 0.60*sin(0.514*time) + 0.40*sin(1.211*time) );\\nwave_b = wave_b + 0.4*( 0.60*sin(0.714*time) + 0.40*sin(q2) );\\nwave_g = wave_g + 0.4*( 0.60*sin(10*q1) + 0.40*sin(10*q2) );","pixel_eqs_eel":"du = (x*2-1) - q1;\\ndv = (y*2-1) - q2;\\ndist = sqrt(du*du+dv*dv);\\nang2 = atan2(du,dv) + time*0.15;\\nmult = 0.6*sin(dist*0.05);\\n//dx = mult*sin(ang2*2-1.5)*aspectx;\\n//dy = mult*cos(ang2*2-1.5)*aspecty;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (((texture (sampler_blur2, \\n    (uv + vec2(0.0009, 0.0))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0009, 0.0))\\n  ).xyz * scale2) + bias2)).y;\\n  tmpvar_2.y = (((texture (sampler_blur2, \\n    (uv + vec2(0.0, 0.0009))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv - vec2(0.0, 0.0009))\\n  ).xyz * scale2) + bias2)).y;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - (tmpvar_2 * 0.01));\\n  ret_1.y = texture (sampler_fc_main, (tmpvar_3 - floor(tmpvar_3))).y;\\n  ret_1.y = (ret_1.y + ((ret_1.y - \\n    ((texture (sampler_blur3, (tmpvar_3 - floor(tmpvar_3))).xyz * scale3) + bias3)\\n  .y) * 0.1));\\n  ret_1.y = (ret_1.y + (0.006 - (\\n    ((texture (sampler_blur3, (uv - floor(uv))).xyz * scale3) + bias3)\\n  .x * 5.0)));\\n  ret_1.y = ret_1.y;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos((uv.y * 270.0));\\n  tmpvar_3.y = sin((uv.x * 390.0));\\n  uv_1 = (uv + (0.01 * tmpvar_3));\\n  ret_2 = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  ret_2 = ((vec3(0.9, 0.2, 0.4) * ret_2.z) + (vec3(0.2, 0.4, 0.8) * ret_2.y));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }"}')},5768:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":0.907,"echo_orient":1,"wave_mode":6,"wave_thick":1,"wrap":0,"brighten":1,"wave_a":0,"wave_scale":0,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_a":1,"ib_size":0,"ib_r":0.1,"ib_g":0.1,"ib_b":0.1,"ib_a":0.2,"mv_x":51.2,"mv_y":33.6,"mv_l":5,"mv_r":0.4,"mv_g":0.3,"mv_b":0.5,"mv_a":0,"b3x":0.3},"shapes":[{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"num_inst":5,"rad":0.0101,"tex_zoom":0.27705,"g":0.8,"a":0,"g2":0,"border_r":0.2,"border_g":0.14,"border_b":0,"border_a":0.3},"init_eqs_eel":"","frame_eqs_eel":"rad = 0.6 + .02*instance;\\nborder_a = .02*max(0,sin(instance*.15));\\n\\nborder_a = 0.15 * q30 * (frame%2);"},{"baseVals":{"enabled":1,"sides":16,"num_inst":800,"x":0.8,"rad":0.55692,"tex_ang":1.50796,"tex_zoom":4.72143,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_g":0.7,"border_b":0.4,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"n = instance;\\n\\nx1 = gmegabuf(n*4);\\ny1 = gmegabuf(n*4+1);\\nz1 = gmegabuf(n*4+2)+.7;\\n\\ndist = sqrt (pow(x1-x1_,2)+pow(y1-y1_,2)+pow(z1-z1_,2));\\n\\nx = 0.5 + x1/z1;\\ny = 0.5 + y1/z1*q6;\\n\\n\\n//b = sin(dist*315)/2+.5; \\n//r = sin(dist*1427)/2+.5; \\n//g = sin(dist*619)/2+.5; \\n\\ndx = x1-x1_;\\ndy = y1-y1_;\\nang1 = atan2(dy,dx)*1 ;\\n\\nk1 = 3.14*instance/num_inst+time/13;\\nb = .6 + .4*sin(ang1+k1);\\nr = .6 + .4*sin(k1+.3*treb);\\ng = .6 + .4*sin(k1-.3*treb);\\n\\nrad = 6*dist/z1 + q24*(n==0);\\nrad *= (2+sin(ang1+time))/3;\\nrad = min(rad,.2);\\n\\nbri = sqrt(r*r + b*b + g*g);\\nr = r/bri;\\ng = g/bri;\\nb = b/bri;\\n\\n\\n//g = b; r=min(1,rad*16); additive = (rad*16 >= 0.75)*0;\\nb2 = b/6;\\ng2 = g/6;\\nr2 = r/6;\\n//r2=g2=b2=0;\\n\\nx1_ = x1; y1_ = y1; z1_= z1;\\na = min(1,1); a2 = min(.5,abs(.02/rad));\\n//additive = (n%16==0);"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"num_inst":4,"rad":0.57386,"tex_ang":1.5079,"tex_zoom":1.13805,"r":0.8,"g":1,"b":1,"a":0,"r2":0.8,"b2":1,"border_r":0.8,"border_g":0.4,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x=0.5; y = 0.5;\\ntex_zoom = q23*2+.4;\\ntex_ang = 3.1416/2;\\ntrig = q22;\\na = trig/4; a2 = trig/2; \\n"},{"baseVals":{"rad":3.95513,"tex_zoom":1.54929,"r":0,"g2":0,"border_g":0.6,"border_b":0.1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"scaling":60.80387,"smoothing":0.7,"a":0.05,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"scaling":67.1652,"smoothing":0.7,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"r":0.7,"g":0.7,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"p1 = 0; p2 = 0; x1 = 0 ; y1 = 0; t1 = 0;\\nshapes = 820;\\nfrm = (rand(10) >= 5);","frame_eqs_eel":"dec_m = pow (0.8, 30/fps);\\ndec_s = pow (0.9, 30/fps);\\nvol = (bass+mid+treb)/3; \\nvol_ = dec_m * vol_ + (1-dec_m)*vol;\\navg = avg*dec_s + vol*(1-dec_s);\\nis_beat = above(vol, 1*avg+2*peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * vol + (1-is_beat)*peak*dec_m;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index)) %8;\\n\\ntrig = is_beat*(index==0);\\nt1 = t1+trig; \\n\\nran1 = dec_m * ran1 + (1-dec_m)*cos(3.14/6*t1);\\nran2 = dec_m * ran2 + (1-dec_m)*sin(3.14/6*t1);\\nran3 = dec_m * ran3 + (1-dec_m)*sin(3.14/5*t1);\\nq1 = ran1; q2 = ran2; q3 = ran3;\\n\\nn = 0; \\np1 *= .9; p2 = 0; p3 = 0;\\nmx = 0; my = 0; mz = 0;\\nvol2 = min(vol,2);\\nvol2 = sqrt(vol);\\nk5 = 1 / (rand(10)+.2); \\nloop (shapes,\\n  sa = n/shapes;\\n  p1 =  p1+.15*sin(sa*(vol-1)*200+time*.1)*vol;   \\n  p2 = p2-p1*vol*k5;\\n  x1 += sin(p2)*sa*.006*vol;\\n  y1 += cos(p2)*sa*.006*vol;\\n  z1 += cos(p1*.03)*.005*vol;\\n\\nmx += x1; my += y1; mz += z1;\\nx1 = atan(x1/16)*16;\\ny1 = atan(y1/16)*16;\\nz1 = atan(z1/16)*16;\\n//z1 = 1;\\n  gmegabuf(n*4) =   x1;\\n  gmegabuf(n*4+1) = y1;\\n  gmegabuf(n*4+2) = z1;\\n  n +=1;\\n);\\n\\ntrel = trel + vol_/fps*.3;\\nq4 = min(max(0,4*sin(trel)),1)*-.2;\\nmzoom = if(trig,.1*vol2*(rand(10)>=3),mzoom);\\nmzoom_ = mzoom_*dec_m + (1-dec_m)*mzoom;\\nq4 = mzoom_;\\nq5 = vol >= vol_;\\n\\nmonitor = q5;\\nq6=aspecty; \\nq27 = index;\\nq28 = index2;\\nq24 = is_beat;\\nq30 = min(1,.05/mzoom);;\\n\\ntrig1 = is_beat*(index%2);\\npk = if (trig1,1,pk*dec_m);\\nran5 = if(trig1, rand(1), ran5);\\n\\nq22 = pk * pk * (frame%2);\\nq22 = pk==1;\\nq23 = ran5;","pixel_eqs_eel":"x1 = x-0.5*abs(q1); y1 = y-.5*abs(q2);\\nk1 = q3/2; \\nlen = sqrt(pow(x1,3)*k1-pow(y1,3)*(1-k1))-.05;\\nzoom = 1 + (len)*q4; \\ndx = 0.0 * q1* (y-.5);\\ndy = 0.0 * q2* (x-.5);\\n\\n\\nwarp = 0.0;\\n\\nrot = (x1-y1)*.01*q1;","warp":" shader_body { \\n  vec3 ret_1;\\n  ret_1 = (texture (sampler_main, uv).xyz * ((0.97 - \\n    (0.05 * dot (((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)))\\n  ) - (0.1 * q5)));\\n  ret_1 = (ret_1 - 0.004);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ret_1;\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (uv + (texsize.zw / 2.0));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((0.5 - uv_1) + 0.5);\\n  ret_2 = (max (texture (sampler_main, uv_1).xyz, texture (sampler_main, tmpvar_3).xyz) / 1.5);\\n  ret_2 = ((2.0 * max (\\n    ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3)\\n  , \\n    ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3)\\n  )) + (ret_2 * 3.0));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = max (ret_2, (texture (sampler_noise_lq, (uv_1 * 2.0)).x * (0.05 + \\n    (2.0 * (((texture (sampler_blur3, \\n      fract((((uv_1 - 0.5) * 0.8) + 0.5))\\n    ).xyz * scale3) + bias3) + ((texture (sampler_blur3, \\n      fract((((tmpvar_3 - 0.5) * 0.8) + 0.5))\\n    ).xyz * scale3) + bias3)))\\n  )));\\n  ret_2 = tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = tmpvar_4;\\n  ret = tmpvar_5.xyz;\\n }"}')},9006:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"textured":1,"y":0.66,"rad":0.34546,"tex_ang":1.50796,"tex_zoom":0.61299,"r":0.8,"g":0.8,"b":1,"a":0.08,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":16,"thickoutline":1,"num_inst":32,"y":0.67,"rad":0.02007,"tex_zoom":1.25486,"r":0.7,"a":0.5,"g2":0,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"//blood drooling\\n\\n// \\"random\\" values per instance\\nphase = sin(instance*3);\\nspeed = 2+cos(instance*12);\\nx0 = .5 + .06/q2*sin(instance*17);\\n\\ntrel = (time-phase)*speed/16;\\ntinst = trel - int(trel);\\n\\nx = x0;\\ny = .5-q3 - tinst;\\n\\na = min(sqrt(tinst)+.1,1);\\na = a*q17;"},{"baseVals":{"sides":3,"num_inst":6,"x":0.503,"y":0.37,"rad":0.06391,"ang":0.94248,"tex_zoom":9.18052,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst-.5;\\n\\nx = .5 + k1/8;\\n\\ny = .4 + (k1)*0;\\nang = 0;\\na = .1; a2 = .0;"},{"baseVals":{"enabled":1,"sides":9,"num_inst":2,"x":0.52,"y":0.51,"rad":0.018,"tex_zoom":1.91509,"r":0,"r2":0.5,"g2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + (instance-.5)*.04;\\nrad = .01+q22*.01;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"scaling":7.858,"smoothing":0.1,"g":0,"b":0,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"scaling":0.89152,"smoothing":0,"r":0.5,"g":0,"b":0.5,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"crumple = 0; \\nmwidth = .5;\\nmshape = 0;\\ndist = 4;\\ndist_ = 4;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_b = pow (0.9, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index +1;\\nq28 = index2;\\n\\nlight = light * dec_med + (1-dec_med)*q22;\\nlight = min(light,3);\\nq15 = light/3;\\n\\nph1 = below(q27,8);\\nph2 = above(q27,8)*below(q27,16);\\nph2a = above(q27,29); // open mouth\\nph3 = above(q27,30);\\n\\nblend = above(q27,30)+below(q27,2);\\nblend_ = dec_b*blend_ + (1-dec_b)*blend;\\nq19 = blend_;\\nq18 = 1-blend_;\\ndist = if(ph1,3,dist);\\ndist = if(ph2,max(dist -1/fps,1.8),dist);\\ndist = if(ph3,max(dist - 8/fps,-1),dist);\\ndist_ = dist_ * dec_med + dist*(1-dec_med);\\n\\nq11 = dist_;//q11 = 2;\\nopen = if(ph2a,open*dec_slow,4);\\nq16 = 4-open+q27/16+q15/2;\\nq17 = above(q27,16); //drool\\n\\ntrel1 = trel1 + 1/fps * (1 + q15*2*((q27%2)-.5));\\ntrel2 = trel2 + 1/fps * (1 + q15*2*((q27%4)-1.5));\\npx_ = sin(trel1)/5;\\npy_ = cos(trel2)/5-.1;\\n\\npx__ = dec_slow*px__ + px_ * (1-dec_slow);\\npy__ = dec_slow*py__ + py_ * (1-dec_slow);\\n\\nq5 = px_+.1*sin(time); \\nq6 = py_+.1*cos(2*time); //light pos\\n\\nq9 = px__*sqrt(dist_)/2;  //head pos\\nq10 = py__*sqrt(dist_)/2;\\n\\ntrig = equal(q27,31)*q24;\\ncrumple = if(trig,rand(20)-5,crumple);\\nmwidth =  if(trig,.2+rand(20)/15,mwidth);\\nmshape =  if(trig, rand(20)/40,mshape);\\n\\nq1 = crumple;;\\nq2 = mwidth;\\nq3 = .1; //y-pos mouth\\nq4 = mshape;\\n\\nmonitor = trig;","pixel_eqs_eel":"","warp":"float eyerad;\\nvec3 xlat_mutablenoise2;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv6;\\n shader_body { \\n  eyerad = (0.02 + (0.01 * q22));\\n  vec3 tmpvar_1;\\n  tmpvar_1 = vec3((dot ((\\n    (texture (sampler_blur1, fract(uv)).xyz * scale1)\\n   + bias1), vec3(0.32, 0.49, 0.29)) * q1));\\n  vec2 tmpvar_2;\\n  tmpvar_2.y = 0.0;\\n  tmpvar_2.x = texsize.z;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((tmpvar_2 * 8.0) * tmpvar_1.xy);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = ((tmpvar_4 * 8.0) * tmpvar_1.xy);\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = dot ((texture (sampler_main, (uv + tmpvar_3)) - texture (sampler_main, (uv - tmpvar_3))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_6.y = dot ((texture (sampler_main, (uv + tmpvar_5)) - texture (sampler_main, (uv - tmpvar_5))), vec4(0.32, 0.49, 0.29, 0.0));\\n  float tmpvar_7;\\n  tmpvar_7 = abs((uv.x - 0.5));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (uv.y - 0.5);\\n  vec2 x_9;\\n  x_9 = (tmpvar_8 - vec2(0.1, -0.1));\\n  float tmpvar_10;\\n  tmpvar_10 = pow (clamp ((eyerad / \\n    sqrt(dot (x_9, x_9))\\n  ), 0.0, 1.0), 4.0);\\n  float tmpvar_11;\\n  float tmpvar_12;\\n  tmpvar_12 = (tmpvar_8.y - q3);\\n  tmpvar_11 = pow (clamp ((0.05 / \\n    sqrt((((tmpvar_7 * tmpvar_7) * q2) + ((\\n      ((0.05 / (0.01 + (q4 * tmpvar_7))) * (1.0 + q15))\\n     / q16) * (tmpvar_12 * tmpvar_12))))\\n  ), 0.0, 1.0), 3.0);\\n  float tmpvar_13;\\n  tmpvar_13 = max (tmpvar_10, tmpvar_11);\\n  vec2 x_14;\\n  x_14 = (tmpvar_8 - vec2(0.1, -0.1));\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = 0.0;\\n  tmpvar_15.y = (q10 - -0.1);\\n  vec2 x_16;\\n  x_16 = ((tmpvar_8 - vec2(0.1, -0.1)) - (0.02 * tmpvar_15));\\n  xlat_mutableuv1 = (tmpvar_8 + (vec2((tmpvar_10 + \\n    (tmpvar_11 * q16)\\n  )) / 4.0));\\n  xlat_mutableuv6 = (xlat_mutableuv1 + (xlat_mutableuv1 * (2.0 * texture (sampler_noise_hq, \\n    ((xlat_mutableuv1 / 4.0) + (time / 400.0))\\n  ).xy)));\\n  xlat_mutablenoise2 = (vec3(((\\n    (abs((cos(\\n      (xlat_mutableuv6.y * 18.0)\\n    ) + sin(\\n      (xlat_mutableuv6.x * 18.0)\\n    ))) / 6.0)\\n   * \\n    (1.0 + abs((q1 / 16.0)))\\n  ) + 0.2)) * vec3(1.0, 0.9, 0.8));\\n  vec3 tmpvar_17;\\n  tmpvar_17 = mix (mix (xlat_mutablenoise2, vec3((\\n    (sin(((tmpvar_7 * 142.0) + (1.5 * \\n      sign((tmpvar_8.y - q3))\\n    ))) - ((q16 * 0.008) / abs((tmpvar_8.y - q3))))\\n   * tmpvar_11)), vec3(tmpvar_11)), ((\\n    ((clamp (cos(\\n      ((1.4 / eyerad) * sqrt(dot (x_14, x_14)))\\n    ), 0.0, 1.0) / 3.0) * roam_sin)\\n   * 2.0).xyz - float(\\n    (sqrt(dot (x_16, x_16)) < (0.01 * q15))\\n  )), vec3(tmpvar_10));\\n  xlat_mutablenoise2 = tmpvar_17;\\n  vec4 tmpvar_18;\\n  tmpvar_18.w = 1.0;\\n  tmpvar_18.xyz = (((\\n    (texture (sampler_main, fract((uv + (tmpvar_6 * 0.003)))).xyz + vec3(-((sqrt(\\n      dot (tmpvar_6, tmpvar_6)\\n    ) * 0.1))))\\n   * \\n    (0.99 - (tmpvar_13 / 2.0))\\n  ) - 0.01) + (tmpvar_17 * (0.045 + tmpvar_13)));\\n  ret = tmpvar_18.xyz;\\n }","comp":"vec2 hor;\\nvec2 ver;\\nvec3 xlat_mutablebeast;\\nvec2 xlat_mutableuv1;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  hor = (tmpvar_1 * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  ver = (tmpvar_2 * 4.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = q5;\\n  tmpvar_3.y = q6;\\n  vec3 ret_4;\\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\\n  vec2 tmpvar_5;\\n  vec2 uv_in_6;\\n  uv_in_6.y = xlat_mutableuv1.y;\\n  uv_in_6.x = (xlat_mutableuv1.x + q9);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = 0.0;\\n  tmpvar_7.y = (q10 + q3);\\n  float tmpvar_8;\\n  tmpvar_8 = (-1.0 / q11);\\n  float tmpvar_9;\\n  tmpvar_9 = (1.0/(q11));\\n  float tmpvar_10;\\n  tmpvar_10 = (4.0 * q9);\\n  tmpvar_5 = (((\\n    (uv_in_6 * q11)\\n   * \\n    ((0.4 + clamp (abs(uv_in_6.x), tmpvar_8, tmpvar_9)) + (tmpvar_10 * uv_in_6.x))\\n  ) - 0.5) + tmpvar_7);\\n  float x_11;\\n  x_11 = (xlat_mutableuv1.x + q9);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = q9;\\n  tmpvar_12.y = q10;\\n  vec2 x_13;\\n  x_13 = (xlat_mutableuv1 + tmpvar_12);\\n  vec3 tmpvar_14;\\n  tmpvar_14 = (texture (sampler_main, tmpvar_5) * clamp ((\\n    (0.2 / q11)\\n   / \\n    sqrt((x_11 * x_11))\\n  ), 0.0, 1.0)).xyz;\\n  vec2 uv_in_15;\\n  uv_in_15.y = xlat_mutableuv1.y;\\n  uv_in_15.x = (xlat_mutableuv1.x + (q9 * 0.96));\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = 0.0;\\n  tmpvar_16.y = ((q10 * 0.96) + q3);\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = dot ((texture (sampler_main, (tmpvar_5 + hor)) - texture (sampler_main, (tmpvar_5 - hor))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_17.y = dot ((texture (sampler_main, (tmpvar_5 + ver)) - texture (sampler_main, (tmpvar_5 - ver))), vec4(0.32, 0.49, 0.29, 0.0));\\n  vec2 x_18;\\n  x_18 = ((xlat_mutableuv1 + tmpvar_3) + (2.0 * tmpvar_17));\\n  float tmpvar_19;\\n  tmpvar_19 = (2.0 * clamp ((0.05 / \\n    sqrt(dot (x_18, x_18))\\n  ), 0.0, 1.0));\\n  vec2 x_20;\\n  x_20 = (xlat_mutableuv1 + tmpvar_3);\\n  float tmpvar_21;\\n  tmpvar_21 = clamp (((\\n    ((1.0 + q15) * 0.5)\\n   / q11) / sqrt(\\n    dot (x_20, x_20)\\n  )), 0.0, 1.0);\\n  xlat_mutablebeast = (tmpvar_14 * ((tmpvar_21 * tmpvar_21) * 0.7));\\n  xlat_mutablebeast = (xlat_mutablebeast + ((\\n    (dot (xlat_mutablebeast, vec3(0.32, 0.49, 0.29)) * tmpvar_19)\\n   * tmpvar_19) * (tmpvar_21 * tmpvar_21)));\\n  ret_4 = (xlat_mutablebeast + ((\\n    ((texture (sampler_main, ((\\n      (((uv_in_15 * 1.1) * q11) * ((0.4 + clamp (\\n        abs(uv_in_15.x)\\n      , tmpvar_8, tmpvar_9)) + (tmpvar_10 * uv_in_15.x)))\\n     - 0.5) + tmpvar_16)) * clamp ((1.0 - \\n      (8.0 * dot (tmpvar_14, vec3(0.32, 0.49, 0.29)))\\n    ), 0.0, 1.0)) * clamp (((0.05 / q11) / sqrt(\\n      dot (x_13, x_13)\\n    )), 0.0, 1.0))\\n   / 2.0).xyz * tmpvar_21));\\n  vec3 tmpvar_22;\\n  tmpvar_22.yz = vec2(0.0, 0.0);\\n  tmpvar_22.x = q22;\\n  vec3 tmpvar_23;\\n  tmpvar_23 = mix (clamp ((tmpvar_21 * tmpvar_22), 0.0, 1.0), ret_4, vec3(q18));\\n  ret_4 = tmpvar_23;\\n  vec4 tmpvar_24;\\n  tmpvar_24.w = 1.0;\\n  tmpvar_24.xyz = tmpvar_23;\\n  ret = tmpvar_24.xyz;\\n }"}')},9442:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.002217,"wave_scale":0.092461,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":31.999998,"mv_y":24.000004,"mv_l":5,"mv_r":0.2999,"mv_g":0.4999,"mv_b":0.3999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"rad":0.084012,"tex_ang":0.5026,"tex_zoom":1.125188,"r":0.8,"b":0.8,"a":0.2,"g2":0,"a2":1,"border_r":0.7,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + .2*sin(time/12);\\ny = .5 + .2*cos(time/17);\\n\\nr = .5 + .2*sin(time/31);\\ng = .5 + .2*sin(time/41);\\nb = .5 + .2*sin(time/17);\\nx =.5; y = .5;\\nrad = .05;\\na = .2; a2 = 0;"},{"baseVals":{"sides":63,"rad":0.022167,"tex_zoom":0.499805,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.07,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = 0.5;\\ny = 0.5;\\na = 0.03;\\na2 = 0.0;\\nrad = bass_att/20;"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"textured":1,"x":0.59,"y":0,"rad":1.215236,"ang":0.062832,"tex_ang":0.879646,"tex_zoom":0.514935,"r":0.6,"g":0.5,"b":0.7,"a":0.1,"r2":0.7,"g2":0.5,"b2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/78);\\ny = .5+.3*sin(time/78);\\n\\ntex_zoom = .2 / (sin(time/31)+1.1)\\n\\n"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"textured":1,"x":0.76,"y":0.75,"rad":0.686364,"ang":0.439823,"tex_ang":0.502655,"tex_zoom":0.6159,"r":0.7,"g":0.7,"b":0.7,"a":0.15,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/59);\\ny = .5+.3 *sin(time/59);"}],"waves":[{"baseVals":{"samples":132,"sep":49,"usedots":1,"scaling":0.067077,"smoothing":0.82,"g":0.2,"b":0,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (100*sample+time*2)%2;\\nk2 = (100*sample+time*5)%2;\\n\\nx = .5 + .5*sin(sample*76+time/337);\\ny = .5 + .5*sin(sample*126);\\n\\n\\nr = .4;\\ng = .8;\\nb = 1*k2;\\n\\na = .3*k1;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"p1 = 2000; p2 = 200; p3=50;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott =  rott +  .002*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovex = movex*dec_slow + .1*q1*30/fps;\\nq9 = movex;\\n\\nmovez = movez + .01*30/fps*(p3+3);\\nq10 = movez;\\nq30 = .3* (sin(time/45) + 1.5);\\n\\nmv_x = 30;\\nmv_y = 20;\\nmv_a = .08*pow(30/fps,1) * (1+q22);\\nmv_l = 0;\\n\\nq32 = pow(0.98, 30/fps); //fade","pixel_eqs_eel":"zoom = 1;\\nwarp = .0 * (1-rad);\\nwarp = 0.05;","warp":"vec3 xlat_mutablemus;\\n shader_body { \\n  vec3 crisp_1;\\n  float tmpvar_2;\\n  tmpvar_2 = (dot (texture (sampler_noise_hq, (\\n    (q30 * uv)\\n   + \\n    (0.001 * time)\\n  )), vec4(0.32, 0.49, 0.29, 0.0)) * 3.14);\\n  mat2 tmpvar_3;\\n  tmpvar_3[uint(0)].x = cos(tmpvar_2);\\n  tmpvar_3[uint(0)].y = sin(tmpvar_2);\\n  tmpvar_3[1u].x = -(sin(tmpvar_2));\\n  tmpvar_3[1u].y = cos(tmpvar_2);\\n  xlat_mutablemus = (abs(vec3((0.2 / \\n    (sqrt(((\\n      (uv - 0.5)\\n     * aspect.xy) * tmpvar_3).y) + 0.2)\\n  ))) * vec3(1.0, 0.96, 0.9));\\n  xlat_mutablemus = (xlat_mutablemus * (vec3(1.0, 0.96, 0.9) + (0.1 * \\n    (texture (sampler_noise_lq, uv) - 0.5)\\n  .xyz)));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))) - texture (sampler_main, (uv - vec2(0.004, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))) - texture (sampler_main, (uv - vec2(0.0, 0.004)))), vec4(0.32, 0.49, 0.29, 0.0));\\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.5 * texture (sampler_main, uv)).xyz);\\n  crisp_1 = (crisp_1 * 0.667);\\n  crisp_1 = (crisp_1 + (vec3(0.018, 0.018, 0.018) - (\\n    sqrt(dot (tmpvar_5, tmpvar_5))\\n   * tmpvar_4)));\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = (((\\n    (crisp_1 - (tmpvar_4 * 0.03))\\n   + \\n    (0.04 * xlat_mutablemus)\\n  ) * 0.99) - 0.04);\\n  ret = tmpvar_6.xyz;\\n }","comp":"float xlat_mutabledist;\\nfloat xlat_mutabledist2;\\nfloat xlat_mutableinten;\\nfloat xlat_mutablem;\\nfloat xlat_mutablemask;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qa.xy;\\n  tmpvar_2[1u] = _qa.zw;\\n  uv_1 = (uv_1 * tmpvar_2);\\n  int tmpvar_3;\\n  tmpvar_3 = int(q10);\\n  xlat_mutablem = (1.0 - float(tmpvar_3));\\n  float tmpvar_4;\\n  tmpvar_4 = -(q10);\\n  xlat_mutabledist = (1.0 - fract((0.25 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  xlat_mutableret1 = (texture (sampler_main, xlat_mutableuv2).xyz * xlat_mutableinten);\\n  xlat_mutablem = (2.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((0.5 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_5.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_5.xyz * xlat_mutableinten));\\n  xlat_mutablem = (3.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((0.75 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_6.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_6.xyz * xlat_mutableinten));\\n  xlat_mutablem = (4.0 - float(tmpvar_3));\\n  xlat_mutabledist = (1.0 - fract((1.0 - \\n    (fract(tmpvar_4) / 4.0)\\n  )));\\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\\n    (xlat_mutablem + 1.0)\\n  , 2.0)))));\\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\\n  xlat_mutableuv2 = (((\\n    (4.0 * xlat_mutableuv2)\\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_main, xlat_mutableuv2);\\n  xlat_mutablemask = (1.0 - ((0.9 * \\n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\\n  ) * clamp (\\n    (64.0 * tmpvar_7.xyz)\\n  , 0.0, 1.0))).x;\\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_7.xyz * xlat_mutableinten));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = (1.8 * xlat_mutableret1);\\n  ret = tmpvar_8.xyz;\\n }"}')},2714:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.005,"wave_scale":0.527,"wave_smoothing":0.09,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"wave_y":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":14,"num_inst":32,"rad":0.03632,"tex_ang":1.00531,"tex_zoom":1.53117,"b":1,"a":0,"g2":0,"a2":0.6,"border_b":0,"border_a":0.3,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\\nn = instance*4+2000;\\nx = gmegabuf(n);\\ny = gmegabuf(n+1);\\nz = gmegabuf(n+2);\\n\\nrad = .02/z;\\na = 0; a2 = 0;"},{"baseVals":{"enabled":1,"sides":6,"num_inst":128,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g":1,"b":0.6,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"k1 = instance/num_inst;\\n//n = instance*4+1000;\\n\\nn = gmegabuf(reg07+instance)+1000;\\n\\nx = k1;\\nx = x - int(x);\\nrad0 = 4/num_inst*q32;\\ny = 1-rad0/2;\\nrad = rad0;\\n\\na =  1;\\na2 = .8;\\n\\nk2 = gmegabuf(reg07+instance);\\n\\nr = k2/128;\\nb = 1-r;\\ng = pow(r-.5,2)*4;\\nang = q10;\\ntrel = q12*3;\\nm1 = (trel);\\nm2 = (trel*3);\\nm3 = (trel*7);\\n\\nr = sin(m1)*r + cos(m1)*g;\\ng = sin(m2)*g + cos(m2)*b;\\nb = sin(m3)*b + cos(m3)*r;"},{"baseVals":{"enabled":1,"sides":6,"textured":1,"num_inst":2,"x":0.6,"y":0.9,"rad":0.05785,"tex_zoom":0.40556,"r":0,"g2":0,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"rad0 = 4/128*q32;\\ny = 1-rad0/2 + .0*y;\\nrad = rad0 * (1+0*gmegabuf(n));\\nang = q10;\\nx = (q10-q12+1)/2;\\n\\nk1 = max(3,80*abs(q12));\\n\\ntrel = frame;\\nx1 =  (trel%k1)/k1;\\nx2 =  1-(trel%k1)/k1;\\nif (instance%2==0, x = x1, x = x2);\\n\\na = .8 * (sin(q12*73) >= 0); a2 = a;"},{"baseVals":{"sides":14,"additive":1,"thickoutline":1,"textured":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_zoom":0.34933,"g":0.6,"g2":0,"b2":1,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":128,"sep":128,"spectrum":1,"additive":1,"scaling":2.15542,"smoothing":0,"r":0,"a":0.7},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x = sample;\\n\\nn = int(sample*128);\\ngmegabuf(n) = gmegabuf(n)*.5 + .5* (value1+value2) * (1+0*(rand(100)-50));\\n\\na = 0;\\ny = gmegabuf (n)*.15+.2;"},{"baseVals":{"samples":128,"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0,"b":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":32,"usedots":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"index = 0;\\nloop (100000,\\n  megabuf(index) = 0;\\n  gmegabuf(index) = 0;\\n  index = index + 1;\\n);\\n\\nflen = 128; shapes = 32; sortbase = 7000;\\n\\nreg07 = sortbase;\\nn = 0;\\nloop (flen,\\n  gmegabuf(sortbase+n) = n;\\n  n = n+1; \\n);","frame_eqs_eel":"dec_m = pow (0.85, 30/fps);\\ndec_s = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_s + beat*(1-dec_s);\\nis_beat = above(beat, 1.5*avg+2*peak) * above (time, t0+.3);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_m;\\nindex = (index + is_beat) %32;\\nindex2 = (index2 + is_beat*bnot(index)) %8;\\nq27 = index;\\nq24 = is_beat;\\n\\ntrig = is_beat;\\nvol1 = if(trig,.5+sqrt(peak)/4,vol1);\\nran1 = if (trig, (rand(100)/50-1)*vol1, ran1);\\nran2 = if (trig, (rand(100)/50-1)*vol1, ran2);\\n\\ntrig = is_beat * (index%8==0);\\nran3 = if (trig, (rand(100)/50-1)*vol1, ran3);\\n\\nran1_ = ran1_*dec_m + (1-dec_m) * ran1;\\nran2_ = ran2_*dec_m + (1-dec_m) * ran2;\\nran3_ = ran3_*dec_m + (1-dec_m) * ran3;\\ndec_m = pow (0.7, 30/fps);\\n\\nq10 = ran1_;\\nq11 = ran2_;\\nq12 = ran3_;\\n\\nreg10 = 5000; reg11 = 40;\\ngmegabuf(reg10 + frame%reg11) = ran1_;\\ngmegabuf(reg10 + reg11 + frame%reg11) = ran2_;\\ngmegabuf(reg10 + 2*reg11 + frame%reg11) = ran3_;\\n\\n\\n\\n//normalize spectrum\\nn = 0; vol = 0.1; mean = 0;\\nloop (flen,\\n  value = gmegabuf(n) * (1+1/(n+.5));\\n  dec = if(megabuf(n)<=value,0.2,pow(.95,30/fps));\\n  megabuf(n) = megabuf(n)*dec + (1-dec)*value;\\n  vol = vol + pow(megabuf(n),2);\\n  n= n+1;\\n);\\nvol = sqrt(vol);\\nvol_ = dec_m*vol_ + (1-dec_m)*vol;\\n\\n// post smoothing\\nn= 0;\\nloop (flen,\\n  dec = if (megabuf(n)/vol > gmegabuf(n+1000),.5,.8);\\n  gmegabuf(n+1000) = gmegabuf(n+1000)*dec+ (1-dec)*megabuf(n)/vol_;\\n  n = n+1;\\n);\\n\\n\\n//Lookup-Tabele sortieren \\nn0 = 1000; n=0;\\nloop (flen-1,\\n  q1 = n;  q2 = n+1;\\n  q3 = gmegabuf(n0+gmegabuf(sortbase+q1));  \\n  q4 = gmegabuf(n0+gmegabuf(sortbase+q2));\\n  if (q3<=q4, exec3 (q5 = gmegabuf(sortbase+q1),\\n                     gmegabuf(sortbase+q1) = gmegabuf(sortbase+q2), \\n                     gmegabuf(sortbase+q2) = q5), 0);\\n\\n  n = n+1;\\n);\\n\\n\\nmonitor = gmegabuf(sortbase+1);\\nmonitor = vol1;\\n\\n\\n\\nq32 = aspecty;","pixel_eqs_eel":"dd = 45/fps;\\nzoom =  1+  .06*dd*y * gmegabuf(reg10 + (frame+y*reg11)%reg11) ;\\nrot =      0.05 * dd* gmegabuf(reg10 + reg11   + (frame+y*reg11)%reg11); \\n\\ndx = 0;\\ndy = .008*dd; ;\\nwarp = 0;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_fc_main, uv) - (0.003921569 * float(\\n    (texture (sampler_noise_lq, ((uv * 2.0) + rand_frame.xy)).x > 0.8)\\n  ))).xyz;\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = (((uv - 0.5) * 0.96) + 0.5);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, uv_1).xyz * 4.0) + ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2));\\n  ret = tmpvar_2.xyz;\\n }"}')},4431:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":64,"thickoutline":1,"num_inst":24,"rad":0.02988,"tex_zoom":1.35028,"r":0,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_b":0,"border_a":0},"init_eqs_eel":"t1 = rand(6);","frame_eqs_eel":"\\nx = .5 + .1*sin(instance*17+t1);\\ny = .55 + .06*sin(instance*12);"},{"baseVals":{"enabled":1,"sides":3,"num_inst":251,"x":0.6,"rad":0.02217,"tex_zoom":60.80383,"g":1,"b":1,"a":0.9,"g2":0,"border_g":0.59,"border_b":0,"border_a":1},"init_eqs_eel":"t1 = rand(6);\\nt2 = 11 + rand(100)/3;","frame_eqs_eel":"speed = .02;\\ntrel = int(time*speed)- time*speed+1;\\nk1 = instance/num_inst;\\nk1 = k1 - int(k1);\\ndist = 1.2-k1; //################# soll 1 sein\\n//dist = dist - int(dist);\\n\\n\\nfov = .1;\\narg = dist-time*.02;\\nposx = fov/dist * (sin(arg*13) + .1*sin(dist*332));\\nposy = fov/dist * (cos(arg*t2+t1)+ .1*sin(dist*332));\\n\\nx = .5 + posx;\\ny = .5 + posy;\\n\\nang = time * sin(k1*44)*12;\\na = 1; border_a = min(radi*4,1)*0; a2 = 1;\\nrad = .01/dist;\\n\\n"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"samples":128,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"trel = time/4;\\ndx = cos(trel);\\ndy = sin(trel);\\ndx = 1; dy = 0;\\nx = .5 + (sample-.5)*dx ;\\ny = .5 + (sample-.5)*dy;\\n\\nr = .5 + .5 * sin(time/7);\\ng = .5 + .5 * sin(time/11);\\nb = .5 + .5 * sin(time/5);"},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"mul = sin(time/17)*51;\\n\\nx = q5/3+.5+ .15*sin(sample*mul);\\ny = q6/3+.5 + .15*sin(sample*32+time/13);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"vol = 0; p1 = 0;\\nvx = .2; vy = -0.1;\\nkx = 0; ky = 0;","frame_eqs_eel":"","pixel_eqs_eel":"","warp":" shader_body { \\n  float k1_1;\\n  float ky_2;\\n  vec2 uv3_3;\\n  uv3_3 = (100.0 * ((uv - vec2(0.5, 0.5)) * aspect.xy));\\n  ky_2 = clamp ((0.25 - (uv3_3.y / 40.0)), 0.0, 1.0);\\n  float tmpvar_4;\\n  tmpvar_4 = (uv3_3.x * 2.0);\\n  k1_1 = (tmpvar_4 - (sign(tmpvar_4) * 16.0));\\n  k1_1 = (k1_1 + ((\\n    -((102.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    -((102.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    -((102.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    -((102.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (k1_1, -1.6, 1.6);\\n  k1_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((abs(\\n    cos(tmpvar_5)\\n  ) * vec3(0.8, 0.8, 0.2)) - 0.1);\\n  ret = tmpvar_6.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1.y = 0.0;\\n  tmpvar_1.x = texsize.z;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = 0.0;\\n  tmpvar_2.y = texsize.w;\\n  vec2 uv_3;\\n  float inten_4;\\n  float dist_5;\\n  vec2 uv1_6;\\n  vec3 ret_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_9;\\n  tmpvar_9 = (time / 18.0);\\n  dist_5 = (1.0 - fract((0.25 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.51, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (inten_4 * ((2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29))\\n  ) - (2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29))\\n  )));\\n  xlat_mutabledz.y = (inten_4 * ((2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29))\\n  ) - (2.0 * \\n    dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29))\\n  )));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((0.5 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.49, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((0.75 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.51, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  dist_5 = (1.0 - fract((1.0 + tmpvar_9)));\\n  inten_4 = ((sqrt(dist_5) * (1.0 - dist_5)) * 4.0);\\n  uv_3 = (tmpvar_8 * aspect.yx);\\n  xlat_mutableuv3 = (vec2(0.49, 0.55) + (uv_3 * dist_5));\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_1)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (inten_4 * (\\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 + tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n   - \\n    (2.0 * dot (texture (sampler_main, (xlat_mutableuv3 - tmpvar_2)).xyz, vec3(0.32, 0.49, 0.29)))\\n  )));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, xlat_mutableuv3).xyz * inten_4));\\n  xlat_mutabledz = (xlat_mutabledz * (0.5 + rand_preset.z));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = (2.0 * (rand_preset.xy - 0.5));\\n  uv1_6 = (4.0 * tmpvar_8);\\n  vec2 tmpvar_11;\\n  tmpvar_11 = sin(((uv1_6 + xlat_mutabledz) + tmpvar_10));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = sin(((uv1_6 + \\n    (xlat_mutabledz * 1.4)\\n  ) + tmpvar_10));\\n  vec2 tmpvar_13;\\n  tmpvar_13 = sin(((uv1_6 + \\n    (xlat_mutabledz * 1.8)\\n  ) + tmpvar_10));\\n  vec3 tmpvar_14;\\n  tmpvar_14.x = inversesqrt(dot (tmpvar_11, tmpvar_11));\\n  tmpvar_14.y = inversesqrt(dot (tmpvar_12, tmpvar_12));\\n  tmpvar_14.z = inversesqrt(dot (tmpvar_13, tmpvar_13));\\n  ret_7 = (((\\n    (tmpvar_14 * ((vec3(0.01, 0.01, 0.01) * (1.0 + \\n      (rand_preset.xyz / 2.0)\\n    )) * (0.5 + rand_preset.y)))\\n   * \\n    ((((rand_preset.x - 0.5) * 4.0) * xlat_mutableret1) + (8.0 * (1.0 + rand_preset)).xyz)\\n  ) - (xlat_mutableret1.x * 0.5)) + ((xlat_mutableret1.y + xlat_mutableret1.z) / 3.0));\\n  ret_7 = (ret_7 * (1.0 + ret_7));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_7;\\n  ret = tmpvar_15.xyz;\\n }"}')},7122:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":2.232543,"wave_smoothing":0.81,"wave_mystery":0.28,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":0.01,"warpscale":0.01,"zoom":1.001832,"dx":1,"warp":0.01,"sx":0.999997,"wave_r":0,"wave_g":0,"wave_b":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":18,"additive":1,"x":0.57,"rad":0.060499,"tex_zoom":3.264423,"r":0,"a":0,"r2":0.1,"g2":0.1,"b2":0.2,"a2":0.7,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"textured":1,"rad":0.476928,"ang":1.130974,"tex_zoom":1.02315,"g":1,"b":1,"a":0.97,"r2":1,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.81,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"shift = 0;\\nfade = 0.5;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = index+1;\\nq28 = index2+1;\\nq29 = index3*4+1;\\nq30 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovex = movex +.002*30/fps;\\nq30 = movex;\\n\\nfade = dec_med * fade + (1-dec_med);\\nq32 = fade;\\n\\nzoom = .98;\\ndx = .04*q2 * bnot(index2);\\ndy = .04*q1 * bnot(index2);\\nrot = .02;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  vec3 ret_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (sqrt(dot (tmpvar_4, tmpvar_4)) + (rand_frame * 116.0)).x;\\n  uv_1 = (uv + ((\\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  .xy * vec2(0.0, 1.0)) + (0.01 * \\n    clamp (((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_4)), vec2(-18.0, -18.0), vec2(18.0, 18.0))\\n  )));\\n  uv6_2 = (0.4 * sin((\\n    ((tmpvar_4 * 2.0) * q27)\\n   + rand_frame.xy)));\\n  ret_3 = ((q24 * (\\n    (((texture (sampler_main, (0.95 + uv_1)).xyz - (\\n      ((texture (sampler_blur2, fract(uv_1)).xyz * scale2) + bias2)\\n     * 0.03)) + (0.2 * (vec3(\\n      (0.051 / sqrt(dot (uv6_2, uv6_2)))\\n    ) * roam_sin.xyz))) * 0.95)\\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\\n  ret_3 = (ret_3 * q32);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_3;\\n  ret = tmpvar_6.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutablemus;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  float inten_1;\\n  float dist_2;\\n  vec2 uv2_3;\\n  vec3 ret_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5.y = 0.0;\\n  tmpvar_5.x = texsize.z;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = 0.0;\\n  tmpvar_6.y = texsize.w;\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_5)).xyz - texture (sampler_main, (uv - tmpvar_5)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_6)).xyz - texture (sampler_main, (uv - tmpvar_6)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutablemus = (texture (sampler_main, (uv + (0.03 * xlat_mutabledz))).xyz + 0.02);\\n  uv2_3 = (uv - 0.5);\\n  float tmpvar_7;\\n  tmpvar_7 = (time / 4.0);\\n  dist_2 = (1.0 - fract(tmpvar_7));\\n  float tmpvar_8;\\n  tmpvar_8 = (1.0 - rad);\\n  inten_1 = (((\\n    sqrt(dist_2)\\n   * \\n    (1.0 - (dist_2 * dist_2))\\n  ) * 8.0) * tmpvar_8);\\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.6);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = fract(xlat_mutableuv3);\\n  xlat_mutabledz.x = (texture (sampler_main, (tmpvar_9 + tmpvar_5)).xyz - texture (sampler_main, (tmpvar_9 - tmpvar_5)).xyz).x;\\n  xlat_mutabledz.y = (texture (sampler_main, (tmpvar_9 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_9 - tmpvar_6)).xyz).x;\\n  xlat_mutableneu = ((dist_2 * texture (sampler_main, tmpvar_9).xyz) + ((1.0 - dist_2) * dot (\\n    ((texture (sampler_blur2, tmpvar_9).xyz * scale2) + bias2)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_1));\\n  dist_2 = (1.0 - fract((0.3333333 + tmpvar_7)));\\n  inten_1 = (((\\n    sqrt(dist_2)\\n   * \\n    (1.0 - (dist_2 * dist_2))\\n  ) * 8.0) * tmpvar_8);\\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.6);\\n  vec2 tmpvar_10;\\n  tmpvar_10 = fract(xlat_mutableuv3);\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (texture (sampler_main, (tmpvar_10 + tmpvar_5)).xyz - texture (sampler_main, (tmpvar_10 - tmpvar_5)).xyz).x);\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (texture (sampler_main, (tmpvar_10 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_10 - tmpvar_6)).xyz).x);\\n  xlat_mutableneu = ((dist_2 * texture (sampler_main, tmpvar_10).xyz) + ((1.0 - dist_2) * dot (\\n    ((texture (sampler_blur2, tmpvar_10).xyz * scale2) + bias2)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_1));\\n  dist_2 = (1.0 - fract((0.6666667 + tmpvar_7)));\\n  inten_1 = (((\\n    sqrt(dist_2)\\n   * \\n    (1.0 - (dist_2 * dist_2))\\n  ) * 8.0) * tmpvar_8);\\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.6);\\n  vec2 tmpvar_11;\\n  tmpvar_11 = fract(xlat_mutableuv3);\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (texture (sampler_main, (tmpvar_11 + tmpvar_5)).xyz - texture (sampler_main, (tmpvar_11 - tmpvar_5)).xyz).x);\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (texture (sampler_main, (tmpvar_11 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_11 - tmpvar_6)).xyz).x);\\n  xlat_mutableneu = ((dist_2 * texture (sampler_main, tmpvar_11).xyz) + ((1.0 - dist_2) * dot (\\n    ((texture (sampler_blur2, tmpvar_11).xyz * scale2) + bias2)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_1));\\n  dist_2 = (1.0 - fract((1.0 + tmpvar_7)));\\n  inten_1 = (((\\n    sqrt(dist_2)\\n   * \\n    (1.0 - (dist_2 * dist_2))\\n  ) * 8.0) * tmpvar_8);\\n  xlat_mutableuv3 = (((2.0 * uv2_3) * dist_2) + 0.6);\\n  vec2 tmpvar_12;\\n  tmpvar_12 = fract(xlat_mutableuv3);\\n  xlat_mutableuv3 = tmpvar_12;\\n  xlat_mutabledz.x = (xlat_mutabledz.x + (texture (sampler_main, (tmpvar_12 + tmpvar_5)).xyz - texture (sampler_main, (tmpvar_12 - tmpvar_5)).xyz).x);\\n  xlat_mutabledz.y = (xlat_mutabledz.y + (texture (sampler_main, (tmpvar_12 + tmpvar_6)).xyz - texture (sampler_main, (tmpvar_12 - tmpvar_6)).xyz).x);\\n  xlat_mutableneu = ((dist_2 * texture (sampler_main, tmpvar_12).xyz) + ((1.0 - dist_2) * dot (\\n    ((texture (sampler_blur2, tmpvar_12).xyz * scale2) + bias2)\\n  , vec3(0.32, 0.49, 0.29))));\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_1));\\n  ret_4 = ((xlat_mutableret1 * (1.0 - \\n    dot (xlat_mutablemus, vec3(0.32, 0.49, 0.29))\\n  )) + ((\\n    (4.0 * xlat_mutablemus)\\n   * \\n    (1.0 + (3.0 * xlat_mutableret1))\\n  ) * tmpvar_8));\\n  ret_4 = (ret_4 * q32);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = ret_4;\\n  ret = tmpvar_13.xyz;\\n }"}')},159:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":1.741,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.99,"ob_size":0,"ob_r":1,"ob_b":1,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"x":0.71,"rad":0.65721,"tex_zoom":0.39173,"g":1,"b":1,"a":0.8,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.26458,"tex_ang":1.4451,"tex_zoom":1.49331,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":44,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"r2":1,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(10))/10;\\ny = int(rand(10))/10;\\n\\nr = 0;\\ng = 0;\\nb = 0;\\n\\nr2= .5;\\nb2 = 0;\\ng2 = 0;\\na = 0; a2 = 1;\\nrad = bass_att/30;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.5,"a":0.9,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\\n\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\n\\na = bass + mid + treb ;\\na = a/10 * sqrt(xi*xi+yi*yi);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"x0 = .5 + (-1) * q1/1;\\ny0 = .0 - (-1)* .5;\\n\\n//x0 = .5; y0 = .5;\\n\\nk1 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = k1%2;\\nf1 = int(rand(100))/200-.25;\\nf2 = int(rand(100))/200-.25;\\n\\nx = x0 + k1* f1;;\\ny = y0 + k1* f2;\\na = k2%2 /4;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = int(rand(10001))*.0001;\\nrb = rb + int(rand(10001))*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"p3 = 0;\\nt_rel = 0;","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att+1;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.14159265359/2;\\n\\n\\nq27 = 8-index;\\nq28 = index2+1;\\n\\n//q28 = sin(time)+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nt_rel = t_rel + .02*30/fps*q1*q1;\\n\\nq5 = cos(t_rel);\\nq6 = sin(t_rel);\\nq7 = -q6;\\nq8 = q5;\\n\\nmovez = movez + .02*30/fps / ((1.4-q5)*(1.4-q5));\\nq30 = movez;\\n\\n\\nzoom = 1.0;","pixel_eqs_eel":"dx = 0*q28/8;","warp":"vec3 xlat_mutablenoise;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\n shader_body { \\n  float z_1;\\n  mat2 tmpvar_2;\\n  tmpvar_2[uint(0)] = _qb.xy;\\n  tmpvar_2[1u] = _qb.zw;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv * tmpvar_2) - 0.5);\\n  float tmpvar_4;\\n  tmpvar_4 = (0.4 / abs(tmpvar_3.y));\\n  z_1 = tmpvar_4;\\n  xlat_mutablers.x = (tmpvar_3.x * tmpvar_4);\\n  xlat_mutablers.y = (tmpvar_4 + q30);\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_5.xyz * vec3(greaterThanEqual (tmpvar_5.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \\n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\\n  )));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((xlat_mutablers.xyy * vec3(0.12, 0.12, 0.0)) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.2) * time)));\\n  if ((((xlat_mutablenoise.x + xlat_mutablenoise.y) + xlat_mutablenoise.z) > 0.01)) {\\n    xlat_mutablenoise = (xlat_mutablenoise + (tmpvar_6 * 0.8).xyz);\\n  };\\n  xlat_mutableret1 = xlat_mutablenoise;\\n  z_1 = (1.2 / abs(tmpvar_3.y));\\n  xlat_mutablers.x = (tmpvar_3.x * z_1);\\n  xlat_mutablers.y = (z_1 + q30);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_7.xyz * vec3(greaterThanEqual (tmpvar_7.xyz, vec3(0.9, 0.9, 0.9))));\\n  if ((((xlat_mutablenoise.x + xlat_mutablenoise.y) + xlat_mutablenoise.z) > 0.01)) {\\n    xlat_mutablenoise = (xlat_mutablenoise + (tmpvar_6 * 0.8).xyz);\\n  };\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  z_1 = (0.4 / abs(tmpvar_3.x));\\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\\n  xlat_mutablers.x = (z_1 + q30);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_8.xyz * vec3(greaterThanEqual (tmpvar_8.xyz, vec3(0.9, 0.9, 0.9))));\\n  xlat_mutablenoise = (xlat_mutablenoise * (1.0 + (0.5 * \\n    (dot (texture (sampler_noise_hq, (16.0 * xlat_mutablers)), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)\\n  )));\\n  if ((((xlat_mutablenoise.x + xlat_mutablenoise.y) + xlat_mutablenoise.z) > 0.01)) {\\n    xlat_mutablenoise = (xlat_mutablenoise + (tmpvar_6 * 0.8).xyz);\\n  };\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  z_1 = (1.2 / abs(tmpvar_3.x));\\n  xlat_mutablers.y = (tmpvar_3.y * z_1);\\n  xlat_mutablers.x = (z_1 + q30);\\n  vec4 tmpvar_9;\\n  tmpvar_9 = texture (sampler_pw_noise_lq, (xlat_mutablers / 32.0));\\n  xlat_mutablenoise = (tmpvar_9.xyz * vec3(greaterThanEqual (tmpvar_9.xyz, vec3(0.9, 0.9, 0.9))));\\n  if ((((xlat_mutablenoise.x + xlat_mutablenoise.y) + xlat_mutablenoise.z) > 0.01)) {\\n    xlat_mutablenoise = (xlat_mutablenoise + (tmpvar_6 * 0.8).xyz);\\n  };\\n  xlat_mutableret1 = (xlat_mutableret1 + xlat_mutablenoise);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = xlat_mutableret1;\\n  ret = tmpvar_10.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = texture (sampler_main, uv).zzz;\\n  ret_1 = ((pow (\\n    mix (vec3((((texture (sampler_blur1, uv).xyz * scale1) + bias1).z + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).z)), tmpvar_2, tmpvar_2)\\n  , vec3(0.8, 2.0, 8.0)) * 1.25) - 0.25);\\n  ret_1 = (ret_1 * ((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2).y * 1.2));\\n  ret_1 = (ret_1 * 2.0);\\n  ret_1 = (ret_1 - (texture (sampler_noisevol_hq, (\\n    ((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww))\\n   + \\n    (vec3(0.0, 0.0, 0.4) * time)\\n  )) * 0.5).xyz);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_1;\\n  ret = tmpvar_3.xyz;\\n }"}')},3324:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"wave_dots":1,"modwavealphabyvolume":1,"darken_center":1,"wave_a":4.574,"wave_scale":1.286,"wave_smoothing":0.81,"modwavealphastart":0.54,"modwavealphaend":1,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_l":0,"mv_a":0,"b3x":0.2},"shapes":[{"baseVals":{"enabled":1,"sides":16,"textured":1,"rad":1.18647,"tex_zoom":1.66609,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = .8;\\na = max(0,q29);"},{"baseVals":{"sides":40,"textured":1,"x":0.1,"y":0.8,"rad":0.83346,"ang":3.14159,"tex_ang":5.40354,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":40,"textured":1,"x":0.8,"y":0.2,"rad":0.41532,"ang":3.14159,"tex_ang":5.40354,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":40,"textured":1,"rad":1.84754,"ang":3.14159,"tex_ang":5.59203,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nra = .1;\\nlen = if(above(q6,0),if(below(len,sz),len + ra*sz*tic,min(sz,len)),if(above(len,0),len - ra*sz*tic,max(0,len)));\\nt4 = len;","point_eqs_eel":"ang = 0;\\nlen = t4;\\nmad = .6;\\n\\nit = if(above(sample,0),(it+equal(lev,7)),1);\\nita = (ita + 1)*above(sample,0);\\n\\nmod = if(equal(it%2,0),1,  if(equal((it+1)%4,0),2,  if(equal((it+3)%8,0),3,  if(equal((it+7)%16,0),4,  if(equal((it+15)%32,0),5,  if(equal((it+31)%64,0),6,  if(equal((it+63)%128,0),7,7)  ))))));\\n\\nsw = sw - 1;\\nsw = if(equal(lev,7),mod,sw)*above(sample,0);\\n\\nlev = if(above(sample,0),if(above(sw,0),lev-1,lev+1),7);\\na = lev*.1*1.46;\\na = equal(lev,7) + equal(lev,4) + equal(lev,1);\\n\\nar = if(above(sample,0),ar,1);\\nar = if(equal(lev,0),ar*-1,ar);\\nbr = if(above(sample,0),br,1);\\nbr = if(equal(lev,1),br*-1,br);\\ncr = if(above(sample,0),cr,1);\\ncr = if(equal(lev,2),cr*-1,cr);\\ndr = if(above(sample,0),dr,1);\\ndr = if(equal(lev,3),dr*-1,dr);\\ner = if(above(sample,0),er,1);\\ner = if(equal(lev,4),er*-1,er);\\nfr = if(above(sample,0),fr,1);\\nfr = if(equal(lev,5),fr*-1,fr);\\ngr = if(above(sample,0),gr,1);\\ngr = if(equal(lev,6),gr*-1,gr);\\n\\nmlev = lev*above(sample,0);\\n\\nswi = equal(q4,0)*equal(sample,0);\\n\\nha = if(swi,1-2*rand(2),ha);\\nhb = if(swi,1-2*rand(2),hb);\\nhc = if(swi,1-2*rand(2),hc);\\nhd = if(swi,1-2*rand(2),hd);\\nhe = if(swi,1-2*rand(2),he);\\nhf = if(swi,1-2*rand(2),hf);\\nhg = if(swi,1-2*rand(2),hg);\\n\\naang = if(above(sample,0),aang,aang + (q1*.8 + q2*.1 + q3*.1)*ha*1);\\nbang = if(above(sample,0),bang,bang + (q1*.57 + q2*.33 + q3*.1)*hb*1.33);\\ncang = if(above(sample,0),cang,cang + (q1*.33 + q2*.57 + q3*.1)*hc*1.67);\\ndang = if(above(sample,0),dang,dang + (q1*.1 + q2*.8 + q3*.1)*hd*2);\\neang = if(above(sample,0),eang,eang + (q1*.1 + q2*.57 + q3*.33)*he*2.33);\\nfang = if(above(sample,0),fang,fang + (q1*.1 + q2*.33 + q3*.57)*hf*2.67);\\ngang = if(above(sample,0),gang,gang + (q1*.1 + q2*.1 + q3*.8)*hg*3);\\n\\nlen = len*mad;\\nx = .5 + above(lev,0)*sin(aang)*len*ar;\\ny = 0.5 + above(lev,0)*cos(aang)*len;\\n\\nan = bang*(ar + br)*br;\\nlen = len*mad;\\nx = x + above(lev,1)*sin(an)*len*br;\\ny = y + above(lev,1)*cos(an)*len;\\n\\nan = cang*(ar + br + cr)*cr;\\nlen = len*mad;\\nx = x + above(lev,2)*sin(an)*len*cr;\\ny = y + above(lev,2)*cos(an)*len;\\n\\nan = dang*(ar + br + cr + dr)*dr;\\nlen = len*mad;\\nx = x + above(lev,3)*sin(an)*len*dr;\\ny = y + above(lev,3)*cos(an)*len;\\n\\nan = eang*(ar + br + cr + dr + er)*er;\\nlen = len*mad;\\nx = x + above(lev,4)*sin(an)*len*er;\\ny = y + above(lev,4)*cos(an)*len;\\n\\nan = fang*(ar + br + cr + dr + er + fr)*fr;\\nlen = len*mad;\\nx = x + above(lev,5)*sin(an)*len*fr;\\ny = y + above(lev,5)*cos(an)*len;\\n\\nan = gang*(ar + br + cr + dr + er + fr + gr)*gr;\\nlen = len*mad;\\nx = x + above(lev,6)*sin(an)*len*gr;\\ny = y + above(lev,6)*cos(an)*len;\\n\\nx = (x-.5)*.75 + .5;\\n\\ng = t1 + lev*.1;\\nr = t2 - lev*.1;\\nb = t3;\\n\\nr = if(equal(q5,1),1,r);\\ng = if(equal(q5,2),1,g);\\nb = if(equal(q5,3),1,b);\\n\\nr = r - int(r);\\ng = g - int(g);\\nb = b - int(b);\\n\\ny = (y-.5)/q20+.5;"}],"init_eqs_eel":"index = rand(32);\\nindex2 = rand(32);","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, -.5+avg+peak) * above (time, t0+.1);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %64;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq24 = is_beat;\\nq29 = 2 * (index2%2-.5);\\nq25 = min(1,q22/2);\\n\\nk1 =  is_beat*equal(index%4,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq26 = (8+index2*8);\\nq27 = index;\\nq28 = index2;\\n\\n\\ntrot = index*6.28/4;\\nq5 = cos(trot);\\nq6 = sin(trot);\\nq7 = -q6;\\nq8 = q5;\\n\\nq29= sin(time/4);\\nwave_mystery = q29/2;\\n\\nq30 = .03*(index%32)/32;\\n\\nmonitor = q30;","pixel_eqs_eel":"zoom = 1 +.02*rad;","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\\n  float tmpvar_3;\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur1, uv);\\n  tmpvar_3 = (((tmpvar_4.xyz * scale1) + bias1) * 4.0).x;\\n  mat2 tmpvar_5;\\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\\n  tmpvar_5[1u].x = sin(tmpvar_3);\\n  tmpvar_5[1u].y = cos(tmpvar_3);\\n  uv_1 = ((tmpvar_2 + (\\n    (0.2 * dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\\n   * \\n    (tmpvar_2 * tmpvar_5)\\n  )) - 0.5);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = ((uv_1 * texsize.xy) * q30);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\\n  uv_1 = (uv_1 - ((tmpvar_7 * texsize.zw) * q26));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ((texture (sampler_main, uv_1).xyz * 0.996) - 0.006);\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (1.0 - uv.x);\\n  tmpvar_2.y = uv.y;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\\n  vec2 tmpvar_4;\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_blur1, uv);\\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .zzz).xy) + 0.5);\\n  vec3 tmpvar_6;\\n  tmpvar_6 = (tmpvar_3 + clamp ((\\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_3.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec3 tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 + clamp ((\\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\\n   * \\n    (1.0 - (tmpvar_6.x * 2.0))\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 0.0;\\n  tmpvar_8.xyz = mix ((vec3((\\n    ((tmpvar_5.xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\\n  .x)) + (\\n    ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1)\\n  .x + \\n    ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3)\\n  .x)), tmpvar_7, tmpvar_7);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = uv.x;\\n  tmpvar_9.y = (1.0 - uv.y);\\n  ret_1 = (pow (tmpvar_8, (0.5 + \\n    (4.0 * roam_cos)\\n  )).xyz + pow ((texture (sampler_main, tmpvar_9).yyy + texture (sampler_main, \\n    (1.0 - uv)\\n  ).yyy), vec3(0.6, 0.95, 5.0)));\\n  ret_1 = (1.0 - exp((-2.0 * ret_1)));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ret_1;\\n  ret = tmpvar_10.xyz;\\n }"}')},3496:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.005,"wave_scale":10.437,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":0.2,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"textured":1,"rad":1.30581,"ang":2.32478,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0.5,"g":1,"b":0.9,"a":0.03,"r2":0.83,"g2":0.93,"b2":0.8,"a2":0.06,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":100,"rad":1.26458,"tex_ang":1.4451,"tex_zoom":1.49331,"r":0.7,"g":0.4,"a":0.01,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"x":0.503,"rad":0.03886,"tex_zoom":0.60986,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\nrad = .1;"},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.54822,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.5,"a":0.9,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"k1 = (sample*100)%2;\\n\\nxi = value1*k1 + xi*(1-k1);\\nyi = value2*(1-k1) + yi*k1;\\n\\nx = .5 + xi/2;\\ny = .5 + yi/2;\\n\\n\\na = bass + mid + treb ;\\na = a/10 * sqrt(xi*xi+yi*yi);"},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":"x0 = .5 + (-1) * q1/1;\\ny0 = .0 - (-1)* .5;\\n\\n//x0 = .5; y0 = .5;\\n\\nk1 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = k1%2;\\nf1 = rand(100)/200-.25;\\nf2 = rand(100)/200-.25;\\n\\nx = x0 + k1* f1;;\\ny = y0 + k1* f2;\\na = k2%2 /4;"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nmonitor = index2;\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = (bass + mid + treb)/16;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.1416/4;\\n\\npos = pos + q20/140;\\nq28 = pos;\\nq27 = index+1;\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\ntrel = time/10;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;\\nq8 = q5;\\n\\ntrig = q24 * (index%4);\\nmox = bnot(trig)*mox + trig * (rand (100)/100-.5);\\nmoy = bnot(trig)*moy + trig * (rand (100)/100-.5);\\nq15 = mox/2;\\nq16 = moy/2;\\n\\n//speed\\nspeed = speed * bnot(trig) + trig * q26;\\nmovz = movz + speed/fps;\\nq9 = movz;\\n\\n\\nq30 = (1.2 + sin(time/7))*3;\\n\\nzoom = 1;\\nrot = -0.00;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 zz_1;\\n  zz_1 = -(((\\n    (uv - vec2(0.5, 0.5))\\n   * aspect.xy) * (texsize.xy * 0.2)));\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = ((texture (sampler_main, (uv + \\n    ((clamp ((\\n      sin(zz_1)\\n     / \\n      cos(zz_1)\\n    ), vec2(-8.0, -8.0), vec2(8.0, 8.0)) * texsize.zw) * 4.0)\\n  )).xyz + (0.02 * texture (sampler_noise_lq, \\n    ((uv * 0.3) + (0.01 * rand_frame).xy)\\n  )).xyz) - 0.015);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec2 uvm_1;\\n  vec2 uv1_2;\\n  vec2 p0_3;\\n  p0_3.x = (q15 + 0.5);\\n  p0_3.y = (q16 + 0.5);\\n  mat2 tmpvar_4;\\n  tmpvar_4[uint(0)] = _qb.xy;\\n  tmpvar_4[1u] = _qb.zw;\\n  uv1_2 = (((uv - p0_3) * aspect.xy) * tmpvar_4);\\n  float tmpvar_5;\\n  float tmpvar_6;\\n  tmpvar_6 = (min (abs(\\n    (uv1_2.y / uv1_2.x)\\n  ), 1.0) / max (abs(\\n    (uv1_2.y / uv1_2.x)\\n  ), 1.0));\\n  float tmpvar_7;\\n  tmpvar_7 = (tmpvar_6 * tmpvar_6);\\n  tmpvar_7 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_7) + 0.05368138) * tmpvar_7) - 0.1173503)\\n     * tmpvar_7) + 0.1938925) * tmpvar_7) - 0.3326756)\\n   * tmpvar_7) + 0.9999793) * tmpvar_6);\\n  tmpvar_7 = (tmpvar_7 + (float(\\n    (abs((uv1_2.y / uv1_2.x)) > 1.0)\\n  ) * (\\n    (tmpvar_7 * -2.0)\\n   + 1.570796)));\\n  tmpvar_5 = (tmpvar_7 * sign((uv1_2.y / uv1_2.x)));\\n  if ((abs(uv1_2.x) > (1e-08 * abs(uv1_2.y)))) {\\n    if ((uv1_2.x < 0.0)) {\\n      if ((uv1_2.y >= 0.0)) {\\n        tmpvar_5 += 3.141593;\\n      } else {\\n        tmpvar_5 = (tmpvar_5 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_5 = (sign(uv1_2.y) * 1.570796);\\n  };\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (tmpvar_5 / 3.14);\\n  tmpvar_8.y = (1.0/((abs(\\n    (abs((abs(uv1_2.x) - abs(uv1_2.y))) * uv1_2.x)\\n  ) * q30)));\\n  uvm_1.y = ((tmpvar_8.y / 8.0) + q9);\\n  uvm_1.x = tmpvar_8.x;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (64.0 * ((uv * mat2(0.6, -0.8, 0.8, 0.6)) + (time / 64.0)));\\n  vec2 tmpvar_10;\\n  tmpvar_10 = abs((fract(tmpvar_9) - 0.5));\\n  vec3 tmpvar_11;\\n  tmpvar_11 = clamp (((0.5 / \\n    sqrt(dot (tmpvar_10, tmpvar_10))\\n  ) * vec3((texture (sampler_pw_noise_lq, \\n    (tmpvar_9 / 256.0)\\n  ).y - 0.9))), 0.0, 1.0);\\n  float tmpvar_12;\\n  tmpvar_12 = clamp ((0.01 / sqrt(\\n    dot (uv1_2, uv1_2)\\n  )), 0.0, 1.0);\\n  float tmpvar_13;\\n  tmpvar_13 = clamp ((128.0 / (tmpvar_8.y * tmpvar_8.y)), 0.0, 1.0);\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = (((\\n    (texture (sampler_main, uvm_1).xyz * tmpvar_13)\\n   + \\n    (((texture (sampler_blur1, fract(uvm_1)).xyz * scale1) + bias1) * clamp ((2.0 / tmpvar_8.y), 0.0, 1.0))\\n  ) + (vec3(0.0, 0.0, 0.2) * \\n    clamp ((0.05 / (tmpvar_13 + 0.1)), 0.0, 1.0)\\n  )) + clamp ((\\n    ((tmpvar_11.x * tmpvar_11.x) + (tmpvar_12 * tmpvar_12))\\n   - \\n    (tmpvar_13 * 16.0)\\n  ), 0.0, 1.0));\\n  ret = tmpvar_14.xyz;\\n }"}')},5584:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.038558,"wave_scale":0.372353,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":44,"additive":1,"thickoutline":1,"rad":0.126338,"ang":1.570796,"tex_zoom":0.539067,"r":0,"g":0.54,"b":0.89,"a":0.1,"r2":0.84,"g2":0.93,"b2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5 + .5 * sin(time);\\ny = .5 + .5 * sin(time);"},{"baseVals":{"sides":63,"textured":1,"rad":1.998625,"tex_zoom":0.499805,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"a2":0.6,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"x":0.123,"y":0,"rad":0.273185,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":63,"textured":1,"y":1,"rad":0.548217,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"usedots":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k0 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = equal(k0%2,0);\\nk2 = equal(k0%2,1);\\n\\n\\nix = (100*value1)%7-2.5;\\niy = (100*value2)%7-2.5;\\n\\nsp = bass + treb;\\nsp = sp /3000;\\n\\n\\ndx = (dx+sp*ix) * .998;\\ndy = (dy+sp*iy) * .998 ;\\n\\n\\nox = k1*dx + (1-k1)*ox;\\noy = k2*dy + (1-k2)*oy;\\n\\n\\n\\n//ox = 0; oy = 0;\\n\\nx = ox+.5;\\ny = oy+.5;\\n\\nr = 1;\\ng = 1;\\nb = 1;\\na = 1;"},{"baseVals":{"enabled":1,"usedots":1,"scaling":0.891519,"smoothing":0.82,"a":0.1},"init_eqs_eel":"","frame_eqs_eel":"t1 = 2*sin(time/15);\\nt2 = 2*sin(time/11);\\nmonitor = time;","point_eqs_eel":"\\nt_abs = sample ;\\n\\nox = sin (t_abs*68);\\noy = cos (t_abs*63);\\noz = sin (t_abs*125);\\n\\nr = 1;\\ng = .5 ;\\nb = 1 ;\\n\\nt_rel = sample - time/127;\\nt_rel = t_rel - int(t_rel);\\n\\na = (512*sample-time*2)%2;\\na = 1;\\n\\nxang = 0 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.15;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\n//oz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k1 = (sample*512) % 8;\\n\\nt1 = equal (k1,0)*((t1 * 61 + 27) % 4096)\\n   + (1-equal(k1,0))*t1;\\n\\nexc = 1+rand(5);\\nampl = sample*sqrt(t2) * (1+exc);\\n\\nf1 = q4*ampl* sin(t1*6.28/4096);\\nf2 = q4*ampl* cos(t1*6.28/4096);\\n\\nx = q2 + k1* f1 ;\\ny = q3 + k1* f2;\\n\\na = equal(k1,6) + equal (k1,0);\\n\\nr = 1;\\nb = equal (k1,0);\\ng = .6* (1+.6*equal (k1,0))  ;\\na = a * q5 * (1-0*t2*t2);\\n//a = 0;\\n\\n"},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nt_abs = sample;\\nt_rel = sample-time/8;\\n\\nox =  sin (sample*110) ;\\noy =  cos (sample*110);\\n\\noz = 4+1/(t_rel - int(t_rel));\\n\\nr = .3;\\ng = 0.7;\\nb = 1;\\n\\na = .8;\\n\\nxang = 0;\\nyang = 0;\\nzang = 0;\\nfov = .5;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nx = ox*fov/oz +0.45;\\ny = oy*fov/oz + 0.45;"}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.96, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%8;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3*3.1416/2;\\n\\nrot1 = rot1 + q26;\\nq25 = .01*rot1;\\n\\nq27 = 8-index;\\nq28 = index3;\\n\\ndx1 = dec_med*dx1 + (1-dec_med)*bnot(index2);\\nq29 = dx1;\\nmonitor = q29;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;","pixel_eqs_eel":"rot = 0;\\ndx = .02*q29;\\nzoom = 1;","warp":" shader_body { \\n  vec2 tmpvar_1;\\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\\n  vec4 tmpvar_2;\\n  tmpvar_2.w = 1.0;\\n  tmpvar_2.xyz = (((0.995 * texture (sampler_main, \\n    (uv + (((\\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \\n        (q2 + 1.0)\\n      ) * tmpvar_1.yx)))\\n     * texsize.zw) * 4.0) * (2.0 + q1)))\\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\\n  ret = tmpvar_2.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.1));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = tmpvar_5;\\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\\n  uv2_3.x = tmpvar_6.x;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_7;\\n  tmpvar_8.y = (tmpvar_5 * 1.5);\\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = ((crisp_1 + (\\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_10.xyz;\\n }"}')},3785:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527429,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0.7},"shapes":[{"baseVals":{"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\n\\nrad = .04;\\na = .6; a2 = 0;"},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"a":0.7,"g2":0.4,"b2":0.4,"a2":0.7,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q24;\\n\\ntextured = 1;\\nadditive = q24;\\nx0 = x0*bnot(trig) + trig*(.2+ rand(100)/200); \\ny0 = y0*bnot(trig) + trig*(.2+ rand(100)/200); \\n\\n\\nx0 = x0 + .1*q1*(3+q22)/fps;\\ny0 = y0 + .1*q2*(3+q22)/fps;\\n\\nx0 = x0 - int(x0);\\ny0 = y0 - int(y0);\\n\\nang = 4*q1+time;\\nx = x0; y = y0;\\nrad0 = rad0*bnot(trig) + trig*rand(100)/200;\\nrad = rad0;\\n\\nr0 = bnot(trig)*r0 + trig * rand(10)/10;\\nb0 = bnot(trig)*b0 + trig * rand(10)/10;\\ng0 = bnot(trig)*g0 + trig * rand(10)/10;\\n\\nr0 =1; b0 = 1; g0 = 1;\\nr = r0; b = b0; g = g0;\\nr2 = r; b2 = n; g2 = g;"},{"baseVals":{"additive":1,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5 - 0*rand(15)/200;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na = min(q21/2 ,.9);\\nrad = a * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"thick":1,"additive":1,"scaling":3.915805,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"\\nx = sample;\\ny = value1 * rand(50)/100 * abs(sample-.5)+ .49;\\n\\na = q26/4 * (.2 + abs(sample-.5)); "},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.7, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .2+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att;\\nq27 = index +1;\\nq28 = index2;\\n\\n\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nalt = alt * .2 + q26*.8;\\nq26 = q26 - alt;\\n\\nstep = step + 100*max(q26-0.01,0) + q24 ;\\nq30 = step;\\n\\np4 = dec_med*p4 + (1-dec_med)*q27;\\nq31 = p4;\\n\\ntrig = q24;\\ntrel = bnot(trig)*(trel + 1/fps);\\nq6 = trel;\\nmonitor = trel;","pixel_eqs_eel":"zoom = 1.1;","warp":" shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  vec2 rs_2;\\n  vec2 uv6_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv_orig - 0.5) * aspect.xy);\\n  uv6_3 = tmpvar_4;\\n  vec4 theta_5;\\n  theta_5 = ((q1 * (\\n    (6.0 * q2)\\n   * \\n    sqrt(dot (tmpvar_4, tmpvar_4))\\n  )) + rand_frame);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = clamp (((\\n    sin(theta_5)\\n   / \\n    cos(theta_5)\\n  ).xy * -(\\n    normalize((1.0/(tmpvar_4)))\\n  )), vec2(-8.0, -8.0), vec2(8.0, 8.0));\\n  rs_2 = tmpvar_6;\\n  if ((q28 == 1.0)) {\\n    rs_2 = (tmpvar_6 * cos((\\n      (tmpvar_4.yx * 3.0)\\n     * q27)));\\n  };\\n  uv_1 = (uv + (rs_2 / 20.0));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = rad;\\n  tmpvar_7.y = sqrt(dot (tmpvar_4, tmpvar_4));\\n  uv6_3 = (1.5 * tmpvar_7);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ((q24 * (\\n    ((texture (sampler_main, uv_1).xyz + (vec3((0.01 / \\n      sqrt(dot (uv6_3, uv6_3))\\n    )) * roam_cos.xyz)) * 0.98)\\n   - 0.02)) + ((1.0 - q24) * texture (sampler_main, (\\n    (uv_orig - 0.5)\\n   + 0.5)).xyz));\\n  ret = tmpvar_8.xyz;\\n }","comp":"vec3 xlat_mutableneu;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutablerss;\\nvec2 xlat_mutableuv2;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 ret1_2;\\n  vec3 dots_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  float tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = (min (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0) / max (abs(\\n    (uv_1.y / uv_1.x)\\n  ), 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\\n  tmpvar_6 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\\n  tmpvar_6 = (tmpvar_6 + (float(\\n    (abs((uv_1.y / uv_1.x)) > 1.0)\\n  ) * (\\n    (tmpvar_6 * -2.0)\\n   + 1.570796)));\\n  tmpvar_4 = (tmpvar_6 * sign((uv_1.y / uv_1.x)));\\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\\n    if ((uv_1.x < 0.0)) {\\n      if ((uv_1.y >= 0.0)) {\\n        tmpvar_4 += 3.141593;\\n      } else {\\n        tmpvar_4 = (tmpvar_4 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_4 = (sign(uv_1.y) * 1.570796);\\n  };\\n  xlat_mutablers0.x = ((tmpvar_4 / 3.1416) * 2.0);\\n  xlat_mutablers0.y = (0.02 / sqrt(dot (uv_1, uv_1)));\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = xlat_mutablers0.x;\\n  tmpvar_7.y = (xlat_mutablers0.y + time);\\n  xlat_mutablerss = (tmpvar_7 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_8;\\n  tmpvar_8 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = (xlat_mutablers0.x * 2.0);\\n  tmpvar_10.y = (xlat_mutablers0.y + (time / 2.0));\\n  xlat_mutablerss = (tmpvar_10 * mat2(0.7, -0.7, 0.7, 0.7));\\n  vec4 tmpvar_11;\\n  tmpvar_11 = vec4(greaterThanEqual ((texture (sampler_pw_noise_lq, \\n    (xlat_mutablerss / 32.0)\\n  ) - 0.7), vec4(0.0, 0.0, 0.0, 0.0)));\\n  vec2 tmpvar_12;\\n  tmpvar_12 = abs((fract(\\n    (xlat_mutablerss * 8.0)\\n  ) - 0.5));\\n  xlat_mutablerss = tmpvar_12;\\n  dots_3 = (vec3((clamp (\\n    (0.04 / sqrt(dot (tmpvar_9, tmpvar_9)))\\n  , 0.0, 1.0) * tmpvar_8.x)) + (clamp (\\n    (0.04 / sqrt(dot (tmpvar_12, tmpvar_12)))\\n  , 0.0, 1.0) * tmpvar_11.x));\\n  dots_3 = (dots_3 * clamp ((0.04 / \\n    abs(((0.01 / xlat_mutablers0.y) - q6))\\n  ), 0.0, 1.0));\\n  dots_3 = (dots_3 * (dots_3 * 2.0));\\n  xlat_mutableneu = (texture (sampler_main, (uv_1 + 0.5)).xyz + ((texture (sampler_blur1, \\n    (uv_1 + 0.5)\\n  ).xyz * scale1) + bias1));\\n  ret1_2 = max (vec3(0.0, 0.0, 0.0), xlat_mutableneu);\\n  xlat_mutableuv2.x = ((uv_1.x * -0.9999987) - (uv_1.y * 0.001592548));\\n  xlat_mutableuv2.y = ((uv_1.x * 0.001592548) + (uv_1.y * -0.9999987));\\n  xlat_mutableneu = (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz + ((texture (sampler_blur1, \\n    (xlat_mutableuv2 + 0.5)\\n  ).xyz * scale1) + bias1));\\n  ret1_2 = max (ret1_2, xlat_mutableneu);\\n  xlat_mutableuv2.x = ((uv_1.x * 0.9999949) - (uv_1.y * -0.003185092));\\n  xlat_mutableuv2.y = ((uv_1.x * -0.003185092) + (uv_1.y * 0.9999949));\\n  xlat_mutableneu = (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz + ((texture (sampler_blur1, \\n    (xlat_mutableuv2 + 0.5)\\n  ).xyz * scale1) + bias1));\\n  ret1_2 = max (ret1_2, xlat_mutableneu);\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (ret1_2 + (dots_3 * (1.0 + ret1_2)));\\n  ret = tmpvar_13.xyz;\\n }"}')},340:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":10.437056,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0.1,"b1ed":0},"shapes":[{"baseVals":{"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.5,"g":1,"b":0.9,"r2":0.83,"g2":0.93,"b2":0.8,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/2+q20;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3 +q28/3);\\n\\na = q26/4+.2;\\n//a = 1;"},{"baseVals":{"enabled":1,"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\\na = q24/12;"},{"baseVals":{"enabled":1,"sides":100,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(50)/50;\\ng = rand(50)/50;\\nb = rand(50)/50;\\n\\nr2 = 1;\\ng2 = 1;\\nb2 = 1;\\n\\na = min(q21/2 ,1);\\na = .5;\\nrad = a*a/16 ;\\na2 = .5;"},{"baseVals":{"enabled":1,"textured":1,"rad":0.845919,"tex_zoom":0.622112,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.5,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.2999},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":182,"sep":120,"usedots":1,"scaling":0.891519,"smoothing":0.82,"a":0.6},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t1 = sin(t/7);","point_eqs_eel":"\\nt_abs = sample ;\\n\\nox = sin (t_abs*68);\\noy = cos (t_abs*63);\\noz = sin (t_abs*125);\\n\\nr = 0;\\ng = 1 ;\\nb = 1 ;\\n\\nt_rel = sample - time/127;\\nt_rel = t_rel - int(t_rel);\\n\\na = (512*sample-time*2)%2;\\na = 1;\\n\\nxang = 0 ;\\nyang = t1;\\nzang = t1;\\nfov = 0.15;\\n\\n\\n// Rotation um x,y,z\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\n\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\n//oz = oz - 6;\\nx = ox*fov/oz +0.5;\\n//x = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nmonitor = index2;\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nrott = p3 * 3.1416/4;\\n\\npos = pos + q20/140;\\nq28 = pos;\\nq27 = index+1;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovez = movez + .005*(1.5+q1)*30/fps;\\nq30 = movez;\\n\\n\\nzoom = 1.0;\\nrot = -0.00 * index;","pixel_eqs_eel":"zoom = 1 + q1/25;","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 0.99) - 0.002);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec3 crisp_1;\\n  vec2 uv3_2;\\n  vec2 uv2_3;\\n  vec2 tmpvar_4;\\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\\n  float tmpvar_5;\\n  tmpvar_5 = (0.1 / (sqrt(\\n    dot (tmpvar_4, tmpvar_4)\\n  ) + 0.05));\\n  vec2 tmpvar_6;\\n  float tmpvar_7;\\n  tmpvar_7 = (ang / 3.14);\\n  tmpvar_6.x = tmpvar_7;\\n  tmpvar_6.y = (tmpvar_5 * 1.5);\\n  uv2_3.y = (tmpvar_6.y + (0.1 * time));\\n  uv2_3.x = (tmpvar_7 + (0.02 * time));\\n  uv3_2.y = (tmpvar_5 + q30);\\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + (2.0 * texture (sampler_main, uv3_2).xyz)) + ((2.0 * \\n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\\n  ) + (2.0 * \\n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\\n  )));\\n  crisp_1 = ((3.0 * crisp_1) * rad);\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = ((crisp_1 + (\\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\\n   * tmpvar_8)) + (tmpvar_8 * texture (sampler_main, uv).xyz));\\n  ret = tmpvar_9.xyz;\\n }"}')},9069:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0,"echo_zoom":0,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0,"wave_scale":0,"wave_smoothing":0,"modwavealphastart":0,"modwavealphaend":1,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":31,"mv_y":24,"mv_l":0,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0,"y":0.13,"rad":0.591236,"ang":0.628319,"tex_ang":0.628319,"tex_zoom":0.591233,"r2":1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"textured":1,"x":0,"y":0,"rad":0,"tex_zoom":0,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":14,"additive":1,"textured":1,"x":0,"y":0,"rad":1,"tex_zoom":0,"r":0,"a":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/78);\\ny = .5+.3*sin(time/78);\\n\\ntex_zoom = .2 / (sin(time/31)+1.1)\\n\\n"},{"baseVals":{"sides":63,"additive":1,"textured":1,"x":0,"y":0,"rad":0,"tex_zoom":0,"r":0,"a":0,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = .5+.3*cos(time/59);\\ny = .5+.3 *sin(time/59);"}],"waves":[{"baseVals":{"enabled":1,"samples":187,"sep":9,"usedots":1,"additive":1,"scaling":0,"smoothing":0,"r":0,"b":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1;\\nt3 = sin(time/2);\\nt3 = max (t3,0);\\nt3 = 4.9*min(t3,.2);\\n","point_eqs_eel":"t1 = (t1*67+37)%4096;\\nt2 = t1/4096;\\n\\nk1 = (100*sample+time*2)%2;\\nk2 = (100*sample+time*5)%2;\\n\\nx = .49 + .48*sin(sample*31+t2*time/27);\\ny =  0 + .2*t2 + .2*sin(sample*131+t2*time/7);\\n\\n\\n\\na = 1;\\nr = .07;\\n "},{"baseVals":{"enabled":1,"scaling":0,"smoothing":0,"a":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 1; t2 = 7;","point_eqs_eel":"r = .31;\\nb = 0;\\ng = .0;\\n\\na = 1;\\n//g = 1;b=1;\\n\\nt1 = (t1*67 + 37)%4096;\\npx = (t1-2047)/4096;\\n\\nt2 = (t2*67 + 37)%4096;\\npy = (t2-0)/4096;\\n\\n\\nk1 = (sample*100)%8;\\n\\ny = py/3.5 + .0;\\na = below(y,.2);\\n\\nx = .5 + .4*sin(sample*26)  ;\\n"},{"baseVals":{"enabled":1,"samples":100,"scaling":0,"smoothing":0,"a":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1 = sin(time*3);\\nt2 = cos(time*3);\\n\\nt3 = sin(time/3);\\nt4 = cos(time/3);\\n\\nt5 = cos(time/4)/2;\\n\\n//give him a break\\n//bird = 1;\\n\\nground = below(t5,-.9);\\ntrig = below(rand(100),1);\\ntrig = trig * bnot(ground) * bnot(bird);\\nbird = bird * bnot(ground);\\n\\nbird = bnot(bird)*trig;\\n\\nt6 = bird;","point_eqs_eel":"\\nr = 1; g = 0; b = 0;\\nk1 = below(sample,.5);\\n\\ndx = .01*k1*sin(sample*50);\\n\\n\\nf1 = sqr(dx);\\n\\ndy =  40*f1*t1 + t2/150;\\ndy = dy+ (1-k1) * .002*sin(sample*50);\\n\\nx = dx + .5 + .1*t3;\\n\\ndy = dy + .2*dx*t4;\\n\\ny0 = t5;\\ny = dy+ .5 + y0/8;\\n\\na = .04;\\n\\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.8, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nsb = sb*dec_med + q21*(1-dec_med);\\nq29 = sb;\\n\\nk1 =  is_beat*bnot(index)*bnot(index2);\\np1 =  (index2-2);\\n\\np2 = dec_med * p2+ (1-dec_med)*p1;\\np3 = dec_med * p3+ (1-dec_med)*p2;\\nq5 = cos(p3*3.14/2);\\n\\nrott =  rott +  .003*30/fps*p3;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nmovx = movx + .002*30/fps;\\nq28 = movx;\\n\\nq15 = (1+sin(time/23))*.15;\\nq29 = 4*(.5+sin(time/17));\\nq30 = 5/(1.2+sin(time/50)); \\nq31 = sin(time/38)/3;\\nq32 = 2+sin(time/18);\\n\\nwarp = .06;\\nzoom = .998;","pixel_eqs_eel":"","warp":" shader_body { \\n  float k1_1;\\n  float ky_2;\\n  vec2 uv3_3;\\n  uv3_3 = (100.0 * (uv - vec2(0.5, 0.5)));\\n  float tmpvar_4;\\n  tmpvar_4 = dot (texture (sampler_noise_lq, uv), vec4(0.32, 0.49, 0.29, 0.0));\\n  ky_2 = clamp (((\\n    (-(uv3_3.y) / 100.0)\\n   + \\n    ((tmpvar_4 / 4.0) * cos((16.0 * tmpvar_4)))\\n  ) + 0.23), 0.0, 1.0);\\n  k1_1 = (uv3_3.x - (sign(uv3_3.x) * 24.0));\\n  k1_1 = (k1_1 - (sign(k1_1) * 9.0));\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (12.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (24.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (36.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (48.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  k1_1 = (k1_1 + ((\\n    (k1_1 - (60.0 * sign(k1_1)))\\n   * ky_2) * ky_2));\\n  ky_2 = clamp ((ky_2 - 0.1), 0.0, 1.0);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp (k1_1, -1.6, 1.6);\\n  k1_1 = tmpvar_5;\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ((texture (sampler_main, fract(uv)).xyz * 0.5) + (vec3(0.1, 0.0, 0.0) * cos(tmpvar_5)));\\n  ret = tmpvar_6.xyz;\\n }","comp":"float xlat_mutablehoriz;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutableuv2;\\nvec2 xlat_mutableuv5;\\nvec3 xlat_mutablewater;\\n shader_body { \\n  vec2 uv_1;\\n  vec3 clouds_2;\\n  vec3 ret_3;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv_1.x = uv_1.x;\\n  float tmpvar_4;\\n  tmpvar_4 = clamp ((1.0/((uv_1.y - 0.1))), 0.0, 200.0);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = ((uv_1.x * tmpvar_4) + time);\\n  tmpvar_5.y = tmpvar_4;\\n  xlat_mutablers = (tmpvar_5 / 44.0);\\n  xlat_mutablewater = (vec3((dot (texture (sampler_noise_lq, xlat_mutablers), vec4(0.32, 0.49, 0.29, 0.0)) - 0.5)) * clamp ((16.0 * \\n    (uv_1.y - 0.1)\\n  ), 0.0, 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (xlat_mutablewater / 16.0).x;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (uv_1.x + q31);\\n  tmpvar_7.y = (abs((uv_1.y - 0.1)) - abs((q31 / 2.0)));\\n  float tmpvar_8;\\n  tmpvar_8 = clamp ((1.0/(abs(\\n    (uv_1.y - 0.1)\\n  ))), 0.0, 200.0);\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = (tmpvar_7.x * tmpvar_8);\\n  tmpvar_9.y = tmpvar_8;\\n  xlat_mutablers = ((tmpvar_9 / 16.0) + tmpvar_6);\\n  clouds_2 = (vec3(dot (texture (sampler_noise_hq, xlat_mutablers), vec4(0.32, 0.49, 0.29, 0.0))) * ((\\n    clamp ((0.6 - (2.0 * (uv_1.y - 0.1))), 0.0, 1.0)\\n   * 0.5) / (0.04 + \\n    sqrt(dot (tmpvar_7, tmpvar_7))\\n  )));\\n  vec3 tmpvar_10;\\n  tmpvar_10.xy = vec2(1.0, 0.6);\\n  tmpvar_10.z = (q32 / tmpvar_8);\\n  clouds_2 = (clouds_2 * tmpvar_10);\\n  vec2 tmpvar_11;\\n  tmpvar_11.y = 0.0;\\n  tmpvar_11.x = (q28 / 4.0);\\n  xlat_mutableuv5 = ((uv_1 + tmpvar_11) + tmpvar_6);\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = (xlat_mutableuv5.x * 8.0);\\n  tmpvar_12.y = (xlat_mutableuv5.y * 4.0);\\n  xlat_mutablehoriz = ((abs(\\n    (xlat_mutableuv5.y - 0.1)\\n  ) * (1.0 + texture (sampler_noise_lq, tmpvar_12).x)) * (1.0 + texture (sampler_noise_hq, vec2((xlat_mutableuv5.x / 4.0))).x));\\n  float tmpvar_13;\\n  tmpvar_13 = clamp ((1.0 - (q30 * xlat_mutablehoriz)), 0.0, 1.0);\\n  xlat_mutablehoriz = tmpvar_13;\\n  xlat_mutableuv2.y = uv_1.y;\\n  xlat_mutableuv2.x = (uv_1.x + 0.65);\\n  xlat_mutableuv2 = (((1.12 * xlat_mutableuv2) - 0.1) - 0.4);\\n  vec2 tmpvar_14;\\n  tmpvar_14 = (q28 * vec2(1.0, 0.0));\\n  xlat_mutableret1 = texture (sampler_main, fract((xlat_mutableuv2 + tmpvar_14))).xyz;\\n  xlat_mutableuv2.y = uv_1.y;\\n  xlat_mutableuv2.x = (uv_1.x + 1.3);\\n  xlat_mutableuv2 = (((0.92 * xlat_mutableuv2) - 0.1) - 0.4);\\n  xlat_mutableret1 = (xlat_mutableret1 + texture (sampler_main, fract((xlat_mutableuv2 + tmpvar_14))).xyz);\\n  xlat_mutableuv2.y = uv_1.y;\\n  xlat_mutableuv2.x = (uv_1.x + 1.95);\\n  xlat_mutableuv2 = (((0.72 * xlat_mutableuv2) - 0.1) - 0.4);\\n  xlat_mutableret1 = (xlat_mutableret1 + texture (sampler_main, fract((xlat_mutableuv2 + tmpvar_14))).xyz);\\n  ret_3 = (((\\n    ((0.1 * (0.5 + xlat_mutablewater)) + (0.2 / q30))\\n   * vec3(0.0, 0.5, 0.6)) + clamp (\\n    (clouds_2 * (1.0 - (4.0 * tmpvar_13)))\\n  , 0.0, 1.0)) + (vec3(tmpvar_13) * 0.06));\\n  ret_3 = (ret_3 * clamp ((1.0 - \\n    (xlat_mutableret1.x * 8.0)\\n  ), 0.0, 1.0));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_3;\\n  ret = tmpvar_15.xyz;\\n }"}')},1656:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.5274,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"additive":1,"rad":0.048958,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\ntrel = time/3;\\n\\nx = .5+sin(trel*2);\\ny = .5+cos(trel*1.3);\\n\\n\\n\\n\\nrad = .1;\\na = .8;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27;"},{"baseVals":{"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(50)/50;\\ny = .5;\\n\\nr = .4;\\ng = .6;\\nb = 1;\\nr2 = r;\\ng2 = g;\\nb2 = b;\\n\\na2 = min(q21/2 ,1)/2;\\n\\na = 0;\\n\\nrad = a2 * (.1+abs(x-.5))/2 ;"},{"baseVals":{"thickoutline":1,"textured":1,"x":0.26,"y":0.76,"rad":0.39478,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"b2":1,"a2":0.8,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"tex_zoom = q27/2;"}],"waves":[{"baseVals":{"samples":282,"sep":20,"usedots":1,"scaling":7.858,"smoothing":0.1,"r":0,"g":0.3,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"x = rand(100)/100;\\ny = rand(100)/100;"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.5, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .6+avg+peak) * above (time, t0+.4);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %12;\\nindexa = (indexa + is_beat) %5;\\nindex2 = (index2 + is_beat*bnot(index))%2;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass_att + mid_att + treb_att + 1;\\nq27 = index + 1;\\nq28 = -index2 + indexa/5;\\nq29 = index1+index2;\\nmonitor = q29;\\nk1 =  is_\\nbeat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.1416/4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nds = ds*dec_med + q24*(1-dec_med);\\nq25 = q24;\\n//q25 = above(q26,4);\\n\\nt_rel = time*8;\\n//q25 = below((t_rel)-int(t_rel),.2);\\n\\n\\np3 = p3*dec_med + (1-dec_med) * (100*index + .0*q26);\\nq30 = p3 ;\\n\\np4 = dec_med*p4 + (1-dec_med)*q27;\\nq31 = p4;\\n\\n//zoom = 1 + .05*q1;\\n//rot = -0.01 * (index);\\n\\nzoom = 1.00;\\nrot = .0;\\n//dy = .01*q25;\\ndy = .001*q1;\\nwarp = .03;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 uv_1;\\n  vec2 uv6_2;\\n  uv_1 = (uv + ((0.004 * \\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\\n  ).xy * vec2(0.0, 1.0)));\\n  uv6_2 = (0.4 * sin((\\n    (((uv - 0.5) * aspect.xy) * 18.0)\\n   * rand_frame.xy)));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \\n      fract(uv_1)\\n    ).xyz * scale2) + bias2) * 0.03))\\n   + \\n    (vec3((0.051 / sqrt(dot (uv6_2, uv6_2)))) * vec3(0.15, 0.12, 0.075))\\n  ) * 0.99) - 0.02);\\n  ret = tmpvar_3.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1.x = uv.x;\\n  float z_2;\\n  uv_1.y = (uv.y - 0.1);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\\n  z_2 = (0.3 / tmpvar_3.y);\\n  xlat_mutablers0.x = (tmpvar_3.x * z_2);\\n  xlat_mutablers0.y = z_2;\\n  float tmpvar_4;\\n  tmpvar_4 = (time / 2.0);\\n  xlat_mutablers.x = (xlat_mutablers0.x + tmpvar_4);\\n  xlat_mutablers.y = (z_2 + tmpvar_4);\\n  xlat_mutableret1 = (texture (sampler_noise_hq, (xlat_mutablers / 2.0)).xyz - 0.54);\\n  float tmpvar_5;\\n  tmpvar_5 = clamp ((32.0 * tmpvar_3.y), 0.0, 1.0);\\n  vec2 tmpvar_6;\\n  tmpvar_6 = fract(((\\n    (((1.5 * tmpvar_3) * (q28 - abs(tmpvar_3.x))) * (1.0 - ((0.5 * tmpvar_3.y) * (float(mod (q29, 2.0))))))\\n   - \\n    (q27 / 4.0)\\n  ) - (\\n    (xlat_mutableret1 * 0.04)\\n   * tmpvar_5).xy));\\n  vec2 tmpvar_7;\\n  tmpvar_7.y = 0.0;\\n  tmpvar_7.x = texsize.z;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = 0.0;\\n  tmpvar_8.y = texsize.w;\\n  vec2 tmpvar_9;\\n  tmpvar_9.x = dot ((texture (sampler_main, (tmpvar_6 + tmpvar_7)).xyz - texture (sampler_main, (tmpvar_6 - tmpvar_7)).xyz), vec3(0.32, 0.49, 0.29));\\n  tmpvar_9.y = dot ((texture (sampler_main, (tmpvar_6 + tmpvar_8)).xyz - texture (sampler_main, (tmpvar_6 - tmpvar_8)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutableuv3 = (tmpvar_6 + tmpvar_9);\\n  xlat_mutableret1 = ((2.0 * (\\n    (texture (sampler_blur1, fract(xlat_mutableuv3)).xyz * scale1)\\n   + bias1)) + texture (sampler_main, xlat_mutableuv3).xyz);\\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 - (tmpvar_5 / 3.0)));\\n  vec4 tmpvar_10;\\n  tmpvar_10.w = 1.0;\\n  tmpvar_10.xyz = xlat_mutableret1;\\n  ret = tmpvar_10.xyz;\\n }"}')},5677:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":10.437056,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"sides":100,"textured":1,"rad":3.544901,"ang":0.816814,"tex_zoom":1.386143,"r":0,"g":1,"b":1,"a":0,"b2":1,"a2":1,"border_b":0,"border_a":0,"enabled":0},"init_eqs_eel":"t1 = .5*aspectx;","frame_eqs_eel":"trig = trig + q24;\\ntrig = below(trig,18)*trig;\\n\\nradius = radius + .01*30/fps;\\n\\nradius = radius * (1-bnot(trig));\\na2 = 1/(6*radius);\\nang = 1/radius*1;\\nrad = radius;\\n\\nx = radius;\\n"},{"baseVals":{"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"a2 =0;a = 0;\\na = q24/2;"},{"baseVals":{"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\na = min(q21/2 ,.9);\\nrad = a *a/3 ;\\n"},{"baseVals":{"sides":63,"textured":1,"rad":0.301766,"tex_ang":0.879646,"tex_zoom":0.954309,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"sep":120,"thick":1,"additive":1,"scaling":0.891519,"smoothing":0.82,"a":0.6,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"t2 = t2 + bass_att;","point_eqs_eel":"x = .5 +.001*q22*int(sample*10); y = sample*10 - int(sample*10);\\n\\nr = 1; b = 1; g = 1;\\na = 1;\\n\\n\\n\\n"},{"baseVals":{"usedots":1,"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = q4;\\nt4 = len;","point_eqs_eel":"xi = rand(100)/100;\\nyi = rand(100)/100;\\n\\nx = xi; y = yi;\\n\\na = q21/15;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"r":0,"g":0.2,"b":0,"enabled":0},"init_eqs_eel":"t1 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt2 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt3 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt4 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt5 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt6 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt7 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\nt8 = 1 + (rand(101)*.01 - rand(101)*.01)*.3;\\n","frame_eqs_eel":"tm = time*.1;\\nt1 = t1*sin(tm*t4) + (1-t1)*sin(tm*t7);\\nt2 = t2*sin(tm*t5) + (1-t2)*sin(tm*t8);\\nt3 = t3*sin(tm*t6) + (1-t3)*sin(tm*1);\\n\\ntic = min(time - tin,1);\\ntin = time;\\n\\ntva = (tic*q1*.5);\\ntvb = (tic*q2*.5);\\ntvc = (tic*q3*.5);\\n\\nq1 = tva;\\nq2 = tvb;\\nq3 = tvc;\\n\\nsz = .5;\\nlen = 1;\\nt4 = len;","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %8;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%3;\\n\\nmonitor = index4;\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/4;\\n\\nq27 = 8-index;\\nq28 = index2;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nq5 = q1 * bnot(index2);","pixel_eqs_eel":"rot = .04*q5*(sin(q22*4*(rad)));\\nzoom = 1+.008 ;","warp":" shader_body { \\n  vec3 tmpvar_1;\\n  tmpvar_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec3 theta_2;\\n  theta_2 = ((0.474 * tmpvar_1) * (q21 * q21));\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ((dot (\\n    (texture (sampler_main, uv).xyz + 0.015)\\n  , vec3(0.32, 0.49, 0.29)) * (1.0 - \\n    (0.1 * abs((sin(theta_2) / cos(theta_2))))\\n  )) - ((0.02 / \\n    (rad + 0.02)\\n  ) * tmpvar_1));\\n  ret = tmpvar_3.xyz;\\n }","comp":" shader_body { \\n  vec2 uv1_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\\n  tmpvar_2.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\\n  uv1_1 = ((0.3 * cos(\\n    (((uv - 0.5) * aspect.xy) * 9.0)\\n  )) - tmpvar_2);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = (((\\n    (-0.5 * (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1)))\\n   + \\n    clamp (((0.04 * bass_att) / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\\n  ) + 0.2) * 2.0);\\n  ret = tmpvar_3.xyz;\\n }"}')},2571:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_dots":1,"darken":1,"wave_a":0.005428,"wave_scale":3.782626,"wave_smoothing":0.81,"wave_mystery":-1,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.45,"wave_g":0.4,"wave_b":0.5,"ob_size":0.06,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":47.999996,"mv_l":0.15,"mv_r":0.6,"mv_g":0.2,"mv_b":0.6999,"mv_a":0.3,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.53,"rad":0.0882,"tex_zoom":0.4928,"g":1,"b":0.7,"a":0.7,"r2":0.4,"g2":0,"b2":0.8,"a2":0.6,"border_b":0.2,"border_a":0.2},"init_eqs_eel":"","frame_eqs_eel":"trig = equal(q28%2,1)*q24;\\n\\nseed = sqr(time - int(time));\\nrr1 = rr1 * (1-trig) + seed*trig;\\n\\ntextured = bnot(q24);\\nang = 3.1416 /4 * q28;\\n\\nx = .5 + .01*rr1*(q28%3); y = x + .002;\\nborder_a = .4;\\n\\na = .8; a2 = .5;\\nrad = 0.14*rr1+.0;//MUSS HIER STEHEN - MIST\\ntex_zoom = .7/rad;"},{"baseVals":{"x":0.46,"rad":0.159625,"tex_zoom":0.028461,"g":1,"b":1,"a":0.03,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = rand(10)/10;\\ny = rand(10)/10;\\n\\nr = rand(4)/3;\\ng = rand(4)/3;\\nb = rand(4)/3;\\n\\n\\nis_beat = above(time, t0+.03);\\nt0 = is_beat*time + (1-is_beat)*t0;\\n\\n\\na = min(q21/2 ,.9) * is_beat;\\nrad = a*a/3 ;"},{"baseVals":{"enabled":1,"x":0.553,"y":0.6,"rad":0.049138,"tex_zoom":0.499805,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"textured = bnot(q24);"},{"baseVals":{"textured":1,"x":0.45,"rad":0.202682,"tex_ang":0.628319,"tex_zoom":4.461715,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0.4,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"samples":102,"sep":10,"scaling":0.891519,"smoothing":0,"g":0.5,"b":0.5,"a":0.6},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"k0 = int(100.0*sample);\\nk2 = int(100.0*sample+1);\\nk1 = equal(k0%2,0);\\nk2 = equal(k0%2,1);\\n\\n\\nix = (100*value1)%7-3;\\niy = (100*value2)%7-3;\\n\\nsp = bass_att + treb_att;\\nsp = sp /1000;\\n\\n\\ndx = (dx+sp*ix) * .99;\\ndy = (dy+sp*iy) * .99 ;\\n\\n\\nox = k1*dx + (1-k1)*ox;\\noy = k2*dy + (1-k2)*oy;\\n\\n\\n\\n//ox = 0; oy = 0;\\n\\nx = ox+.5;\\ny = oy+.5;\\n\\nr = .6;\\ng = .8;\\nb = .9;\\na = .1 + q26/8;\\na = max(a,1) / 4;"},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.891519,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ra = .8;\\nrb = .5;\\npib = 6.28318530718;\\n\\n\\ntic = min(time-tin,.1);\\ntin = if(equal(sample,0),time,tin);\\n\\nmod = 1.5 + .5*sin(time*.15);\\nmed = 1.5 + .5*sin(time*.134);\\nmed = 5;\\namod = 3;\\n\\nvr = rand(10001)*.0001;\\nrb = rb + rand(10001)*.0001*.1;\\n\\na = vr;\\n\\nsa = vr*pib*.5;\\nsp = sa*mod + q1*1.3;\\nsam = sa*med - q1*.219;\\n\\nox = ra*sin(sam*pib);\\noy = ra*cos(sam*pib);\\nox = ox + rb*-cos(sp)*sin(sam*pib);\\noz = rb*-sin(sp);\\noy = oy + rb*-cos(sp)*cos(sam*pib);\\n\\n\\nxang = time*.132;\\nxang = q2;\\nyang = time*.153;\\nyang = q3;\\nzang = time*.110;\\nzang = q4;\\nfov = 0.6 + 0.2*sin(time);\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = -ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"index4 = rand(2);\\nindex3 = rand(4);","frame_eqs_eel":"dec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.99, 30/fps);\\nbeat = max (max (bass, mid), treb);\\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .5+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %4;\\nindex2 = (index2 + is_beat*bnot(index))%4;\\nindex3 = (index3 + is_beat*bnot(index)*bnot(index2))%4;\\nindex4 = (index4 + is_beat*bnot(index)*bnot(index2)*bnot(index3))%2;\\n\\n\\nq20 = avg;\\nq21 = beat;\\nq22 = peak;\\nq23 = index;\\nq24 = is_beat;\\nq26 = bass + mid + treb;\\n\\nready = is_beat * bnot(ready) + bnot(is_beat2)*ready;\\nis_beat2 = ready * above (time, t0+.2);\\nq19 = is_beat2;\\n\\n//k1 =  is_beat*bnot(index)*bnot(index2);\\n\\nk1 =  is_beat*equal(index,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott = p2 * 3.14159265359/2;\\n\\nq27 = index+1;\\nq28 = index2;\\nq29 = index3*4+1;\\nq30 = index4;\\n\\nq1 = cos(rott);\\nq2 = sin(rott);\\nq3 = -q2;\\nq4 = q1;\\n\\nsp0 = dec_slow*sp0 + (q24+.05)*(1-dec_slow);\\ngo = go * dec_med + (1-dec_med)*(1-bnot(index2+index3));\\nmovez = movez + .015*30/fps * go ;\\nq31 = movez;\\nq32 = .5 + .02*sin(time/5);\\n\\nq5 = index4%2;\\n\\nzoom = 1.0; rot = 0;\\ncx = .5 + .1*sin(time/2);\\ndx = .05*max(sin(time/9.7)-.95,0);\\ndy = .002*(1-go);\\nrot = 50*(dx-dy);\\n\\nmonitor = q5;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec2 zz_1;\\n  vec2 uv1_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - vec2(0.5, 0.5)) * aspect.xy);\\n  mat2 tmpvar_4;\\n  tmpvar_4[uint(0)] = _qa.xy;\\n  tmpvar_4[1u] = _qa.zw;\\n  zz_1 = (((tmpvar_3 * texsize.xy) * (0.006 * q28)) * tmpvar_4);\\n  zz_1 = ((zz_1.yx * q5) + ((1.0 - q5) * zz_1));\\n  uv1_2 = (0.3 * cos((\\n    (tmpvar_3 * 16.0)\\n   + \\n    (time / 8.0)\\n  )));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ((0.995 * (texture (sampler_main, \\n    (uv + (((\\n      clamp ((sin(zz_1.yx) / cos(zz_1.yx)), vec2(-8.0, -8.0), vec2(8.0, 8.0))\\n     * \\n      cos(((rand_preset * 8.0).xy * zz_1))\\n    ) * texsize.zw) * q29))\\n  ).xyz + \\n    (((0.004 / sqrt(\\n      dot (uv1_2, uv1_2)\\n    )) * q19) * vec3(0.5, 0.0, 1.0))\\n  )) - 0.005);\\n  ret = tmpvar_5.xyz;\\n }","comp":"vec3 xlat_mutableret1;\\n shader_body { \\n  vec2 uv_1;\\n  float inten_2;\\n  float dist_3;\\n  vec2 uv2_4;\\n  uv_1 = (uv - 0.5);\\n  uv_1 = (uv_1 * aspect.xy);\\n  uv2_4.x = ((uv_1.x * 0.5) - (uv_1.y * -0.5));\\n  uv2_4.y = ((uv_1.x * -0.5) + (uv_1.y * 0.5));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.25 + q31)));\\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + q32)).xyz * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.5) - (uv_1.y * 0.5));\\n  uv2_4.y = ((uv_1.x * 0.5) + (uv_1.y * -0.5));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.5 + q31)));\\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + q32)).xyz * inten_2));\\n  uv2_4.x = ((uv_1.x * 0.5) - (uv_1.y * -0.5));\\n  uv2_4.y = ((uv_1.x * -0.5) + (uv_1.y * 0.5));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((0.75 + q31)));\\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + q32)).xyz * inten_2));\\n  uv2_4.x = ((uv_1.x * -0.5) - (uv_1.y * 0.5));\\n  uv2_4.y = ((uv_1.x * 0.5) + (uv_1.y * -0.5));\\n  uv2_4 = (uv2_4 * aspect.yx);\\n  dist_3 = (1.0 - fract((1.0 + q31)));\\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\\n    ((2.0 * uv2_4) * dist_3)\\n   + q32)).xyz * inten_2));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = (xlat_mutableret1 * 1.6);\\n  ret = tmpvar_5.xyz;\\n }"}')},1148:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.399,"decay":1,"echo_zoom":1.488,"echo_alpha":0.3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":1.3106,"fshader":1,"zoom":0.9803,"cx":0.65,"cy":0.35,"warp":0.01,"sx":0.99999,"sy":0.99999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0.075,"ib_r":0.2,"ib_g":0.2,"ib_b":0.2,"ib_a":0.05,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":366,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":408,"rad":0.03,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":262,"rad":0.0297,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":276,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"","frame_eqs_eel":"ib_r = 0.3 + 0.3*sin((time+treb)*1.133);\\nib_g = 0.3 + 0.3*sin((time+treb)*1.333);\\nib_b = 0.3 + 0.3*sin((time+treb)*1.533);","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\\n   * 0.03))).xyz - 0.004);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (((uv_1 - 0.5) * vec2(-1.0, 1.0)) + 0.5);\\n  ret_2 = (abs((\\n    ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\\n   - \\n    mix (texture (sampler_main, uv_1).xyz, texture (sampler_main, tmpvar_3).xyz, vec3(0.5, 0.5, 0.5))\\n  )) * 6.0);\\n  ret_2 = (ret_2 * (0.1 + abs(\\n    max (sin(bass_att), sin(treb_att))\\n  )));\\n  ret_2 = (ret_2 * max ((\\n    (texture (sampler_blur3, uv_1).xyz * scale3)\\n   + bias3), (\\n    (texture (sampler_blur3, tmpvar_3).xyz * scale3)\\n   + bias3)));\\n  ret_2 = (ret_2 * 1.5);\\n  ret_2 = (ret_2 - (roam_sin.xyz * roam_cos.zxy));\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_2;\\n  ret = tmpvar_4.xyz;\\n }"}')},1128:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"invert":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.267,"zoom":1.16,"rot":-0.04,"warp":0.00052,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":1,"ob_g":1,"ob_b":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.02339,"tex_ang":0.62832,"g":1,"b":1,"a":0.5,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.002*cos(ma));\\nmy=my+(.002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.005;\\ny=my+instance*.005;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.2+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.2+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.2+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":6,"rad":0.02248,"a":0.7,"g2":0,"a2":0.1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.7)*3.1415*.03*bass);\\nma=ma-(above(treb,.7)*3.1415*.03*treb);\\n\\nmx=mx+(.0015*cos(ma));\\nmy=my+(.0015*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.0303,"a":0.7,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.3)*3.1415*.05*bass);\\nma=ma-(above(treb,.3)*3.1415*.05*treb);\\n\\nmx=mx+(.0055*cos(ma));\\nmy=my+(.0055*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.5+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.8+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.25+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"sides":25,"additive":1,"num_inst":4,"rad":0.02248,"r":0,"a":0.7,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.11)*3.1415*.07*bass);\\nma=ma-(above(treb,.11)*3.1415*.07*treb);\\n\\nmx=mx+(.0085*cos(ma));\\nmy=my+(.0085*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx+instance*.003;\\ny=my+instance*.003;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(1/instance*time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(1/instance*time*.4+vol-1*pi23)+1)*.5;\\nb=(sin(1/instance*time*.35+vol-2*pi23)+1)*.5;"}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"}],"init_eqs_eel":"spintime = 0;","frame_eqs_eel":"basstime = basstime + bass_att*0.03;\\nq1 = basstime;\\nvol = pow(bass+mid+treb,2);\\nbasssum = vol;\\n\\nbasstime = if(below(basstime,465),465,basstime);\\n\\nstickybit = time%2;\\n\\n//avg vol\\n//buffer 1\\nvolAvg = volAvg + vol*equal(stickybit,1);\\n//number of samples 1 or framerate\\nsample1 = sample1 + equal(stickybit,1);\\n//buffer 2\\nvolAvg2 = volAvg2 + vol*equal(stickybit,0);\\n//number of samples 2\\nsample2 = sample2 + equal(stickybit,0);\\n\\n//transision\\nedge = bnot(equal(bit2,stickybit));\\n\\nvolAvg = volAvg - volAvg*edge*stickybit;\\nvolAvg2 = volAvg2 - volAvg2*edge*equal(stickybit,0);\\n\\nsample1 = sample1  - sample1*edge*stickybit;\\nsample2 = sample2  - sample2*edge*equal(stickybit,0);\\n\\n//test vol against avg buffer lvl\\ndiff = if(equal(stickybit,1), (basssum/(volAvg2/sample2)) , 0);\\ndiff = if(equal(stickybit,0), (basssum/(volAvg/sample1)), diff);\\n\\nq3 = diff;\\n\\nbit2 = time%2;\\n\\ndifftime = difftime + diff*0.03;\\nq2 = difftime;\\n\\n//fix a strange error\\ndifftime = if(above(difftime,2000),0, difftime);\\n\\nspintime = spintime + bass*0.03*if(equal(state%2,1),1,-1); \\nq8 = spintime;\\n\\nstate = state + above(diff,10);\\n\\nmonitor = spintime;","pixel_eqs_eel":"zoom = 1.05 - sin(q3)*0.04;\\nrot =0;// 4.72;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 8.0);\\n  ret_1.xz = vec2(0.0, 0.0);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = fract(uv);\\n  ret_1.y = texture (sampler_fc_main, tmpvar_3).y;\\n  ret_1.y = (ret_1.y + ((\\n    ((ret_1.y - ((texture (sampler_blur3, tmpvar_3).xyz * scale3) + bias3).y) - 0.03)\\n   * 0.6) - 0.06));\\n  ret_1.y = (ret_1.y + ((\\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\\n   + bias3).x * 0.3));\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  tmpvar_4.y = (((texture (sampler_blur1, \\n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1)).z;\\n  ret_1.z = (texture (sampler_fc_main, (mix (uv_orig, uv, vec2(0.3, 0.3)) + (\\n    (tmpvar_4 * texsize.zw)\\n   * 8.0))).z - 0.03);\\n  ret_1.z = (ret_1.z + ((\\n    clamp ((0.2 - ((texture (sampler_blur2, uv).xyz * scale2) + bias2).y), 0.0, 1.0)\\n   * 0.1) + (\\n    ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2)\\n  .x * 0.2)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec2 tmpvar_2;\\n  tmpvar_2 = (texsize.zw * 2.0);\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\\n  ).xyz * scale1) + bias1));\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = tmpvar_3.y;\\n  tmpvar_5.y = tmpvar_4.y;\\n  vec2 tmpvar_6;\\n  tmpvar_6.x = tmpvar_3.x;\\n  tmpvar_6.y = tmpvar_4.x;\\n  vec2 tmpvar_7;\\n  tmpvar_7 = ((uv - (\\n    (tmpvar_5 * texsize.zw)\\n   * 16.0)) + (tmpvar_6 * 0.2));\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_3.x;\\n  tmpvar_8.y = tmpvar_4.x;\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - ((tmpvar_8 * texsize.zw) * 8.0));\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_3.y;\\n  tmpvar_10.y = tmpvar_4.y;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_3.y;\\n  tmpvar_11.y = tmpvar_4.y;\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_3.y;\\n  tmpvar_12.y = tmpvar_4.y;\\n  vec3 tmpvar_13;\\n  tmpvar_13 = mix (clamp ((\\n    clamp (mix (mix (mix (\\n      mix (mix (ret_1, vec3(0.4, 0.8, 0.9), ((texture (sampler_blur1, uv).xyz * scale1) + bias1).zzz), vec3(1.0, 1.0, 1.0), (vec3(1.04, 0.832, 0.32) * ((\\n        (((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2) - ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1))\\n       + \\n        (texture (sampler_main, tmpvar_7).xyz * 0.9)\\n      ) + (\\n        (-(tmpvar_3.y) + tmpvar_4.y)\\n       * 0.4)).y))\\n    , vec3(0.0, 1.0, 2.0), vec3(\\n      (((texture (sampler_blur3, (tmpvar_9 - \\n        (tmpvar_10 * 0.4)\\n      )).xyz * scale3) + bias3).x * 0.4)\\n    )), vec3(1.0, 2.0, 2.0), vec3((\\n      ((texture (sampler_blur2, (tmpvar_9 - (tmpvar_11 * 0.2))).xyz * scale2) + bias2)\\n    .x * 0.4))), vec3(2.0, 2.0, 1.6), vec3(((\\n      (texture (sampler_blur1, (tmpvar_9 - (tmpvar_12 * 0.1))).xyz * scale1)\\n     + bias1).x * 0.2))), 0.0, 1.0)\\n   * \\n    (vec3(1.0, 1.0, 1.0) - vec3((((texture (sampler_blur1, \\n      (tmpvar_9 + vec2(0.02, -0.02))\\n    ).xyz * scale1) + bias1).x * 0.4)))\\n  ), 0.0, 1.0), vec3(1.0, -0.2, -0.2), vec3((texture (sampler_main, uv).x * 0.6)));\\n  ret_1 = tmpvar_13;\\n  vec4 tmpvar_14;\\n  tmpvar_14.w = 1.0;\\n  tmpvar_14.xyz = tmpvar_13;\\n  ret = tmpvar_14.xyz;\\n }"}')},4931:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":366,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":408,"rad":0.03,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":262,"rad":0.0297,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"enabled":1,"sides":14,"num_inst":276,"rad":0.0303,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"p1 = 2000; p2 = 200; p3=50;","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\ndec_med = pow (0.9, 30/fps);\\ndec_slow = pow (0.9, 30/fps);\\nbeat = max (max (bass, mid), treb); \\navg = avg*dec_slow + beat*(1-dec_slow);\\nis_beat = above(beat, .1+avg+peak) * above (time, t0+.2);\\nt0 = is_beat*time + (1-is_beat)*t0;\\npeak = is_beat * beat + (1-is_beat)*peak*dec_med;\\nindex = (index + is_beat) %16;\\nindex2 = (index2 + is_beat*bnot(index))%5;\\nmonitor = index2;\\nq1 = is_beat;\\nq3 = bass + mid + treb;\\nq4 = index2;\\nk1 =  is_beat*equal(index%2,0);\\np1 =  k1*(p1+1) + (1-k1)*p1;\\np2 = dec_med * p2+ (1-dec_med)*p1;\\nrott_ = p2 * 3.1416/4;\\nrott =  rott +  .2*30/fps*q2;\\nq2 = sin(rott);\\nran = bnot(q1)*ran + q1 * (int(rand(50))-24);\\ntran = tan(ran);\\ntran = max(tran,-5);\\ntran = min(tran,5);\\ntrel = trel + .02*30/fps*tran+q1;\\nq5 = cos(trel);\\nq6 = sin(trel);\\nq7 = -q6;//it makes no sense, but commenting q7/8 fucks it up majorly\\nq8 = q5;\\nmovex = movex*dec_slow + .1*sin(rott)*30/fps;\\nspd = spd*bnot(q1) + q3*q1;\\nmovez = movez + .005*30/fps*spd;\\nq9 = movez;\\nmv_x = 20;\\nmv_y = 15;\\nmv_a = .1;\\nmv_l = 0;\\nq10 = sin(time/7);\\nq12 = sin(time/11);\\n\\n//flexi mobius spiral col frame\\nt = t + 2.5/fps;\\nt = if(above(t,2),t-2,t);\\ndb = db*0.98 + bass_att*0.2; // dampener\\nbb = bb + db*0.1; // accumulation, replace time expressions with this ;)\\ndt = dt*0.98 + treb_att*0.2;\\ntt = tt + dt*0.1;\\ndm = dm*0.98 + mid_att*0.2;\\nmm = mm + dm*0.1;\\nw = (bb-tt)*0.1;                   // angle\\nq32 = 0.8 - (db-dt)*0.04;         // size\\nq31 = sin(w);\\nq30 = cos(w);\\nq29 = sin(-w);\\nq28 = cos(-w);\\nq27 = 1/q32;\\nzoom =1;// 0.999;\\nwarp = 0;\\nscale = 8;\\nangle = -time*0.2;\\nscale = 0.8;\\nangle = time*0.2;\\nq31 = 1/asin(1);\\ndecay=.96;\\nvol= vol+(db+dm+dt)*0.002;\\nmv_r = 0.5 + 0.4*sin(time*1.324);\\nmv_g = 0.5 + 0.4*cos(time*1.371);\\nob_r = 0.5 + 0.4*sin(time*1.324);\\nob_g = 0.5 + 0.4*cos(time*1.371);\\nzoom=.97+(treb*0.02);\\nmusictime=vol;\\nq26=sin(musictime*0.2)*99.45;\\nq25=sin(musictime*0.1)*99.45;\\nq24=sin(musictime*0.21)*99.45;\\nq23=sin(musictime*0.21)*99.45;\\nq22=sin(musictime*0.12)*99.45;\\nq21=sin(musictime*0.22)*99.45;\\nq20=sin(musictime*0.13)*99.45;\\nq19=sin(musictime*0.23)*99.45;\\nq18=sin(musictime*0.24)*999.45;\\nq17=sin(musictime*0.14)*999.45;\\ndx=sin(musictime*0.2)*0.02;\\ndy=cos(musictime*0.69)*0.02;","pixel_eqs_eel":"zoom = 1;\\nwarp = .1;","warp":" shader_body { \\n  vec3 ret_1;\\n  vec3 tmpvar_2;\\n  tmpvar_2 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = (0.3 * tmpvar_3.x);\\n  tmpvar_4.y = tmpvar_3.y;\\n  ret_1 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_4))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_2 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_3 * 0.01)\\n  .xy)).xyz + (tmpvar_2 * 0.1)));\\n  vec4 tmpvar_5;\\n  tmpvar_5 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\\n    ret_1.y = (ret_1.y + (tmpvar_5.x * 0.5));\\n  };\\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\\n    ret_1.z = (ret_1.z + (tmpvar_5.y * 0.5));\\n  };\\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\\n    ret_1.x = (ret_1.x + (tmpvar_5.z * 0.5));\\n  };\\n  float tmpvar_6;\\n  tmpvar_6 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_1 = (ret_1 * (0.98 * (tmpvar_6 * tmpvar_6)));\\n  ret_1 = (ret_1 - 0.04);\\n  vec4 tmpvar_7;\\n  tmpvar_7.w = 1.0;\\n  tmpvar_7.xyz = ret_1;\\n  ret = tmpvar_7.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 dy_2;\\n  vec3 dx_3;\\n  vec2 d_4;\\n  vec3 ret_5;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (texsize.zw * 3.0);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (((texture (sampler_blur1, \\n    (uv + (vec2(1.0, 0.0) * tmpvar_6))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(1.0, 0.0) * tmpvar_6))\\n  ).xyz * scale1) + bias1)).y;\\n  tmpvar_7.y = (((texture (sampler_blur1, \\n    (uv + (vec2(0.0, 1.0) * tmpvar_6))\\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \\n    (uv - (vec2(0.0, 1.0) * tmpvar_6))\\n  ).xyz * scale1) + bias1)).y;\\n  uv_1 = (uv + ((tmpvar_7 * rad) * 0.3));\\n  d_4 = (texsize.zw * 16.0);\\n  dx_3 = (((texture (sampler_blur2, \\n    (uv_1 + (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_1 - (vec2(1.0, 0.0) * d_4))\\n  ).xyz * scale2) + bias2));\\n  dy_2 = (((texture (sampler_blur2, \\n    (uv_1 + (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    (uv_1 - (vec2(0.0, 1.0) * d_4))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_8;\\n  tmpvar_8 = mix (ret_5, ((1.0 - texture (sampler_main, uv_1).x) * vec3(1.5, 2.5, 3.0)), vec3((clamp (\\n    (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).x * 2.0)\\n  , 0.0, 1.0) * 0.5)));\\n  ret_5 = tmpvar_8;\\n  vec3 tmpvar_9;\\n  tmpvar_9.x = dx_3.y;\\n  tmpvar_9.y = dy_2.z;\\n  tmpvar_9.z = dx_3.x;\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_9) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_8.x > (q26 * q13)) && (tmpvar_8.x <= (q23 * q11)))) {\\n    ret_5.z = (tmpvar_8.z - (tmpvar_10.x * 0.5));\\n  };\\n  if (((tmpvar_8.y > (q25 * q11)) && (tmpvar_8.y <= (q22 * q12)))) {\\n    ret_5.x = (tmpvar_8.x - (tmpvar_10.y * 0.5));\\n  };\\n  if (((ret_5.z > (q24 * q12)) && (ret_5.z <= (q21 * q13)))) {\\n    ret_5.y = (tmpvar_8.y - (tmpvar_10.z * 0.5));\\n  };\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = dx_3.z;\\n  tmpvar_11.y = dy_2.z;\\n  vec3 tmpvar_12;\\n  tmpvar_12 = mix (mix ((ret_5 * rad), vec3(1.0, 0.75, 0.0), vec3((\\n    (((dy_2 + dx_3).z * 0.43) + 0.5)\\n   * \\n    ((texture (sampler_blur2, (uv_1 + (\\n      (tmpvar_11 * texsize.zw)\\n     * 32.0))).xyz * scale2) + bias2)\\n  .z))), vec3(1.5, 2.0, 3.0), vec3((texture (sampler_main, uv).y * (0.4 - \\n    (rad * 0.7)\\n  ))));\\n  ret_5 = tmpvar_12;\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = tmpvar_12;\\n  ret = tmpvar_13.xyz;\\n }"}')},9111:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"red_blue":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"ib_r":1,"ib_g":1,"ib_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"rad":0.01,"tex_zoom":0.26465,"r":0.2,"b":0.7,"a":0.24,"r2":1,"g2":0,"b2":1,"a2":0.1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_eel":"//samples = 256 + 50*sin(time*.939493949);\\n//num_inst = 256 + 50*sin(time*.939493949);\\n//samples = .5 + sin(time*.939493949);\\nnum_inst = .5 + sin(time*.939493949);","frame_eqs_eel":"\\nsample = instance/1024;\\n//num_inst = .5 + sin(time*.939493949);\\ntm = q1;\\nsp = sample*6.28*8*6*sin(time)*100;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\n//rad = .5 + vol + .01;\\nrad2=1.3;\\nra = rad2*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad2;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = q8;\\noz = oz + 5;\\nrad=rad*instance*.0041;//3d\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trans = rand(int(q30))/15+instance-instance;\\ntrans2 = rand(int(q30))/15+instance-instance;\\ntrans3 = rand(int(q30))/15+instance-instance;\\na = trans;\\n\\nx = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\ny = .5 + int(rand(15))*0.01*bass_att*if(equal(int(rand(2)),1),1,-1)+instance-instance;\\nrad = .09 + rand(int(q30))/15+instance-instance;\\nr=rand(q30)*.1+instance-instance;\\ng=rand(q30)*.1+instance-instance;\\nb=rand(q30)*.1+instance-instance;\\nr2=rand(q30)*.1+instance-instance;\\ng2=rand(q30)*.1+instance-instance;\\nb2=rand(q30)*.1+instance-instance;\\nborder_r=rand(q30)*.1+instance-instance;\\nborder_g=rand(q30)*.1+instance-instance;\\nborder_b=rand(q30)*.1+instance-instance;"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"num_inst":7,"rad":0.03333,"r":0,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = int(rand(100))*.01+instance-instance;\\ny = int(rand(100))*.01+instance-instance;\\n\\na =1;\\nvol=bass+mid+treb;\\nrad = int(rand(int(vol)))/7+instance-instance;"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*tan(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=1-mx;\\ny=1-my;\\n\\nang=(sin(time*.35)+1)*3;\\n//a=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nt1=bass+mid+treb;"}],"waves":[{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"g":0.1,"b":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\\nsp = sample*6.28*8*6;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\nrad = .5 + vol;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = q8;\\noz = oz + 5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"r":0,"g":0.5,"b":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\\nsp = sample*6.28*8*6;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\nrad = .5 + vol;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = -q8;\\noz = oz + 5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"enabled":1,"samples":102,"spectrum":1,"thick":1,"additive":1,"smoothing":0,"g":0.1,"b":0.1},"init_eqs_eel":"","frame_eqs_eel":"samples = 256 + 50*sin(time*.939493949);\\nvol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\\nsp = sample*6.28*8*6*sin(time)*100;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\n//rad = .5 + vol + .01;\\nrad=1;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = q8;\\noz = oz + 5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"},{"baseVals":{"spectrum":1,"usedots":1,"smoothing":0,"r":0,"g":0.5,"b":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"vol = (bass_att + mid_att + treb_att)*.333333;\\nvol_avg = .1*(vol_avg*9 + vol);\\nvg = vol_avg*.1;\\nt1 = if(above(vg,1.8),1.8,vg);","point_eqs_eel":"tm = q1;\\nsp = sample*6.28*8*6;\\n\\nvol = (value1+value2)*.5;\\nit = it*above(sample,0);\\nit = it + 1;\\nrad = .5 + vol + .01;\\nra = rad*sin(sample*3.14);\\nox = ra*sin(sp);\\noy = sin(sample*3.14-1.57)*rad;\\noz = ra*cos(sp);\\n\\nxang = q4;\\nyang = q5;\\nzang = q6;\\nfov = .5;\\n\\nmx = ox*cos(zang) - oy*sin(zang);\\nmy = ox*sin(zang) + oy*cos(zang);\\nox = mx;\\noy = my;\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\nmy = oy*cos(xang) - oz*sin(xang);\\nmz = oy*sin(xang) + oz*cos(xang);\\noy = my;\\noz = mz;\\n\\nyang = -q8;\\noz = oz + 5;\\n\\nmx = ox*cos(yang) + oz*sin(yang);\\nmz = - ox*sin(yang) + oz*cos(yang);\\nox = mx;\\noz = mz;\\n\\noz = oz - 5;\\n\\noz = oz - 2;\\nx = ox*fov/oz + 0.5;\\nx = (x-.5)*0.75 + 0.5;\\ny = oy*fov/oz + 0.5;\\n"}],"init_eqs_eel":"","frame_eqs_eel":"chng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\n\\n\\nwave_a = 0;\\ndecay = 0.5;\\n\\ntic = min(time-tin,.1);\\ntin = time;\\n\\nra = 10;\\ntreb_avg = tic*(treb_avg*(1/tic - ra) + ra*treb);\\nmid_avg = tic*(mid_avg*(1/tic - ra) + ra*mid);\\nbass_avg = tic*(bass_avg*(1/tic - ra) + ra*bass);\\nvav = tic*(vav*(1/tic - ra) + ra*(bass+treb+mid)*.33333);\\n\\ntt = tt + tic*treb_avg;\\nmt = mt + tic*mid_avg;\\nbt = bt + tic*bass_avg;\\nvt = vt + tic*vav;\\n\\nq1 = vt + 15;\\nq2 = (tt + mt)*.3 + 15;\\nq3 = time*.2;\\n\\nq4 = tt;\\nq5 = mt;\\nq6 = bt;\\n\\n\\nq8 = -.01;\\n\\nwarp = 0;\\ndecay = .92;\\nq30=bass+treb+mid;","pixel_eqs_eel":"zoom = zoom + (.03*(bass_att*bass_att))*rad;\\nrot = rot + rad*(-2.5&(cos(time)*5))*.01;","warp":" shader_body { \\n  vec2 tmp_1;\\n  vec3 ret_2;\\n  tmp_1.x = (ang * 3.0);\\n  tmp_1.y = rad;\\n  vec3 tmpvar_3;\\n  tmpvar_3 = (texture (sampler_noise_lq, ((\\n    ((texsize.xy * texsize_noise_lq.zw).x * uv)\\n   / 2.0) + q23)) + 1.0).xyz;\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - 0.3);\\n  vec2 tmpvar_5;\\n  tmpvar_5.x = (0.3 * tmpvar_4.x);\\n  tmpvar_5.y = tmpvar_4.y;\\n  ret_2 = ((-0.4 * (\\n    ((texture (sampler_blur1, ((uv / 4.0) + (0.4 * tmpvar_5))).xyz * scale1) + bias1)\\n   - \\n    (tmpvar_3 * 0.1)\\n  )) + (texture (sampler_main, (uv + \\n    (tmpvar_4 * 0.01)\\n  .xy)).xyz + (tmpvar_3 * 0.1)));\\n  vec4 tmpvar_6;\\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmp_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_6.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_6.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_6.z * 0.5));\\n  };\\n  float tmpvar_7;\\n  tmpvar_7 = (1.0 - ((0.01 * q28) * (q28 * rad)));\\n  ret_2 = (ret_2 * (0.98 * (tmpvar_7 * tmpvar_7)));\\n  ret_2 = (ret_2 - 0.04);\\n  vec4 tmpvar_8;\\n  tmpvar_8.w = 1.0;\\n  tmpvar_8.xyz = ret_2;\\n  ret = tmpvar_8.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.x = cos(((uv.y * texsize.y) / 2.0));\\n  tmpvar_3.y = sin(((uv.x * texsize.x) / 2.0));\\n  uv_1 = (uv + ((2.0 * texsize.zw) * tmpvar_3));\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((ret_2.x > (q26 * q13)) && (ret_2.x <= (q23 * q11)))) {\\n    ret_2.z = (ret_2.z - (tmpvar_4.x * 0.5));\\n  };\\n  if (((ret_2.y > (q25 * q11)) && (ret_2.y <= (q22 * q12)))) {\\n    ret_2.x = (ret_2.x - (tmpvar_4.y * 0.5));\\n  };\\n  if (((ret_2.z > (q24 * q12)) && (ret_2.z <= (q21 * q13)))) {\\n    ret_2.y = (ret_2.y - (tmpvar_4.z * 0.5));\\n  };\\n  ret_2 = (1.4 * pow ((\\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\\n   * \\n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\\n  ), vec3(0.5, 0.5, 0.5)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }"}')},1049:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken_center":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.905,"warpscale":0.01,"zoom":0.96098,"rot":0.08,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":0.25,"ib_size":0.18,"ib_r":0.3,"ib_g":0.3,"ib_b":0.3,"ib_a":0.09,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":3.99866,"tex_zoom":0.25005,"r":0.9,"g":0.94,"b":0.89,"r2":0.84,"g2":0.93,"b2":1,"a2":1,"border_b":0,"border_a":0},"init_eqs_eel":"t1 = rand(100)*0.01;\\nt2 = rand(100)*0.01;\\nte = 1;\\npoly = 5;","frame_eqs_eel":"tm = time*.05;\\n\\nr = .95 + .05*sin(tm*1.654);\\ng = .95 + .05*sin(tm*1.564);\\nb = .95 + .05*sin(tm*1.465);\\nr2 = 1.9 - r;\\ng2 = 1.9 - g;\\nb2 = 1.9 - b;\\n\\nx = .4996;\\ny = .5003;\\n\\n\\n\\nang = (rand(1001)*.001 - rand(1001)*.001)*q1*.5;\\nrad = rad - (rand(1001)*.001 + rand(1001)*.001)*1.5*q1;\\n\\na=above(treb,.8);\\na2=above(treb,.8);"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = if(equal(it,0),rand(4),1);\\nxv = if(sw,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\ncvc = if(equal(it,0),cvb,cvc);\\ncvb = if(equal(it,0),cva,cvb);\\ncva = if(equal(it,0),cv,cva);\\ncv = if(equal(it,0),if(equal(cva,cvb),1-cva,if(cva,above(rand(1001)*.001,.69),above(rand(1001)*.001,.14))),cv);\\n\\nlr = if(equal(it,0),if(cv,rand(10001)*.0001*316.02,rand(10001)*.0001*193.66),lr);\\n\\nlet = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8);\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = if(equal(it,0),rand(4),1);\\nxv = if(sw,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\ncvc = if(equal(it,0),cvb,cvc);\\ncvb = if(equal(it,0),cva,cvb);\\ncva = if(equal(it,0),cv,cva);\\ncv = if(equal(it,0),if(equal(cva,cvb),1-cva,if(cva,above(rand(1001)*.001,.69),above(rand(1001)*.001,.14))),cv);\\n\\nlr = if(equal(it,0),if(cv,rand(10001)*.0001*316.02,rand(10001)*.0001*193.66),lr);\\n\\nlet = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8);\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = if(equal(it,0),rand(4),1);\\nxv = if(sw,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\ncvc = if(equal(it,0),cvb,cvc);\\ncvb = if(equal(it,0),cva,cvb);\\ncva = if(equal(it,0),cv,cva);\\ncv = if(equal(it,0),if(equal(cva,cvb),1-cva,if(cva,above(rand(1001)*.001,.69),above(rand(1001)*.001,.14))),cv);\\n\\nlr = if(equal(it,0),if(cv,rand(10001)*.0001*316.02,rand(10001)*.0001*193.66),lr);\\n\\nlet = (1-cv)*(1 + above(lr,43.31)*4 + above(lr,100.19)*4 + above(lr,138.64)*6 + above(lr,175.51)*6) + cv*(2 + above(lr,10.56) + above(lr,33.69) + above(lr,50.94)*2 + above(lr,60.18) + above(lr,72.77) + above(lr,88.08)*2 + above(lr,89.08) + above(lr,94.69) + above(lr,122.67) + above(lr,138.03) + above(lr,171.95)*2 + above(lr,188.09) + above(lr,189.09) + above(lr,227.73) + above(lr,256.96) + above(lr,292.39)*2 + above(lr,297.52) + above(lr,304.09) + above(lr,305.57) + above(lr,314.63));\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8);\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"it = (it + 1)*above(sample,0)*below(it,53);\\nita = (ita + equal(it,0))*above(sample,0);\\n\\nsw = 1-equal(it,0)*equal(ita,0);\\nswi = (equal(lr,9) + equal(lr,5))*equal(it,0)*equal(ita,4);\\nxv = if(sw - swi,xv,rand(1001)*.001*.8);\\nmx = xv + ita*.025;\\nmy = if(sw - swi,my,rand(1001)*.001*.975);\\n\\nsz = .01;\\nvx = above(it,1)*below(it,39) + above(it,12)*below(it,28) - equal(it,20) + equal(it,46) + equal(it,51) + equal(it,41) - equal(it,15) - equal(it,25) + equal(it,10) + equal(it,30) - equal(it,4) - equal(it,36);\\nvy = above(it,17)*below(it,49) + above(it,22)*below(it,44) - equal(it,33) + equal(it,7) + equal(it,51) + equal(it,15) - equal(it,41) - equal(it,25) + equal(it,4) + equal(it,10) - equal(it,36) - equal(it,30);\\n\\nsa = equal(ita,0)*13 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*11 + equal(ita,4)*4 + equal(ita,5)*18 + equal(ita,6)*15 + equal(ita,7)*16;\\nsb = equal(ita,0)*11 + equal(ita,1)*9 + equal(ita,2)*12 + equal(ita,3)*12;\\nsc = equal(ita,0)*4 + equal(ita,1)*15 + equal(ita,3)*4 + equal(ita,4)*18 + equal(ita,5)*21 + equal(ita,6)*7 + equal(ita,7)*19;\\nsd = equal(ita,0)*12 + equal(ita,1)*15 + equal(ita,2)*22 + equal(ita,3)*5;\\nse = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*20 + equal(ita,3)*5;\\nsf = equal(ita,0)*6 + equal(ita,1)*5 + equal(ita,2)*1 + equal(ita,3)*18 + equal(ita,5)*10 + equal(ita,6)*15 + equal(ita,7)*25;\\nsg = equal(ita,0)*1 + equal(ita,1)*14 + equal(ita,2)*7 + equal(ita,3)*5 + equal(ita,4)*18;\\nsh = equal(ita,0)*19 + equal(ita,1)*21 + equal(ita,2)*18 + equal(ita,3)*16 + equal(ita,4)*18 + equal(ita,5)*9 + equal(ita,6)*19 + equal(ita,7)*5;\\nsi = equal(ita,0)*8 + equal(ita,1)*1 + equal(ita,2)*16 + equal(ita,3)*16 + equal(ita,4)*25;\\nsj = equal(ita,0)*25 + equal(ita,1)*5 + equal(ita,2)*19 + equal(ita,6)*14 + equal(ita,7)*15;\\n\\nlr = if(sw,lr,rand(10));\\nlet = equal(lr,0)*sa + equal(lr,1)*sb + equal(lr,2)*sc + equal(lr,3)*sd + equal(lr,4)*se + equal(lr,5)*sf + equal(lr,6)*sg + equal(lr,7)*sh + equal(lr,8)*si + equal(lr,9)*sj;\\n\\nva = equal(let,23) + equal(let,24) + equal(let,26);\\nvb = above(let,0)*below(let,9) + above(let,10)*below(let,19) + equal(let,21) + equal(let,23);\\nvc = equal(let,1) + equal(let,2) + equal(let,5) + equal(let,6) + equal(let,8) + equal(let,11) + equal(let,16) + equal(let,18) + equal(let,19);\\nvd = above(let,1)*below(let,9) + above(let,10)*below(let,24) - equal(let,20);\\nve = equal(let,13) + equal(let,14) + equal(let,24) + equal(let,25);\\nvf = above(let,1)*below(let,8) + equal(let,9) + above(let,14)*below(let,21) + equal(let,26);\\nvg = equal(let,1);\\nvh = equal(let,9) + equal(let,20);\\nvi = above(let,0)*below(let,5) - equal(let,3) + equal(let,18);\\nvj = above(let,2)*below(let,8) - equal(let,4) + equal(let,9) + above(let,14)*below(let,21) - equal(let,18) + equal(let,26);\\nvk = equal(let,11) + equal(let,13) + above(let,23)*below(let,27);\\nvl = equal(let,8) + equal(let,10) + above(let,12)*below(let,18) + above(let,20)*below(let,24);\\nvm = equal(let,1) + equal(let,2) + equal(let,8) + equal(let,16) + equal(let,18) + equal(let,19);\\nvn = equal(let,1) + equal(let,7) + equal(let,8) + equal(let,10) + above(let,12)*below(let,24) - equal(let,16) - equal(let,18) - equal(let,20) - equal(let,22);\\nvo = equal(let,11) + equal(let,14) + equal(let,17) + equal(let,18) + equal(let,23) + equal(let,24);\\nvp = equal(let,3) + equal(let,5) + equal(let,7) + equal(let,9) + equal(let,10) + equal(let,12) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\nvq = equal(let,2) + equal(let,4) + equal(let,22);\\nvr = equal(let,9) + equal(let,20) + equal(let,25);\\nvs = equal(let,22);\\nvt = above(let,1)*below(let,13) - equal(let,6) - equal(let,8) - equal(let,11) + equal(let,15) + equal(let,17) + equal(let,19) + equal(let,21) + equal(let,26);\\n\\na = if(above(it,51),0,if(above(it,49),va,if(above(it,47),vb,if(above(it,44),vc,if(above(it,42),vd,if(above(it,39),ve, if(above(it,37),vf,if(above(it,34),vg,if(above(it,31),vh,if(above(it,28),vi,if(above(it,26),vj,if(above(it,23),vk, if(above(it,21),vl,if(above(it,18),vm,if(above(it,16),vn,if(above(it,13),vo,if(above(it,11),vp,if(above(it,8),vq, if(above(it,5),vr,if(above(it,2),vs,if(it,vt,0)))))))))))))))))))));\\n\\na = a*below(ita,8);\\n\\nx = mx + vx*sz*.75;\\ny = my + vy*sz*1.5;"}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5+0.5*sin(time*1.12);\\nwave_g = 0.5+0.5*sin(time*1.22);\\nwave_b = 0.5*0.5*sin(time*1.32);\\nib_r = wave_b;\\nib_g = wave_r;\\nib_b = wave_g;\\n\\n// Thanks a bunch to flexi (once again) for beat detection!\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nx = if(beat,rand(60)*0.01 + 0.2,x);\\ny = if(beat,rand(60)*0.01 + 0.2,y);\\nrot = (rot+0.05*(sin(bass)*sin(bass)))*if(above(x,y),1,-1)","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.875);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = max (vec4(0.2, 0.2, 0.2, 0.2), min (vec4(0.85, 0.85, 0.85, 0.85), rand_preset));\\n  uv_1 = (uv + texture (sampler_pw_noise_lq, ((\\n    (floor((uv * vec2(10.0, 10.0))) * 0.1)\\n   + tmpvar_3.xy) * aspect.xy)).xy);\\n  ret_2 = -(((tmpvar_3.xyz * vec3(0.0, 1.5, 0.5)) * (\\n    (texture (sampler_blur1, fract(uv_1)).xyz * scale1)\\n   + bias1).yyy));\\n  ret_2 = (ret_2 - mix (ret_2, (tmpvar_3.xyz * vec3(1.8, 0.5, 2.0)), (\\n    (texture (sampler_blur2, fract(uv_1)).xyz * scale2)\\n   + bias2).zzz));\\n  vec3 tmpvar_4;\\n  tmpvar_4 = mix (mix (ret_2, (tmpvar_3.yyy * vec3(-0.45, 0.25, 0.5)), texture (sampler_main, fract(uv_1)).yyy), (tmpvar_3.zzz * vec3(1.15, 0.75, -0.2)), texture (sampler_main, fract(uv_1)).zzz);\\n  ret_2 = (tmpvar_4 - mix (-(tmpvar_4), vec3(0.75, 0.75, 0.75), (texture (sampler_main, uv).xzy - 0.125)));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = pow (ret_2, (tmpvar_3.xyz - ret_2));\\n  ret_2 = (tmpvar_5 * tmpvar_5);\\n  vec4 tmpvar_6;\\n  tmpvar_6.w = 1.0;\\n  tmpvar_6.xyz = ret_2;\\n  ret = tmpvar_6.xyz;\\n }"}')},8954:e=>{e.exports=JSON.parse('{"version":1,"baseVals":{"rating":3,"gammaadj":1.56,"decay":0.985,"echo_zoom":1.193,"echo_alpha":1,"echo_orient":1,"wave_mode":7,"wrap":0,"brighten":1,"darken":1,"wave_a":1.006,"wave_scale":0.081,"wave_smoothing":0,"warpanimspeed":0.905,"warpscale":0.01,"zoom":1.05101,"warp":0.01,"wave_y":1,"ob_size":0.025,"ob_a":0.25,"ib_size":0.18,"ib_r":0.3,"ib_g":0.3,"ib_b":0.3,"ib_a":0.03,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":6,"textured":1,"rad":0.01,"ang":3.95841,"tex_ang":2.38751,"tex_zoom":0.74185,"r":0.95,"g":0.98,"b":0.98,"a":0.98,"r2":0.98,"g2":0.98,"b2":0.98,"a2":0.98,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ang = ang + 0.5*time;\\nrad = 0.8 + 0.1*bass_att;"},{"baseVals":{"enabled":1,"sides":100,"rad":0.12824,"r":0,"a":0.3,"g2":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"num_inst":2,"y":1,"rad":0.19285,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"","frame_eqs_eel":"wave_r = 0.5+0.5*sin(time*1.12);\\nwave_g = 0.5+0.5*sin(time*1.22);\\nwave_b = 0.5*0.5*sin(time*1.32);\\nib_r = wave_b;\\nib_g = wave_r;\\nib_b = wave_g;\\n//rot = 0.1*(sin(treb)*sin(treb));\\n\\n// Thanks a bunch to flexi (once again) for beat detection!\\n\\nvol = bass*8 + mid*4 + treb*2;\\nvol = vol*above(vol,17);\\nmonitor = vol;\\nbeat = above(vol,res);\\ndiff = (1-beat)*diff + beat*(vol-res);\\nres = beat*(vol+2*diff) + (1-beat)*(res - (diff*0.04 + 0.12)*60/fps);\\nres = max(0,res);\\nmonitor = res;\\n\\nx = if(beat,rand(60)*0.01 + 0.2,x);\\ny = if(beat,rand(60)*0.01 + 0.2,y);\\nwave_mystery = if(above(x,y),0,-1);","pixel_eqs_eel":"","warp":"","comp":""}')},9119:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.7,"decay":0.968,"echo_zoom":1,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.498,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.95,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":31.2,"mv_y":2.28,"mv_l":2.5,"mv_b":0.8,"mv_a":0.1},"shapes":[{"baseVals":{"sides":7,"textured":1,"rad":0.51645,"g":1,"b":1,"r2":1,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":1,"sides":7,"textured":1,"y":0.74,"rad":0.61775,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"y = sin(q2/17)*0.4 + 0.5;\\n\\n//ang = q2/9"},{"baseVals":{"enabled":1,"sides":7,"additive":1,"textured":1,"y":0.74,"rad":0.29289,"g":1,"b":1,"a":0.1,"r2":1,"b2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x= sin(q2/8)*0.1 + 0.5;\\ny= cos(q2/8)*0.1*1.333 + 0.5;\\n\\ny = y + sin(q2/4)*0.4;\\n"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_eel":"","frame_eqs_eel":"advance=advance+ 0.005;\\nadvance=if( above(advance,2) , 0, advance);\\nt1=advance","point_eqs_eel":"s=sample*6.28;\\n\\n//plot random x position via function of sample pos;\\nxp=sin(s)+sin(s*0.34)+sin(s*24.3)+sin(s*13.8);\\nxp=xp*0.20;\\n\\n//plot random y position via function of sample pos;\\nyp=cos(s)+sin(s*0.24)+cos(s*17.4)+sin(s*37.7);\\nyp=yp*0.20;\\n\\n//plot random z position via function of sample pos;\\nzp=cos(s)+cos(s*5.24)+cos(s*47.4)+cos(s*27.7);\\nzp=zp*0.25;\\n\\n//pull stars toward screen\\nzp=zp + 1 - t1;\\n\\n//correct when below 0\\nzp=if( below(zp,0) , zp+2 , zp );\\n\\n//darken far stars\\na=(1 - zp*0.5);\\n\\nyq=zp;\\nzq=yp;\\nyp=yq;\\nzp=zq;\\n\\nzp=zp;\\n\\nzp=zp+1.1;\\n\\nx_screen=xp/zp + 0.5;\\ny_screen=yp/zp ;\\n\\nx=x_screen;\\ny=y_screen;\\n\\nr=1;\\ng=1;\\nb=1;\\n\\n\\n\\nn2=abs((sample*1.283)-3.1415);\\n\\ntm =time / 7;\\nr=sin(n2+tm)*0.5+0.5;\\ng=sin(n2+2.1+tm)*0.5+0.5;\\nb=sin(n2+4.2+tm)*0.5+0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"a":0.47,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"xs=sin(sample*6.28);\\nys=cos(sample*6.28);\\nxs=xs*0.7 + 0.5;\\nys=ys*0.7 + 0.5;\\nxs=min(xs,0.958);\\nxs=max(xs,0.042);\\nys=min(ys,0.988);\\nys=max(ys,0.012);\\nx=xs;y=ys;\\n\\nn2=abs((sample*6.283)-3.1415);\\n\\nr=sin(n2+time)*0.5+0.5;\\ng=sin(n2+2.1+time)*0.5+0.5;\\nb=sin(n2+4.2+time)*0.5+0.5;\\n\\na = above( y , 0.98 )"}],"init_eqs_eel":"","frame_eqs_eel":"warp = 0;\\nzoom = 1.001;","pixel_eqs_eel":"","warp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = ((texture (sampler_noise_lq, (rand_frame.xy + \\n    ((uv * texsize_noise_lq.zw) * texsize.xy)\\n  )) * 2.0) - 1.0);\\n  ret_1 = (texture (sampler_pw_main, (uv + (\\n    (tmpvar_2.zw * texsize.zw)\\n   * 0.5))).xyz + ((0.59 - \\n    (0.2 * rad)\\n  ) * tmpvar_2.xyz));\\n  vec3 tmpvar_3;\\n  tmpvar_3 = clamp (((\\n    (ret_1 - 0.5)\\n   * 3.0) + 0.25), 0.0, 1.0);\\n  ret_1.x = tmpvar_3.x;\\n  ret_1.yz = tmpvar_3.xx;\\n  vec4 tmpvar_4;\\n  tmpvar_4.w = 1.0;\\n  tmpvar_4.xyz = ret_1;\\n  ret = tmpvar_4.xyz;\\n }","comp":" shader_body { \\n  vec2 uv3_2;\\n  vec3 col_3;\\n  col_3 = vec3(0.0, 0.0, 0.0);\\n  uv3_2 = (uv * 0.25);\\n  for (int i_1 = 0; i_1 < 16; i_1++) {\\n    uv3_2 = (uv3_2 + ((\\n      float(i_1)\\n     * vec2(0.25, 0.0)) - (\\n      float((0.0 == (float(mod (float(i_1), 4.0)))))\\n     * vec2(0.0, 0.25))));\\n    col_3 = mix (col_3, vec3((float(i_1) / 16.0)), vec3(clamp ((\\n      -(texture (sampler_main, uv3_2).y)\\n     + texture (sampler_pw_main, \\n      fract(uv3_2)\\n    ).y), 0.0, 1.0)));\\n  };\\n  vec3 tmpvar_4;\\n  tmpvar_4.z = 0.04;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (vec2(1.0, 0.0) * texsize.zw);\\n  tmpvar_4.x = (texture (sampler_main, (uv + tmpvar_5)).xyz - texture (sampler_main, (uv - tmpvar_5)).xyz).x;\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (vec2(0.0, 1.0) * texsize.zw);\\n  tmpvar_4.y = (texture (sampler_main, (uv + tmpvar_6)).xyz - texture (sampler_main, (uv - tmpvar_6)).xyz).x;\\n  vec3 tmpvar_7;\\n  tmpvar_7.z = 0.6;\\n  tmpvar_7.xy = (uv - 0.5);\\n  vec4 tmpvar_8;\\n  tmpvar_8 = texture (sampler_main, uv);\\n  vec4 tmpvar_9;\\n  tmpvar_9.w = 1.0;\\n  tmpvar_9.xyz = mix (mix ((tmpvar_8.z * vec3(0.6, 0.2, 1.0)), vec3(1.0, 1.0, 1.0), (col_3 * \\n    clamp ((1.0 - ((\\n      (texture (sampler_blur1, uv).xyz * scale1)\\n     + bias1).x * 2.0)), 0.0, 1.0)\\n  )), vec3(1.1, 0.8, 0.5), vec3(((\\n    (dot (normalize(tmpvar_4), tmpvar_7) * 0.5)\\n   + 0.5) * tmpvar_8.x)));\\n  ret = tmpvar_9.xyz;\\n }"}')},8051:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":5,"gammaadj":1,"decay":0.93,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"brighten":1,"wave_a":0.001,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.01,"dx":0.005,"warp":0.01,"sx":0.9999,"sy":1.0018,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_g":0.8,"ob_b":0.7,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":14,"num_inst":512,"rad":0.1026,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/100;\\na=(above(bass+mid+treb,.8));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"enabled":1,"sides":23,"num_inst":1024,"rad":0.10262,"ang":0.43982,"tex_ang":0.62832,"a":0.5,"r2":1,"g2":0,"a2":0.5,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\nrad=(bass+treb)/75;\\na=(above(bass+mid+treb,.1));\\nr=int(rand(100))/100;\\ng=int(rand(100))/100;\\nb=int(rand(100))/100;\\nr2=int(rand(100))/100;\\ng2=int(rand(100))/100;\\nb2=int(rand(100))/100;\\nr_border=int(rand(100))/100;\\ng_border=int(rand(100))/100;\\nb_border=int(rand(100))/100;"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.20269,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"sides":14,"additive":1,"num_inst":256,"rad":0.22389,"tex_ang":0.62832,"r2":1,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"waves":[{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));"},{"baseVals":{"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));"}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\ndecay=0;\\ndcsp=0","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att*treb_att*mid_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1 = vvb*2;//0.5 + vb - vvb;\\nq2 = vvm*2;//0.5 + vm - vvm;\\nq3 = vvt*2;//0.5 + vt - vvt;\\nv=2;\\nbb = bb - vvb*v;\\nmm = mm - vvm*v;\\ntt = tt - vvt*v;\\nq4 = -bb;\\nq5 = -mm;\\nq6 = -tt;\\nq4=(q1+q2+q3)*5;\\nq5=(q1+q2+q3)*5;\\nq6=(q1+q2+q3)*5;\\nq7=(q1+q2+q3)*5;\\nq8=(q1+q2+q3)*5;\\nq9=(q1+q2+q3)*5;\\nq10=(q1+q2+q3)*5;\\nq11=(q1+q2+q3)*5;\\nq12=(q1+q2+q3)*5;\\nq13=(q1+q2+q3)*5;\\nq14=(q1+q2+q3)*5;\\nq15=(q1+q2+q3)*5;\\nq16=(q1+q2+q3)*5;\\nq17=(q1+q2+q3)*5;\\nq18=(q1+q2+q3)*5;\\nq19=(q1+q2+q3)*5;\\nq20=(q1+q2+q3)*5;\\nq21=(q1+q2+q3)*5;\\nq22=(q1+q2+q3)*5;\\nq23=(q1+q2+q3)*5;\\nq24=(q1+q2+q3)*5;\\nq25=(q1+q2+q3)*5;\\nq26=(q1+q2+q3)*5;\\nq27=(q1+q2+q3)*5;\\nq28=(q1+q2+q3)*5;\\nq29=(q1+q2+q3)*45;\\nq30=(q1+q2+q3)*5;\\nq31=(q1+q2+q3)*5;\\nq32=(q1+q2+q3)*5;\\n\\ndecay=1;\\nzoom=1.003;\\ndx=0;dy=0;sx=1.000001;sy=0.999999;\\n\\nmv_r=.360+(((cos(time/5)*0.3)+0.5*0.5)*0.1);\\nmv_g=.390+(((sin(time/7)*0.3)+0.5*0.5)*0.1);\\nmv_b=.500+((sin((time/7)+0.9)+0.5*0.5)*0.1);\\n\\n\\n\\nchng=sin(time*.5);\\ncthr=.9999;\\nmq21=if(above(chng,cthr),rand(3),mq21);\\nmq22=if(above(chng,cthr),rand(3),mq22);\\nmq23=if(above(chng,cthr),rand(3),mq23);\\nmq24=if(above(chng,cthr),rand(2),mq24);\\nmq25=if(above(chng,cthr),rand(2),mq25);\\nmq26=if(above(chng,cthr),rand(2),mq26);\\nmq27=if(above(chng,cthr),rand(1),mq27);\\nmq28=if(above(chng,cthr),rand(1),mq28);\\nmq29=if(above(chng,cthr),rand(1)*.3,mq29);\\nmq31=if(above(chng,cthr),rand(1)*.3,mq31);\\nmonitor=chng;\\nq21=mq21;q22=mq22;q23=mq23;q24=mq24;q25=mq25;q26=mq26;\\nq27=mq27;q28=mq28;q29=mq29;q31=mq31;\\n\\nmonitor=mq1;\\nvol=bass+treb+mid;\\natime=atime+vol;\\nq11=.4+sin(atime*.006        )*.4;\\nq12=.4+cos(atime*.00613828348)*.4;\\nq13=.4+sin(atime*.00598593455)*.4;\\nmonitor=q13;\\nq4=sin(atime*.03);\\nq5=cos(atime*.030383824);\\nq6=tan(atime*.029384834);","pixel_eqs_eel":"//adv=min( (bass*bass*bass), 1);\\n//warp=1*((( atan(time/3) *0.5+0.5)*3)* (x*rad)*2 )+( (y*ang)*2 )*rad;\\n//warp=warp*adv;\\ndx=sin(y+(treb*5))*0.005*rad*bass;\\ndy=cos(x+(treb*5))*0.005*rad*bass;\\n//Do people that don\'t do drugs make shit like this??","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (0.02 * aspect.zw);\\n  vec3 tmpvar_4;\\n  tmpvar_4 = (((texture (sampler_blur2, \\n    ((uv + (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(1.0, 0.0) * tmpvar_3)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_5;\\n  tmpvar_5 = (((texture (sampler_blur2, \\n    ((uv + (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \\n    ((uv - (vec2(0.0, 1.0) * tmpvar_3)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_3))))\\n  ).xyz * scale2) + bias2));\\n  vec3 tmpvar_6;\\n  tmpvar_6 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = tmpvar_4.y;\\n  tmpvar_7.y = tmpvar_5.y;\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = tmpvar_5.x;\\n  tmpvar_8.y = -(tmpvar_4.x);\\n  vec2 tmpvar_9;\\n  tmpvar_9 = ((uv - (tmpvar_7 * vec2(0.01, 0.01))) - (tmpvar_8 * -0.02));\\n  ret_2.z = texture (sampler_fc_main, (tmpvar_9 - floor(tmpvar_9))).z;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4.x;\\n  tmpvar_10.y = tmpvar_5.x;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = tmpvar_5.z;\\n  tmpvar_11.y = -(tmpvar_4.z);\\n  my_uv_1 = ((uv - (tmpvar_10 * vec2(0.01, 0.01))) - (tmpvar_11 * -0.02));\\n  ret_2.y = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).y;\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = tmpvar_4.z;\\n  tmpvar_12.y = tmpvar_5.z;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_5.y;\\n  tmpvar_13.y = -(tmpvar_4.y);\\n  my_uv_1 = ((uv - (tmpvar_12 * vec2(0.01, 0.01))) - (tmpvar_13 * -0.02));\\n  ret_2.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\\n  vec4 tmpvar_14;\\n  tmpvar_14 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * my_uv_1.xyy) * (\\n    (q27 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\\n    ret_2.y = (ret_2.y + (tmpvar_14.x * 0.5));\\n  };\\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\\n    ret_2.z = (ret_2.z + (tmpvar_14.y * 0.5));\\n  };\\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\\n    ret_2.x = (ret_2.x + (tmpvar_14.z * 0.5));\\n  };\\n  ret_2 = (ret_2 + ((\\n    (ret_2 - tmpvar_6)\\n   * vec3(0.02, 0.02, 0.02)) + vec3(0.005, 0.005, 0.005)));\\n  vec4 tmpvar_15;\\n  tmpvar_15.w = 1.0;\\n  tmpvar_15.xyz = ret_2;\\n  ret = tmpvar_15.xyz;\\n }","comp":"vec2 xlat_mutabledz;\\nvec3 xlat_mutablemus;\\nvec3 xlat_mutableneu;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutableuv3;\\n shader_body { \\n  vec2 uv2_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3.y = 0.0;\\n  tmpvar_3.x = texsize.z;\\n  vec2 tmpvar_4;\\n  tmpvar_4.x = 0.0;\\n  tmpvar_4.y = texsize.w;\\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_4)).xyz - texture (sampler_main, (uv - tmpvar_4)).xyz), vec3(0.32, 0.49, 0.29));\\n  xlat_mutablemus = (0.5 * texture (sampler_main, uv).xyz);\\n  uv2_1 = (uv - 0.5);\\n  vec2 tmpvar_5;\\n  tmpvar_5.y = 0.0;\\n  tmpvar_5.x = (time / 8.0);\\n  xlat_mutableuv3 = (((0.2 * uv2_1) * q27) + tmpvar_5);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_6;\\n  tmpvar_6 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = vec3(tmpvar_6);\\n  vec4 tmpvar_7;\\n  tmpvar_7 = texture (sampler_noisevol_hq, (((vec3((-1.0/0.0), 0.0, 0.0) * xlat_mutableuv3.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_6 > (q26 * q13)) && (tmpvar_6 <= (q23 * q11)))) {\\n    xlat_mutableneu.z = (tmpvar_6 - (tmpvar_7.x * 0.5));\\n  };\\n  if (((tmpvar_6 > (q25 * q11)) && (tmpvar_6 <= (q22 * q12)))) {\\n    xlat_mutableneu.x = (tmpvar_6 - (tmpvar_7.y * 0.5));\\n  };\\n  if (((xlat_mutableneu.z > (q24 * q12)) && (xlat_mutableneu.z <= (q21 * q13)))) {\\n    xlat_mutableneu.y = (tmpvar_6 - (tmpvar_7.z * 0.5));\\n  };\\n  xlat_mutableneu = ((0.1 * xlat_mutableneu) + ((0.45 * \\n    dot (xlat_mutableneu, vec3(0.32, 0.49, 0.29))\\n  ) * (1.0 + roam_cos)).xyz);\\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\\n  vec2 tmpvar_8;\\n  tmpvar_8.y = 0.0;\\n  tmpvar_8.x = (time / 8.0);\\n  xlat_mutableuv3 = (((0.2 * uv2_1) * q27) + tmpvar_8);\\n  xlat_mutableuv3 = (fract(xlat_mutableuv3) * aspect.yx);\\n  xlat_mutableuv3 = ((0.1 * cos(\\n    (22.0 * xlat_mutableuv3)\\n  )) + (18.0 * xlat_mutabledz));\\n  float tmpvar_9;\\n  tmpvar_9 = clamp ((0.02 / sqrt(\\n    dot (xlat_mutableuv3, xlat_mutableuv3)\\n  )), 0.0, 1.0);\\n  xlat_mutableneu = vec3(tmpvar_9);\\n  vec4 tmpvar_10;\\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.0, 0.05, 0.0) * xlat_mutableuv3.xyy) * (\\n    (q28 * texsize.xyy)\\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\\n  if (((tmpvar_9 > (q26 * q13)) && (tmpvar_9 <= (q23 * q11)))) {\\n    xlat_mutableneu.z = (tmpvar_9 - (tmpvar_10.x * 0.5));\\n  };\\n  if (((tmpvar_9 > (q25 * q11)) && (tmpvar_9 <= (q22 * q12)))) {\\n    xlat_mutableneu.x = (tmpvar_9 - (tmpvar_10.y * 0.5));\\n  };\\n  if (((xlat_mutableneu.z > (q24 * q12)) && (xlat_mutableneu.z <= (q21 * q13)))) {\\n    xlat_mutableneu.y = (tmpvar_9 - (tmpvar_10.z * 0.5));\\n  };\\n  xlat_mutableneu = ((0.1 * xlat_mutableneu) + ((0.45 * \\n    dot (xlat_mutableneu, vec3(0.32, 0.49, 0.29))\\n  ) * (1.0 + roam_cos)).xyz);\\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\\n  ret_2 = (xlat_mutableret1 + clamp ((\\n    (8.0 * xlat_mutablemus)\\n   * \\n    (0.2 + xlat_mutableret1)\\n  ), 0.0, 1.0));\\n  ret_2 = (1.0 - ret_2);\\n  vec4 tmpvar_11;\\n  tmpvar_11.w = 1.0;\\n  tmpvar_11.xyz = ret_2;\\n  ret = tmpvar_11.xyz;\\n }"}')},7614:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"sides":32,"additive":1,"rad":0.19477,"r":0,"b":1,"a":0,"r2":0.63,"g2":0.7,"b2":1,"a2":0.07,"border_a":0,"enabled":0},"init_eqs_eel":"flip=1","frame_eqs_eel":"\\nflip=-flip;\\nlens_scale = flip*0.5+0.5;\\nlens_scale = 1 + lens_scale*2.4;\\npos_scale = if( equal(flip,-1) , 0.5 , lens_scale );\\n\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= -xp/zp*pos_scale + 0.5;\\ny= -yp/zp*pos_scale * 1.333 + 0.5;\\n\\nrad = rad*(1+q8/3)*lens_scale"},{"baseVals":{"sides":6,"rad":0.04378,"r":0.3,"g":0.6,"b":1,"g2":0,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a+q8/2,1);\\nr= min(r*(1+q8) , 1 );\\ng= min(g*(1+q8) , 1 );\\n\\nr2= min(q8/2,1);\\ng2= min(q8/4,1);\\n\\nrad= rad*(1+q8/7)"},{"baseVals":{"sides":36,"rad":0.28428,"r":0,"a":0,"r2":0.23,"g2":0.54,"b2":1,"a2":0.05,"border_g":0.8,"border_b":0.4,"border_a":0.45,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\na2= min( a2*(1+q8/2) , 1 );\\nr2= min( r2*(1+q8/4) , 1 );\\ng2= min( g2*(1+q8/3) , 1 );\\n\\nborder_a = min( border_a * (1+q8) , 1 );"},{"baseVals":{"sides":6,"additive":1,"rad":0.15804,"r":0.3,"g":0.6,"b":1,"a":0.14,"r2":0.4,"g2":0.5,"b2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"\\nt1=q1*0.25;\\n\\nsample = 1;\\nn= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\n\\n\\na= min(a*q8,1);\\n\\nrad= rad*(1+q8)"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.55045,"smoothing":1,"r":0.19,"g":0.15,"b":0.11},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;\\na=if(above((treb+mid)*.3,1),1,treb*.5);","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\ntaille=bass*.25+0.3;\\nxp= sin(tm)*cos(tm*3)*taille+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*taille+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*taille+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;\\nr=bass*.05;\\ng=mid*.05;\\nb=treb*.05;"},{"baseVals":{"thick":1,"r":0.5,"g":0.5,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\ntm=q1*4+sample*4;\\n\\nxp= sin(tm)*cos(tm*3)*0.5+0.5;\\nyp= sin(tm*1.1)*sin(tm*4.1)*0.5+0.5;\\nzp= sin(tm*2.9)*cos(tm*1.77)*0.5+0.5;\\n\\nxp= int(xp*cubesize)/cubesize -0.5+fix;\\nyp= int(yp*cubesize)/cubesize -0.5+fix;\\nzp= int(zp*cubesize)/cubesize -0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+3;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"usedots":1,"thick":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1=q1*0.25;","point_eqs_eel":"n= sample*6.283;\\ncubesize=q2;\\nfix=1/cubesize *0.5;\\n\\nxp= int(rand(cubesize))/cubesize-0.5+fix;\\nyp= int(rand(cubesize))/cubesize-0.5+fix;\\nzp= int(rand(cubesize))/cubesize-0.5+fix;\\n\\n\\n//rotate\\nang=t1;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp*sang + zp*cang;\\nyq=yp;\\nzq=xp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n//rotate\\nang=t1*0.75;\\nsang=sin(ang);cang=cos(ang);\\nxq=xp;\\nyq=yp*sang + zp*cang;\\nzq=yp*cang - zp*sang;\\nxp=xq;yp=yq;zp=zq;\\n\\n\\nzp= zp+2;\\nx= xp/zp + 0.5;\\ny= yp/zp * 1.333 + 0.5;"},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"mv_x=64;mv_y=48;\\nnut=0;\\nstp=0;stq=0;\\nrtp=0;rtq=0;\\nwvr=0;\\n\\ndcsp=0;\\n\\nsize =6;\\nbc=0;","frame_eqs_eel":"decay=0.985;\\nvol= (bass+mid+treb)*0.25;\\nvol = vol*vol;\\n\\nq8=vol;\\nmtime=mtime+vol*0.01*(75/fps);\\n\\nq7 = mtime;\\n\\nmonitor=512/8;\\n\\nwarp=0;\\nq1=mtime*0.9;\\n\\nbeat = above(vol,1.5);\\nbc = max(bc,0);\\nbc = if( equal(bc,0) , bc+beat , bc-(1/fps)/4 );\\n\\ntrigger = equal(bc,1);\\n\\nmonitor=bc;\\n\\nsize = size + trigger;\\nsize = if( above(size,9) ,6 , size );\\nmainangle=q1*0.255*0.75;\\nkick= if(equal(trigger,1),2,1);\\ndx=cos(mainangle)*.003*kick;\\ndy=sin(mainangle)*.003*kick;\\nzoom=1-(vol*.005)*abs(cos(mainangle));\\nq2=int(size); //cubesize","pixel_eqs_eel":"","warp":" shader_body { \\n  vec4 tmpvar_1;\\n  tmpvar_1.w = 1.0;\\n  float tmpvar_2;\\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (uv - 0.5);\\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \\n    ((tmpvar_3 * (1.0 - (8.0 * \\n      sqrt(tmpvar_2)\\n    ))) + 0.5)\\n  ).xyz), texture (sampler_main, (\\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\\n   + 0.5)).xyz) - 0.03);\\n  ret = tmpvar_1.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\\n  ret_2 = (ret_2 - ((\\n    (texture (sampler_blur1, uv_1).xyz * scale1)\\n   + bias1) * 4.0));\\n  ret_2 = -(ret_2);\\n  ret_2 = ((pow (ret_2, vec3(0.5, 0.5, 0.7)) - 0.1) * 1.1);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},6323:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.28,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.9999,"fshader":1,"zoom":0.9996,"warp":0.01,"sy":1.0017,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.075,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"textured":1,"rad":1.79142,"tex_ang":0.62832,"g":1,"b":1,"a":0,"g2":0,"a2":1,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.01*bass);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0002*cos(ma));\\nmy=my+(.0002*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.8));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,1)*3.1415*.05*bass);\\nma=ma-(above(mid,1)*3.1415*.05*mid);\\n\\nmx=mx+(.0001*cos(ma));\\nmy=my+(.0001*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.1));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(mid,1)*3.1415*.01*mid);\\nma=ma-(above(treb,1)*3.1415*.01*treb);\\n\\nmx=mx+(.0004*cos(ma));\\nmy=my+(.0004*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.3));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":"ma=ma+(above(bass,.5)*3.1415*.02*bass);\\nma=ma-(above(treb,.5)*3.1415*.02*treb);\\n\\nmx=mx+(.0008*cos(ma));\\nmy=my+(.0008*sin(ma));\\n\\nmx=if(above(mx,.9),(.9-mx),mx);\\nmy=if(above(my,.9),(.9-my),my);\\nmx=if(below(mx,.1),(.9+mx),mx);\\nmy=if(below(my,.1),(.9+my),my);\\n\\nx=mx;\\ny=my;\\n\\na=(above(bass+mid+treb,.2));\\npi23=4*asin(1)*.333333333;\\nvol=bass+mid+treb;\\nr=(sin(time*.3+vol-0*pi23)+1)*.5;\\ng=(sin(time*.3+vol-1*pi23)+1)*.5;\\nb=(sin(time*.3+vol-2*pi23)+1)*.5;"}],"init_eqs_eel":"decay=0.1;","frame_eqs_eel":"//per frame less reactive volume for all unused q vars, put before other q vars are set for cop out mashing\\nvb = vb*0.95 + (1-vb)*pow(bass_att,2)*0.02;\\nvvb = vvb*0.95 + (1-vvb)*vb*0.01;\\nvm = vm*0.95 + (1-vm)*pow(mid_att,2)*0.02;\\nvvm = vvm*0.95 + (1-vvm)*vm*0.01;\\nvt = vt*0.95 + (1-vt)*pow(treb_att,2)*0.02;\\nvvt = vvt*0.95 + (1-vvt)*vt*0.01;\\nvvb = min(1,max(0,vvb));\\nvvm = min(1,max(0,vvm));\\nvvt = min(1,max(0,vvt));\\nq1   = (vvb+vvm+vvt)*10;\\nq2   = (vvb+vvm+vvt)*10;\\nq3   = (vvb+vvm+vvt)*10;\\nq4   = (vvb+vvm+vvt)*10;\\nq5   = (vvb+vvm+vvt)*10;\\nq6   = (vvb+vvm+vvt)*10;\\nq7   = (vvb+vvm+vvt)*10;\\nq8   = (vvb+vvm+vvt)*10;\\nq9   = (vvb+vvm+vvt)*10;\\nq10  = (vvb+vvm+vvt)*10;\\nq11  = (vvb+vvm+vvt)*10;\\nq12  = (vvb+vvm+vvt)*10;\\nq13  = (vvb+vvm+vvt)*10;\\nq14  = (vvb+vvm+vvt)*10;\\nq15  = (vvb+vvm+vvt)*10;\\nq16  = (vvb+vvm+vvt)*10;\\nq17  = (vvb+vvm+vvt)*10;\\nq18  = (vvb+vvm+vvt)*10;\\nq19  = (vvb+vvm+vvt)*10;\\nq20  = (vvb+vvm+vvt)*10;\\nq21  = (vvb+vvm+vvt)*10;\\nq22  = (vvb+vvm+vvt)*10;\\nq23  = (vvb+vvm+vvt)*10;\\nq24  = (vvb+vvm+vvt)*10;\\nq25  = (vvb+vvm+vvt)*10;\\nq26  = (vvb+vvm+vvt)*10;\\nq27  = (vvb+vvm+vvt)*10;\\nq28  = (vvb+vvm+vvt)*10;\\nq29  = (vvb+vvm+vvt)*10;\\nq30  = (vvb+vvm+vvt)*10;\\nq31  = (vvb+vvm+vvt)*10;\\nq32  = (vvb+vvm+vvt)*10;\\n\\n\\n\\nvol=(bass+mid+treb_att)*.3333;\\n\\nredsine=.5+.15*bass*sin(time*3);\\ngreensine=.5+.15*mid*sin(time*2);\\nbluesine=.5+.15*treb*sin(time);\\n\\nredif=if(above(bass,1.2),redsine,if(above(redif,.95),0,redif*.85));\\ngreenif=if(above(mid,1.2),greensine,if(above(greenif,.95),0,greenif*.85));\\nblueif=if(above(treb,1.2),bluesine,if(above(blueif,.95),0,blueif*.85));\\n\\nwave_r=redif;\\nwave_g=greenif;\\nwave_b=blueif;\\n\\nq11=sin(time)-1;\\nq12=sin(time)-1;","pixel_eqs_eel":"dx=dx+.08*sin(x*32+sin(time*.51)*20*cos(time*.41));\\ndy=dy+.08*sin(y*32+sin(time*.58)*20*cos(time*.33));","warp":" shader_body { \\n  float n_1;\\n  vec3 ret_2;\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_pw_main, uv);\\n  ret_2 = tmpvar_3.xyz;\\n  n_1 = (clamp ((texture (sampler_pw_main, \\n    (uv + texsize.zw)\\n  ).x * 999.0), 0.0, 1.0) + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(1.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(0.0, -1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 1.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv + (texsize.zw * vec2(-1.0, 0.0)))\\n  ).x * 999.0), 0.0, 1.0));\\n  n_1 = (n_1 + clamp ((texture (sampler_pw_main, \\n    (uv - texsize.zw)\\n  ).x * 999.0), 0.0, 1.0));\\n  if ((n_1 < 1.9)) {\\n    ret_2 = (tmpvar_3.xyz - 0.4);\\n  };\\n  if ((n_1 > 3.1)) {\\n    ret_2 = (ret_2 - 0.4);\\n  };\\n  bool tmpvar_4;\\n  if ((ret_2.x < 0.1)) {\\n    tmpvar_4 = (abs((n_1 - 3.0)) < 0.5);\\n  } else {\\n    tmpvar_4 = bool(0);\\n  };\\n  if (tmpvar_4) {\\n    ret_2 = (ret_2 + 0.4);\\n  };\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_2;\\n  ret = tmpvar_5.xyz;\\n }","comp":" shader_body { \\n  vec2 uv_1;\\n  vec3 ret_2;\\n  uv_1 = (0.05 + (0.9 * uv));\\n  ret_2 = (abs((\\n    ((texture (sampler_blur3, (uv_1 + (0.01 * \\n      ((bass + mid) + treb)\\n    ))).xyz * scale3) + bias3)\\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\\n  ret_2 = (ret_2 * 1.333);\\n  vec4 tmpvar_3;\\n  tmpvar_3.w = 1.0;\\n  tmpvar_3.xyz = ret_2;\\n  ret = tmpvar_3.xyz;\\n }"}')},4745:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":0,"gammaadj":1,"decay":0.959,"echo_zoom":1,"echo_alpha":0.047,"wave_mode":6,"wave_brighten":0,"darken_center":1,"wave_a":0.005,"wave_scale":0.113,"wave_smoothing":0,"wave_mystery":-0.214,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.778,"warpscale":51.512,"zoomexp":1.73596,"fshader":0.054,"zoom":1.00059,"rot":0.00438,"warp":0.01,"wave_x":0.597,"wave_y":0.819,"ob_size":0.005,"ob_r":0.301,"ob_g":0.111,"ob_b":0.266,"ob_a":1,"ib_size":0,"ib_r":0.622,"ib_g":0.698,"ib_b":0.831,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.486,"mv_g":0.675,"mv_b":0.347,"mv_a":0,"b1ed":0.107},"shapes":[{"baseVals":{"sides":100,"thickoutline":1,"y":0.661,"rad":0.0907,"tex_zoom":0.59662,"r":0.643,"g":0.044,"r2":0.398,"g2":0.722,"b2":0.172,"a2":0.68,"border_r":0.624,"border_b":0.503,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t = -(q4+q5)*0.2;\\nx = 0.5 + sin(t)*0.2;\\nrad = 0.4 - cos(t)*0.3;"},{"baseVals":{"sides":100,"thickoutline":1,"x":0.582,"y":0.451,"rad":0.43922,"ang":0.30557,"tex_zoom":0.70681,"r":0.79,"g":0.002,"b":0.105,"r2":0.52,"g2":0.186,"b2":0.2,"a2":0.27,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t = -(q4+q5)*0.2;\\npi = asin(1)*2;\\nx = 0.5 + sin(t+pi)*0.2;\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang = aang*4*asin(1);\\ny = yy;"},{"baseVals":{"sides":100,"thickoutline":1,"x":0.651,"y":0.552,"rad":1.07507,"ang":0.52229,"tex_zoom":0.67074,"r":0.295,"b":0.118,"r2":0.427,"g2":0,"b2":0.546,"a2":0.68,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"d = sqrt( sqr(xx-q4)+sqr(yy-q8));\\nxx = if(below(d,0.15),0.4+rand(200)/1000,xx);\\nyy = if(below(d,0.15),0.3+rand(400)/1000,yy);\\naang = if(below(d,0.12),rand(1000)/1000,aang);\\nang = aang*4*asin(1);\\ny = yy;"},{"baseVals":{"sides":100,"thickoutline":1,"y":0.688,"rad":0.62269,"tex_zoom":0.96404,"r":0.891,"g":0.416,"b":0.243,"a":0.964,"r2":0.192,"g2":0.692,"b2":0.17,"a2":0.243,"border_a":0.051,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"x = q1;\\ny = q5;\\npi3 = 3.1415*2*0.3333;\\nt = (q4-2*q5+q6)*0.2;\\nc = 3;\\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\\ng = if(below(if(above(sin(t+pi3)*c,1),1,g),0),0,g);\\nb = if(below(if(above(sin(t-pi3)*c,1),1,b),0),0,b);\\nr2 = 1-r;\\ng2 = 1-g;\\nb2 = 1-b;"}],"waves":[{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":3.4621,"smoothing":0.5112,"r":0.569,"g":0.808,"b":0.557,"a":0.288,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = 0;\\nj = j + (bass)*0.01;\\nj2 = j2 + (mid_att)*0.01;\\nj3 = j3 + (treb_att)*0.01;\\nt2 = j;\\npi3 = 3.1415*2*0.3333;\\nt = (q4+q5+q6)*0.005;\\nc = 5;\\nr = if(below(if(above(1-sin(t)*c,1),1,r),0),0,r);\\ncl1 = if(below(if(above(cl1 + 0.002,1),0,cl1),0),1,cl1);\\ng = if(below(if(above(1-sin(t+pi3)*c,1),1,g),0),0,g);\\nb = if(below(if(above(1-sin(t-pi3)*c,1),1,b),0),0,b);\\ncl2 = if(below(if(above(cl2 -1*q1,1),0,cl2),0),1,cl2);\\ncl3 = if(below(if(above(cl3 +0.001,1),0,cl3),0),1,cl3);\\nt6 = cl3;","point_eqs_eel":"t8 = -t8;\\nyy = ((xx*1896575575)%10000000+100)/10000000 + t6 - if(above(yy+t6,1),1,0) - 0.5;\\nzz = ((yy*58652340875)%10000000+100)/10000000 + t8 - if(above(zz+t8,1),1,0) - 0.5;\\nd = sqrt(sqr(xx)+sqr(yy)+sqr(zz));\\nw = 1;\\nbb = d*d*0.5;\\nn = 0.3;\\ns1 = sin(sin(t2*w+bb)*n);\\ns2 = sin(sin(t3*w+bb)*n);\\nc1 = cos(sin(t2*w+bb)*n);\\nc2 = cos(sin(t3*w+bb)*n);\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\nc3 = cos(sin(t4*w+bb)*n);\\nx = 0.5 + zoom*x1 + sin(time*0.1)*0;\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\nr = if(below(if(above(r,1),1,r),0),0,r);\\ng = if(below(if(above(g,1),1,g),0),0,g);"},{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":4.75054,"smoothing":0.192,"r":0.978,"b":0.93,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q1;\\nt2 = q2;\\nt3 = q3;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\npi3 = 3.1415*2*0.3333;\\nt = (q4+q5+q6)*0.005 + 2;\\nc = 5;\\nr = if(below(if(above(1-sin(t)*c,1),1,r),0),0,r);\\ng = if(below(if(above(1-sin(t+pi3)*c,1),1,g),0),0,g);\\nb = if(below(if(above(1-sin(t-pi3)*c,1),1,b),0),0,b);","point_eqs_eel":"t8 = -t8;\\nnd = sqrt(1-sqr((sample-0.5)*2));\\nnz = sample*0.4 - 0.2*(1+t8*p);\\nnx = sin(sample*100)*nd*0.2*(1+t8*p);\\ng = 0;\\nt = (q4-q6)*10;\\nc = 2;\\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\\nb = if(below(if(above(sin(t-pi3)*c,1),1,b),0),0,b);\\ndir = (t4-t6)*0.4 + (t1-t3)*(t8+1)*0.2;\\nw = t5*0.4 + (t8+1)*t2*0.2;\\nzz = nz;\\nnyy = ny;\\nny = cos(w)*nyy - sin(w)*zz;\\nz = sin(w)*nyy + cos(w)*zz;\\nyy = sin(dir)*nx + cos(dir)*ny;\\nd = 0.5;\\nzoom = 2 - sqrt(t2)*1.1;\\nzm = sqrt(nx*nx+ny*ny+sqr(z+d))/d;\\ny = 0.5 + zoom*yy*0.55/zm;"},{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":23.38429,"smoothing":0,"g":0.531,"b":0.67,"a":0.823,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q9;\\nt2 = q2;\\nt3 = q3*0.5;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6;\\nt7 = q7;\\nt8 = q7;","point_eqs_eel":"sample = 1-sample;\\nxx = (-0.5+sample)*2*d1*(1+value1);\\nzz = cos(sample*n)*0.02*d1;\\nyy = sin(sample*n)*0.02*d1*(1+value2);\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nb = rand(1001)*.001*.6;\\nm = d*d*2;\\ndd = dd*0.95 + (value1);\\nddd = dd*sample*(1-sample)*d;\\ny = yy - (xx-xxx)*ddd;\\nc1 = cos(t4*w + m*t1);\\nc2 = cos(t5*w + m*t2);\\nc3 = cos(t6*w + m*t3);\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\nna = 2;\\nzoom = 0.3*atan2(na-z,na);\\nx = 0.5 + zoom*x1;\\npi3 = 3.1415*2*0.3333;\\nt = -xx+t5*.2;\\nc = 10;\\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\\ng = if(below(if(above(sin(t+pi3)*c,1),1,g),0),0,g);\\na = 2;"},{"baseVals":{"sep":20,"spectrum":1,"thick":1,"scaling":2.24641,"smoothing":0.0648,"r":0.907,"g":0.728,"b":0.563,"a":0.999,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"t1 = q4*0.75;\\nt2 = q2;\\nt3 = q6*0.75;\\nt4 = q4;\\nt5 = q5;\\nt6 = q6*0.75;\\nt7 = q7;\\nt8 = q8;","point_eqs_eel":"t8 = -t8;\\nn = 300;\\nzz = (-0.5+sample)*2*d1;\\nb = rand(1001)*.001*.6;\\nyy = sin(sample*n)*0.02*d1*(1+value2);\\nd = sqrt( xx*xx + yy*yy + zz*zz);\\nw = .3;\\nm = d*d*2;\\ns1 = sin(t4*w + m*t1);\\ns2 = sin(t5*w + m*t2);\\ns3 = sin(t6*w + m*t3);\\nc1 = cos(t4*w + m*t1);\\nc2 = cos(t5*w + m*t2);\\nc3 = cos(t6*w + m*t3);\\nz = (c3*s1*c2 + s3*s2)*xx - (c3*s1*s2-s3*c2)*yy + c3*c1*zz;\\nx1 = (c1*c2*xx + c1*s2*yy - s1*zz);\\ny1 = ((s3*s1*c2 - c3*s2)*xx + (s3*s1*s2+c3*c2)*yy + s3*c1*zz);\\nna = 2;\\nzoom = 0.3*atan2(na-z,na);\\nx = 0.5 + zoom*x1;\\ny = 0.5 + zoom*y1;\\npi3 = 3.1415*2*0.3333;\\nt = -zz+t6*.2;\\nc = 10;\\nr = if(below(if(above(sin(t)*c,1),1,r),0),0,r);\\ng = if(below(if(above(sin(t+pi3)*c,1),1,g),0),0,g);\\na = 2;"}],"init_eqs_eel":"x1 = 0;\\ny1 = 0;\\nx2 = 0.5;\\nx3 = 0.5;\\nx4 = 0.5;","frame_eqs_eel":"decay = 0.25;\\nxx1 = xx1*0.9 + (bass)*0.01;\\nxx2 = xx2*0.9 + (treb)*0.01;\\nlastbeat = nbeat*time + (1-nbeat)*lastbeat + equal(lastbeat,0)*time;\\nx1 = 0.5 - (xx1-xx2)*2;\\nbeat = above(volume,0.8)*below(peakbass_att - bass_att, 0.05*peakbass_att)*above(time - lastbeat, 0.1 + 0.5*(beatrate - 0.1));\\nspring = 50;\\ngrav = 2;\\nq10 = beat;\\ndt = 0.0005;\\nvx2 = if(below(x2,1),if(above(x2,0),vx2*(1-resist*dt) + dt*((x1+x3-2*x2)*spring),abs(vx2)*bounce),-abs(vx2)*bounce);\\nvy2 = if(below(y2,1),if(above(y2,0),vy2*(1-resist*dt) + dt*((y1+y3-2*y2)*spring-grav),abs(vy2)*bounce),-abs(vy2)*bounce);\\nvx3 = if(below(x3,1),if(above(x3,0),vx3*(1-resist*dt) + dt*((x2+x4-2*x3)*spring),abs(vx3)*bounce),-abs(vx3)*bounce);\\nvy3 = if(below(y3,1),if(above(y3,0),vy3*(1-resist*dt) + dt*((y2+y4-2*y3)*spring-grav),abs(vy3)*bounce),-abs(vy3)*bounce);\\nspy4 = (y3-y4)*spring;\\nq6 = tt;\\nx2 = x2 + vx2;\\ny2 = y2 + vy2;\\nx3 = x3 + vx3;\\ny3 = y3 + vy3;\\nvy4 = if(below(y4,1),if(above(y4,0),vy4*(1-resist*dt) + dt*(spy4-grav),abs(vy4)*bounce),-abs(vy4)*bounce);\\ny4 = y4 + vy4;\\nq3 = x4;\\nq7 = y4;\\nq8 = y2;\\nq4 = x2;\\nq9 = x1;\\nq1 = x1;\\nq2 = x2;\\nq12 = y3;\\nzoom = 1;\\nmx = max(max(bb,mm),tt);\\nmn = min(min(bb,mm),tt);\\nob_r = (bb-mn)/(mx-mn);\\nob_b = (mm-mn)/(mx-mn);\\nob_g = (tt-mn)/(mx-mn);\\nq13 = atan2(vx3,vy3);\\nq14 = sqrt(vx3*vx3 + vy3*vy3);\\nq5 = sqrt(vx2*vx2 + vy2*vy2);","pixel_eqs_eel":"w1 = q9;\\nw2 = q10;\\nnx = nx-0.5;\\nny = ny- 0.5;\\nb1 = 0.075;\\nm1 = q5*50;\\nt1 = 0.1;\\nx1 = nxx   +cos(ndir+1.5708)*b1;\\ny1 = nyy -sin(ndir+1.5708)*b1;\\nx2 = nxx   -cos(ndir+1.5708)*b1;\\ny2 = nyy +sin(ndir+1.5708)*b1;\\nd1 = sqrt((x1-nx)*(x1-nx)+(y1-ny)*(y1-ny))-b1*2;\\nsi1 = 1- 1/(1+pow(2,-d1*100));\\nd2 = sqrt((x2-nx)*(x2-nx)+(y2-ny)*(y2-ny))-b1*2;\\nsi2 = 1- 1/(1+pow(2,-d2*100));\\nsi3 = -pow(q5,3)*10;\\ndx = (si1*sin(y1-ny)*m1*d1  - si2*sin(y2-ny)*m1*d2 + si3*cos(ndir)*t1)*2/aspectx + nv*sin(ndir)*(nr-nd)*(1-sigmoid(nd-nr,280))/aspectx + nv*(nx-nxx)*(nr-nd)*(1-sigmoid(nd-nr,70))/aspectx + (nv*(sin(ny-yy)*(nd-r)-(nx-xx)*(nd-r/2)) + cos(dir)*v2)*(1.00-sigmoid(nd-r,180))/aspectx;\\ndy = (-si1*sin(x1-nx)*m1*d1 + si2*sin(x2-nx)*m1*d2 - si3*sin(ndir)*t1)*2/aspecty + nv*cos(ndir)*(nr-nd)*(1-sigmoid(nd-nr,280))/aspecty + nv*(ny-nyy)*(nr-nd)*(1-sigmoid(nd-nr,70))/aspecty + (-nv*(sin(nx-xx)*(nd-r)+(ny-yy)*(nd-r/2)) -sin(dir)*v2)*(1.00-sigmoid(nd-r,180))/aspecty;\\nndir = -q2*1 + asin(1)*0;\\nnxx = w1;\\nnyy = 1-w2;","warp":" shader_body { \\n  vec2 my_uv_1;\\n  vec3 ret_2;\\n  vec2 tmpvar_3;\\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\\n  float tmpvar_4;\\n  vec2 tmpvar_5;\\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\\n  vec2 tmpvar_6;\\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\\n  tmpvar_4 = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  float tmpvar_7;\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\\n  vec2 tmpvar_9;\\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\\n  tmpvar_7 = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = tmpvar_4;\\n  tmpvar_10.y = tmpvar_7;\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = (((\\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\\n   + bias2)).x * tmpvar_3.x);\\n  tmpvar_11.y = (((\\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\\n   + bias2)).x * tmpvar_3.y);\\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\\n  vec4 tmpvar_12;\\n  tmpvar_12 = texture (sampler_blur3, uv);\\n  ret_2.x = (ret_2.x + ((ret_2.x - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .x) * 0.1));\\n  ret_2.x = (ret_2.x + 0.004);\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = tmpvar_7;\\n  tmpvar_13.y = -(tmpvar_4);\\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \\n    ((tmpvar_12.xyz * scale3) + bias3)\\n  .y)));\\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\\n  vec2 x_14;\\n  x_14 = (my_uv_1 - uv);\\n  ret_2.z = (ret_2.z + ((\\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\\n   * 180.0) / sqrt(\\n    dot (tmpvar_3, tmpvar_3)\\n  )));\\n  ret_2.z = (ret_2.z * 0.8);\\n  ret_2.z = (ret_2.z + 0.004);\\n  vec2 tmpvar_15;\\n  tmpvar_15.x = -(tmpvar_7);\\n  tmpvar_15.y = tmpvar_4;\\n  my_uv_1 = (tmpvar_15 * 0.045);\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (((\\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.x);\\n  tmpvar_16.y = (((\\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2) - (\\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\\n   + bias2)).y * tmpvar_3.y);\\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\\n  ret_2.y = (ret_2.y + ((\\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\\n   * 0.1) + 0.01));\\n  vec4 tmpvar_17;\\n  tmpvar_17.w = 1.0;\\n  tmpvar_17.xyz = ret_2;\\n  ret = tmpvar_17.xyz;\\n }","comp":" shader_body { \\n  vec3 ret_1;\\n  vec4 tmpvar_2;\\n  tmpvar_2 = texture (sampler_blur1, uv);\\n  vec4 tmpvar_3;\\n  tmpvar_3 = texture (sampler_main, uv);\\n  vec4 tmpvar_4;\\n  tmpvar_4 = texture (sampler_blur2, uv);\\n  ret_1 = ((vec3(1.0, 1.0, 0.0) * vec3((\\n    ((((tmpvar_4.xyz * scale2) + bias2).x * 2.5) - (((tmpvar_2.xyz * scale1) + bias1).x * 0.7))\\n   + \\n    (tmpvar_3.x * 0.75)\\n  ))) * (1.0 - (\\n    ((tmpvar_2.xyz * scale1) + bias1)\\n  .x * 1.85)));\\n  ret_1 = (ret_1 + ((vec3(1.0, 0.0, 0.0) * tmpvar_3.x) + (vec3(0.25, 0.25, 0.25) * tmpvar_3.x)));\\n  ret_1 = (ret_1 * max (tmpvar_3.y, (\\n    ((tmpvar_4.xyz * scale2) + bias2)\\n  .y * 0.5)));\\n  ret_1 = (ret_1 * (1.0 - clamp (\\n    (((tmpvar_2.xyz * scale1) + bias1).z * 10.0)\\n  , 0.0, 1.0)));\\n  ret_1 = (ret_1 + vec3(pow (tmpvar_3.z, 1.5)));\\n  vec4 tmpvar_5;\\n  tmpvar_5.w = 1.0;\\n  tmpvar_5.xyz = ret_1;\\n  ret = tmpvar_5.xyz;\\n }"}')},8805:e=>{e.exports=JSON.parse('{"version":2,"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"thickoutline":1,"textured":1,"num_inst":3,"x":0.73,"rad":0.29466,"tex_zoom":1.87511,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"trig = q25;\\na = trig*.8; a2 = 0;\\n\\nx0 = x0 *bnot(trig) + trig*rand(100)/100;\\ny0 = y0 *bnot(trig) + trig*rand(100)/100;\\ntex_ang = rand(20);\\nrad = .1+rand(10)/8;\\n\\nx = x0; y = y0;\\nr = .7+.3*sin(time/12);\\nb = .7+.3*sin(time/15);\\ng = .7+.3*sin(time/8);\\nr2 = r; b2 = b; g2 = g;"},{"baseVals":{"enabled":1,"sides":36,"thickoutline":1,"textured":1,"num_inst":4,"x":0.3,"rad":0.05429,"ang":1.25664,"tex_ang":0.37699,"tex_zoom":1.02841,"g":0.7,"b":0.5,"r2":1,"g2":0,"border_g":0.59,"border_b":0,"border_a":0},"init_eqs_eel":"","frame_eqs_eel":"x = q31; y = q32;\\nrad = .06;\\ntex_ang = time;\\na = q30;"},{"baseVals":{"sides":63,"x":0.123,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""},{"baseVals":{"sides":24,"textured":1,"x":0.7,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":1,"b":0.99,"a":0,"g2":0,"a2":1,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":""}],"waves":[{"baseVals":{"thick":1,"additive":1,"scaling":0.04505,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"samples":100,"usedots":1,"thick":1,"scaling":0.89152,"smoothing":0,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""},{"baseVals":{"spectrum":1,"usedots":1,"enabled":0},"init_eqs_eel":"","frame_eqs_eel":"","point_eqs_eel":""}],"init_eqs_eel":"t0a = time; t0 = time+.5;\\nspb_ = .5; ;\\nvolb = .5; volx = .5;\\nvol_= 1; index = 0; mov1 = 0;\\nsdev = .1; wamp_ = .1;","frame_eqs_eel":"dec_med = pow (0.8, 30/fps); dec_slow = pow (0.95, 30/fps);\\nvol = (bass+med+treb)/1.5; vol_ = vol_*dec_slow + (1-dec_slow)*vol;\\n\\nis_beat = above(vol, vol_+2*peak) * above (time, t0+spb_*.45);\\nt0a  = if(is_beat,t0,t0a); t0 = if(is_beat,time,t0);\\npeak = if(is_beat,vol,peak*dec_med);\\nindex = (index + is_beat) %128;\\n\\nspb = min(t0-t0a + .01,2);\\nspb_ = if(is_beat,spb_ *.9 +.1*spb, spb_);\\n\\n\\nq20 = vol_;\\nq21 = above(vol,2.7*vol_);\\nq22 = max(0,peak-.0)+.01;\\nhpeak = hpeak*dec_med + (1-dec_med)*q21;\\nq23 = hpeak * (1+rand(8));\\nq24 = is_beat;\\nq25 = q22*(1+rand(8))/8;\\n\\nmindev = min(min(abs(spb-spb_),abs(spb*2-spb_)),abs(spb-spb_*2));\\nsdev = if(is_beat,sdev * .8 + .2*pow(mindev+.02,2),sdev);\\n\\nspeed = 1/fps/spb_;\\ntrel = trel + speed;\\nq10 = trel;\\n\\nwamp =  min(.001/sdev,.15);\\nwamp_ = wamp_*dec_slow + (1-dec_slow)*wamp;\\nq11 = sin(trel/2)*wamp_;\\nq12 = wamp_/2;\\n\\nrota = 2*wamp_*sin(trel/3);\\n//rota = .2*sin(wamp_*32);\\nq5 = cos(rota);\\nq6 = sin(rota);\\nq7 = -q6;\\nq8 = q5;\\n\\nq15 = -sin(trel*.5)*.05;\\nq16 = cos(trel)*wamp_/2;\\n\\nq19 = .1*sin(trel/12);\\n\\n//ODD PLANET MOVEMENT\\ntrig1 = bnot(vis)*bnot(rand(100*fps));\\nvis = if (trig1,1,vis*below(mov1,1));\\nq30 = vis;\\nmov1 = if (vis,mov1+2*speed/fps,-1);\\ndir = if(trig1,rand(100),dir); \\nq31 = .5+.5*cos(dir)*mov1;\\nq32 = .5+.5*sin(dir)*mov1;\\n\\nq29 = (2+sin(time/17)); //reflection water\\n\\nmonitor = wamp;","pixel_eqs_eel":"zoom = 1+.02*rad*q20;\\ndy = -.00;\\nwarp =.1; dx = .0;","warp":"mat2 ofs;\\nvec2 xlat_mutableuv2;\\nfloat xlat_mutablezv;\\n shader_body { \\n  mat2 tmpvar_1;\\n  tmpvar_1[uint(0)].x = texsize.z;\\n  tmpvar_1[uint(0)].y = 0.0;\\n  tmpvar_1[1u].x = 0.0;\\n  tmpvar_1[1u].y = texsize.w;\\n  ofs = (tmpvar_1 * 4.0);\\n  vec2 tmpvar_2;\\n  tmpvar_2.x = ((uv.x - 0.5) + q19);\\n  tmpvar_2.y = (uv.y - 0.5);\\n  vec2 v_3;\\n  v_3.x = ofs[0].x;\\n  v_3.y = ofs[1].x;\\n  vec2 v_4;\\n  v_4.x = ofs[0].x;\\n  v_4.y = ofs[1].x;\\n  vec2 v_5;\\n  v_5.x = ofs[0].y;\\n  v_5.y = ofs[1].y;\\n  vec2 v_6;\\n  v_6.x = ofs[0].y;\\n  v_6.y = ofs[1].y;\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = (texture (sampler_main, (uv + v_3)) - texture (sampler_main, (uv - v_4))).z;\\n  tmpvar_7.y = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).z;\\n  xlat_mutablezv = (time * 0.08);\\n  vec2 tmpvar_8;\\n  tmpvar_8.x = (0.02 * time);\\n  tmpvar_8.y = (-0.05 * time);\\n  xlat_mutableuv2 = ((3.0 * tmpvar_2) + tmpvar_8);\\n  vec3 tmpvar_9;\\n  tmpvar_9.xy = xlat_mutableuv2;\\n  tmpvar_9.z = xlat_mutablezv;\\n  vec3 tmpvar_10;\\n  tmpvar_10.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\\n  tmpvar_10.z = (xlat_mutablezv * 2.0);\\n  vec3 tmpvar_11;\\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\\n  tmpvar_11.z = (xlat_mutablezv * 3.0);\\n  vec3 tmpvar_12;\\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\\n  tmpvar_12.z = (xlat_mutablezv * 7.0);\\n  xlat_mutableuv2 = (tmpvar_2 + ((\\n    (((texture (sampler_noisevol_hq, tmpvar_9).z + (texture (sampler_noisevol_hq, tmpvar_10).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_11).z / 4.0)) + (texture (sampler_noisevol_hq, tmpvar_12).z / 8.0))\\n   - 1.0) * 0.1));\\n  vec4 tmpvar_13;\\n  tmpvar_13.w = 1.0;\\n  tmpvar_13.xyz = (((\\n    (((0.2 + (\\n      (((1.0 + bass_att) * 0.01) / sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)))\\n     * \\n      (1.0 + normalize(slow_roam_cos))\\n    .xyz)) + ((rand_preset.z - 0.5) * xlat_mutableuv2.y)) * 0.1)\\n   / 2.0) + (texture (sampler_main, \\n    (uv - (0.02 * tmpvar_7))\\n  ).xyz * 0.9)) - 0.01);\\n  ret = tmpvar_13.xyz;\\n }","comp":"float xlat_mutablerain;\\nvec3 xlat_mutableret1;\\nvec2 xlat_mutablers;\\nvec2 xlat_mutablers0;\\nvec2 xlat_mutableuv1;\\nvec2 xlat_mutableuv_wat;\\nfloat xlat_mutablewater;\\nfloat xlat_mutablez;\\n shader_body { \\n  vec2 uv_1;\\n  uv_1 = uv;\\n  float tmpvar_2;\\n  tmpvar_2 = (time * 0.25);\\n  vec2 tmpvar_3;\\n  tmpvar_3 = ((uv - 0.5) * aspect.wz);\\n  float tmpvar_4;\\n  float tmpvar_5;\\n  tmpvar_5 = (min (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0) / max (abs(\\n    (tmpvar_3.x / tmpvar_3.y)\\n  ), 1.0));\\n  float tmpvar_6;\\n  tmpvar_6 = (tmpvar_5 * tmpvar_5);\\n  tmpvar_6 = (((\\n    ((((\\n      ((((-0.01213232 * tmpvar_6) + 0.05368138) * tmpvar_6) - 0.1173503)\\n     * tmpvar_6) + 0.1938925) * tmpvar_6) - 0.3326756)\\n   * tmpvar_6) + 0.9999793) * tmpvar_5);\\n  tmpvar_6 = (tmpvar_6 + (float(\\n    (abs((tmpvar_3.x / tmpvar_3.y)) > 1.0)\\n  ) * (\\n    (tmpvar_6 * -2.0)\\n   + 1.570796)));\\n  tmpvar_4 = (tmpvar_6 * sign((tmpvar_3.x / tmpvar_3.y)));\\n  if ((abs(tmpvar_3.y) > (1e-08 * abs(tmpvar_3.x)))) {\\n    if ((tmpvar_3.y < 0.0)) {\\n      if ((tmpvar_3.x >= 0.0)) {\\n        tmpvar_4 += 3.141593;\\n      } else {\\n        tmpvar_4 = (tmpvar_4 - 3.141593);\\n      };\\n    };\\n  } else {\\n    tmpvar_4 = (sign(tmpvar_3.x) * 1.570796);\\n  };\\n  vec2 tmpvar_7;\\n  tmpvar_7.x = ((0.3183098 * tmpvar_4) + tmpvar_2);\\n  tmpvar_7.y = (((\\n    (aspect.w * log(sqrt(dot (tmpvar_3, tmpvar_3))))\\n   * 0.7) + (0.3183098 * tmpvar_4)) - (tmpvar_2 * 4.0));\\n  vec2 tmpvar_8;\\n  tmpvar_8 = (0.5 + (0.5 - abs(\\n    ((fract((tmpvar_7 * 0.5)) * 2.0) - 1.0)\\n  )));\\n  mat2 tmpvar_9;\\n  tmpvar_9[uint(0)] = _qb.xy;\\n  tmpvar_9[1u] = _qb.zw;\\n  vec2 tmpvar_10;\\n  tmpvar_10.x = q15;\\n  tmpvar_10.y = q16;\\n  uv_1 = (((\\n    (((tmpvar_8 - 0.5) * tmpvar_9) * 0.7)\\n   * aspect.xy) + 0.5) + tmpvar_10);\\n  vec2 tmpvar_11;\\n  tmpvar_11.x = 0.5;\\n  tmpvar_11.y = ((q11 + 0.6) + (q12 * (\\n    sin(((uv_1.x * 6.0) + q10))\\n   * \\n    cos(((uv_1.y * 8.0) + (time * 0.6)))\\n  )));\\n  vec2 tmpvar_12;\\n  tmpvar_12.x = (uv_1.x * 4.0);\\n  tmpvar_12.y = uv_1.y;\\n  vec2 tmpvar_13;\\n  tmpvar_13.x = (uv_1.x * 4.0);\\n  tmpvar_13.y = uv_1.y;\\n  xlat_mutablerain = (texture (sampler_noise_lq, ((tmpvar_12 * 0.2) - time)).x + texture (sampler_noise_lq, ((tmpvar_13 * 0.5) - time)).x);\\n  float tmpvar_14;\\n  tmpvar_14 = (time / 4.0);\\n  xlat_mutablerain = (xlat_mutablerain * clamp ((\\n    (q20 / 2.0)\\n   - \\n    abs(sin((tmpvar_8.x - tmpvar_14)))\\n  ), 0.0, 1.0));\\n  xlat_mutableuv1 = ((uv_1 - tmpvar_11) + (xlat_mutablerain * 0.01));\\n  float tmpvar_15;\\n  tmpvar_15 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\\n  xlat_mutablez = (0.4 / xlat_mutableuv1.y);\\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\\n  xlat_mutablers0.y = xlat_mutablez;\\n  vec2 tmpvar_16;\\n  tmpvar_16.x = (xlat_mutablers0.x + tmpvar_14);\\n  tmpvar_16.y = (xlat_mutablez + (time * 4.0));\\n  xlat_mutablers = (tmpvar_16 * tmpvar_15);\\n  xlat_mutablewater = (texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))).x;\\n  xlat_mutablewater = (xlat_mutablewater - 1.0);\\n  vec2 tmpvar_17;\\n  tmpvar_17.x = (xlat_mutableuv1.x + 0.5);\\n  tmpvar_17.y = abs((0.5 - xlat_mutableuv1.y));\\n  xlat_mutableuv_wat = (tmpvar_17 - ((0.2 * xlat_mutablewater) / pow (xlat_mutablez, 0.5)));\\n  xlat_mutableret1 = (((texture (sampler_main, uv_1).xyz * \\n    (1.0 - tmpvar_15)\\n  ) + (\\n    (((texture (sampler_main, xlat_mutableuv_wat).xyz * tmpvar_15) / pow (xlat_mutablez, 0.4)) * 2.0)\\n   * \\n    (1.0 - rand_preset.y)\\n  )) + ((\\n    ((rand_preset.y * (1.0 + (rand_preset.x * xlat_mutablewater))) * tmpvar_15)\\n   / xlat_mutablez) * vec3(0.0, 0.1, 0.1)));\\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 + (0.2 * xlat_mutablerain)));\\n  vec4 tmpvar_18;\\n  tmpvar_18.w = 1.0;\\n  tmpvar_18.xyz = (1.0 - exp((\\n    -(pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5)))\\n   * 8.0)));\\n  ret = tmpvar_18.xyz;\\n }"}')}},a={};function n(t){if(a[t])return a[t].exports;var s=a[t]={exports:{}};return e[t](s,s.exports,n),s.exports}return n.d=(e,a)=>{for(var t in a)n.o(a,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:a[t]})},n.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(5443)})()}));